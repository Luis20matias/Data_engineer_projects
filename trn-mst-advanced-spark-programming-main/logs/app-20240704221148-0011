{"Event":"SparkListenerLogStart","Spark Version":"3.5.1"}
{"Event":"SparkListenerResourceProfileAdded","Resource Profile Id":0,"Executor Resource Requests":{"memory":{"Resource Name":"memory","Amount":3072,"Discovery Script":"","Vendor":""},"offHeap":{"Resource Name":"offHeap","Amount":0,"Discovery Script":"","Vendor":""}},"Task Resource Requests":{"cpus":{"Resource Name":"cpus","Amount":1.0}}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"driver","Host":"590fa75cd8bd","Port":43567},"Maximum Memory":455501414,"Timestamp":1720131108629,"Maximum Onheap Memory":455501414,"Maximum Offheap Memory":0}
{"Event":"SparkListenerEnvironmentUpdate","JVM Information":{"Java Home":"/opt/bitnami/java","Java Version":"17.0.11 (BellSoft)","Scala Version":"version 2.12.18"},"Spark Properties":{"fs.s3a.connection.maximum":"100","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.driver.host":"590fa75cd8bd","spark.serializer.objectStreamReset":"100","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.eventLog.enabled":"true","spark.driver.port":"39097","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.hadoop.fs.s3a.path.style.access":"true","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.scheduler.mode":"FIFO","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.submit.pyFiles":"","spark.app.submitTime":"1720131107343","spark.app.startTime":"1720131107866","spark.executor.id":"driver","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED","spark.submit.deployMode":"client","spark.master":"spark://spark-master:7077","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.executor.memory":"3g","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.app.id":"app-20240704221148-0011","spark.hadoop.fs.s3a.fast.upload":"true"},"Hadoop Properties":{"hadoop.service.shutdown.timeout":"30s","yarn.resourcemanager.amlauncher.thread-count":"50","yarn.sharedcache.enabled":"false","fs.s3a.connection.maximum":"96","yarn.nodemanager.numa-awareness.numactl.cmd":"/usr/bin/numactl","fs.viewfs.overload.scheme.target.o3fs.impl":"org.apache.hadoop.fs.ozone.OzoneFileSystem","fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.app.mapreduce.am.scheduler.heartbeat.interval-ms":"1000","yarn.timeline-service.timeline-client.number-of-async-entities-to-merge":"10","hadoop.security.kms.client.timeout":"60","hadoop.http.authentication.kerberos.principal":"HTTP/_HOST@LOCALHOST","mapreduce.jobhistory.loadedjob.tasks.max":"-1","yarn.resourcemanager.application-tag-based-placement.enable":"false","mapreduce.framework.name":"local","yarn.sharedcache.uploader.server.thread-count":"50","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds.min":"3600","yarn.nodemanager.linux-container-executor.nonsecure-mode.user-pattern":"^[_.A-Za-z0-9][-@_.A-Za-z0-9]{0,255}?[$]?$","tfile.fs.output.buffer.size":"262144","yarn.app.mapreduce.am.job.task.listener.thread-count":"30","yarn.nodemanager.node-attributes.resync-interval-ms":"120000","fs.s3a.secret.key":"*********(redacted)","yarn.nodemanager.container-log-monitor.interval-ms":"60000","hadoop.security.groups.cache.background.reload.threads":"3","yarn.resourcemanager.webapp.cross-origin.enabled":"false","fs.AbstractFileSystem.ftp.impl":"org.apache.hadoop.fs.ftp.FtpFs","fs.viewfs.overload.scheme.target.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","hadoop.registry.secure":"false","hadoop.shell.safely.delete.limit.num.files":"100","mapreduce.job.acl-view-job":" ","fs.s3a.s3guard.ddb.background.sleep":"25ms","fs.s3a.retry.limit":"7","mapreduce.jobhistory.loadedjobs.cache.size":"5","fs.s3a.s3guard.ddb.table.create":"false","fs.viewfs.overload.scheme.target.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.nodemanager.amrmproxy.enabled":"false","yarn.timeline-service.entity-group-fs-store.with-user-dir":"false","mapreduce.shuffle.pathcache.expire-after-access-minutes":"5","mapreduce.input.fileinputformat.split.minsize":"0","yarn.resourcemanager.container.liveness-monitor.interval-ms":"600000","yarn.resourcemanager.client.thread-count":"50","io.seqfile.compress.blocksize":"1000000","yarn.nodemanager.runtime.linux.docker.allowed-container-runtimes":"runc","fs.viewfs.overload.scheme.target.http.impl":"org.apache.hadoop.fs.http.HttpFileSystem","yarn.resourcemanager.nodemanagers.heartbeat-interval-slowdown-factor":"1.0","yarn.sharedcache.checksum.algo.impl":"org.apache.hadoop.yarn.sharedcache.ChecksumSHA256Impl","yarn.nodemanager.amrmproxy.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor","yarn.timeline-service.entity-group-fs-store.leveldb-cache-read-cache-size":"10485760","mapreduce.reduce.shuffle.fetch.retry.interval-ms":"1000","mapreduce.task.profile.maps":"0-2","yarn.scheduler.include-port-in-node-name":"false","yarn.nodemanager.admin-env":"MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX","yarn.resourcemanager.node-removal-untracked.timeout-ms":"60000","mapreduce.am.max-attempts":"2","hadoop.security.kms.client.failover.sleep.base.millis":"100","mapreduce.jobhistory.webapp.https.address":"0.0.0.0:19890","yarn.node-labels.fs-store.impl.class":"org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore","yarn.nodemanager.collector-service.address":"${yarn.nodemanager.hostname}:8048","fs.trash.checkpoint.interval":"0","mapreduce.job.map.output.collector.class":"org.apache.hadoop.mapred.MapTask$MapOutputBuffer","yarn.resourcemanager.node-ip-cache.expiry-interval-secs":"-1","hadoop.http.authentication.signature.secret.file":"*********(redacted)","hadoop.jetty.logs.serve.aliases":"true","yarn.resourcemanager.placement-constraints.handler":"disabled","yarn.timeline-service.handler-thread-count":"10","yarn.resourcemanager.max-completed-applications":"1000","yarn.nodemanager.aux-services.manifest.enabled":"false","yarn.resourcemanager.system-metrics-publisher.enabled":"false","yarn.resourcemanager.placement-constraints.algorithm.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.constraint.algorithm.DefaultPlacementAlgorithm","yarn.sharedcache.webapp.address":"0.0.0.0:8788","fs.s3a.select.input.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.renew-interval":"*********(redacted)","yarn.sharedcache.nm.uploader.replication.factor":"10","hadoop.security.groups.negative-cache.secs":"30","yarn.app.mapreduce.task.container.log.backups":"0","mapreduce.reduce.skip.proc-count.auto-incr":"true","fs.viewfs.overload.scheme.target.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","hadoop.security.group.mapping.ldap.posix.attr.gid.name":"gidNumber","ipc.client.fallback-to-simple-auth-allowed":"false","yarn.nodemanager.resource.memory.enforced":"true","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.enable-batch":"false","yarn.client.failover-proxy-provider":"org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider","yarn.timeline-service.http-authentication.simple.anonymous.allowed":"true","ha.health-monitor.check-interval.ms":"1000","yarn.nodemanager.runtime.linux.runc.host-pid-namespace.allowed":"false","hadoop.metrics.jvm.use-thread-mxbean":"false","ipc.[port_number].faircallqueue.multiplexer.weights":"8,4,2,1","yarn.acl.reservation-enable":"false","yarn.resourcemanager.store.class":"org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore","yarn.app.mapreduce.am.hard-kill-timeout-ms":"10000","fs.s3a.etag.checksum.enabled":"false","yarn.nodemanager.container-metrics.enable":"true","ha.health-monitor.rpc.connect.max.retries":"1","yarn.timeline-service.client.fd-clean-interval-secs":"60","yarn.resourcemanager.nodemanagers.heartbeat-interval-scaling-enable":"false","yarn.resourcemanager.nodemanagers.heartbeat-interval-ms":"1000","hadoop.common.configuration.version":"3.0.0","fs.s3a.s3guard.ddb.table.capacity.read":"0","yarn.nodemanager.remote-app-log-dir-suffix":"logs","yarn.nodemanager.container-log-monitor.dir-size-limit-bytes":"1000000000","yarn.nodemanager.windows-container.cpu-limit.enabled":"false","yarn.nodemanager.runtime.linux.docker.privileged-containers.allowed":"false","file.blocksize":"67108864","hadoop.http.idle_timeout.ms":"60000","hadoop.registry.zk.retry.ceiling.ms":"60000","yarn.scheduler.configuration.leveldb-store.path":"${hadoop.tmp.dir}/yarn/system/confstore","yarn.sharedcache.store.in-memory.initial-delay-mins":"10","mapreduce.jobhistory.principal":"jhs/_HOST@REALM.TLD","mapreduce.map.skip.proc-count.auto-incr":"true","fs.s3a.committer.name":"file","mapreduce.task.profile.reduces":"0-2","hadoop.zk.num-retries":"1000","yarn.webapp.xfs-filter.enabled":"true","fs.viewfs.overload.scheme.target.hdfs.impl":"org.apache.hadoop.hdfs.DistributedFileSystem","seq.io.sort.mb":"100","yarn.scheduler.configuration.max.version":"100","yarn.timeline-service.webapp.https.address":"${yarn.timeline-service.hostname}:8190","yarn.resourcemanager.scheduler.address":"${yarn.resourcemanager.hostname}:8030","yarn.node-labels.enabled":"false","yarn.resourcemanager.webapp.ui-actions.enabled":"true","mapreduce.task.timeout":"600000","yarn.sharedcache.client-server.thread-count":"50","hadoop.security.groups.shell.command.timeout":"0s","hadoop.security.crypto.cipher.suite":"AES/CTR/NoPadding","yarn.nodemanager.elastic-memory-control.oom-handler":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.DefaultOOMHandler","yarn.resourcemanager.connect.max-wait.ms":"900000","fs.defaultFS":"file:///","yarn.minicluster.use-rpc":"false","ipc.[port_number].decay-scheduler.decay-factor":"0.5","fs.har.impl.disable.cache":"true","yarn.webapp.ui2.enable":"false","io.compression.codec.bzip2.library":"system-native","yarn.webapp.filter-invalid-xml-chars":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-interval-secs":"600","fs.s3a.select.input.csv.record.delimiter":"\\n","fs.s3a.change.detection.source":"etag","ipc.[port_number].backoff.enable":"false","yarn.nodemanager.distributed-scheduling.enabled":"false","mapreduce.shuffle.connection-keep-alive.timeout":"5","yarn.resourcemanager.webapp.https.address":"${yarn.resourcemanager.hostname}:8090","yarn.webapp.enable-rest-app-submissions":"true","mapreduce.jobhistory.address":"0.0.0.0:10020","yarn.resourcemanager.nm-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.is.minicluster":"false","yarn.nodemanager.address":"${yarn.nodemanager.hostname}:0","fs.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","fs.AbstractFileSystem.s3a.impl":"org.apache.hadoop.fs.s3a.S3A","mapreduce.task.combine.progress.records":"10000","yarn.resourcemanager.epoch.range":"0","yarn.resourcemanager.am.max-attempts":"2","yarn.nodemanager.runtime.linux.runc.image-toplevel-dir":"/runc-root","yarn.nodemanager.linux-container-executor.cgroups.hierarchy":"/hadoop-yarn","fs.AbstractFileSystem.wasbs.impl":"org.apache.hadoop.fs.azure.Wasbs","yarn.timeline-service.entity-group-fs-store.cache-store-class":"org.apache.hadoop.yarn.server.timeline.MemoryTimelineStore","yarn.nodemanager.runtime.linux.runc.allowed-container-networks":"host,none,bridge","fs.ftp.transfer.mode":"BLOCK_TRANSFER_MODE","ipc.server.log.slow.rpc":"false","ipc.server.reuseaddr":"true","fs.ftp.timeout":"0","yarn.resourcemanager.node-labels.provider.fetch-interval-ms":"1800000","yarn.router.webapp.https.address":"0.0.0.0:8091","yarn.nodemanager.webapp.cross-origin.enabled":"false","fs.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","yarn.resourcemanager.auto-update.containers":"false","yarn.app.mapreduce.am.job.committer.cancel-timeout":"60000","yarn.scheduler.configuration.zk-store.parent-path":"/confstore","yarn.nodemanager.default-container-executor.log-dirs.permissions":"710","yarn.app.attempt.diagnostics.limit.kc":"64","fs.viewfs.overload.scheme.target.swebhdfs.impl":"org.apache.hadoop.hdfs.web.SWebHdfsFileSystem","yarn.client.failover-no-ha-proxy-provider":"org.apache.hadoop.yarn.client.DefaultNoHARMFailoverProxyProvider","fs.s3a.change.detection.mode":"server","ftp.bytes-per-checksum":"512","yarn.nodemanager.resource.memory-mb":"-1","fs.AbstractFileSystem.abfs.impl":"org.apache.hadoop.fs.azurebfs.Abfs","yarn.timeline-service.writer.flush-interval-seconds":"60","fs.s3a.fast.upload.active.blocks":"4","yarn.resourcemanager.submission-preprocessor.enabled":"false","hadoop.security.credential.clear-text-fallback":"true","yarn.nodemanager.collector-service.thread-count":"5","ipc.[port_number].scheduler.impl":"org.apache.hadoop.ipc.DefaultRpcScheduler","fs.azure.secure.mode":"false","mapreduce.jobhistory.joblist.cache.size":"20000","fs.ftp.host":"0.0.0.0","yarn.timeline-service.writer.async.queue.capacity":"100","yarn.resourcemanager.fs.state-store.num-retries":"0","yarn.resourcemanager.nodemanager-connect-retries":"10","yarn.nodemanager.log-aggregation.num-log-files-per-app":"30","hadoop.security.kms.client.encrypted.key.cache.low-watermark":"0.3f","fs.s3a.committer.magic.enabled":"true","yarn.timeline-service.client.max-retries":"30","dfs.ha.fencing.ssh.connect-timeout":"30000","yarn.log-aggregation-enable":"false","yarn.system-metrics-publisher.enabled":"false","mapreduce.reduce.markreset.buffer.percent":"0.0","fs.AbstractFileSystem.viewfs.impl":"org.apache.hadoop.fs.viewfs.ViewFs","yarn.resourcemanager.nodemanagers.heartbeat-interval-speedup-factor":"1.0","mapreduce.task.io.sort.factor":"10","yarn.nodemanager.amrmproxy.client.thread-count":"25","ha.failover-controller.new-active.rpc-timeout.ms":"60000","yarn.nodemanager.container-localizer.java.opts":"-Xmx256m","mapreduce.jobhistory.datestring.cache.size":"200000","mapreduce.job.acl-modify-job":" ","yarn.nodemanager.windows-container.memory-limit.enabled":"false","yarn.timeline-service.webapp.address":"${yarn.timeline-service.hostname}:8188","yarn.app.mapreduce.am.job.committer.commit-window":"10000","yarn.nodemanager.container-manager.thread-count":"20","yarn.minicluster.fixed.ports":"false","hadoop.tags.system":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.cluster.max-application-priority":"0","yarn.timeline-service.ttl-enable":"true","mapreduce.jobhistory.recovery.store.fs.uri":"${hadoop.tmp.dir}/mapred/history/recoverystore","hadoop.caller.context.signature.max.size":"40","ipc.[port_number].decay-scheduler.backoff.responsetime.enable":"false","yarn.client.load.resource-types.from-server":"false","ha.zookeeper.session-timeout.ms":"10000","ipc.[port_number].decay-scheduler.metrics.top.user.count":"10","tfile.io.chunk.size":"1048576","fs.s3a.s3guard.ddb.table.capacity.write":"0","yarn.dispatcher.print-events-info.threshold":"5000","mapreduce.job.speculative.slowtaskthreshold":"1.0","io.serializations":"org.apache.hadoop.io.serializer.WritableSerialization, org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization, org.apache.hadoop.io.serializer.avro.AvroReflectSerialization","hadoop.security.kms.client.failover.sleep.max.millis":"2000","hadoop.security.group.mapping.ldap.directory.search.timeout":"10000","yarn.scheduler.configuration.store.max-logs":"1000","yarn.nodemanager.node-attributes.provider.fetch-interval-ms":"600000","fs.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","yarn.nodemanager.local-cache.max-files-per-directory":"8192","hadoop.http.cross-origin.enabled":"false","hadoop.zk.acl":"world:anyone:rwcda","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.num-manifests-to-cache":"10","mapreduce.map.sort.spill.percent":"0.80","yarn.timeline-service.entity-group-fs-store.scan-interval-seconds":"60","yarn.node-attribute.fs-store.impl.class":"org.apache.hadoop.yarn.server.resourcemanager.nodelabels.FileSystemNodeAttributeStore","fs.s3a.retry.interval":"500ms","yarn.timeline-service.client.best-effort":"false","yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled":"*********(redacted)","hadoop.security.group.mapping.ldap.posix.attr.uid.name":"uidNumber","fs.AbstractFileSystem.swebhdfs.impl":"org.apache.hadoop.fs.SWebHdfs","yarn.nodemanager.elastic-memory-control.timeout-sec":"5","fs.s3a.select.enabled":"true","mapreduce.ifile.readahead":"true","yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms":"300000","yarn.timeline-service.reader.webapp.address":"${yarn.timeline-service.webapp.address}","yarn.resourcemanager.placement-constraints.algorithm.pool-size":"1","yarn.timeline-service.hbase.coprocessor.jar.hdfs.location":"/hbase/coprocessor/hadoop-yarn-server-timelineservice.jar","hadoop.security.kms.client.encrypted.key.cache.num.refill.threads":"2","yarn.resourcemanager.scheduler.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler","yarn.app.mapreduce.am.command-opts":"-Xmx1024m","fs.s3a.metadatastore.fail.on.write.error":"true","hadoop.http.sni.host.check.enabled":"false","mapreduce.cluster.local.dir":"${hadoop.tmp.dir}/mapred/local","io.mapfile.bloom.error.rate":"0.005","fs.client.resolve.topology.enabled":"false","yarn.nodemanager.runtime.linux.allowed-runtimes":"default","yarn.sharedcache.store.class":"org.apache.hadoop.yarn.server.sharedcachemanager.store.InMemorySCMStore","ha.failover-controller.graceful-fence.rpc-timeout.ms":"5000","ftp.replication":"3","fs.getspaceused.jitterMillis":"60000","hadoop.security.uid.cache.secs":"14400","mapreduce.job.maxtaskfailures.per.tracker":"3","fs.s3a.metadatastore.impl":"org.apache.hadoop.fs.s3a.s3guard.NullMetadataStore","io.skip.checksum.errors":"false","yarn.app.mapreduce.client-am.ipc.max-retries-on-timeouts":"3","yarn.timeline-service.webapp.xfs-filter.xframe-options":"SAMEORIGIN","fs.s3a.connection.timeout":"200000","yarn.app.mapreduce.am.webapp.https.enabled":"false","mapreduce.job.max.split.locations":"15","yarn.resourcemanager.nm-container-queuing.max-queue-length":"15","yarn.resourcemanager.delegation-token.always-cancel":"*********(redacted)","hadoop.registry.zk.session.timeout.ms":"60000","yarn.federation.cache-ttl.secs":"300","mapreduce.jvm.system-properties-to-log":"os.name,os.version,java.home,java.runtime.version,java.vendor,java.version,java.vm.name,java.class.path,java.io.tmpdir,user.dir,user.name","yarn.resourcemanager.opportunistic-container-allocation.nodes-used":"10","yarn.timeline-service.entity-group-fs-store.active-dir":"/tmp/entity-file-history/active","mapreduce.shuffle.transfer.buffer.size":"131072","yarn.timeline-service.client.retry-interval-ms":"1000","yarn.timeline-service.flowname.max-size":"0","yarn.http.policy":"HTTP_ONLY","fs.s3a.socket.send.buffer":"8192","fs.AbstractFileSystem.abfss.impl":"org.apache.hadoop.fs.azurebfs.Abfss","yarn.sharedcache.uploader.server.address":"0.0.0.0:8046","yarn.resourcemanager.delegation-token.max-conf-size-bytes":"*********(redacted)","hadoop.http.authentication.token.validity":"*********(redacted)","mapreduce.shuffle.max.connections":"0","yarn.minicluster.yarn.nodemanager.resource.memory-mb":"4096","mapreduce.job.emit-timeline-data":"false","yarn.nodemanager.resource.system-reserved-memory-mb":"-1","hadoop.kerberos.min.seconds.before.relogin":"60","mapreduce.jobhistory.move.thread-count":"3","yarn.resourcemanager.admin.client.thread-count":"1","yarn.dispatcher.drain-events.timeout":"300000","ipc.[port_number].decay-scheduler.backoff.responsetime.thresholds":"10s,20s,30s,40s","fs.s3a.buffer.dir":"${hadoop.tmp.dir}/s3a","hadoop.ssl.enabled.protocols":"TLSv1.2","mapreduce.jobhistory.admin.address":"0.0.0.0:10033","yarn.log-aggregation-status.time-out.ms":"600000","fs.s3a.accesspoint.required":"false","mapreduce.shuffle.port":"13562","yarn.resourcemanager.max-log-aggregation-diagnostics-in-memory":"10","yarn.nodemanager.health-checker.interval-ms":"600000","yarn.resourcemanager.proxy.connection.timeout":"60000","yarn.router.clientrm.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.clientrm.DefaultClientRequestInterceptor","yarn.resourcemanager.zk-appid-node.split-index":"0","ftp.blocksize":"67108864","yarn.nodemanager.runtime.linux.sandbox-mode.local-dirs.permissions":"read","yarn.router.rmadmin.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.rmadmin.DefaultRMAdminRequestInterceptor","yarn.nodemanager.log-container-debug-info.enabled":"true","yarn.resourcemanager.activities-manager.app-activities.max-queue-length":"100","yarn.resourcemanager.application-https.policy":"NONE","yarn.client.max-cached-nodemanagers-proxies":"0","yarn.nodemanager.linux-container-executor.cgroups.delete-delay-ms":"20","yarn.nodemanager.delete.debug-delay-sec":"0","yarn.nodemanager.pmem-check-enabled":"true","yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage":"90.0","mapreduce.app-submission.cross-platform":"false","yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms":"10000","yarn.nodemanager.container-retry-minimum-interval-ms":"1000","hadoop.security.groups.cache.secs":"300","yarn.federation.enabled":"false","yarn.workflow-id.tag-prefix":"workflowid:","fs.azure.local.sas.key.mode":"false","ipc.maximum.data.length":"134217728","fs.s3a.endpoint":"http://138.197.224.4","mapreduce.shuffle.max.threads":"0","yarn.router.pipeline.cache-max-size":"25","yarn.resourcemanager.nm-container-queuing.load-comparator":"QUEUE_LENGTH","yarn.resourcemanager.resource-tracker.nm.ip-hostname-check":"false","hadoop.security.authorization":"false","mapreduce.job.complete.cancel.delegation.tokens":"*********(redacted)","fs.s3a.paging.maximum":"5000","nfs.exports.allowed.hosts":"* rw","yarn.nodemanager.amrmproxy.ha.enable":"false","fs.AbstractFileSystem.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","mapreduce.jobhistory.http.policy":"HTTP_ONLY","yarn.sharedcache.store.in-memory.check-period-mins":"720","hadoop.security.group.mapping.ldap.ssl":"false","fs.s3a.downgrade.syncable.exceptions":"true","yarn.client.application-client-protocol.poll-interval-ms":"200","yarn.scheduler.configuration.leveldb-store.compaction-interval-secs":"86400","yarn.timeline-service.writer.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineWriterImpl","ha.zookeeper.parent-znode":"/hadoop-ha","yarn.resourcemanager.submission-preprocessor.file-refresh-interval-ms":"60000","yarn.nodemanager.log-aggregation.policy.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AllContainerLogAggregationPolicy","mapreduce.reduce.shuffle.merge.percent":"0.66","hadoop.security.group.mapping.ldap.search.filter.group":"(objectClass=group)","yarn.resourcemanager.placement-constraints.scheduler.pool-size":"1","yarn.resourcemanager.activities-manager.cleanup-interval-ms":"5000","yarn.nodemanager.resourcemanager.minimum.version":"NONE","mapreduce.job.speculative.speculative-cap-running-tasks":"0.1","yarn.admin.acl":"*","ipc.[port_number].identity-provider.impl":"org.apache.hadoop.ipc.UserIdentityProvider","yarn.nodemanager.recovery.supervised":"false","yarn.sharedcache.admin.thread-count":"1","yarn.resourcemanager.ha.automatic-failover.enabled":"true","yarn.nodemanager.container-log-monitor.total-size-limit-bytes":"10000000000","mapreduce.reduce.skip.maxgroups":"0","mapreduce.reduce.shuffle.connect.timeout":"180000","yarn.nodemanager.health-checker.scripts":"script","yarn.resourcemanager.address":"${yarn.resourcemanager.hostname}:8032","ipc.client.ping":"true","mapreduce.task.local-fs.write-limit.bytes":"-1","fs.adl.oauth2.access.token.provider.type":"*********(redacted)","mapreduce.shuffle.ssl.file.buffer.size":"65536","yarn.resourcemanager.ha.automatic-failover.embedded":"true","yarn.nodemanager.resource-plugins.gpu.docker-plugin":"nvidia-docker-v1","fs.s3a.s3guard.consistency.retry.interval":"2s","fs.s3a.multipart.purge":"false","yarn.scheduler.configuration.store.class":"file","yarn.resourcemanager.nm-container-queuing.queue-limit-stdev":"1.0f","mapreduce.job.end-notification.max.attempts":"5","mapreduce.output.fileoutputformat.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","yarn.nodemanager.container-monitor.procfs-tree.smaps-based-rss.enabled":"false","ipc.client.bind.wildcard.addr":"false","yarn.resourcemanager.webapp.rest-csrf.enabled":"false","ha.health-monitor.connect-retry-interval.ms":"1000","yarn.nodemanager.keytab":"/etc/krb5.keytab","mapreduce.jobhistory.keytab":"/etc/security/keytab/jhs.service.keytab","fs.s3a.threads.max":"64","yarn.nodemanager.runtime.linux.docker.image-update":"false","mapreduce.reduce.shuffle.input.buffer.percent":"0.70","fs.viewfs.overload.scheme.target.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","yarn.dispatcher.cpu-monitor.samples-per-min":"60","hadoop.security.token.service.use_ip":"*********(redacted)","yarn.nodemanager.runtime.linux.docker.allowed-container-networks":"host,none,bridge","yarn.nodemanager.node-labels.resync-interval-ms":"120000","hadoop.tmp.dir":"/tmp/hadoop-${user.name}","mapreduce.job.maps":"2","mapreduce.jobhistory.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.job.end-notification.max.retry.interval":"5000","yarn.log-aggregation.retain-check-interval-seconds":"-1","yarn.resourcemanager.resource-tracker.client.thread-count":"50","yarn.nodemanager.containers-launcher.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainersLauncher","yarn.rm.system-metrics-publisher.emit-container-events":"false","yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size":"10000","yarn.resourcemanager.ha.automatic-failover.zk-base-path":"/yarn-leader-election","io.seqfile.local.dir":"${hadoop.tmp.dir}/io/local","fs.s3a.s3guard.ddb.throttle.retry.interval":"100ms","fs.AbstractFileSystem.wasb.impl":"org.apache.hadoop.fs.azure.Wasb","mapreduce.client.submit.file.replication":"10","mapreduce.jobhistory.minicluster.fixed.ports":"false","fs.s3a.multipart.threshold":"128M","yarn.resourcemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","mapreduce.jobhistory.done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done","ipc.server.purge.interval":"15","ipc.client.idlethreshold":"4000","yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage":"false","mapreduce.reduce.input.buffer.percent":"0.0","yarn.nodemanager.runtime.linux.docker.userremapping-gid-threshold":"1","yarn.nodemanager.webapp.rest-csrf.enabled":"false","fs.ftp.host.port":"21","ipc.ping.interval":"60000","yarn.resourcemanager.history-writer.multi-threaded-dispatcher.pool-size":"10","yarn.resourcemanager.admin.address":"${yarn.resourcemanager.hostname}:8033","file.client-write-packet-size":"65536","ipc.client.kill.max":"10","mapreduce.reduce.speculative":"true","hadoop.security.key.default.bitlength":"128","mapreduce.job.reducer.unconditional-preempt.delay.sec":"300","yarn.nodemanager.disk-health-checker.interval-ms":"120000","yarn.nodemanager.log.deletion-threads-count":"4","fs.s3a.committer.abort.pending.uploads":"true","yarn.webapp.filter-entity-list-by-user":"false","yarn.resourcemanager.activities-manager.app-activities.ttl-ms":"600000","ipc.client.connection.maxidletime":"10000","mapreduce.task.io.sort.mb":"100","yarn.nodemanager.localizer.client.thread-count":"5","io.erasurecode.codec.rs.rawcoders":"rs_native,rs_java","io.erasurecode.codec.rs-legacy.rawcoders":"rs-legacy_java","yarn.sharedcache.admin.address":"0.0.0.0:8047","yarn.resourcemanager.placement-constraints.algorithm.iterator":"SERIAL","yarn.nodemanager.localizer.cache.cleanup.interval-ms":"600000","hadoop.security.crypto.codec.classes.aes.ctr.nopadding":"org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec, org.apache.hadoop.crypto.JceAesCtrCryptoCodec","mapreduce.job.cache.limit.max-resources-mb":"0","fs.s3a.connection.ssl.enabled":"true","yarn.nodemanager.process-kill-wait.ms":"5000","mapreduce.job.hdfs-servers":"${fs.defaultFS}","yarn.app.mapreduce.am.webapp.https.client.auth":"false","hadoop.workaround.non.threadsafe.getpwuid":"true","fs.df.interval":"60000","ipc.[port_number].decay-scheduler.thresholds":"13,25,50","fs.s3a.multiobjectdelete.enable":"true","yarn.sharedcache.cleaner.resource-sleep-ms":"0","yarn.nodemanager.disk-health-checker.min-healthy-disks":"0.25","hadoop.shell.missing.defaultFs.warning":"false","io.file.buffer.size":"65536","fs.viewfs.overload.scheme.target.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","hadoop.security.group.mapping.ldap.search.attr.member":"member","hadoop.security.random.device.file.path":"/dev/urandom","hadoop.security.sensitive-config-keys":"*********(redacted)","fs.s3a.s3guard.ddb.max.retries":"9","fs.viewfs.overload.scheme.target.file.impl":"org.apache.hadoop.fs.LocalFileSystem","hadoop.rpc.socket.factory.class.default":"org.apache.hadoop.net.StandardSocketFactory","yarn.intermediate-data-encryption.enable":"false","yarn.resourcemanager.connect.retry-interval.ms":"30000","yarn.nodemanager.container.stderr.pattern":"{*stderr*,*STDERR*}","yarn.scheduler.minimum-allocation-mb":"1024","yarn.app.mapreduce.am.staging-dir":"/tmp/hadoop-yarn/staging","mapreduce.reduce.shuffle.read.timeout":"180000","hadoop.http.cross-origin.max-age":"1800","io.erasurecode.codec.xor.rawcoders":"xor_native,xor_java","fs.s3a.s3guard.consistency.retry.limit":"7","fs.s3a.connection.establish.timeout":"5000","mapreduce.job.running.map.limit":"0","yarn.minicluster.control-resource-monitoring":"false","hadoop.ssl.require.client.cert":"false","hadoop.kerberos.kinit.command":"kinit","yarn.federation.state-store.class":"org.apache.hadoop.yarn.server.federation.store.impl.MemoryFederationStateStore","mapreduce.reduce.log.level":"INFO","hadoop.security.dns.log-slow-lookups.threshold.ms":"1000","mapreduce.job.ubertask.enable":"false","adl.http.timeout":"-1","yarn.resourcemanager.placement-constraints.retry-attempts":"3","hadoop.caller.context.enabled":"false","hadoop.security.group.mapping.ldap.num.attempts":"3","yarn.nodemanager.vmem-pmem-ratio":"2.1","hadoop.rpc.protection":"authentication","ha.health-monitor.rpc-timeout.ms":"45000","yarn.nodemanager.remote-app-log-dir":"/tmp/logs","hadoop.zk.timeout-ms":"10000","fs.s3a.s3guard.cli.prune.age":"86400000","yarn.nodemanager.resource.pcores-vcores-multiplier":"1.0","yarn.nodemanager.runtime.linux.sandbox-mode":"disabled","yarn.app.mapreduce.am.containerlauncher.threadpool-initial-size":"10","fs.viewfs.overload.scheme.target.webhdfs.impl":"org.apache.hadoop.hdfs.web.WebHdfsFileSystem","fs.s3a.committer.threads":"8","hadoop.zk.retry-interval-ms":"1000","hadoop.security.crypto.buffer.size":"8192","yarn.nodemanager.node-labels.provider.fetch-interval-ms":"600000","mapreduce.jobhistory.recovery.store.leveldb.path":"${hadoop.tmp.dir}/mapred/history/recoverystore","yarn.client.failover-retries-on-socket-timeouts":"0","fs.s3a.ssl.channel.mode":"default_jsse","yarn.nodemanager.resource.memory.enabled":"false","fs.azure.authorization.caching.enable":"true","fs.s3a.access.key":"*********(redacted)","hadoop.security.instrumentation.requires.admin":"false","yarn.nodemanager.delete.thread-count":"4","mapreduce.job.finish-when-all-reducers-done":"true","hadoop.registry.jaas.context":"Client","yarn.timeline-service.leveldb-timeline-store.path":"${hadoop.tmp.dir}/yarn/timeline","io.map.index.interval":"128","yarn.resourcemanager.nm-container-queuing.max-queue-wait-time-ms":"100","fs.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","mapreduce.job.counters.max":"120","mapreduce.jobhistory.webapp.rest-csrf.enabled":"false","yarn.timeline-service.store-class":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.jobhistory.move.interval-ms":"180000","fs.s3a.change.detection.version.required":"true","yarn.nodemanager.localizer.fetch.thread-count":"4","yarn.resourcemanager.scheduler.client.thread-count":"50","hadoop.ssl.hostname.verifier":"DEFAULT","yarn.timeline-service.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/timeline","mapreduce.job.classloader":"false","mapreduce.task.profile.map.params":"${mapreduce.task.profile.params}","ipc.client.connect.timeout":"20000","hadoop.security.auth_to_local.mechanism":"hadoop","yarn.timeline-service.app-collector.linger-period.ms":"60000","yarn.nm.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.reservation-system.planfollower.time-step":"1000","yarn.resourcemanager.proxy.timeout.enabled":"true","yarn.resourcemanager.activities-manager.scheduler-activities.ttl-ms":"600000","yarn.nodemanager.runtime.linux.docker.enable-userremapping.allowed":"true","yarn.webapp.api-service.enable":"false","yarn.nodemanager.recovery.enabled":"false","mapreduce.job.end-notification.retry.interval":"1000","fs.du.interval":"600000","fs.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","yarn.nodemanager.container.stderr.tail.bytes":"4096","yarn.nodemanager.disk-health-checker.disk-free-space-threshold.enabled":"true","hadoop.security.group.mapping.ldap.read.timeout.ms":"60000","hadoop.security.groups.cache.warn.after.ms":"5000","file.bytes-per-checksum":"512","mapreduce.outputcommitter.factory.scheme.s3a":"org.apache.hadoop.fs.s3a.commit.S3ACommitterFactory","hadoop.security.groups.cache.background.reload":"false","yarn.nodemanager.container-monitor.enabled":"true","yarn.nodemanager.elastic-memory-control.enabled":"false","net.topology.script.number.args":"100","mapreduce.task.merge.progress.records":"10000","yarn.nodemanager.localizer.address":"${yarn.nodemanager.hostname}:8040","yarn.timeline-service.keytab":"/etc/krb5.keytab","mapreduce.reduce.shuffle.fetch.retry.timeout-ms":"30000","yarn.resourcemanager.rm.container-allocation.expiry-interval-ms":"600000","yarn.nodemanager.container-executor.exit-code-file.timeout-ms":"2000","mapreduce.fileoutputcommitter.algorithm.version":"1","yarn.resourcemanager.work-preserving-recovery.enabled":"true","mapreduce.map.skip.maxrecords":"0","yarn.sharedcache.root-dir":"/sharedcache","fs.s3a.retry.throttle.limit":"20","hadoop.http.authentication.type":"simple","fs.viewfs.overload.scheme.target.oss.impl":"org.apache.hadoop.fs.aliyun.oss.AliyunOSSFileSystem","mapreduce.job.cache.limit.max-resources":"0","mapreduce.task.userlog.limit.kb":"0","ipc.[port_number].weighted-cost.handler":"1","yarn.resourcemanager.scheduler.monitor.enable":"false","ipc.client.connect.max.retries":"10","hadoop.registry.zk.retry.times":"5","yarn.nodemanager.resource-monitor.interval-ms":"3000","yarn.nodemanager.resource-plugins.gpu.allowed-gpu-devices":"auto","mapreduce.job.sharedcache.mode":"disabled","yarn.nodemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.shuffle.listen.queue.size":"128","yarn.scheduler.configuration.mutation.acl-policy.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.DefaultConfigurationMutationACLPolicy","mapreduce.map.cpu.vcores":"1","yarn.log-aggregation.file-formats":"TFile","yarn.timeline-service.client.fd-retain-secs":"300","fs.s3a.select.output.csv.field.delimiter":",","yarn.nodemanager.health-checker.timeout-ms":"1200000","hadoop.user.group.static.mapping.overrides":"dr.who=;","fs.azure.sas.expiry.period":"90d","fs.s3a.select.output.csv.record.delimiter":"\\n","mapreduce.jobhistory.recovery.store.class":"org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService","fs.viewfs.overload.scheme.target.https.impl":"org.apache.hadoop.fs.http.HttpsFileSystem","fs.s3a.s3guard.ddb.table.sse.enabled":"false","yarn.resourcemanager.fail-fast":"${yarn.fail-fast}","yarn.resourcemanager.proxy-user-privileges.enabled":"false","yarn.router.webapp.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.webapp.DefaultRequestInterceptorREST","yarn.nodemanager.resource.memory.cgroups.soft-limit-percentage":"90.0","mapreduce.job.reducer.preempt.delay.sec":"0","hadoop.util.hash.type":"murmur","yarn.nodemanager.disk-validator":"basic","yarn.app.mapreduce.client.job.max-retries":"3","fs.viewfs.overload.scheme.target.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","mapreduce.reduce.shuffle.retry-delay.max.ms":"60000","hadoop.security.group.mapping.ldap.connection.timeout.ms":"60000","mapreduce.task.profile.params":"-agentlib:hprof=cpu=samples,heap=sites,force=n,thread=y,verbose=n,file=%s","yarn.app.mapreduce.shuffle.log.backups":"0","yarn.nodemanager.container-diagnostics-maximum-size":"10000","hadoop.registry.zk.retry.interval.ms":"1000","yarn.nodemanager.linux-container-executor.cgroups.delete-timeout-ms":"1000","fs.AbstractFileSystem.file.impl":"org.apache.hadoop.fs.local.LocalFs","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds":"-1","mapreduce.jobhistory.cleaner.interval-ms":"86400000","hadoop.registry.zk.quorum":"localhost:2181","yarn.nodemanager.runtime.linux.runc.allowed-container-runtimes":"runc","mapreduce.output.fileoutputformat.compress":"false","yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs":"*********(redacted)","fs.s3a.assumed.role.session.duration":"30m","hadoop.security.group.mapping.ldap.conversion.rule":"none","hadoop.ssl.server.conf":"ssl-server.xml","fs.s3a.retry.throttle.interval":"100ms","seq.io.sort.factor":"100","fs.viewfs.overload.scheme.target.ofs.impl":"org.apache.hadoop.fs.ozone.RootedOzoneFileSystem","yarn.sharedcache.cleaner.initial-delay-mins":"10","mapreduce.client.completion.pollinterval":"5000","hadoop.ssl.keystores.factory.class":"org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory","yarn.app.mapreduce.am.resource.cpu-vcores":"1","yarn.timeline-service.enabled":"false","yarn.nodemanager.runtime.linux.docker.capabilities":"CHOWN,DAC_OVERRIDE,FSETID,FOWNER,MKNOD,NET_RAW,SETGID,SETUID,SETFCAP,SETPCAP,NET_BIND_SERVICE,SYS_CHROOT,KILL,AUDIT_WRITE","yarn.acl.enable":"false","yarn.timeline-service.entity-group-fs-store.done-dir":"/tmp/entity-file-history/done/","hadoop.security.group.mapping.ldap.num.attempts.before.failover":"3","mapreduce.task.profile":"false","hadoop.prometheus.endpoint.enabled":"false","yarn.resourcemanager.fs.state-store.uri":"${hadoop.tmp.dir}/yarn/system/rmstore","mapreduce.jobhistory.always-scan-user-dir":"false","fs.s3a.metadatastore.metadata.ttl":"15m","yarn.nodemanager.opportunistic-containers-use-pause-for-preemption":"false","yarn.nodemanager.linux-container-executor.nonsecure-mode.local-user":"nobody","yarn.timeline-service.reader.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineReaderImpl","yarn.resourcemanager.configuration.provider-class":"org.apache.hadoop.yarn.LocalConfigurationProvider","yarn.nodemanager.runtime.linux.docker.userremapping-uid-threshold":"1","yarn.resourcemanager.configuration.file-system-based-store":"/yarn/conf","mapreduce.job.cache.limit.max-single-resource-mb":"0","yarn.nodemanager.runtime.linux.docker.stop.grace-period":"10","yarn.resourcemanager.resource-profiles.source-file":"resource-profiles.json","mapreduce.job.dfs.storage.capacity.kill-limit-exceed":"false","yarn.nodemanager.resource.percentage-physical-cpu-limit":"100","mapreduce.jobhistory.client.thread-count":"10","tfile.fs.input.buffer.size":"262144","mapreduce.client.progressmonitor.pollinterval":"1000","yarn.nodemanager.log-dirs":"${yarn.log.dir}/userlogs","yarn.resourcemanager.opportunistic.max.container-allocation.per.am.heartbeat":"-1","fs.automatic.close":"true","yarn.resourcemanager.delegation-token-renewer.thread-retry-interval":"*********(redacted)","fs.s3a.select.input.csv.quote.character":"\"","yarn.nodemanager.hostname":"0.0.0.0","ipc.[port_number].cost-provider.impl":"org.apache.hadoop.ipc.DefaultCostProvider","yarn.nodemanager.runtime.linux.runc.manifest-to-resources-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.HdfsManifestToResourcesPlugin","yarn.nodemanager.remote-app-log-dir-include-older":"true","yarn.nodemanager.resource.memory.cgroups.swappiness":"0","ftp.stream-buffer-size":"4096","yarn.fail-fast":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-to-keep":"100","yarn.timeline-service.app-aggregation-interval-secs":"15","hadoop.security.group.mapping.ldap.search.filter.user":"(&(objectClass=user)(sAMAccountName={0}))","ipc.[port_number].weighted-cost.lockshared":"10","yarn.nodemanager.container-localizer.log.level":"INFO","yarn.timeline-service.address":"${yarn.timeline-service.hostname}:10200","mapreduce.job.ubertask.maxmaps":"9","fs.s3a.threads.keepalivetime":"60","mapreduce.jobhistory.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.task.files.preserve.failedtasks":"false","yarn.app.mapreduce.client.job.retry-interval":"2000","ha.failover-controller.graceful-fence.connection.retries":"1","fs.s3a.select.output.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.max-lifetime":"*********(redacted)","hadoop.kerberos.keytab.login.autorenewal.enabled":"false","yarn.timeline-service.client.drain-entities.timeout.ms":"2000","yarn.nodemanager.resource-plugins.fpga.vendor-plugin.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin","yarn.resourcemanager.nodemanagers.heartbeat-interval-min-ms":"1000","yarn.timeline-service.entity-group-fs-store.summary-store":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.reduce.cpu.vcores":"1","mapreduce.job.encrypted-intermediate-data.buffer.kb":"128","fs.client.resolve.remote.symlinks":"true","yarn.nodemanager.webapp.https.address":"0.0.0.0:8044","hadoop.http.cross-origin.allowed-origins":"*","mapreduce.job.encrypted-intermediate-data":"false","yarn.nodemanager.disk-health-checker.disk-utilization-threshold.enabled":"true","fs.s3a.executor.capacity":"16","yarn.timeline-service.entity-group-fs-store.retain-seconds":"604800","yarn.resourcemanager.metrics.runtime.buckets":"60,300,1440","yarn.timeline-service.generic-application-history.max-applications":"10000","yarn.nodemanager.local-dirs":"${hadoop.tmp.dir}/nm-local-dir","mapreduce.shuffle.connection-keep-alive.enable":"false","yarn.node-labels.configuration-type":"centralized","fs.s3a.path.style.access":"true","yarn.nodemanager.aux-services.mapreduce_shuffle.class":"org.apache.hadoop.mapred.ShuffleHandler","yarn.sharedcache.store.in-memory.staleness-period-mins":"10080","fs.adl.impl":"org.apache.hadoop.fs.adl.AdlFileSystem","yarn.resourcemanager.application.max-tags":"10","hadoop.domainname.resolver.impl":"org.apache.hadoop.net.DNSDomainNameResolver","yarn.resourcemanager.nodemanager.minimum.version":"NONE","mapreduce.jobhistory.webapp.xfs-filter.xframe-options":"SAMEORIGIN","yarn.app.mapreduce.am.staging-dir.erasurecoding.enabled":"false","net.topology.impl":"org.apache.hadoop.net.NetworkTopology","io.map.index.skip":"0","yarn.timeline-service.reader.webapp.https.address":"${yarn.timeline-service.webapp.https.address}","fs.ftp.data.connection.mode":"ACTIVE_LOCAL_DATA_CONNECTION_MODE","mapreduce.job.local-fs.single-disk-limit.check.kill-limit-exceed":"true","fs.azure.buffer.dir":"${hadoop.tmp.dir}/abfs","yarn.scheduler.maximum-allocation-vcores":"4","hadoop.http.cross-origin.allowed-headers":"X-Requested-With,Content-Type,Accept,Origin","yarn.nodemanager.log-aggregation.compression-type":"none","yarn.timeline-service.version":"1.0f","yarn.ipc.rpc.class":"org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC","mapreduce.reduce.maxattempts":"4","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.batch-size":"1000","hadoop.security.dns.log-slow-lookups.enabled":"false","mapreduce.job.committer.setup.cleanup.needed":"true","hadoop.security.secure.random.impl":"org.apache.hadoop.crypto.random.OpensslSecureRandom","mapreduce.job.running.reduce.limit":"0","fs.s3a.select.errors.include.sql":"false","fs.s3a.connection.request.timeout":"0","ipc.maximum.response.length":"134217728","yarn.resourcemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.job.token.tracking.ids.enabled":"*********(redacted)","hadoop.caller.context.max.size":"128","yarn.nodemanager.runtime.linux.docker.host-pid-namespace.allowed":"false","yarn.nodemanager.runtime.linux.docker.delayed-removal.allowed":"false","hadoop.registry.system.acls":"sasl:yarn@, sasl:mapred@, sasl:hdfs@","yarn.nodemanager.recovery.dir":"${hadoop.tmp.dir}/yarn-nm-recovery","fs.s3a.fast.upload.buffer":"disk","mapreduce.jobhistory.intermediate-done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done_intermediate","yarn.app.mapreduce.shuffle.log.separate":"true","yarn.log-aggregation.debug.filesize":"104857600","fs.s3a.max.total.tasks":"32","fs.s3a.readahead.range":"64K","hadoop.http.authentication.simple.anonymous.allowed":"true","fs.s3a.fast.upload":"true","fs.s3a.attempts.maximum":"20","hadoop.registry.zk.connection.timeout.ms":"15000","yarn.resourcemanager.delegation-token-renewer.thread-count":"*********(redacted)","yarn.resourcemanager.delegation-token-renewer.thread-timeout":"*********(redacted)","yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size":"10000","yarn.nodemanager.aux-services.manifest.reload-ms":"0","yarn.nodemanager.emit-container-events":"true","yarn.resourcemanager.resource-profiles.enabled":"false","yarn.timeline-service.hbase-schema.prefix":"prod.","fs.azure.authorization":"false","mapreduce.map.log.level":"INFO","ha.failover-controller.active-standby-elector.zk.op.retries":"3","yarn.resourcemanager.decommissioning-nodes-watcher.poll-interval-secs":"20","mapreduce.output.fileoutputformat.compress.type":"RECORD","yarn.resourcemanager.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/system/rmstore","yarn.timeline-service.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.ifile.readahead.bytes":"4194304","yarn.sharedcache.app-checker.class":"org.apache.hadoop.yarn.server.sharedcachemanager.RemoteAppChecker","yarn.nodemanager.linux-container-executor.nonsecure-mode.limit-users":"true","yarn.nodemanager.resource.detect-hardware-capabilities":"false","mapreduce.cluster.acls.enabled":"false","mapreduce.job.speculative.retry-after-no-speculate":"1000","fs.viewfs.overload.scheme.target.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","hadoop.security.group.mapping.ldap.search.group.hierarchy.levels":"0","yarn.resourcemanager.fs.state-store.retry-interval-ms":"1000","file.stream-buffer-size":"4096","yarn.resourcemanager.application-timeouts.monitor.interval-ms":"3000","mapreduce.map.output.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","mapreduce.map.speculative":"true","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.hdfs-hash-file":"/runc-root/image-tag-to-hash","mapreduce.job.speculative.retry-after-speculate":"15000","yarn.nodemanager.linux-container-executor.cgroups.mount":"false","yarn.app.mapreduce.am.container.log.backups":"0","yarn.app.mapreduce.am.log.level":"INFO","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.ImageTagToManifestPlugin","io.bytes.per.checksum":"512","mapreduce.job.reduce.slowstart.completedmaps":"0.05","yarn.timeline-service.http-authentication.type":"simple","hadoop.security.group.mapping.ldap.search.attr.group.name":"cn","yarn.nodemanager.resource-plugins.fpga.allowed-fpga-devices":"auto","yarn.timeline-service.client.internal-timers-ttl-secs":"420","fs.s3a.select.output.csv.quote.character":"\"","hadoop.http.logs.enabled":"true","fs.s3a.block.size":"32M","yarn.sharedcache.client-server.address":"0.0.0.0:8045","yarn.nodemanager.logaggregation.threadpool-size-max":"100","yarn.resourcemanager.hostname":"0.0.0.0","yarn.resourcemanager.delegation.key.update-interval":"86400000","mapreduce.reduce.shuffle.fetch.retry.enabled":"${yarn.nodemanager.recovery.enabled}","mapreduce.map.memory.mb":"-1","mapreduce.task.skip.start.attempts":"2","fs.AbstractFileSystem.hdfs.impl":"org.apache.hadoop.fs.Hdfs","yarn.nodemanager.disk-health-checker.enable":"true","fs.s3a.select.output.csv.quote.fields":"always","ipc.client.tcpnodelay":"true","ipc.client.rpc-timeout.ms":"0","yarn.nodemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","yarn.resourcemanager.delegation-token-renewer.thread-retry-max-attempts":"*********(redacted)","ipc.client.low-latency":"false","mapreduce.input.lineinputformat.linespermap":"1","yarn.router.interceptor.user.threadpool-size":"5","ipc.client.connect.max.retries.on.timeouts":"45","yarn.timeline-service.leveldb-timeline-store.read-cache-size":"104857600","fs.AbstractFileSystem.har.impl":"org.apache.hadoop.fs.HarFs","mapreduce.job.split.metainfo.maxsize":"10000000","yarn.am.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.timeline-service.entity-group-fs-store.app-cache-size":"10","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-timeout-interval-secs":"360","fs.s3a.socket.recv.buffer":"8192","rpc.metrics.timeunit":"MILLISECONDS","yarn.resourcemanager.resource-tracker.address":"${yarn.resourcemanager.hostname}:8031","yarn.nodemanager.node-labels.provider.fetch-timeout-ms":"1200000","mapreduce.job.heap.memory-mb.ratio":"0.8","yarn.resourcemanager.leveldb-state-store.compaction-interval-secs":"3600","yarn.resourcemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","yarn.nodemanager.pluggable-device-framework.enabled":"false","yarn.scheduler.configuration.fs.path":"file://${hadoop.tmp.dir}/yarn/system/schedconf","mapreduce.client.output.filter":"FAILED","hadoop.http.filter.initializers":"org.apache.hadoop.http.lib.StaticUserWebFilter","mapreduce.reduce.memory.mb":"-1","yarn.timeline-service.hostname":"0.0.0.0","file.replication":"1","yarn.nodemanager.container-metrics.unregister-delay-ms":"10000","yarn.nodemanager.container-metrics.period-ms":"-1","mapreduce.fileoutputcommitter.task.cleanup.enabled":"false","yarn.nodemanager.log.retain-seconds":"10800","yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds":"3600","ipc.[port_number].callqueue.impl":"java.util.concurrent.LinkedBlockingQueue","yarn.resourcemanager.keytab":"/etc/krb5.keytab","hadoop.security.group.mapping.providers.combined":"true","mapreduce.reduce.merge.inmem.threshold":"1000","yarn.timeline-service.recovery.enabled":"false","fs.azure.saskey.usecontainersaskeyforallaccess":"true","yarn.sharedcache.nm.uploader.thread-count":"20","yarn.resourcemanager.nodemanager-graceful-decommission-timeout-secs":"3600","ipc.[port_number].weighted-cost.lockfree":"1","mapreduce.shuffle.ssl.enabled":"false","yarn.timeline-service.hbase.coprocessor.app-final-value-retention-milliseconds":"259200000","yarn.nodemanager.opportunistic-containers-max-queue-length":"0","yarn.resourcemanager.state-store.max-completed-applications":"${yarn.resourcemanager.max-completed-applications}","mapreduce.job.speculative.minimum-allowed-tasks":"10","fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","yarn.log-aggregation.retain-seconds":"-1","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb":"0","mapreduce.jobhistory.max-age-ms":"604800000","hadoop.http.cross-origin.allowed-methods":"GET,POST,HEAD","yarn.resourcemanager.opportunistic-container-allocation.enabled":"false","mapreduce.jobhistory.webapp.address":"0.0.0.0:19888","hadoop.system.tags":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.log-aggregation.file-controller.TFile.class":"org.apache.hadoop.yarn.logaggregation.filecontroller.tfile.LogAggregationTFileController","yarn.client.nodemanager-connect.max-wait-ms":"180000","yarn.resourcemanager.webapp.address":"${yarn.resourcemanager.hostname}:8088","mapreduce.jobhistory.recovery.enable":"false","mapreduce.reduce.shuffle.parallelcopies":"5","fs.AbstractFileSystem.webhdfs.impl":"org.apache.hadoop.fs.WebHdfs","fs.trash.interval":"0","yarn.app.mapreduce.client.max-retries":"3","hadoop.security.authentication":"simple","mapreduce.task.profile.reduce.params":"${mapreduce.task.profile.params}","yarn.app.mapreduce.am.resource.mb":"1536","mapreduce.input.fileinputformat.list-status.num-threads":"1","yarn.nodemanager.container-executor.class":"org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor","io.mapfile.bloom.size":"1048576","yarn.timeline-service.ttl-ms":"604800000","yarn.resourcemanager.nm-container-queuing.min-queue-length":"5","yarn.nodemanager.resource.cpu-vcores":"-1","mapreduce.job.reduces":"1","fs.s3a.multipart.size":"104857600","fs.s3a.select.input.csv.comment.marker":"#","yarn.scheduler.minimum-allocation-vcores":"1","mapreduce.job.speculative.speculative-cap-total-tasks":"0.01","hadoop.ssl.client.conf":"ssl-client.xml","mapreduce.job.queuename":"default","mapreduce.job.encrypted-intermediate-data-key-size-bits":"128","fs.s3a.metadatastore.authoritative":"false","ipc.[port_number].weighted-cost.response":"1","yarn.nodemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","ha.health-monitor.sleep-after-disconnect.ms":"1000","yarn.app.mapreduce.shuffle.log.limit.kb":"0","hadoop.security.group.mapping":"org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback","yarn.client.application-client-protocol.poll-timeout-ms":"-1","mapreduce.jobhistory.jhist.format":"binary","mapreduce.task.stuck.timeout-ms":"600000","yarn.resourcemanager.application.max-tag.length":"100","yarn.resourcemanager.ha.enabled":"false","dfs.client.ignore.namenode.default.kms.uri":"false","hadoop.http.staticuser.user":"dr.who","mapreduce.task.exit.timeout.check-interval-ms":"20000","mapreduce.jobhistory.intermediate-user-done-dir.permissions":"770","mapreduce.task.exit.timeout":"60000","yarn.nodemanager.linux-container-executor.resources-handler.class":"org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler","mapreduce.reduce.shuffle.memory.limit.percent":"0.25","yarn.resourcemanager.reservation-system.enable":"false","mapreduce.map.output.compress":"false","ha.zookeeper.acl":"world:anyone:rwcda","ipc.server.max.connections":"0","yarn.nodemanager.runtime.linux.docker.default-container-network":"host","yarn.router.webapp.address":"0.0.0.0:8089","yarn.scheduler.maximum-allocation-mb":"8192","yarn.resourcemanager.scheduler.monitor.policies":"org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy","yarn.sharedcache.cleaner.period-mins":"1440","yarn.nodemanager.resource-plugins.gpu.docker-plugin.nvidia-docker-v1.endpoint":"http://localhost:3476/v1.0/docker/cli","yarn.app.mapreduce.am.container.log.limit.kb":"0","ipc.client.connect.retry.interval":"1000","yarn.timeline-service.http-cross-origin.enabled":"false","fs.wasbs.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem$Secure","yarn.resourcemanager.nodemanagers.heartbeat-interval-max-ms":"1000","yarn.federation.subcluster-resolver.class":"org.apache.hadoop.yarn.server.federation.resolver.DefaultSubClusterResolverImpl","yarn.resourcemanager.zk-state-store.parent-path":"/rmstore","fs.s3a.select.input.csv.field.delimiter":",","mapreduce.jobhistory.cleaner.enable":"true","yarn.timeline-service.client.fd-flush-interval-secs":"10","hadoop.security.kms.client.encrypted.key.cache.expiry":"43200000","yarn.client.nodemanager-client-async.thread-pool-max-size":"500","mapreduce.map.maxattempts":"4","yarn.resourcemanager.nm-container-queuing.sorting-nodes-interval-ms":"1000","fs.s3a.committer.staging.tmp.path":"tmp/staging","yarn.nodemanager.sleep-delay-before-sigkill.ms":"250","yarn.resourcemanager.nm-container-queuing.min-queue-wait-time-ms":"10","mapreduce.job.end-notification.retry.attempts":"0","yarn.nodemanager.resource.count-logical-processors-as-cores":"false","hadoop.registry.zk.root":"/registry","adl.feature.ownerandgroup.enableupn":"false","yarn.resourcemanager.zk-max-znode-size.bytes":"1048576","mapreduce.job.reduce.shuffle.consumer.plugin.class":"org.apache.hadoop.mapreduce.task.reduce.Shuffle","yarn.resourcemanager.delayed.delegation-token.removal-interval-ms":"*********(redacted)","yarn.nodemanager.localizer.cache.target-size-mb":"10240","fs.s3a.committer.staging.conflict-mode":"append","mapreduce.client.libjars.wildcard":"true","fs.s3a.committer.staging.unique-filenames":"true","yarn.nodemanager.node-attributes.provider.fetch-timeout-ms":"1200000","fs.s3a.list.version":"2","ftp.client-write-packet-size":"65536","ipc.[port_number].weighted-cost.lockexclusive":"100","fs.AbstractFileSystem.adl.impl":"org.apache.hadoop.fs.adl.Adl","yarn.nodemanager.container-log-monitor.enable":"false","hadoop.security.key.default.cipher":"AES/CTR/NoPadding","yarn.client.failover-retries":"0","fs.s3a.multipart.purge.age":"86400","mapreduce.job.local-fs.single-disk-limit.check.interval-ms":"5000","net.topology.node.switch.mapping.impl":"org.apache.hadoop.net.ScriptBasedMapping","yarn.nodemanager.amrmproxy.address":"0.0.0.0:8049","ipc.server.listen.queue.size":"256","ipc.[port_number].decay-scheduler.period-ms":"5000","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.cache-refresh-interval-secs":"60","map.sort.class":"org.apache.hadoop.util.QuickSort","fs.viewfs.rename.strategy":"SAME_MOUNTPOINT","hadoop.security.kms.client.authentication.retry-count":"1","fs.permissions.umask-mode":"022","fs.s3a.assumed.role.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","yarn.nodemanager.runtime.linux.runc.privileged-containers.allowed":"false","yarn.nodemanager.vmem-check-enabled":"true","yarn.nodemanager.numa-awareness.enabled":"false","yarn.nodemanager.recovery.compaction-interval-secs":"3600","yarn.app.mapreduce.client-am.ipc.max-retries":"3","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.interval-seconds":"60","yarn.federation.registry.base-dir":"yarnfederation/","yarn.nodemanager.health-checker.run-before-startup":"false","mapreduce.job.max.map":"-1","mapreduce.job.local-fs.single-disk-limit.bytes":"-1","mapreduce.shuffle.pathcache.concurrency-level":"16","mapreduce.job.ubertask.maxreduces":"1","mapreduce.shuffle.pathcache.max-weight":"10485760","hadoop.security.kms.client.encrypted.key.cache.size":"500","hadoop.security.java.secure.random.algorithm":"SHA1PRNG","ha.failover-controller.cli-check.rpc-timeout.ms":"20000","mapreduce.jobhistory.jobname.limit":"50","fs.s3a.select.input.compression":"none","yarn.client.nodemanager-connect.retry-interval-ms":"10000","ipc.[port_number].scheduler.priority.levels":"4","yarn.timeline-service.state-store-class":"org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore","yarn.nodemanager.env-whitelist":"JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_HOME,PATH,LANG,TZ","yarn.sharedcache.nested-level":"3","yarn.timeline-service.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","fs.azure.user.agent.prefix":"unknown","yarn.resourcemanager.zk-delegation-token-node.split-index":"*********(redacted)","yarn.nodemanager.numa-awareness.read-topology":"false","yarn.nodemanager.webapp.address":"${yarn.nodemanager.hostname}:8042","rpc.metrics.quantile.enable":"false","yarn.registry.class":"org.apache.hadoop.registry.client.impl.FSRegistryOperationsService","mapreduce.jobhistory.admin.acl":"*","yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size":"10","yarn.scheduler.queue-placement-rules":"user-group","hadoop.http.authentication.kerberos.keytab":"${user.home}/hadoop.keytab","yarn.resourcemanager.recovery.enabled":"false","fs.s3a.select.input.csv.header":"none","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-size":"500","yarn.timeline-service.webapp.rest-csrf.enabled":"false","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-watermark-high-mb":"0"},"System Properties":{"java.io.tmpdir":"/tmp","line.separator":"\n","path.separator":":","sun.management.compiler":"HotSpot 64-Bit Tiered Compilers","SPARK_SUBMIT":"true","sun.cpu.endian":"little","java.specification.version":"17","java.vm.specification.name":"Java Virtual Machine Specification","java.vendor":"BellSoft","java.vm.specification.version":"17","user.home":"/root","sun.arch.data.model":"64","sun.boot.library.path":"/opt/bitnami/java/lib","user.dir":"/opt/bitnami/spark","java.library.path":"/opt/bitnami/python/lib:/opt/bitnami/spark/venv/lib/python3.8/site-packages/numpy.libs::/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib","os.arch":"aarch64","java.vm.version":"17.0.11+12-LTS","jetty.git.hash":"abdcda73818a1a2c705da276edb0bf6581e7997e","java.runtime.version":"17.0.11+12-LTS","java.vm.info":"mixed mode, sharing","java.runtime.name":"OpenJDK Runtime Environment","java.version.date":"2024-04-16","file.separator":"/","java.class.version":"61.0","java.specification.name":"Java Platform API Specification","file.encoding":"ANSI_X3.4-1968","jdk.reflect.useDirectMethodHandle":"false","user.timezone":"Etc/UTC","java.specification.vendor":"Oracle Corporation","sun.java.launcher":"SUN_STANDARD","java.vm.compressedOopsMode":"32-bit","os.version":"6.6.26-linuxkit","native.encoding":"ANSI_X3.4-1968","java.vm.specification.vendor":"Oracle Corporation","sun.stderr.encoding":"ANSI_X3.4-1968","user.country":"US","sun.jnu.encoding":"ANSI_X3.4-1968","user.language":"en","sun.stdout.encoding":"ANSI_X3.4-1968","java.vendor.url":"https://bell-sw.com/","os.name":"Linux","java.vm.vendor":"BellSoft","jdk.debug":"release","java.vendor.url.bug":"https://bell-sw.com/support","user.name":"root","java.vm.name":"OpenJDK 64-Bit Server VM","sun.java.command":"org.apache.spark.deploy.SparkSubmit --master spark://spark-master:7077 --deploy-mode client --conf spark.driver.extraJavaOptions=--add-exports java.base/sun.nio.ch=ALL-UNNAMED /opt/bitnami/spark/jobs/app/src/yelp-dataset-python-deequ.py","java.home":"/opt/bitnami/java","java.version":"17.0.11","sun.io.unicode.encoding":"UnicodeLittle"},"Metrics Properties":{"*.sink.servlet.class":"org.apache.spark.metrics.sink.MetricsServlet","*.sink.servlet.path":"/metrics/json","applications.sink.servlet.path":"/metrics/applications/json","master.sink.servlet.path":"/metrics/master/json"},"Classpath Entries":{"/opt/bitnami/spark/jars/jsr305-3.0.0.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-classes-kqueue-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/javolution-5.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/audience-annotations-0.5.0.jar":"System Classpath","/opt/bitnami/spark/jars/spark-mllib_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/hk2-api-2.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/osgi-resource-locator-1.0.3.jar":"System Classpath","/opt/bitnami/spark/jars/javax.jdo-3.2.0-m3.jar":"System Classpath","/opt/bitnami/spark/jars/spark-hive_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/arrow-vector-12.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-container-servlet-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/jdo-api-3.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/javassist-3.29.2-GA.jar":"System Classpath","/opt/bitnami/spark/jars/netty-buffer-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/slf4j-api-2.0.7.jar":"System Classpath","/opt/bitnami/spark/jars/xbean-asm9-shaded-4.23.jar":"System Classpath","/opt/bitnami/spark/jars/spark-sketch_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/commons-compiler-3.1.9.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-discovery-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/json4s-scalap_2.12-3.7.0-M11.jar":"System Classpath","/opt/bitnami/spark/jars/jaxb-runtime-2.3.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-sql-api_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-core-asl-1.9.13.jar":"System Classpath","/opt/bitnami/spark/jars/httpclient-4.5.14.jar":"System Classpath","/opt/bitnami/spark/jars/chill_2.12-0.10.0.jar":"System Classpath","/opt/bitnami/spark/jars/aws-java-sdk-bundle-1.12.262.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-common-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/metrics-jvm-4.2.19.jar":"System Classpath","/opt/bitnami/spark/jars/netty-handler-proxy-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-x86_64.jar":"System Classpath","/opt/bitnami/spark/jars/aopalliance-repackaged-2.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/avro-mapred-1.11.2.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-coordination-6.7.2.jar":"System Classpath","/opt/bitnami/spark/conf/":"System Classpath","/opt/bitnami/spark/jars/arrow-format-12.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/arrow-memory-netty-12.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/snappy-java-1.1.10.3.jar":"System Classpath","/opt/bitnami/spark/jars/okio-1.15.0.jar":"System Classpath","/opt/bitnami/spark/jars/hive-shims-scheduler-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/tink-1.9.0.jar":"System Classpath","/opt/bitnami/spark/jars/spark-network-common_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/paranamer-2.8.jar":"System Classpath","/opt/bitnami/spark/jars/oro-2.0.8.jar":"System Classpath","/opt/bitnami/spark/jars/scala-reflect-2.12.18.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.annotation-api-1.3.5.jar":"System Classpath","/opt/bitnami/spark/jars/commons-lang-2.6.jar":"System Classpath","/opt/bitnami/spark/jars/spark-streaming_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/ivy-2.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/datanucleus-api-jdo-4.2.4.jar":"System Classpath","/opt/bitnami/spark/jars/antlr-runtime-3.5.2.jar":"System Classpath","/opt/bitnami/spark/jars/datasketches-java-3.3.0.jar":"System Classpath","/opt/bitnami/spark/jars/zookeeper-3.6.3.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-dataformat-yaml-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/janino-3.1.9.jar":"System Classpath","/opt/bitnami/spark/jars/orc-core-1.9.2-shaded-protobuf.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-extensions-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/scala-xml_2.12-2.1.0.jar":"System Classpath","/opt/bitnami/spark/jars/spark-measure_2.12-0.24.jar":"System Classpath","/opt/bitnami/spark/jars/spark-common-utils_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-core-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/flatbuffers-java-1.12.0.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-events-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-tags_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/metrics-jmx-4.2.19.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-client-api-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-catalyst_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/py4j-0.10.9.7.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-resource-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.inject-2.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/logging-interceptor-3.12.12.jar":"System Classpath","/opt/bitnami/spark/jars/commons-logging-1.1.3.jar":"System Classpath","/opt/bitnami/spark/jars/hadoop-client-runtime-3.3.4.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.validation-api-2.0.2.jar":"System Classpath","/opt/bitnami/spark/jars/curator-client-2.13.0.jar":"System Classpath","/opt/bitnami/spark/jars/datasketches-memory-2.1.0.jar":"System Classpath","/opt/bitnami/spark/jars/jline-2.14.6.jar":"System Classpath","/opt/bitnami/spark/jars/RoaringBitmap-0.9.45.jar":"System Classpath","/opt/bitnami/spark/jars/zookeeper-jute-3.6.3.jar":"System Classpath","/opt/bitnami/spark/jars/hive-serde-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/netty-common-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/spark-network-shuffle_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/log4j-api-2.20.0.jar":"System Classpath","/opt/bitnami/spark/jars/spark-core_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-httpclient-okhttp-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/hadoop-shaded-guava-1.1.1.jar":"System Classpath","/opt/bitnami/spark/jars/activation-1.1.1.jar":"System Classpath","/opt/bitnami/spark/jars/json4s-jackson_2.12-3.7.0-M11.jar":"System Classpath","/opt/bitnami/spark/jars/commons-crypto-1.1.0.jar":"System Classpath","/opt/bitnami/spark/jars/HikariCP-2.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/istack-commons-runtime-3.0.8.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-storageclass-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/lz4-java-1.8.0.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.xml.bind-api-2.3.2.jar":"System Classpath","/opt/bitnami/spark/jars/metrics-core-4.2.19.jar":"System Classpath","/opt/bitnami/spark/jars/spark-graphx_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-rbac-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/jodd-core-3.5.2.jar":"System Classpath","/opt/bitnami/spark/jars/log4j-core-2.20.0.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-datatype-jsr310-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/log4j-slf4j2-impl-2.20.0.jar":"System Classpath","/opt/bitnami/spark/jars/dropwizard-metrics-hadoop-metrics2-reporter-0.1.2.jar":"System Classpath","/opt/bitnami/spark/jars/breeze_2.12-2.1.0.jar":"System Classpath","/opt/bitnami/spark/jars/spark-unsafe_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/spark-yarn_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-format-structures-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-scheduling-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/snakeyaml-engine-2.6.jar":"System Classpath","/opt/bitnami/spark/jars/hive-shims-0.23-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-aarch_64.jar":"System Classpath","/opt/bitnami/spark/jars/jcl-over-slf4j-2.0.7.jar":"System Classpath","/opt/bitnami/spark/jars/json4s-core_2.12-3.7.0-M11.jar":"System Classpath","/opt/bitnami/spark/jars/aircompressor-0.26.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-annotations-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/xz-1.9.jar":"System Classpath","/opt/bitnami/spark/jars/commons-collections4-4.4.jar":"System Classpath","/opt/bitnami/spark/jars/avro-ipc-1.11.2.jar":"System Classpath","/opt/bitnami/spark/jars/hive-metastore-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/spire-macros_2.12-0.17.0.jar":"System Classpath","/opt/bitnami/spark/jars/stax-api-1.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/libthrift-0.12.0.jar":"System Classpath","/opt/bitnami/spark/jars/okhttp-3.12.12.jar":"System Classpath","/opt/bitnami/spark/jars/netty-handler-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/stream-2.9.6.jar":"System Classpath","/opt/bitnami/spark/jars/scala-compiler-2.12.18.jar":"System Classpath","/opt/bitnami/spark/jars/scala-parser-combinators_2.12-2.3.0.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-native-epoll-4.1.96.Final-linux-aarch_64.jar":"System Classpath","/opt/bitnami/spark/jars/hive-exec-2.3.9-core.jar":"System Classpath","/opt/bitnami/spark/jars/blas-3.0.3.jar":"System Classpath","/opt/bitnami/spark/jars/ST4-4.0.4.jar":"System Classpath","/opt/bitnami/spark/jars/datanucleus-rdbms-4.1.19.jar":"System Classpath","/opt/bitnami/spark/jars/spire_2.12-0.17.0.jar":"System Classpath","/opt/bitnami/spark/jars/jpam-1.1.jar":"System Classpath","/opt/bitnami/spark/jars/annotations-17.0.0.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-container-servlet-core-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/delta-storage-3.2.0.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-common-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/scala-collection-compat_2.12-2.7.0.jar":"System Classpath","/opt/bitnami/spark/jars/json4s-ast_2.12-3.7.0-M11.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-module-scala_2.12-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-launcher_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/compress-lzf-1.1.2.jar":"System Classpath","/opt/bitnami/spark/jars/hive-shims-common-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/commons-lang3-3.12.0.jar":"System Classpath","/opt/bitnami/spark/jars/transaction-api-1.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-autoscaling-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/chill-java-0.10.0.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-flowcontrol-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/hive-beeline-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-client-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-hadoop-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/netty-codec-http-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-column-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/univocity-parsers-2.9.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-metrics-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/objenesis-3.3.jar":"System Classpath","/opt/bitnami/spark/jars/hive-llap-common-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/arrow-memory-core-12.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/orc-mapreduce-1.9.2-shaded-protobuf.jar":"System Classpath","/opt/bitnami/spark/jars/curator-recipes-2.13.0.jar":"System Classpath","/opt/bitnami/spark/jars/hive-shims-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/snakeyaml-2.0.jar":"System Classpath","/opt/bitnami/spark/jars/log4j-1.2-api-2.20.0.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-common-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/netty-resolver-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-encoding-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-native-unix-common-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/commons-codec-1.16.0.jar":"System Classpath","/opt/bitnami/spark/jars/hk2-utils-2.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-classes-epoll-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-mapper-asl-1.9.13.jar":"System Classpath","/opt/bitnami/spark/jars/spark-mesos_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/bonecp-0.8.0.RELEASE.jar":"System Classpath","/opt/bitnami/spark/jars/scala-library-2.12.18.jar":"System Classpath","/opt/bitnami/spark/jars/JTransforms-3.1.jar":"System Classpath","/opt/bitnami/spark/jars/spark-kubernetes_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/netty-codec-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/commons-text-1.10.0.jar":"System Classpath","/opt/bitnami/spark/jars/mesos-1.4.3-shaded-protobuf.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-server-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/spark-repl_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/kryo-shaded-4.0.2.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-policy-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/commons-dbcp-1.4.jar":"System Classpath","/opt/bitnami/spark/jars/leveldbjni-all-1.8.jar":"System Classpath","/opt/bitnami/spark/jars/metrics-json-4.2.19.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-batch-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-admissionregistration-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-jackson-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/libfb303-0.9.3.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.ws.rs-api-2.1.6.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-networking-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/datanucleus-core-4.1.17.jar":"System Classpath","/opt/bitnami/spark/jars/JLargeArrays-1.5.jar":"System Classpath","/opt/bitnami/spark/jars/hadoop-yarn-server-web-proxy-3.3.4.jar":"System Classpath","/opt/bitnami/spark/jars/json-1.8.jar":"System Classpath","/opt/bitnami/spark/jars/commons-collections-3.2.2.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-gatewayapi-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-kvstore_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/spark-sql_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/jul-to-slf4j-2.0.7.jar":"System Classpath","/opt/bitnami/spark/jars/hadoop-client-api-3.3.4.jar":"System Classpath","/opt/bitnami/spark/jars/jta-1.1.jar":"System Classpath","/opt/bitnami/spark/jars/rocksdbjni-8.3.2.jar":"System Classpath","/opt/bitnami/spark/jars/metrics-graphite-4.2.19.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-native-epoll-4.1.96.Final-linux-x86_64.jar":"System Classpath","/opt/bitnami/spark/jars/hive-cli-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/commons-io-2.13.0.jar":"System Classpath","/opt/bitnami/spark/jars/algebra_2.12-2.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/breeze-macros_2.12-2.1.0.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.servlet-api-4.0.3.jar":"System Classpath","/opt/bitnami/spark/jars/commons-pool-1.5.4.jar":"System Classpath","/opt/bitnami/spark/jars/commons-compress-1.23.0.jar":"System Classpath","/opt/bitnami/spark/jars/netty-all-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/joda-time-2.12.5.jar":"System Classpath","/opt/bitnami/spark/jars/arpack-3.0.3.jar":"System Classpath","/opt/bitnami/spark/jars/httpcore-4.4.16.jar":"System Classpath","/opt/bitnami/spark/jars/deequ-2.0.7-spark-3.5.jar":"System Classpath","/opt/bitnami/spark/jars/hive-jdbc-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/netty-codec-http2-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/netty-codec-socks-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/orc-shims-1.9.2.jar":"System Classpath","/opt/bitnami/spark/jars/opencsv-2.3.jar":"System Classpath","/opt/bitnami/spark/jars/shims-0.9.45.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-apiextensions-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/hadoop-aws-3.3.4.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-node-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/zjsonpatch-0.3.0.jar":"System Classpath","/opt/bitnami/spark/jars/avro-1.11.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-mllib-local_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/arpack_combined_all-0.1.jar":"System Classpath","/opt/bitnami/spark/jars/hive-common-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/guava-14.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-hk2-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/hive-storage-api-2.8.1.jar":"System Classpath","/opt/bitnami/spark/jars/spire-util_2.12-0.17.0.jar":"System Classpath","/opt/bitnami/spark/jars/lapack-3.0.3.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-certificates-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/pickle-1.3.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-client-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/commons-cli-1.5.0.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-databind-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/curator-framework-2.13.0.jar":"System Classpath","/opt/bitnami/spark/jars/minlog-1.3.0.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-core-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/hk2-locator-2.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-apps-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-hive-thriftserver_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/threeten-extra-1.7.1.jar":"System Classpath","/opt/bitnami/spark/jars/hive-service-rpc-3.1.3.jar":"System Classpath","/opt/bitnami/spark/jars/gson-2.2.4.jar":"System Classpath","/opt/bitnami/spark/jars/commons-math3-3.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/derby-10.14.2.0.jar":"System Classpath","/opt/bitnami/spark/jars/spire-platform_2.12-0.17.0.jar":"System Classpath","/opt/bitnami/spark/jars/super-csv-2.2.0.jar":"System Classpath","/opt/bitnami/spark/jars/antlr4-runtime-4.9.3.jar":"System Classpath","/opt/bitnami/spark/jars/cats-kernel_2.12-2.1.1.jar":"System Classpath","/opt/bitnami/spark/jars/zstd-jni-1.5.5-4.jar":"System Classpath"}}
{"Event":"SparkListenerApplicationStart","App Name":"yelp-dataset-deequ","App ID":"app-20240704221148-0011","Timestamp":1720131107866,"User":"spark"}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720131110089,"Executor ID":"0","Executor Info":{"Host":"172.31.0.3","Total Cores":2,"Log Urls":{"stdout":"http://172.31.0.3:8081/logPage/?appId=app-20240704221148-0011&executorId=0&logType=stdout","stderr":"http://172.31.0.3:8081/logPage/?appId=app-20240704221148-0011&executorId=0&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720131110089}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"0","Host":"172.31.0.3","Port":44063},"Maximum Memory":1743991603,"Timestamp":1720131110127,"Maximum Onheap Memory":1743991603,"Maximum Offheap Memory":0}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720131110127,"Executor ID":"2","Executor Info":{"Host":"172.31.0.5","Total Cores":2,"Log Urls":{"stdout":"http://172.31.0.5:8081/logPage/?appId=app-20240704221148-0011&executorId=2&logType=stdout","stderr":"http://172.31.0.5:8081/logPage/?appId=app-20240704221148-0011&executorId=2&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720131110127}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720131110154,"Executor ID":"1","Executor Info":{"Host":"172.31.0.4","Total Cores":2,"Log Urls":{"stdout":"http://172.31.0.4:8081/logPage/?appId=app-20240704221148-0011&executorId=1&logType=stdout","stderr":"http://172.31.0.4:8081/logPage/?appId=app-20240704221148-0011&executorId=1&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720131110154}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"2","Host":"172.31.0.5","Port":32793},"Maximum Memory":1743991603,"Timestamp":1720131110172,"Maximum Onheap Memory":1743991603,"Maximum Offheap Memory":0}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"1","Host":"172.31.0.4","Port":34049},"Maximum Memory":1743991603,"Timestamp":1720131110200,"Maximum Onheap Memory":1743991603,"Maximum Offheap Memory":0}
{"Event":"SparkListenerJobStart","Job ID":0,"Submission Time":1720131111034,"Stage Infos":[{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"0\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[0],"Properties":{"spark.rdd.scope":"{\"id\":\"2\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"0\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720131111041,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.rdd.scope":"{\"id\":\"2\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":0,"Stage Attempt ID":0,"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131111087,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":0,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131111087,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131112552,"Failed":false,"Killed":false,"Accumulables":[{"ID":1,"Name":"internal.metrics.executorDeserializeTime","Update":179,"Value":179,"Internal":true,"Count Failed Values":true},{"ID":2,"Name":"internal.metrics.executorDeserializeCpuTime","Update":142141493,"Value":142141493,"Internal":true,"Count Failed Values":true},{"ID":3,"Name":"internal.metrics.executorRunTime","Update":1249,"Value":1249,"Internal":true,"Count Failed Values":true},{"ID":4,"Name":"internal.metrics.executorCpuTime","Update":61382586,"Value":61382586,"Internal":true,"Count Failed Values":true},{"ID":5,"Name":"internal.metrics.resultSize","Update":2080,"Value":2080,"Internal":true,"Count Failed Values":true},{"ID":6,"Name":"internal.metrics.jvmGCTime","Update":8,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":7,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":2,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":179,"Executor Deserialize CPU Time":142141493,"Executor Run Time":1249,"Executor CPU Time":61382586,"Peak Execution Memory":0,"Result Size":2080,"JVM GC Time":8,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"0\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720131111041,"Completion Time":1720131112555,"Accumulables":[{"ID":1,"Name":"internal.metrics.executorDeserializeTime","Value":179,"Internal":true,"Count Failed Values":true},{"ID":2,"Name":"internal.metrics.executorDeserializeCpuTime","Value":142141493,"Internal":true,"Count Failed Values":true},{"ID":3,"Name":"internal.metrics.executorRunTime","Value":1249,"Internal":true,"Count Failed Values":true},{"ID":4,"Name":"internal.metrics.executorCpuTime","Value":61382586,"Internal":true,"Count Failed Values":true},{"ID":5,"Name":"internal.metrics.resultSize","Value":2080,"Internal":true,"Count Failed Values":true},{"ID":6,"Name":"internal.metrics.jvmGCTime","Value":8,"Internal":true,"Count Failed Values":true},{"ID":7,"Name":"internal.metrics.resultSerializationTime","Value":2,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":0,"Completion Time":1720131112556,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"SparkListenerJobStart","Job ID":1,"Submission Time":1720131121423,"Stage Infos":[{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"6\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"5\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[1],"Properties":{"spark.rdd.scope":"{\"id\":\"7\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"6\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"5\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720131121424,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.rdd.scope":"{\"id\":\"7\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":1,"Stage Attempt ID":0,"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131121434,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":1,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131121434,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131122885,"Failed":false,"Killed":false,"Accumulables":[{"ID":36,"Name":"internal.metrics.executorDeserializeTime","Update":162,"Value":162,"Internal":true,"Count Failed Values":true},{"ID":37,"Name":"internal.metrics.executorDeserializeCpuTime","Update":138516752,"Value":138516752,"Internal":true,"Count Failed Values":true},{"ID":38,"Name":"internal.metrics.executorRunTime","Update":1261,"Value":1261,"Internal":true,"Count Failed Values":true},{"ID":39,"Name":"internal.metrics.executorCpuTime","Update":64521998,"Value":64521998,"Internal":true,"Count Failed Values":true},{"ID":40,"Name":"internal.metrics.resultSize","Update":2087,"Value":2087,"Internal":true,"Count Failed Values":true},{"ID":41,"Name":"internal.metrics.jvmGCTime","Update":16,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":42,"Name":"internal.metrics.resultSerializationTime","Update":5,"Value":5,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":94162656,"JVMOffHeapMemory":60790952,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":147035,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":147035,"OffHeapUnifiedMemory":0,"DirectPoolMemory":12592975,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":5,"MinorGCTime":24,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":24},"Task Metrics":{"Executor Deserialize Time":162,"Executor Deserialize CPU Time":138516752,"Executor Run Time":1261,"Executor CPU Time":64521998,"Peak Execution Memory":0,"Result Size":2087,"JVM GC Time":16,"Result Serialization Time":5,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"6\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"5\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720131121424,"Completion Time":1720131122886,"Accumulables":[{"ID":36,"Name":"internal.metrics.executorDeserializeTime","Value":162,"Internal":true,"Count Failed Values":true},{"ID":37,"Name":"internal.metrics.executorDeserializeCpuTime","Value":138516752,"Internal":true,"Count Failed Values":true},{"ID":38,"Name":"internal.metrics.executorRunTime","Value":1261,"Internal":true,"Count Failed Values":true},{"ID":39,"Name":"internal.metrics.executorCpuTime","Value":64521998,"Internal":true,"Count Failed Values":true},{"ID":40,"Name":"internal.metrics.resultSize","Value":2087,"Internal":true,"Count Failed Values":true},{"ID":41,"Name":"internal.metrics.jvmGCTime","Value":16,"Internal":true,"Count Failed Values":true},{"ID":42,"Name":"internal.metrics.resultSerializationTime","Value":5,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":1,"Completion Time":1720131122886,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":0,"rootExecutionId":0,"description":"collect at AnalysisRunner.scala:327","details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (5)\n+- HashAggregate (4)\n   +- Exchange (3)\n      +- HashAggregate (2)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [3]: [business_id#0, review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,review_count:bigint,stars:double>\n\n(2) HashAggregate\nInput [3]: [business_id#0, review_count#6L, stars#7]\nKeys: []\nFunctions [4]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum#71L, count#72L, sum#73L, sum#74L]\nResults [4]: [sum#75L, count#76L, sum#77L, sum#78L]\n\n(3) Exchange\nInput [4]: [sum#75L, count#76L, sum#77L, sum#78L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=11]\n\n(4) HashAggregate\nInput [4]: [sum#75L, count#76L, sum#77L, sum#78L]\nKeys: []\nFunctions [4]: [sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum(cast(isnotnull(business_id#0) as int))#32L, count(1)#33L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#35L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#38L]\nResults [6]: [sum(cast(isnotnull(business_id#0) as int))#32L AS sum(CAST((business_id IS NOT NULL) AS INT))#58L, count(1)#33L AS count(1)#59L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#35L AS sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#60L, count(1)#33L AS count(1)#61L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#38L AS sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#62L, count(1)#33L AS count(1)#63L]\n\n(5) AdaptiveSparkPlan\nOutput [6]: [sum(CAST((business_id IS NOT NULL) AS INT))#58L, count(1)#59L, sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#60L, count(1)#61L, sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#62L, count(1)#63L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=11]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))])","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,review_count:bigint,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":107,"metricType":"sum"},{"name":"scan time","accumulatorId":106,"metricType":"timing"},{"name":"metadata time","accumulatorId":108,"metricType":"timing"},{"name":"size of files read","accumulatorId":109,"metricType":"size"},{"name":"number of output rows","accumulatorId":105,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":101,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":102,"metricType":"timing"},{"name":"peak memory","accumulatorId":100,"metricType":"size"},{"name":"number of output rows","accumulatorId":99,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":104,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":103,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":97,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":91,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":98,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":92,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":89,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":86,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":95,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":88,"metricType":"sum"},{"name":"records read","accumulatorId":85,"metricType":"sum"},{"name":"local bytes read","accumulatorId":83,"metricType":"size"},{"name":"fetch wait time","accumulatorId":84,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":81,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":87,"metricType":"sum"},{"name":"local blocks read","accumulatorId":80,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":90,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":79,"metricType":"sum"},{"name":"data size","accumulatorId":77,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":93,"metricType":"size"},{"name":"number of partitions","accumulatorId":78,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":94,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":82,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":96,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":73,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":74,"metricType":"timing"},{"name":"peak memory","accumulatorId":72,"metricType":"size"},{"name":"number of output rows","accumulatorId":71,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":76,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":75,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1720131124192,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":0,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Current Plan ==\n   HashAggregate (6)\n   +- ShuffleQueryStage (5)\n      +- Exchange (4)\n         +- * HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [3]: [business_id#0, review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,review_count:bigint,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [3]: [business_id#0, review_count#6L, stars#7]\n\n(3) HashAggregate [codegen id : 1]\nInput [3]: [business_id#0, review_count#6L, stars#7]\nKeys: []\nFunctions [4]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum#71L, count#72L, sum#73L, sum#74L]\nResults [4]: [sum#75L, count#76L, sum#77L, sum#78L]\n\n(4) Exchange\nInput [4]: [sum#75L, count#76L, sum#77L, sum#78L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=24]\n\n(5) ShuffleQueryStage\nOutput [4]: [sum#75L, count#76L, sum#77L, sum#78L]\nArguments: 0\n\n(6) HashAggregate\nInput [4]: [sum#75L, count#76L, sum#77L, sum#78L]\nKeys: []\nFunctions [4]: [sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum(cast(isnotnull(business_id#0) as int))#32L, count(1)#33L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#35L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#38L]\nResults [6]: [sum(cast(isnotnull(business_id#0) as int))#32L AS sum(CAST((business_id IS NOT NULL) AS INT))#58L, count(1)#33L AS count(1)#59L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#35L AS sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#60L, count(1)#33L AS count(1)#61L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#38L AS sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#62L, count(1)#33L AS count(1)#63L]\n\n(7) HashAggregate\nInput [3]: [business_id#0, review_count#6L, stars#7]\nKeys: []\nFunctions [4]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum#71L, count#72L, sum#73L, sum#74L]\nResults [4]: [sum#75L, count#76L, sum#77L, sum#78L]\n\n(8) Exchange\nInput [4]: [sum#75L, count#76L, sum#77L, sum#78L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=11]\n\n(9) HashAggregate\nInput [4]: [sum#75L, count#76L, sum#77L, sum#78L]\nKeys: []\nFunctions [4]: [sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum(cast(isnotnull(business_id#0) as int))#32L, count(1)#33L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#35L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#38L]\nResults [6]: [sum(cast(isnotnull(business_id#0) as int))#32L AS sum(CAST((business_id IS NOT NULL) AS INT))#58L, count(1)#33L AS count(1)#59L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#35L AS sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#60L, count(1)#33L AS count(1)#61L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#38L AS sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#62L, count(1)#33L AS count(1)#63L]\n\n(10) AdaptiveSparkPlan\nOutput [6]: [sum(CAST((business_id IS NOT NULL) AS INT))#58L, count(1)#59L, sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#60L, count(1)#61L, sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#62L, count(1)#63L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=24]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))])","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,review_count:bigint,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":107,"metricType":"sum"},{"name":"scan time","accumulatorId":106,"metricType":"timing"},{"name":"metadata time","accumulatorId":108,"metricType":"timing"},{"name":"size of files read","accumulatorId":109,"metricType":"size"},{"name":"number of output rows","accumulatorId":105,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":145,"metricType":"sum"},{"name":"number of input batches","accumulatorId":146,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":141,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":142,"metricType":"timing"},{"name":"peak memory","accumulatorId":140,"metricType":"size"},{"name":"number of output rows","accumulatorId":139,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":144,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":143,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":138,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":136,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":130,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":137,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":131,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":128,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":125,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":134,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":127,"metricType":"sum"},{"name":"records read","accumulatorId":124,"metricType":"sum"},{"name":"local bytes read","accumulatorId":122,"metricType":"size"},{"name":"fetch wait time","accumulatorId":123,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":120,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":126,"metricType":"sum"},{"name":"local blocks read","accumulatorId":119,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":129,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":118,"metricType":"sum"},{"name":"data size","accumulatorId":116,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":132,"metricType":"size"},{"name":"number of partitions","accumulatorId":117,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":133,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":121,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":135,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":112,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":113,"metricType":"timing"},{"name":"peak memory","accumulatorId":111,"metricType":"size"},{"name":"number of output rows","accumulatorId":110,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":115,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":114,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":0,"accumUpdates":[[107,1],[108,2],[109,37975350]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":0,"accumUpdates":[[117,1]]}
{"Event":"SparkListenerJobStart","Job ID":2,"Submission Time":1720131124471,"Stage Infos":[{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"15\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"15\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[2],"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"10\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"0","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"0","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"15\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"15\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720131124473,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"10\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"0","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"0","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":2,"Stage Attempt ID":0,"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131124491,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":2,"Stage Attempt ID":0,"Task Info":{"Task ID":3,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131124493,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":2,"Stage Attempt ID":0,"Task Info":{"Task ID":4,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131124493,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":2,"Stage Attempt ID":0,"Task Info":{"Task ID":5,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131124493,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":2,"Stage Attempt ID":0,"Task Info":{"Task ID":6,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131124493,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":2,"Stage Attempt ID":0,"Task Info":{"Task ID":7,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131124494,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131124491,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131125923,"Failed":false,"Killed":false,"Accumulables":[{"ID":106,"Name":"scan time","Update":"1036","Value":"1036","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":116,"Name":"data size","Update":"40","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":135,"Name":"shuffle bytes written","Update":"58","Value":"58","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":136,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":137,"Name":"shuffle write time","Update":"7947956","Value":"7947956","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":138,"Name":"duration","Update":"1049","Value":"1049","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":139,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":142,"Name":"time in aggregation build","Update":"1036","Value":"1036","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":147,"Name":"internal.metrics.executorDeserializeTime","Update":129,"Value":129,"Internal":true,"Count Failed Values":true},{"ID":148,"Name":"internal.metrics.executorDeserializeCpuTime","Update":62266794,"Value":62266794,"Internal":true,"Count Failed Values":true},{"ID":149,"Name":"internal.metrics.executorRunTime","Update":1280,"Value":1280,"Internal":true,"Count Failed Values":true},{"ID":150,"Name":"internal.metrics.executorCpuTime","Update":314945630,"Value":314945630,"Internal":true,"Count Failed Values":true},{"ID":151,"Name":"internal.metrics.resultSize","Update":2129,"Value":2129,"Internal":true,"Count Failed Values":true},{"ID":152,"Name":"internal.metrics.jvmGCTime","Update":9,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":175,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":58,"Internal":true,"Count Failed Values":true},{"ID":176,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":177,"Name":"internal.metrics.shuffle.write.writeTime","Update":7947956,"Value":7947956,"Internal":true,"Count Failed Values":true},{"ID":178,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":1799,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":129,"Executor Deserialize CPU Time":62266794,"Executor Run Time":1280,"Executor CPU Time":314945630,"Peak Execution Memory":0,"Result Size":2129,"JVM GC Time":9,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":7947956,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":6,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131124493,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131125933,"Failed":false,"Killed":false,"Accumulables":[{"ID":106,"Name":"scan time","Update":"1070","Value":"2106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":116,"Name":"data size","Update":"40","Value":"80","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":135,"Name":"shuffle bytes written","Update":"58","Value":"116","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":136,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":137,"Name":"shuffle write time","Update":"8300917","Value":"16248873","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":138,"Name":"duration","Update":"1081","Value":"2130","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":139,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":142,"Name":"time in aggregation build","Update":"1070","Value":"2106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":147,"Name":"internal.metrics.executorDeserializeTime","Update":115,"Value":244,"Internal":true,"Count Failed Values":true},{"ID":148,"Name":"internal.metrics.executorDeserializeCpuTime","Update":57049037,"Value":119315831,"Internal":true,"Count Failed Values":true},{"ID":149,"Name":"internal.metrics.executorRunTime","Update":1310,"Value":2590,"Internal":true,"Count Failed Values":true},{"ID":150,"Name":"internal.metrics.executorCpuTime","Update":142756958,"Value":457702588,"Internal":true,"Count Failed Values":true},{"ID":151,"Name":"internal.metrics.resultSize","Update":2129,"Value":4258,"Internal":true,"Count Failed Values":true},{"ID":153,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":175,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":116,"Internal":true,"Count Failed Values":true},{"ID":176,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":177,"Name":"internal.metrics.shuffle.write.writeTime","Update":8300917,"Value":16248873,"Internal":true,"Count Failed Values":true},{"ID":178,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":3598,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":115,"Executor Deserialize CPU Time":57049037,"Executor Run Time":1310,"Executor CPU Time":142756958,"Peak Execution Memory":0,"Result Size":2129,"JVM GC Time":0,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":8300917,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":3,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131124493,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131125933,"Failed":false,"Killed":false,"Accumulables":[{"ID":106,"Name":"scan time","Update":"1070","Value":"3176","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":116,"Name":"data size","Update":"40","Value":"120","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":135,"Name":"shuffle bytes written","Update":"58","Value":"174","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":136,"Name":"shuffle records written","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":137,"Name":"shuffle write time","Update":"8353041","Value":"24601914","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":138,"Name":"duration","Update":"1081","Value":"3211","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":139,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":142,"Name":"time in aggregation build","Update":"1070","Value":"3176","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":147,"Name":"internal.metrics.executorDeserializeTime","Update":114,"Value":358,"Internal":true,"Count Failed Values":true},{"ID":148,"Name":"internal.metrics.executorDeserializeCpuTime","Update":72660165,"Value":191975996,"Internal":true,"Count Failed Values":true},{"ID":149,"Name":"internal.metrics.executorRunTime","Update":1311,"Value":3901,"Internal":true,"Count Failed Values":true},{"ID":150,"Name":"internal.metrics.executorCpuTime","Update":241908488,"Value":699611076,"Internal":true,"Count Failed Values":true},{"ID":151,"Name":"internal.metrics.resultSize","Update":2129,"Value":6387,"Internal":true,"Count Failed Values":true},{"ID":153,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":175,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":174,"Internal":true,"Count Failed Values":true},{"ID":176,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":177,"Name":"internal.metrics.shuffle.write.writeTime","Update":8353041,"Value":24601914,"Internal":true,"Count Failed Values":true},{"ID":178,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":5397,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":114,"Executor Deserialize CPU Time":72660165,"Executor Run Time":1311,"Executor CPU Time":241908488,"Peak Execution Memory":0,"Result Size":2129,"JVM GC Time":0,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":8353041,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":5,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131124493,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131125968,"Failed":false,"Killed":false,"Accumulables":[{"ID":106,"Name":"scan time","Update":"1109","Value":"4285","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":116,"Name":"data size","Update":"40","Value":"160","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":135,"Name":"shuffle bytes written","Update":"58","Value":"232","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":136,"Name":"shuffle records written","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":137,"Name":"shuffle write time","Update":"630709","Value":"25232623","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":138,"Name":"duration","Update":"1117","Value":"4328","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":139,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":142,"Name":"time in aggregation build","Update":"1109","Value":"4285","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":147,"Name":"internal.metrics.executorDeserializeTime","Update":128,"Value":486,"Internal":true,"Count Failed Values":true},{"ID":148,"Name":"internal.metrics.executorDeserializeCpuTime","Update":76331628,"Value":268307624,"Internal":true,"Count Failed Values":true},{"ID":149,"Name":"internal.metrics.executorRunTime","Update":1336,"Value":5237,"Internal":true,"Count Failed Values":true},{"ID":150,"Name":"internal.metrics.executorCpuTime","Update":68987288,"Value":768598364,"Internal":true,"Count Failed Values":true},{"ID":151,"Name":"internal.metrics.resultSize","Update":2129,"Value":8516,"Internal":true,"Count Failed Values":true},{"ID":152,"Name":"internal.metrics.jvmGCTime","Update":9,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":175,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":232,"Internal":true,"Count Failed Values":true},{"ID":176,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":177,"Name":"internal.metrics.shuffle.write.writeTime","Update":630709,"Value":25232623,"Internal":true,"Count Failed Values":true},{"ID":178,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":7196,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":128,"Executor Deserialize CPU Time":76331628,"Executor Run Time":1336,"Executor CPU Time":68987288,"Peak Execution Memory":0,"Result Size":2129,"JVM GC Time":9,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":630709,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":7,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131124494,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131126746,"Failed":false,"Killed":false,"Accumulables":[{"ID":106,"Name":"scan time","Update":"1710","Value":"5995","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":116,"Name":"data size","Update":"40","Value":"200","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":135,"Name":"shuffle bytes written","Update":"58","Value":"290","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":136,"Name":"shuffle records written","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":137,"Name":"shuffle write time","Update":"5281164","Value":"30513787","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":138,"Name":"duration","Update":"1718","Value":"6046","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":139,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":142,"Name":"time in aggregation build","Update":"1710","Value":"5995","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":147,"Name":"internal.metrics.executorDeserializeTime","Update":283,"Value":769,"Internal":true,"Count Failed Values":true},{"ID":148,"Name":"internal.metrics.executorDeserializeCpuTime","Update":183195422,"Value":451503046,"Internal":true,"Count Failed Values":true},{"ID":149,"Name":"internal.metrics.executorRunTime","Update":1940,"Value":7177,"Internal":true,"Count Failed Values":true},{"ID":150,"Name":"internal.metrics.executorCpuTime","Update":351686867,"Value":1120285231,"Internal":true,"Count Failed Values":true},{"ID":151,"Name":"internal.metrics.resultSize","Update":2172,"Value":10688,"Internal":true,"Count Failed Values":true},{"ID":152,"Name":"internal.metrics.jvmGCTime","Update":17,"Value":35,"Internal":true,"Count Failed Values":true},{"ID":153,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":175,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":290,"Internal":true,"Count Failed Values":true},{"ID":176,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":177,"Name":"internal.metrics.shuffle.write.writeTime","Update":5281164,"Value":30513787,"Internal":true,"Count Failed Values":true},{"ID":178,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":8995,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":283,"Executor Deserialize CPU Time":183195422,"Executor Run Time":1940,"Executor CPU Time":351686867,"Peak Execution Memory":0,"Result Size":2172,"JVM GC Time":17,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":5281164,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":4,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131124493,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131131066,"Failed":false,"Killed":false,"Accumulables":[{"ID":105,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":106,"Name":"scan time","Update":"5951","Value":"11946","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":116,"Name":"data size","Update":"40","Value":"240","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":135,"Name":"shuffle bytes written","Update":"66","Value":"356","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":136,"Name":"shuffle records written","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":137,"Name":"shuffle write time","Update":"728455","Value":"31242242","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":138,"Name":"duration","Update":"6054","Value":"12100","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":139,"Name":"number of output rows","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":142,"Name":"time in aggregation build","Update":"6048","Value":"12043","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":145,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":146,"Name":"number of input batches","Update":"144","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":147,"Name":"internal.metrics.executorDeserializeTime","Update":285,"Value":1054,"Internal":true,"Count Failed Values":true},{"ID":148,"Name":"internal.metrics.executorDeserializeCpuTime","Update":100353667,"Value":551856713,"Internal":true,"Count Failed Values":true},{"ID":149,"Name":"internal.metrics.executorRunTime","Update":6266,"Value":13443,"Internal":true,"Count Failed Values":true},{"ID":150,"Name":"internal.metrics.executorCpuTime","Update":1041637829,"Value":2161923060,"Internal":true,"Count Failed Values":true},{"ID":151,"Name":"internal.metrics.resultSize","Update":2172,"Value":12860,"Internal":true,"Count Failed Values":true},{"ID":152,"Name":"internal.metrics.jvmGCTime","Update":26,"Value":61,"Internal":true,"Count Failed Values":true},{"ID":175,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":66,"Value":356,"Internal":true,"Count Failed Values":true},{"ID":176,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":177,"Name":"internal.metrics.shuffle.write.writeTime","Update":728455,"Value":31242242,"Internal":true,"Count Failed Values":true},{"ID":178,"Name":"internal.metrics.input.bytesRead","Update":15031046,"Value":15040041,"Internal":true,"Count Failed Values":true},{"ID":179,"Name":"internal.metrics.input.recordsRead","Update":586579,"Value":586579,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":126964400,"JVMOffHeapMemory":93065992,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":467915,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":467915,"OffHeapUnifiedMemory":0,"DirectPoolMemory":16928779,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":7,"MinorGCTime":37,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":37},"Task Metrics":{"Executor Deserialize Time":285,"Executor Deserialize CPU Time":100353667,"Executor Run Time":6266,"Executor CPU Time":1041637829,"Peak Execution Memory":0,"Result Size":2172,"JVM GC Time":26,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":66,"Shuffle Write Time":728455,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":15031046,"Records Read":586579},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"15\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"15\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720131124473,"Completion Time":1720131131067,"Accumulables":[{"ID":105,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":106,"Name":"scan time","Value":"11946","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":116,"Name":"data size","Value":"240","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":135,"Name":"shuffle bytes written","Value":"356","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":136,"Name":"shuffle records written","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":137,"Name":"shuffle write time","Value":"31242242","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":138,"Name":"duration","Value":"12100","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":139,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":142,"Name":"time in aggregation build","Value":"12043","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":145,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":146,"Name":"number of input batches","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":147,"Name":"internal.metrics.executorDeserializeTime","Value":1054,"Internal":true,"Count Failed Values":true},{"ID":148,"Name":"internal.metrics.executorDeserializeCpuTime","Value":551856713,"Internal":true,"Count Failed Values":true},{"ID":149,"Name":"internal.metrics.executorRunTime","Value":13443,"Internal":true,"Count Failed Values":true},{"ID":150,"Name":"internal.metrics.executorCpuTime","Value":2161923060,"Internal":true,"Count Failed Values":true},{"ID":151,"Name":"internal.metrics.resultSize","Value":12860,"Internal":true,"Count Failed Values":true},{"ID":152,"Name":"internal.metrics.jvmGCTime","Value":61,"Internal":true,"Count Failed Values":true},{"ID":153,"Name":"internal.metrics.resultSerializationTime","Value":5,"Internal":true,"Count Failed Values":true},{"ID":175,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":356,"Internal":true,"Count Failed Values":true},{"ID":176,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":6,"Internal":true,"Count Failed Values":true},{"ID":177,"Name":"internal.metrics.shuffle.write.writeTime","Value":31242242,"Internal":true,"Count Failed Values":true},{"ID":178,"Name":"internal.metrics.input.bytesRead","Value":15040041,"Internal":true,"Count Failed Values":true},{"ID":179,"Name":"internal.metrics.input.recordsRead","Value":586579,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":2,"Completion Time":1720131131071,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":0,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Final Plan ==\n   * HashAggregate (6)\n   +- ShuffleQueryStage (5), Statistics(sizeInBytes=240.0 B, rowCount=6)\n      +- Exchange (4)\n         +- * HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [3]: [business_id#0, review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,review_count:bigint,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [3]: [business_id#0, review_count#6L, stars#7]\n\n(3) HashAggregate [codegen id : 1]\nInput [3]: [business_id#0, review_count#6L, stars#7]\nKeys: []\nFunctions [4]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum#71L, count#72L, sum#73L, sum#74L]\nResults [4]: [sum#75L, count#76L, sum#77L, sum#78L]\n\n(4) Exchange\nInput [4]: [sum#75L, count#76L, sum#77L, sum#78L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=24]\n\n(5) ShuffleQueryStage\nOutput [4]: [sum#75L, count#76L, sum#77L, sum#78L]\nArguments: 0\n\n(6) HashAggregate [codegen id : 2]\nInput [4]: [sum#75L, count#76L, sum#77L, sum#78L]\nKeys: []\nFunctions [4]: [sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum(cast(isnotnull(business_id#0) as int))#32L, count(1)#33L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#35L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#38L]\nResults [6]: [sum(cast(isnotnull(business_id#0) as int))#32L AS sum(CAST((business_id IS NOT NULL) AS INT))#58L, count(1)#33L AS count(1)#59L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#35L AS sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#60L, count(1)#33L AS count(1)#61L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#38L AS sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#62L, count(1)#33L AS count(1)#63L]\n\n(7) HashAggregate\nInput [3]: [business_id#0, review_count#6L, stars#7]\nKeys: []\nFunctions [4]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum#71L, count#72L, sum#73L, sum#74L]\nResults [4]: [sum#75L, count#76L, sum#77L, sum#78L]\n\n(8) Exchange\nInput [4]: [sum#75L, count#76L, sum#77L, sum#78L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=11]\n\n(9) HashAggregate\nInput [4]: [sum#75L, count#76L, sum#77L, sum#78L]\nKeys: []\nFunctions [4]: [sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum(cast(isnotnull(business_id#0) as int))#32L, count(1)#33L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#35L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#38L]\nResults [6]: [sum(cast(isnotnull(business_id#0) as int))#32L AS sum(CAST((business_id IS NOT NULL) AS INT))#58L, count(1)#33L AS count(1)#59L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#35L AS sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#60L, count(1)#33L AS count(1)#61L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#38L AS sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#62L, count(1)#33L AS count(1)#63L]\n\n(10) AdaptiveSparkPlan\nOutput [6]: [sum(CAST((business_id IS NOT NULL) AS INT))#58L, count(1)#59L, sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#60L, count(1)#61L, sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#62L, count(1)#63L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=24]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))])","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,review_count:bigint,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":107,"metricType":"sum"},{"name":"scan time","accumulatorId":106,"metricType":"timing"},{"name":"metadata time","accumulatorId":108,"metricType":"timing"},{"name":"size of files read","accumulatorId":109,"metricType":"size"},{"name":"number of output rows","accumulatorId":105,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":145,"metricType":"sum"},{"name":"number of input batches","accumulatorId":146,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":141,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":142,"metricType":"timing"},{"name":"peak memory","accumulatorId":140,"metricType":"size"},{"name":"number of output rows","accumulatorId":139,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":144,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":143,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":138,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":136,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":130,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":137,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":131,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":128,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":125,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":134,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":127,"metricType":"sum"},{"name":"records read","accumulatorId":124,"metricType":"sum"},{"name":"local bytes read","accumulatorId":122,"metricType":"size"},{"name":"fetch wait time","accumulatorId":123,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":120,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":126,"metricType":"sum"},{"name":"local blocks read","accumulatorId":119,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":129,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":118,"metricType":"sum"},{"name":"data size","accumulatorId":116,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":132,"metricType":"size"},{"name":"number of partitions","accumulatorId":117,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":133,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":121,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":135,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":185,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":186,"metricType":"timing"},{"name":"peak memory","accumulatorId":184,"metricType":"size"},{"name":"number of output rows","accumulatorId":183,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":188,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":187,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":182,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":3,"Submission Time":1720131131117,"Stage Infos":[{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"15\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"15\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":10,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"21\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"16\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"20\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[3],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[3,4],"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"22\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"0","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"0","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":10,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"21\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"16\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"20\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[3],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720131131121,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"22\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"0","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"0","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":8,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131131136,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":8,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131131136,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131131252,"Failed":false,"Killed":false,"Accumulables":[{"ID":118,"Name":"remote blocks read","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":119,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":120,"Name":"remote bytes read","Update":"232","Value":"232","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":122,"Name":"local bytes read","Update":"124","Value":"124","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":123,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":124,"Name":"records read","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":133,"Name":"remote reqs duration","Update":"13","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":182,"Name":"duration","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":183,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":186,"Name":"time in aggregation build","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":189,"Name":"internal.metrics.executorDeserializeTime","Update":36,"Value":36,"Internal":true,"Count Failed Values":true},{"ID":190,"Name":"internal.metrics.executorDeserializeCpuTime","Update":30119167,"Value":30119167,"Internal":true,"Count Failed Values":true},{"ID":191,"Name":"internal.metrics.executorRunTime","Update":71,"Value":71,"Internal":true,"Count Failed Values":true},{"ID":192,"Name":"internal.metrics.executorCpuTime","Update":52910208,"Value":52910208,"Internal":true,"Count Failed Values":true},{"ID":193,"Name":"internal.metrics.resultSize","Update":3998,"Value":3998,"Internal":true,"Count Failed Values":true},{"ID":200,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":201,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":202,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":232,"Value":232,"Internal":true,"Count Failed Values":true},{"ID":203,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":204,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":124,"Value":124,"Internal":true,"Count Failed Values":true},{"ID":205,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":206,"Name":"internal.metrics.shuffle.read.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":207,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":208,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":209,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":210,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":211,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":212,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":213,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":214,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":215,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":13,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":216,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":36,"Executor Deserialize CPU Time":30119167,"Executor Run Time":71,"Executor CPU Time":52910208,"Peak Execution Memory":0,"Result Size":3998,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":4,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":232,"Remote Bytes Read To Disk":0,"Local Bytes Read":124,"Total Records Read":6,"Remote Requests Duration":13,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":10,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"21\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"16\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"20\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[3],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720131131121,"Completion Time":1720131131253,"Accumulables":[{"ID":118,"Name":"remote blocks read","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":119,"Name":"local blocks read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":120,"Name":"remote bytes read","Value":"232","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":122,"Name":"local bytes read","Value":"124","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":123,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":124,"Name":"records read","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":133,"Name":"remote reqs duration","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":182,"Name":"duration","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":183,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":186,"Name":"time in aggregation build","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":189,"Name":"internal.metrics.executorDeserializeTime","Value":36,"Internal":true,"Count Failed Values":true},{"ID":190,"Name":"internal.metrics.executorDeserializeCpuTime","Value":30119167,"Internal":true,"Count Failed Values":true},{"ID":191,"Name":"internal.metrics.executorRunTime","Value":71,"Internal":true,"Count Failed Values":true},{"ID":192,"Name":"internal.metrics.executorCpuTime","Value":52910208,"Internal":true,"Count Failed Values":true},{"ID":193,"Name":"internal.metrics.resultSize","Value":3998,"Internal":true,"Count Failed Values":true},{"ID":200,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":4,"Internal":true,"Count Failed Values":true},{"ID":201,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":2,"Internal":true,"Count Failed Values":true},{"ID":202,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":232,"Internal":true,"Count Failed Values":true},{"ID":203,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":204,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":124,"Internal":true,"Count Failed Values":true},{"ID":205,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":206,"Name":"internal.metrics.shuffle.read.recordsRead","Value":6,"Internal":true,"Count Failed Values":true},{"ID":207,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":208,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":209,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":210,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":211,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":212,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":213,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":214,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":215,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":13,"Internal":true,"Count Failed Values":true},{"ID":216,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":3,"Completion Time":1720131131253,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":0,"time":1720131131278,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":1,"rootExecutionId":1,"description":"count at GroupingAnalyzers.scala:89","details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (7)\n+- HashAggregate (6)\n   +- Exchange (5)\n      +- HashAggregate (4)\n         +- Project (3)\n            +- Filter (2)\n               +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [1]: [business_id#0]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nPushedFilters: [IsNotNull(business_id)]\nReadSchema: struct<business_id:string>\n\n(2) Filter\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(3) Project\nOutput: []\nInput [1]: [business_id#0]\n\n(4) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#104L]\nResults [1]: [count#105L]\n\n(5) Exchange\nInput [1]: [count#105L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=52]\n\n(6) HashAggregate\nInput [1]: [count#105L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#101L]\nResults [1]: [count(1)#101L AS count#102L]\n\n(7) AdaptiveSparkPlan\nOutput [1]: [count#102L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=52]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(business_id#0)","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0] Batched: true, DataFilters: [isnotnull(business_id#0)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [IsNotNull(business_id)], ReadSchema: struct<business_id:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(business_id)]","DataFilters":"[isnotnull(business_id#0)]"},"metrics":[{"name":"number of files read","accumulatorId":261,"metricType":"sum"},{"name":"scan time","accumulatorId":260,"metricType":"timing"},{"name":"metadata time","accumulatorId":262,"metricType":"timing"},{"name":"size of files read","accumulatorId":263,"metricType":"size"},{"name":"number of output rows","accumulatorId":259,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":258,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":254,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":255,"metricType":"timing"},{"name":"peak memory","accumulatorId":253,"metricType":"size"},{"name":"number of output rows","accumulatorId":252,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":257,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":256,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":250,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":244,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":251,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":245,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":242,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":239,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":248,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":241,"metricType":"sum"},{"name":"records read","accumulatorId":238,"metricType":"sum"},{"name":"local bytes read","accumulatorId":236,"metricType":"size"},{"name":"fetch wait time","accumulatorId":237,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":234,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":240,"metricType":"sum"},{"name":"local blocks read","accumulatorId":233,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":243,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":232,"metricType":"sum"},{"name":"data size","accumulatorId":230,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":246,"metricType":"size"},{"name":"number of partitions","accumulatorId":231,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":247,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":235,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":249,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":226,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":227,"metricType":"timing"},{"name":"peak memory","accumulatorId":225,"metricType":"size"},{"name":"number of output rows","accumulatorId":224,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":229,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":228,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1720131131337,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":1,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (14)\n+- == Current Plan ==\n   HashAggregate (8)\n   +- ShuffleQueryStage (7)\n      +- Exchange (6)\n         +- * HashAggregate (5)\n            +- * Project (4)\n               +- * Filter (3)\n                  +- * ColumnarToRow (2)\n                     +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (13)\n   +- Exchange (12)\n      +- HashAggregate (11)\n         +- Project (10)\n            +- Filter (9)\n               +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [1]: [business_id#0]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nPushedFilters: [IsNotNull(business_id)]\nReadSchema: struct<business_id:string>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [1]: [business_id#0]\n\n(3) Filter [codegen id : 1]\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(4) Project [codegen id : 1]\nOutput: []\nInput [1]: [business_id#0]\n\n(5) HashAggregate [codegen id : 1]\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#104L]\nResults [1]: [count#105L]\n\n(6) Exchange\nInput [1]: [count#105L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=72]\n\n(7) ShuffleQueryStage\nOutput [1]: [count#105L]\nArguments: 0\n\n(8) HashAggregate\nInput [1]: [count#105L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#101L]\nResults [1]: [count(1)#101L AS count#102L]\n\n(9) Filter\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(10) Project\nOutput: []\nInput [1]: [business_id#0]\n\n(11) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#104L]\nResults [1]: [count#105L]\n\n(12) Exchange\nInput [1]: [count#105L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=52]\n\n(13) HashAggregate\nInput [1]: [count#105L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#101L]\nResults [1]: [count(1)#101L AS count#102L]\n\n(14) AdaptiveSparkPlan\nOutput [1]: [count#102L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=72]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(business_id#0)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0] Batched: true, DataFilters: [isnotnull(business_id#0)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [IsNotNull(business_id)], ReadSchema: struct<business_id:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(business_id)]","DataFilters":"[isnotnull(business_id#0)]"},"metrics":[{"name":"number of files read","accumulatorId":261,"metricType":"sum"},{"name":"scan time","accumulatorId":260,"metricType":"timing"},{"name":"metadata time","accumulatorId":262,"metricType":"timing"},{"name":"size of files read","accumulatorId":263,"metricType":"size"},{"name":"number of output rows","accumulatorId":259,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":300,"metricType":"sum"},{"name":"number of input batches","accumulatorId":301,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":299,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":295,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":296,"metricType":"timing"},{"name":"peak memory","accumulatorId":294,"metricType":"size"},{"name":"number of output rows","accumulatorId":293,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":298,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":297,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":292,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":290,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":284,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":291,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":285,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":282,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":279,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":288,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":281,"metricType":"sum"},{"name":"records read","accumulatorId":278,"metricType":"sum"},{"name":"local bytes read","accumulatorId":276,"metricType":"size"},{"name":"fetch wait time","accumulatorId":277,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":274,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":280,"metricType":"sum"},{"name":"local blocks read","accumulatorId":273,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":283,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":272,"metricType":"sum"},{"name":"data size","accumulatorId":270,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":286,"metricType":"size"},{"name":"number of partitions","accumulatorId":271,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":287,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":275,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":289,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":266,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":267,"metricType":"timing"},{"name":"peak memory","accumulatorId":265,"metricType":"size"},{"name":"number of output rows","accumulatorId":264,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":269,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":268,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[[261,1],[262,0],[263,37975350]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[[271,1]]}
{"Event":"SparkListenerJobStart","Job ID":4,"Submission Time":1720131131363,"Stage Infos":[{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"count at GroupingAnalyzers.scala:89","Number of Tasks":6,"RDD Info":[{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"30\",\"name\":\"Exchange\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"31\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"37\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"FileScanRDD","Scope":"{\"id\":\"37\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[5],"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"30\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"1","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"1","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"count at GroupingAnalyzers.scala:89","Number of Tasks":6,"RDD Info":[{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"30\",\"name\":\"Exchange\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"31\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"37\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"FileScanRDD","Scope":"{\"id\":\"37\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720131131364,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"30\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"1","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"1","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":5,"Stage Attempt ID":0,"Task Info":{"Task ID":9,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131131368,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":5,"Stage Attempt ID":0,"Task Info":{"Task ID":10,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131131368,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":5,"Stage Attempt ID":0,"Task Info":{"Task ID":11,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131131368,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":5,"Stage Attempt ID":0,"Task Info":{"Task ID":12,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131131368,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":5,"Stage Attempt ID":0,"Task Info":{"Task ID":13,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131131368,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":5,"Stage Attempt ID":0,"Task Info":{"Task ID":14,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131131368,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":5,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":12,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131131368,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131132408,"Failed":false,"Killed":false,"Accumulables":[{"ID":260,"Name":"scan time","Update":"990","Value":"990","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":270,"Name":"data size","Update":"16","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":289,"Name":"shuffle bytes written","Update":"56","Value":"56","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":290,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":291,"Name":"shuffle write time","Update":"794418","Value":"794418","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":292,"Name":"duration","Update":"991","Value":"991","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":293,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":296,"Name":"time in aggregation build","Update":"990","Value":"990","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":302,"Name":"internal.metrics.executorDeserializeTime","Update":20,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":303,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9086501,"Value":9086501,"Internal":true,"Count Failed Values":true},{"ID":304,"Name":"internal.metrics.executorRunTime","Update":1009,"Value":1009,"Internal":true,"Count Failed Values":true},{"ID":305,"Name":"internal.metrics.executorCpuTime","Update":79601421,"Value":79601421,"Internal":true,"Count Failed Values":true},{"ID":306,"Name":"internal.metrics.resultSize","Update":2142,"Value":2142,"Internal":true,"Count Failed Values":true},{"ID":330,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":56,"Internal":true,"Count Failed Values":true},{"ID":331,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":332,"Name":"internal.metrics.shuffle.write.writeTime","Update":794418,"Value":794418,"Internal":true,"Count Failed Values":true},{"ID":333,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":1799,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":132637080,"JVMOffHeapMemory":94915616,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":881443,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":881443,"OffHeapUnifiedMemory":0,"DirectPoolMemory":21048245,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":7,"MinorGCTime":34,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":34},"Task Metrics":{"Executor Deserialize Time":20,"Executor Deserialize CPU Time":9086501,"Executor Run Time":1009,"Executor CPU Time":79601421,"Peak Execution Memory":0,"Result Size":2142,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":794418,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":5,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":13,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131131368,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131132411,"Failed":false,"Killed":false,"Accumulables":[{"ID":260,"Name":"scan time","Update":"993","Value":"1983","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":270,"Name":"data size","Update":"16","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":289,"Name":"shuffle bytes written","Update":"56","Value":"112","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":290,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":291,"Name":"shuffle write time","Update":"821126","Value":"1615544","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":292,"Name":"duration","Update":"994","Value":"1985","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":293,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":296,"Name":"time in aggregation build","Update":"993","Value":"1983","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":302,"Name":"internal.metrics.executorDeserializeTime","Update":18,"Value":38,"Internal":true,"Count Failed Values":true},{"ID":303,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5745378,"Value":14831879,"Internal":true,"Count Failed Values":true},{"ID":304,"Name":"internal.metrics.executorRunTime","Update":1012,"Value":2021,"Internal":true,"Count Failed Values":true},{"ID":305,"Name":"internal.metrics.executorCpuTime","Update":80745540,"Value":160346961,"Internal":true,"Count Failed Values":true},{"ID":306,"Name":"internal.metrics.resultSize","Update":2185,"Value":4327,"Internal":true,"Count Failed Values":true},{"ID":308,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":330,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":112,"Internal":true,"Count Failed Values":true},{"ID":331,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":332,"Name":"internal.metrics.shuffle.write.writeTime","Update":821126,"Value":1615544,"Internal":true,"Count Failed Values":true},{"ID":333,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":3598,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":18,"Executor Deserialize CPU Time":5745378,"Executor Run Time":1012,"Executor CPU Time":80745540,"Peak Execution Memory":0,"Result Size":2185,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":821126,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":5,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":14,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131131368,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131132411,"Failed":false,"Killed":false,"Accumulables":[{"ID":260,"Name":"scan time","Update":"995","Value":"2978","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":270,"Name":"data size","Update":"16","Value":"48","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":289,"Name":"shuffle bytes written","Update":"56","Value":"168","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":290,"Name":"shuffle records written","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":291,"Name":"shuffle write time","Update":"705292","Value":"2320836","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":292,"Name":"duration","Update":"996","Value":"2981","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":293,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":296,"Name":"time in aggregation build","Update":"995","Value":"2978","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":302,"Name":"internal.metrics.executorDeserializeTime","Update":17,"Value":55,"Internal":true,"Count Failed Values":true},{"ID":303,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4561753,"Value":19393632,"Internal":true,"Count Failed Values":true},{"ID":304,"Name":"internal.metrics.executorRunTime","Update":1013,"Value":3034,"Internal":true,"Count Failed Values":true},{"ID":305,"Name":"internal.metrics.executorCpuTime","Update":63232623,"Value":223579584,"Internal":true,"Count Failed Values":true},{"ID":306,"Name":"internal.metrics.resultSize","Update":2142,"Value":6469,"Internal":true,"Count Failed Values":true},{"ID":330,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":168,"Internal":true,"Count Failed Values":true},{"ID":331,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":332,"Name":"internal.metrics.shuffle.write.writeTime","Update":705292,"Value":2320836,"Internal":true,"Count Failed Values":true},{"ID":333,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":5397,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":17,"Executor Deserialize CPU Time":4561753,"Executor Run Time":1013,"Executor CPU Time":63232623,"Peak Execution Memory":0,"Result Size":2142,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":705292,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":5,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":10,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131131368,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131132439,"Failed":false,"Killed":false,"Accumulables":[{"ID":260,"Name":"scan time","Update":"1025","Value":"4003","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":270,"Name":"data size","Update":"16","Value":"64","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":289,"Name":"shuffle bytes written","Update":"56","Value":"224","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":290,"Name":"shuffle records written","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":291,"Name":"shuffle write time","Update":"622084","Value":"2942920","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":292,"Name":"duration","Update":"1026","Value":"4007","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":293,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":296,"Name":"time in aggregation build","Update":"1025","Value":"4003","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":302,"Name":"internal.metrics.executorDeserializeTime","Update":20,"Value":75,"Internal":true,"Count Failed Values":true},{"ID":303,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9066582,"Value":28460214,"Internal":true,"Count Failed Values":true},{"ID":304,"Name":"internal.metrics.executorRunTime","Update":1043,"Value":4077,"Internal":true,"Count Failed Values":true},{"ID":305,"Name":"internal.metrics.executorCpuTime","Update":51278830,"Value":274858414,"Internal":true,"Count Failed Values":true},{"ID":306,"Name":"internal.metrics.resultSize","Update":2142,"Value":8611,"Internal":true,"Count Failed Values":true},{"ID":330,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":224,"Internal":true,"Count Failed Values":true},{"ID":331,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":332,"Name":"internal.metrics.shuffle.write.writeTime","Update":622084,"Value":2942920,"Internal":true,"Count Failed Values":true},{"ID":333,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":7196,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":20,"Executor Deserialize CPU Time":9066582,"Executor Run Time":1043,"Executor CPU Time":51278830,"Peak Execution Memory":0,"Result Size":2142,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":622084,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":5,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":9,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131131368,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131132548,"Failed":false,"Killed":false,"Accumulables":[{"ID":260,"Name":"scan time","Update":"1128","Value":"5131","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":270,"Name":"data size","Update":"16","Value":"80","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":289,"Name":"shuffle bytes written","Update":"56","Value":"280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":290,"Name":"shuffle records written","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":291,"Name":"shuffle write time","Update":"970955","Value":"3913875","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":292,"Name":"duration","Update":"1130","Value":"5137","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":293,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":296,"Name":"time in aggregation build","Update":"1128","Value":"5131","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":302,"Name":"internal.metrics.executorDeserializeTime","Update":19,"Value":94,"Internal":true,"Count Failed Values":true},{"ID":303,"Name":"internal.metrics.executorDeserializeCpuTime","Update":6114207,"Value":34574421,"Internal":true,"Count Failed Values":true},{"ID":304,"Name":"internal.metrics.executorRunTime","Update":1149,"Value":5226,"Internal":true,"Count Failed Values":true},{"ID":305,"Name":"internal.metrics.executorCpuTime","Update":66808918,"Value":341667332,"Internal":true,"Count Failed Values":true},{"ID":306,"Name":"internal.metrics.resultSize","Update":2185,"Value":10796,"Internal":true,"Count Failed Values":true},{"ID":308,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":330,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":280,"Internal":true,"Count Failed Values":true},{"ID":331,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":332,"Name":"internal.metrics.shuffle.write.writeTime","Update":970955,"Value":3913875,"Internal":true,"Count Failed Values":true},{"ID":333,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":8995,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":132637080,"JVMOffHeapMemory":94915616,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":881443,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":881443,"OffHeapUnifiedMemory":0,"DirectPoolMemory":21048245,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":7,"MinorGCTime":34,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":34},"Task Metrics":{"Executor Deserialize Time":19,"Executor Deserialize CPU Time":6114207,"Executor Run Time":1149,"Executor CPU Time":66808918,"Peak Execution Memory":0,"Result Size":2185,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":970955,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":5,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":11,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131131368,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131134312,"Failed":false,"Killed":false,"Accumulables":[{"ID":259,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":260,"Name":"scan time","Update":"2854","Value":"7985","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":270,"Name":"data size","Update":"16","Value":"96","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":289,"Name":"shuffle bytes written","Update":"59","Value":"339","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":290,"Name":"shuffle records written","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":291,"Name":"shuffle write time","Update":"384707","Value":"4298582","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":292,"Name":"duration","Update":"2901","Value":"8038","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":293,"Name":"number of output rows","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":296,"Name":"time in aggregation build","Update":"2900","Value":"8031","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":299,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":300,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":301,"Name":"number of input batches","Update":"144","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":302,"Name":"internal.metrics.executorDeserializeTime","Update":18,"Value":112,"Internal":true,"Count Failed Values":true},{"ID":303,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8453789,"Value":43028210,"Internal":true,"Count Failed Values":true},{"ID":304,"Name":"internal.metrics.executorRunTime","Update":2917,"Value":8143,"Internal":true,"Count Failed Values":true},{"ID":305,"Name":"internal.metrics.executorCpuTime","Update":262820664,"Value":604487996,"Internal":true,"Count Failed Values":true},{"ID":306,"Name":"internal.metrics.resultSize","Update":2228,"Value":13024,"Internal":true,"Count Failed Values":true},{"ID":307,"Name":"internal.metrics.jvmGCTime","Update":10,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":330,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":339,"Internal":true,"Count Failed Values":true},{"ID":331,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":332,"Name":"internal.metrics.shuffle.write.writeTime","Update":384707,"Value":4298582,"Internal":true,"Count Failed Values":true},{"ID":333,"Name":"internal.metrics.input.bytesRead","Update":13921662,"Value":13930657,"Internal":true,"Count Failed Values":true},{"ID":334,"Name":"internal.metrics.input.recordsRead","Update":586579,"Value":586579,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":18,"Executor Deserialize CPU Time":8453789,"Executor Run Time":2917,"Executor CPU Time":262820664,"Peak Execution Memory":0,"Result Size":2228,"JVM GC Time":10,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":384707,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":13921662,"Records Read":586579},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"count at GroupingAnalyzers.scala:89","Number of Tasks":6,"RDD Info":[{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"30\",\"name\":\"Exchange\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"31\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"37\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"FileScanRDD","Scope":"{\"id\":\"37\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720131131364,"Completion Time":1720131134313,"Accumulables":[{"ID":259,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":260,"Name":"scan time","Value":"7985","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":270,"Name":"data size","Value":"96","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":289,"Name":"shuffle bytes written","Value":"339","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":290,"Name":"shuffle records written","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":291,"Name":"shuffle write time","Value":"4298582","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":292,"Name":"duration","Value":"8038","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":293,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":296,"Name":"time in aggregation build","Value":"8031","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":299,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":300,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":301,"Name":"number of input batches","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":302,"Name":"internal.metrics.executorDeserializeTime","Value":112,"Internal":true,"Count Failed Values":true},{"ID":303,"Name":"internal.metrics.executorDeserializeCpuTime","Value":43028210,"Internal":true,"Count Failed Values":true},{"ID":304,"Name":"internal.metrics.executorRunTime","Value":8143,"Internal":true,"Count Failed Values":true},{"ID":305,"Name":"internal.metrics.executorCpuTime","Value":604487996,"Internal":true,"Count Failed Values":true},{"ID":306,"Name":"internal.metrics.resultSize","Value":13024,"Internal":true,"Count Failed Values":true},{"ID":307,"Name":"internal.metrics.jvmGCTime","Value":10,"Internal":true,"Count Failed Values":true},{"ID":308,"Name":"internal.metrics.resultSerializationTime","Value":2,"Internal":true,"Count Failed Values":true},{"ID":330,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":339,"Internal":true,"Count Failed Values":true},{"ID":331,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":6,"Internal":true,"Count Failed Values":true},{"ID":332,"Name":"internal.metrics.shuffle.write.writeTime","Value":4298582,"Internal":true,"Count Failed Values":true},{"ID":333,"Name":"internal.metrics.input.bytesRead","Value":13930657,"Internal":true,"Count Failed Values":true},{"ID":334,"Name":"internal.metrics.input.recordsRead","Value":586579,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":4,"Completion Time":1720131134313,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":1,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (14)\n+- == Final Plan ==\n   * HashAggregate (8)\n   +- ShuffleQueryStage (7), Statistics(sizeInBytes=96.0 B, rowCount=6)\n      +- Exchange (6)\n         +- * HashAggregate (5)\n            +- * Project (4)\n               +- * Filter (3)\n                  +- * ColumnarToRow (2)\n                     +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (13)\n   +- Exchange (12)\n      +- HashAggregate (11)\n         +- Project (10)\n            +- Filter (9)\n               +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [1]: [business_id#0]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nPushedFilters: [IsNotNull(business_id)]\nReadSchema: struct<business_id:string>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [1]: [business_id#0]\n\n(3) Filter [codegen id : 1]\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(4) Project [codegen id : 1]\nOutput: []\nInput [1]: [business_id#0]\n\n(5) HashAggregate [codegen id : 1]\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#104L]\nResults [1]: [count#105L]\n\n(6) Exchange\nInput [1]: [count#105L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=72]\n\n(7) ShuffleQueryStage\nOutput [1]: [count#105L]\nArguments: 0\n\n(8) HashAggregate [codegen id : 2]\nInput [1]: [count#105L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#101L]\nResults [1]: [count(1)#101L AS count#102L]\n\n(9) Filter\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(10) Project\nOutput: []\nInput [1]: [business_id#0]\n\n(11) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#104L]\nResults [1]: [count#105L]\n\n(12) Exchange\nInput [1]: [count#105L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=52]\n\n(13) HashAggregate\nInput [1]: [count#105L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#101L]\nResults [1]: [count(1)#101L AS count#102L]\n\n(14) AdaptiveSparkPlan\nOutput [1]: [count#102L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=72]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(business_id#0)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0] Batched: true, DataFilters: [isnotnull(business_id#0)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [IsNotNull(business_id)], ReadSchema: struct<business_id:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(business_id)]","DataFilters":"[isnotnull(business_id#0)]"},"metrics":[{"name":"number of files read","accumulatorId":261,"metricType":"sum"},{"name":"scan time","accumulatorId":260,"metricType":"timing"},{"name":"metadata time","accumulatorId":262,"metricType":"timing"},{"name":"size of files read","accumulatorId":263,"metricType":"size"},{"name":"number of output rows","accumulatorId":259,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":300,"metricType":"sum"},{"name":"number of input batches","accumulatorId":301,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":299,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":295,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":296,"metricType":"timing"},{"name":"peak memory","accumulatorId":294,"metricType":"size"},{"name":"number of output rows","accumulatorId":293,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":298,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":297,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":292,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":290,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":284,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":291,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":285,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":282,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":279,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":288,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":281,"metricType":"sum"},{"name":"records read","accumulatorId":278,"metricType":"sum"},{"name":"local bytes read","accumulatorId":276,"metricType":"size"},{"name":"fetch wait time","accumulatorId":277,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":274,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":280,"metricType":"sum"},{"name":"local blocks read","accumulatorId":273,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":283,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":272,"metricType":"sum"},{"name":"data size","accumulatorId":270,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":286,"metricType":"size"},{"name":"number of partitions","accumulatorId":271,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":287,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":275,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":289,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":340,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":341,"metricType":"timing"},{"name":"peak memory","accumulatorId":339,"metricType":"size"},{"name":"number of output rows","accumulatorId":338,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":343,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":342,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":337,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":5,"Submission Time":1720131134331,"Stage Infos":[{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"count at GroupingAnalyzers.scala:89","Number of Tasks":6,"RDD Info":[{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"30\",\"name\":\"Exchange\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"31\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"37\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"FileScanRDD","Scope":"{\"id\":\"37\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"count at GroupingAnalyzers.scala:89","Number of Tasks":1,"RDD Info":[{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"43\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"42\",\"name\":\"Exchange\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"38\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[6],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[6,7],"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"44\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"1","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"1","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"count at GroupingAnalyzers.scala:89","Number of Tasks":1,"RDD Info":[{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"43\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"42\",\"name\":\"Exchange\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"38\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[6],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720131134332,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"44\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"1","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"1","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":7,"Stage Attempt ID":0,"Task Info":{"Task ID":15,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131134335,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":7,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":15,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131134335,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131134402,"Failed":false,"Killed":false,"Accumulables":[{"ID":272,"Name":"remote blocks read","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"remote bytes read","Update":"227","Value":"227","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"local bytes read","Update":"112","Value":"112","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":278,"Name":"records read","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":287,"Name":"remote reqs duration","Update":"15","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"duration","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":338,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":341,"Name":"time in aggregation build","Update":"3","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":344,"Name":"internal.metrics.executorDeserializeTime","Update":13,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9717548,"Value":9717548,"Internal":true,"Count Failed Values":true},{"ID":346,"Name":"internal.metrics.executorRunTime","Update":47,"Value":47,"Internal":true,"Count Failed Values":true},{"ID":347,"Name":"internal.metrics.executorCpuTime","Update":42894832,"Value":42894832,"Internal":true,"Count Failed Values":true},{"ID":348,"Name":"internal.metrics.resultSize","Update":3995,"Value":3995,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":227,"Value":227,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":112,"Value":112,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.read.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":15,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":371,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":13,"Executor Deserialize CPU Time":9717548,"Executor Run Time":47,"Executor CPU Time":42894832,"Peak Execution Memory":0,"Result Size":3995,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":4,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":227,"Remote Bytes Read To Disk":0,"Local Bytes Read":112,"Total Records Read":6,"Remote Requests Duration":15,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"count at GroupingAnalyzers.scala:89","Number of Tasks":1,"RDD Info":[{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"43\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"42\",\"name\":\"Exchange\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"38\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[6],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720131134332,"Completion Time":1720131134402,"Accumulables":[{"ID":272,"Name":"remote blocks read","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"local blocks read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"remote bytes read","Value":"227","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"local bytes read","Value":"112","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":278,"Name":"records read","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":287,"Name":"remote reqs duration","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"duration","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":338,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":341,"Name":"time in aggregation build","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":344,"Name":"internal.metrics.executorDeserializeTime","Value":13,"Internal":true,"Count Failed Values":true},{"ID":345,"Name":"internal.metrics.executorDeserializeCpuTime","Value":9717548,"Internal":true,"Count Failed Values":true},{"ID":346,"Name":"internal.metrics.executorRunTime","Value":47,"Internal":true,"Count Failed Values":true},{"ID":347,"Name":"internal.metrics.executorCpuTime","Value":42894832,"Internal":true,"Count Failed Values":true},{"ID":348,"Name":"internal.metrics.resultSize","Value":3995,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":4,"Internal":true,"Count Failed Values":true},{"ID":356,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":2,"Internal":true,"Count Failed Values":true},{"ID":357,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":227,"Internal":true,"Count Failed Values":true},{"ID":358,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":359,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":112,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.shuffle.read.recordsRead","Value":6,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":15,"Internal":true,"Count Failed Values":true},{"ID":371,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":5,"Completion Time":1720131134402,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":1,"time":1720131134403,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":2,"rootExecutionId":2,"description":"collect at AnalysisRunner.scala:524","details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (9)\n+- HashAggregate (8)\n   +- Exchange (7)\n      +- HashAggregate (6)\n         +- HashAggregate (5)\n            +- Exchange (4)\n               +- HashAggregate (3)\n                  +- Filter (2)\n                     +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [1]: [business_id#0]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nPushedFilters: [IsNotNull(business_id)]\nReadSchema: struct<business_id:string>\n\n(2) Filter\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(3) HashAggregate\nInput [1]: [business_id#0]\nKeys [1]: [business_id#0]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#116L]\nResults [2]: [business_id#0, count#117L]\n\n(4) Exchange\nInput [2]: [business_id#0, count#117L]\nArguments: hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=114]\n\n(5) HashAggregate\nInput [2]: [business_id#0, count#117L]\nKeys [1]: [business_id#0]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#93L]\nResults [1]: [count(1)#93L AS com_amazon_deequ_dq_metrics_count#94L]\n\n(6) HashAggregate\nInput [1]: [com_amazon_deequ_dq_metrics_count#94L]\nKeys: []\nFunctions [1]: [partial_sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))]\nAggregate Attributes [1]: [sum#114]\nResults [1]: [sum#115]\n\n(7) Exchange\nInput [1]: [sum#115]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=118]\n\n(8) HashAggregate\nInput [1]: [sum#115]\nKeys: []\nFunctions [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))]\nAggregate Attributes [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))#108]\nResults [1]: [(sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))#108 / 586579.0) AS (sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#112]\n\n(9) AdaptiveSparkPlan\nOutput [1]: [(sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#112]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=118]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[count(1)])","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=114]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(business_id#0)","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0] Batched: true, DataFilters: [isnotnull(business_id#0)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [IsNotNull(business_id)], ReadSchema: struct<business_id:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(business_id)]","DataFilters":"[isnotnull(business_id#0)]"},"metrics":[{"name":"number of files read","accumulatorId":450,"metricType":"sum"},{"name":"scan time","accumulatorId":449,"metricType":"timing"},{"name":"metadata time","accumulatorId":451,"metricType":"timing"},{"name":"size of files read","accumulatorId":452,"metricType":"size"},{"name":"number of output rows","accumulatorId":448,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":447,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":443,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":444,"metricType":"timing"},{"name":"peak memory","accumulatorId":442,"metricType":"size"},{"name":"number of output rows","accumulatorId":441,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":446,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":445,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":439,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":433,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":440,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":434,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":431,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":428,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":437,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":430,"metricType":"sum"},{"name":"records read","accumulatorId":427,"metricType":"sum"},{"name":"local bytes read","accumulatorId":425,"metricType":"size"},{"name":"fetch wait time","accumulatorId":426,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":423,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":429,"metricType":"sum"},{"name":"local blocks read","accumulatorId":422,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":432,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":421,"metricType":"sum"},{"name":"data size","accumulatorId":419,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":435,"metricType":"size"},{"name":"number of partitions","accumulatorId":420,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":436,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":424,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":438,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":415,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":416,"metricType":"timing"},{"name":"peak memory","accumulatorId":414,"metricType":"size"},{"name":"number of output rows","accumulatorId":413,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":418,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":417,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":409,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":410,"metricType":"timing"},{"name":"peak memory","accumulatorId":408,"metricType":"size"},{"name":"number of output rows","accumulatorId":407,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":412,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":411,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":405,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":399,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":406,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":400,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":397,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":394,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":403,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":396,"metricType":"sum"},{"name":"records read","accumulatorId":393,"metricType":"sum"},{"name":"local bytes read","accumulatorId":391,"metricType":"size"},{"name":"fetch wait time","accumulatorId":392,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":389,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":395,"metricType":"sum"},{"name":"local blocks read","accumulatorId":388,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":398,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":387,"metricType":"sum"},{"name":"data size","accumulatorId":385,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":401,"metricType":"size"},{"name":"number of partitions","accumulatorId":386,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":402,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":390,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":404,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":381,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":382,"metricType":"timing"},{"name":"peak memory","accumulatorId":380,"metricType":"size"},{"name":"number of output rows","accumulatorId":379,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":384,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":383,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1720131134445,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":2,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (18)\n+- == Current Plan ==\n   HashAggregate (10)\n   +- Exchange (9)\n      +- HashAggregate (8)\n         +- HashAggregate (7)\n            +- ShuffleQueryStage (6)\n               +- Exchange (5)\n                  +- * HashAggregate (4)\n                     +- * Filter (3)\n                        +- * ColumnarToRow (2)\n                           +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (17)\n   +- Exchange (16)\n      +- HashAggregate (15)\n         +- HashAggregate (14)\n            +- Exchange (13)\n               +- HashAggregate (12)\n                  +- Filter (11)\n                     +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [1]: [business_id#0]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nPushedFilters: [IsNotNull(business_id)]\nReadSchema: struct<business_id:string>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [1]: [business_id#0]\n\n(3) Filter [codegen id : 1]\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(4) HashAggregate [codegen id : 1]\nInput [1]: [business_id#0]\nKeys [1]: [business_id#0]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#116L]\nResults [2]: [business_id#0, count#117L]\n\n(5) Exchange\nInput [2]: [business_id#0, count#117L]\nArguments: hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=141]\n\n(6) ShuffleQueryStage\nOutput [2]: [business_id#0, count#117L]\nArguments: 0\n\n(7) HashAggregate\nInput [2]: [business_id#0, count#117L]\nKeys [1]: [business_id#0]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#93L]\nResults [1]: [count(1)#93L AS com_amazon_deequ_dq_metrics_count#94L]\n\n(8) HashAggregate\nInput [1]: [com_amazon_deequ_dq_metrics_count#94L]\nKeys: []\nFunctions [1]: [partial_sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))]\nAggregate Attributes [1]: [sum#114]\nResults [1]: [sum#115]\n\n(9) Exchange\nInput [1]: [sum#115]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=154]\n\n(10) HashAggregate\nInput [1]: [sum#115]\nKeys: []\nFunctions [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))]\nAggregate Attributes [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))#108]\nResults [1]: [(sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))#108 / 586579.0) AS (sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#112]\n\n(11) Filter\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(12) HashAggregate\nInput [1]: [business_id#0]\nKeys [1]: [business_id#0]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#116L]\nResults [2]: [business_id#0, count#117L]\n\n(13) Exchange\nInput [2]: [business_id#0, count#117L]\nArguments: hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=114]\n\n(14) HashAggregate\nInput [2]: [business_id#0, count#117L]\nKeys [1]: [business_id#0]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#93L]\nResults [1]: [count(1)#93L AS com_amazon_deequ_dq_metrics_count#94L]\n\n(15) HashAggregate\nInput [1]: [com_amazon_deequ_dq_metrics_count#94L]\nKeys: []\nFunctions [1]: [partial_sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))]\nAggregate Attributes [1]: [sum#114]\nResults [1]: [sum#115]\n\n(16) Exchange\nInput [1]: [sum#115]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=118]\n\n(17) HashAggregate\nInput [1]: [sum#115]\nKeys: []\nFunctions [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))]\nAggregate Attributes [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))#108]\nResults [1]: [(sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))#108 / 586579.0) AS (sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#112]\n\n(18) AdaptiveSparkPlan\nOutput [1]: [(sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#112]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=154]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[count(1)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=141]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(business_id#0)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0] Batched: true, DataFilters: [isnotnull(business_id#0)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [IsNotNull(business_id)], ReadSchema: struct<business_id:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(business_id)]","DataFilters":"[isnotnull(business_id#0)]"},"metrics":[{"name":"number of files read","accumulatorId":450,"metricType":"sum"},{"name":"scan time","accumulatorId":449,"metricType":"timing"},{"name":"metadata time","accumulatorId":451,"metricType":"timing"},{"name":"size of files read","accumulatorId":452,"metricType":"size"},{"name":"number of output rows","accumulatorId":448,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":523,"metricType":"sum"},{"name":"number of input batches","accumulatorId":524,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":522,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":518,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":519,"metricType":"timing"},{"name":"peak memory","accumulatorId":517,"metricType":"size"},{"name":"number of output rows","accumulatorId":516,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":521,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":520,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":515,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":513,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":507,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":514,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":508,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":505,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":502,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":511,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":504,"metricType":"sum"},{"name":"records read","accumulatorId":501,"metricType":"sum"},{"name":"local bytes read","accumulatorId":499,"metricType":"size"},{"name":"fetch wait time","accumulatorId":500,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":497,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":503,"metricType":"sum"},{"name":"local blocks read","accumulatorId":496,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":506,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":495,"metricType":"sum"},{"name":"data size","accumulatorId":493,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":509,"metricType":"size"},{"name":"number of partitions","accumulatorId":494,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":510,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":498,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":512,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":489,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":490,"metricType":"timing"},{"name":"peak memory","accumulatorId":488,"metricType":"size"},{"name":"number of output rows","accumulatorId":487,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":492,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":491,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":483,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":484,"metricType":"timing"},{"name":"peak memory","accumulatorId":482,"metricType":"size"},{"name":"number of output rows","accumulatorId":481,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":486,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":485,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":479,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":473,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":480,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":474,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":471,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":468,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":477,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":470,"metricType":"sum"},{"name":"records read","accumulatorId":467,"metricType":"sum"},{"name":"local bytes read","accumulatorId":465,"metricType":"size"},{"name":"fetch wait time","accumulatorId":466,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":463,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":469,"metricType":"sum"},{"name":"local blocks read","accumulatorId":462,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":472,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":461,"metricType":"sum"},{"name":"data size","accumulatorId":459,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":475,"metricType":"size"},{"name":"number of partitions","accumulatorId":460,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":476,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":464,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":478,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":455,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":456,"metricType":"timing"},{"name":"peak memory","accumulatorId":454,"metricType":"size"},{"name":"number of output rows","accumulatorId":453,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":458,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":457,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[450,1],[451,0],[452,37975350]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[494,200]]}
{"Event":"SparkListenerJobStart","Job ID":6,"Submission Time":1720131134516,"Stage Infos":[{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":6,"RDD Info":[{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"58\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"FileScanRDD","Scope":"{\"id\":\"58\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[8],"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"52\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"2","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"2","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":6,"RDD Info":[{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"58\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"FileScanRDD","Scope":"{\"id\":\"58\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720131134516,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"52\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"2","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"2","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":8,"Stage Attempt ID":0,"Task Info":{"Task ID":16,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131134523,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":8,"Stage Attempt ID":0,"Task Info":{"Task ID":17,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131134523,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":8,"Stage Attempt ID":0,"Task Info":{"Task ID":18,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131134523,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":8,"Stage Attempt ID":0,"Task Info":{"Task ID":19,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131134523,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":8,"Stage Attempt ID":0,"Task Info":{"Task ID":20,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131134523,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":8,"Stage Attempt ID":0,"Task Info":{"Task ID":21,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131134523,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":8,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":21,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131134523,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131135694,"Failed":false,"Killed":false,"Accumulables":[{"ID":449,"Name":"scan time","Update":"948","Value":"948","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":515,"Name":"duration","Update":"1051","Value":"1051","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":517,"Name":"peak memory","Update":"262144","Value":"262144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":519,"Name":"time in aggregation build","Update":"952","Value":"952","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":525,"Name":"internal.metrics.executorDeserializeTime","Update":59,"Value":59,"Internal":true,"Count Failed Values":true},{"ID":526,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16936376,"Value":16936376,"Internal":true,"Count Failed Values":true},{"ID":527,"Name":"internal.metrics.executorRunTime","Update":1085,"Value":1085,"Internal":true,"Count Failed Values":true},{"ID":528,"Name":"internal.metrics.executorCpuTime","Update":95281835,"Value":95281835,"Internal":true,"Count Failed Values":true},{"ID":529,"Name":"internal.metrics.resultSize","Update":2893,"Value":2893,"Internal":true,"Count Failed Values":true},{"ID":530,"Name":"internal.metrics.jvmGCTime","Update":11,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":531,"Name":"internal.metrics.resultSerializationTime","Update":8,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":534,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":262144,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":1799,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":59,"Executor Deserialize CPU Time":16936376,"Executor Run Time":1085,"Executor CPU Time":95281835,"Peak Execution Memory":262144,"Result Size":2893,"JVM GC Time":11,"Result Serialization Time":8,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":8,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":16,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131134523,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131135694,"Failed":false,"Killed":false,"Accumulables":[{"ID":449,"Name":"scan time","Update":"922","Value":"1870","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":515,"Name":"duration","Update":"1045","Value":"2096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":517,"Name":"peak memory","Update":"262144","Value":"524288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":519,"Name":"time in aggregation build","Update":"925","Value":"1877","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":525,"Name":"internal.metrics.executorDeserializeTime","Update":63,"Value":122,"Internal":true,"Count Failed Values":true},{"ID":526,"Name":"internal.metrics.executorDeserializeCpuTime","Update":23176576,"Value":40112952,"Internal":true,"Count Failed Values":true},{"ID":527,"Name":"internal.metrics.executorRunTime","Update":1087,"Value":2172,"Internal":true,"Count Failed Values":true},{"ID":528,"Name":"internal.metrics.executorCpuTime","Update":94185420,"Value":189467255,"Internal":true,"Count Failed Values":true},{"ID":529,"Name":"internal.metrics.resultSize","Update":2893,"Value":5786,"Internal":true,"Count Failed Values":true},{"ID":530,"Name":"internal.metrics.jvmGCTime","Update":18,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":531,"Name":"internal.metrics.resultSerializationTime","Update":9,"Value":17,"Internal":true,"Count Failed Values":true},{"ID":534,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":524288,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":3598,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":63,"Executor Deserialize CPU Time":23176576,"Executor Run Time":1087,"Executor CPU Time":94185420,"Peak Execution Memory":262144,"Result Size":2893,"JVM GC Time":18,"Result Serialization Time":9,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":8,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":17,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131134523,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131135694,"Failed":false,"Killed":false,"Accumulables":[{"ID":449,"Name":"scan time","Update":"944","Value":"2814","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":515,"Name":"duration","Update":"1060","Value":"3156","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":517,"Name":"peak memory","Update":"262144","Value":"786432","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":519,"Name":"time in aggregation build","Update":"948","Value":"2825","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":525,"Name":"internal.metrics.executorDeserializeTime","Update":54,"Value":176,"Internal":true,"Count Failed Values":true},{"ID":526,"Name":"internal.metrics.executorDeserializeCpuTime","Update":31354830,"Value":71467782,"Internal":true,"Count Failed Values":true},{"ID":527,"Name":"internal.metrics.executorRunTime","Update":1096,"Value":3268,"Internal":true,"Count Failed Values":true},{"ID":528,"Name":"internal.metrics.executorCpuTime","Update":143463710,"Value":332930965,"Internal":true,"Count Failed Values":true},{"ID":529,"Name":"internal.metrics.resultSize","Update":2893,"Value":8679,"Internal":true,"Count Failed Values":true},{"ID":530,"Name":"internal.metrics.jvmGCTime","Update":19,"Value":48,"Internal":true,"Count Failed Values":true},{"ID":531,"Name":"internal.metrics.resultSerializationTime","Update":9,"Value":26,"Internal":true,"Count Failed Values":true},{"ID":534,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":786432,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":5397,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":54,"Executor Deserialize CPU Time":31354830,"Executor Run Time":1096,"Executor CPU Time":143463710,"Peak Execution Memory":262144,"Result Size":2893,"JVM GC Time":19,"Result Serialization Time":9,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":8,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":20,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131134523,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131135715,"Failed":false,"Killed":false,"Accumulables":[{"ID":449,"Name":"scan time","Update":"984","Value":"3798","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":515,"Name":"duration","Update":"1094","Value":"4250","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":517,"Name":"peak memory","Update":"262144","Value":"1048576","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":519,"Name":"time in aggregation build","Update":"984","Value":"3809","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":525,"Name":"internal.metrics.executorDeserializeTime","Update":54,"Value":230,"Internal":true,"Count Failed Values":true},{"ID":526,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14709871,"Value":86177653,"Internal":true,"Count Failed Values":true},{"ID":527,"Name":"internal.metrics.executorRunTime","Update":1129,"Value":4397,"Internal":true,"Count Failed Values":true},{"ID":528,"Name":"internal.metrics.executorCpuTime","Update":76741492,"Value":409672457,"Internal":true,"Count Failed Values":true},{"ID":529,"Name":"internal.metrics.resultSize","Update":2850,"Value":11529,"Internal":true,"Count Failed Values":true},{"ID":530,"Name":"internal.metrics.jvmGCTime","Update":19,"Value":67,"Internal":true,"Count Failed Values":true},{"ID":534,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":1048576,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":7196,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":54,"Executor Deserialize CPU Time":14709871,"Executor Run Time":1129,"Executor CPU Time":76741492,"Peak Execution Memory":262144,"Result Size":2850,"JVM GC Time":19,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":8,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":19,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131134523,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131135829,"Failed":false,"Killed":false,"Accumulables":[{"ID":449,"Name":"scan time","Update":"1069","Value":"4867","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":515,"Name":"duration","Update":"1191","Value":"5441","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":517,"Name":"peak memory","Update":"262144","Value":"1310720","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":519,"Name":"time in aggregation build","Update":"1069","Value":"4878","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":525,"Name":"internal.metrics.executorDeserializeTime","Update":61,"Value":291,"Internal":true,"Count Failed Values":true},{"ID":526,"Name":"internal.metrics.executorDeserializeCpuTime","Update":21529130,"Value":107706783,"Internal":true,"Count Failed Values":true},{"ID":527,"Name":"internal.metrics.executorRunTime","Update":1235,"Value":5632,"Internal":true,"Count Failed Values":true},{"ID":528,"Name":"internal.metrics.executorCpuTime","Update":135717674,"Value":545390131,"Internal":true,"Count Failed Values":true},{"ID":529,"Name":"internal.metrics.resultSize","Update":2893,"Value":14422,"Internal":true,"Count Failed Values":true},{"ID":530,"Name":"internal.metrics.jvmGCTime","Update":21,"Value":88,"Internal":true,"Count Failed Values":true},{"ID":531,"Name":"internal.metrics.resultSerializationTime","Update":3,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":534,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":1310720,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":8995,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":61,"Executor Deserialize CPU Time":21529130,"Executor Run Time":1235,"Executor CPU Time":135717674,"Peak Execution Memory":262144,"Result Size":2893,"JVM GC Time":21,"Result Serialization Time":3,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":8,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":18,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131134523,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131138654,"Failed":false,"Killed":false,"Accumulables":[{"ID":448,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":449,"Name":"scan time","Update":"3536","Value":"8403","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":493,"Name":"data size","Update":"10692960","Value":"10692960","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":512,"Name":"shuffle bytes written","Update":"5916183","Value":"5916183","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":513,"Name":"shuffle records written","Update":"222770","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":514,"Name":"shuffle write time","Update":"26371861","Value":"26371861","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":515,"Name":"duration","Update":"3997","Value":"9438","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":516,"Name":"number of output rows","Update":"222770","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":517,"Name":"peak memory","Update":"41943024","Value":"43253744","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":519,"Name":"time in aggregation build","Update":"3823","Value":"8701","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":520,"Name":"avg hash probes per key","Update":"13","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":522,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":523,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":524,"Name":"number of input batches","Update":"144","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":525,"Name":"internal.metrics.executorDeserializeTime","Update":60,"Value":351,"Internal":true,"Count Failed Values":true},{"ID":526,"Name":"internal.metrics.executorDeserializeCpuTime","Update":29641536,"Value":137348319,"Internal":true,"Count Failed Values":true},{"ID":527,"Name":"internal.metrics.executorRunTime","Update":4060,"Value":9692,"Internal":true,"Count Failed Values":true},{"ID":528,"Name":"internal.metrics.executorCpuTime","Update":574903171,"Value":1120293302,"Internal":true,"Count Failed Values":true},{"ID":529,"Name":"internal.metrics.resultSize","Update":3065,"Value":17487,"Internal":true,"Count Failed Values":true},{"ID":530,"Name":"internal.metrics.jvmGCTime","Update":39,"Value":127,"Internal":true,"Count Failed Values":true},{"ID":531,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":30,"Internal":true,"Count Failed Values":true},{"ID":534,"Name":"internal.metrics.peakExecutionMemory","Update":41943024,"Value":43253744,"Internal":true,"Count Failed Values":true},{"ID":553,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":5916183,"Value":5916183,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":222770,"Value":222770,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.shuffle.write.writeTime","Update":26371861,"Value":26371861,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.input.bytesRead","Update":13921662,"Value":13930657,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.input.recordsRead","Update":586579,"Value":586579,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":153748536,"JVMOffHeapMemory":108390184,"OnHeapExecutionMemory":33816560,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":913293,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":34729853,"OffHeapUnifiedMemory":0,"DirectPoolMemory":23134227,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":16,"MinorGCTime":70,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":70},"Task Metrics":{"Executor Deserialize Time":60,"Executor Deserialize CPU Time":29641536,"Executor Run Time":4060,"Executor CPU Time":574903171,"Peak Execution Memory":41943024,"Result Size":3065,"JVM GC Time":39,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":5916183,"Shuffle Write Time":26371861,"Shuffle Records Written":222770},"Input Metrics":{"Bytes Read":13921662,"Records Read":586579},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":6,"RDD Info":[{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"58\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"FileScanRDD","Scope":"{\"id\":\"58\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720131134516,"Completion Time":1720131138655,"Accumulables":[{"ID":448,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":449,"Name":"scan time","Value":"8403","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":493,"Name":"data size","Value":"10692960","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":512,"Name":"shuffle bytes written","Value":"5916183","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":513,"Name":"shuffle records written","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":514,"Name":"shuffle write time","Value":"26371861","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":515,"Name":"duration","Value":"9438","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":516,"Name":"number of output rows","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":517,"Name":"peak memory","Value":"43253744","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":519,"Name":"time in aggregation build","Value":"8701","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":520,"Name":"avg hash probes per key","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":522,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":523,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":524,"Name":"number of input batches","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":525,"Name":"internal.metrics.executorDeserializeTime","Value":351,"Internal":true,"Count Failed Values":true},{"ID":526,"Name":"internal.metrics.executorDeserializeCpuTime","Value":137348319,"Internal":true,"Count Failed Values":true},{"ID":527,"Name":"internal.metrics.executorRunTime","Value":9692,"Internal":true,"Count Failed Values":true},{"ID":528,"Name":"internal.metrics.executorCpuTime","Value":1120293302,"Internal":true,"Count Failed Values":true},{"ID":529,"Name":"internal.metrics.resultSize","Value":17487,"Internal":true,"Count Failed Values":true},{"ID":530,"Name":"internal.metrics.jvmGCTime","Value":127,"Internal":true,"Count Failed Values":true},{"ID":531,"Name":"internal.metrics.resultSerializationTime","Value":30,"Internal":true,"Count Failed Values":true},{"ID":534,"Name":"internal.metrics.peakExecutionMemory","Value":43253744,"Internal":true,"Count Failed Values":true},{"ID":553,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":5916183,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":222770,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.shuffle.write.writeTime","Value":26371861,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.input.bytesRead","Value":13930657,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.input.recordsRead","Value":586579,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":6,"Completion Time":1720131138655,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":2,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (20)\n+- == Current Plan ==\n   HashAggregate (12)\n   +- ShuffleQueryStage (11)\n      +- Exchange (10)\n         +- * HashAggregate (9)\n            +- * HashAggregate (8)\n               +- AQEShuffleRead (7)\n                  +- ShuffleQueryStage (6), Statistics(sizeInBytes=10.2 MiB, rowCount=2.23E+5)\n                     +- Exchange (5)\n                        +- * HashAggregate (4)\n                           +- * Filter (3)\n                              +- * ColumnarToRow (2)\n                                 +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (19)\n   +- Exchange (18)\n      +- HashAggregate (17)\n         +- HashAggregate (16)\n            +- Exchange (15)\n               +- HashAggregate (14)\n                  +- Filter (13)\n                     +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [1]: [business_id#0]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nPushedFilters: [IsNotNull(business_id)]\nReadSchema: struct<business_id:string>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [1]: [business_id#0]\n\n(3) Filter [codegen id : 1]\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(4) HashAggregate [codegen id : 1]\nInput [1]: [business_id#0]\nKeys [1]: [business_id#0]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#116L]\nResults [2]: [business_id#0, count#117L]\n\n(5) Exchange\nInput [2]: [business_id#0, count#117L]\nArguments: hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=141]\n\n(6) ShuffleQueryStage\nOutput [2]: [business_id#0, count#117L]\nArguments: 0\n\n(7) AQEShuffleRead\nInput [2]: [business_id#0, count#117L]\nArguments: coalesced\n\n(8) HashAggregate [codegen id : 2]\nInput [2]: [business_id#0, count#117L]\nKeys [1]: [business_id#0]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#93L]\nResults [1]: [count(1)#93L AS com_amazon_deequ_dq_metrics_count#94L]\n\n(9) HashAggregate [codegen id : 2]\nInput [1]: [com_amazon_deequ_dq_metrics_count#94L]\nKeys: []\nFunctions [1]: [partial_sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))]\nAggregate Attributes [1]: [sum#114]\nResults [1]: [sum#115]\n\n(10) Exchange\nInput [1]: [sum#115]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=177]\n\n(11) ShuffleQueryStage\nOutput [1]: [sum#115]\nArguments: 1\n\n(12) HashAggregate\nInput [1]: [sum#115]\nKeys: []\nFunctions [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))]\nAggregate Attributes [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))#108]\nResults [1]: [(sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))#108 / 586579.0) AS (sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#112]\n\n(13) Filter\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(14) HashAggregate\nInput [1]: [business_id#0]\nKeys [1]: [business_id#0]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#116L]\nResults [2]: [business_id#0, count#117L]\n\n(15) Exchange\nInput [2]: [business_id#0, count#117L]\nArguments: hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=114]\n\n(16) HashAggregate\nInput [2]: [business_id#0, count#117L]\nKeys [1]: [business_id#0]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#93L]\nResults [1]: [count(1)#93L AS com_amazon_deequ_dq_metrics_count#94L]\n\n(17) HashAggregate\nInput [1]: [com_amazon_deequ_dq_metrics_count#94L]\nKeys: []\nFunctions [1]: [partial_sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))]\nAggregate Attributes [1]: [sum#114]\nResults [1]: [sum#115]\n\n(18) Exchange\nInput [1]: [sum#115]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=118]\n\n(19) HashAggregate\nInput [1]: [sum#115]\nKeys: []\nFunctions [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))]\nAggregate Attributes [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))#108]\nResults [1]: [(sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))#108 / 586579.0) AS (sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#112]\n\n(20) AdaptiveSparkPlan\nOutput [1]: [(sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#112]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 1","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=177]","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=141]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(business_id#0)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0] Batched: true, DataFilters: [isnotnull(business_id#0)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [IsNotNull(business_id)], ReadSchema: struct<business_id:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(business_id)]","DataFilters":"[isnotnull(business_id#0)]"},"metrics":[{"name":"number of files read","accumulatorId":450,"metricType":"sum"},{"name":"scan time","accumulatorId":449,"metricType":"timing"},{"name":"metadata time","accumulatorId":451,"metricType":"timing"},{"name":"size of files read","accumulatorId":452,"metricType":"size"},{"name":"number of output rows","accumulatorId":448,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":523,"metricType":"sum"},{"name":"number of input batches","accumulatorId":524,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":522,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":518,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":519,"metricType":"timing"},{"name":"peak memory","accumulatorId":517,"metricType":"size"},{"name":"number of output rows","accumulatorId":516,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":521,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":520,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":515,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":513,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":507,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":514,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":508,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":505,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":502,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":511,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":504,"metricType":"sum"},{"name":"records read","accumulatorId":501,"metricType":"sum"},{"name":"local bytes read","accumulatorId":499,"metricType":"size"},{"name":"fetch wait time","accumulatorId":500,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":497,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":503,"metricType":"sum"},{"name":"local blocks read","accumulatorId":496,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":506,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":495,"metricType":"sum"},{"name":"data size","accumulatorId":493,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":509,"metricType":"size"},{"name":"number of partitions","accumulatorId":494,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":510,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":498,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":512,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":601,"metricType":"sum"},{"name":"partition data size","accumulatorId":602,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":603,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":597,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":598,"metricType":"timing"},{"name":"peak memory","accumulatorId":596,"metricType":"size"},{"name":"number of output rows","accumulatorId":595,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":600,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":599,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":591,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":592,"metricType":"timing"},{"name":"peak memory","accumulatorId":590,"metricType":"size"},{"name":"number of output rows","accumulatorId":589,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":594,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":593,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":588,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":586,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":580,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":587,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":581,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":578,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":575,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":584,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":577,"metricType":"sum"},{"name":"records read","accumulatorId":574,"metricType":"sum"},{"name":"local bytes read","accumulatorId":572,"metricType":"size"},{"name":"fetch wait time","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":570,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":576,"metricType":"sum"},{"name":"local blocks read","accumulatorId":569,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":579,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":568,"metricType":"sum"},{"name":"data size","accumulatorId":566,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":582,"metricType":"size"},{"name":"number of partitions","accumulatorId":567,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":583,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":571,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":585,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":562,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":563,"metricType":"timing"},{"name":"peak memory","accumulatorId":561,"metricType":"size"},{"name":"number of output rows","accumulatorId":560,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":565,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":564,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[601,5],[603,5],[602,1072267],[602,1048932],[602,1048636],[602,1057498],[602,1964347]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[567,1]]}
{"Event":"SparkListenerJobStart","Job ID":7,"Submission Time":1720131138696,"Stage Infos":[{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":6,"RDD Info":[{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"58\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"FileScanRDD","Scope":"{\"id\":\"58\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":5,"RDD Info":[{"RDD ID":24,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"60\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"64\",\"name\":\"AQEShuffleRead\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[9],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[9,10],"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"59\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"2","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"2","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":5,"RDD Info":[{"RDD ID":24,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"60\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"64\",\"name\":\"AQEShuffleRead\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[9],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720131138719,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"59\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"2","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"2","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":10,"Stage Attempt ID":0,"Task Info":{"Task ID":22,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131138724,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":10,"Stage Attempt ID":0,"Task Info":{"Task ID":23,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131138724,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":10,"Stage Attempt ID":0,"Task Info":{"Task ID":24,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131138884,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":10,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":23,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131138724,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131138885,"Failed":false,"Killed":false,"Accumulables":[{"ID":496,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":499,"Name":"local bytes read","Update":"1004411","Value":"1004411","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":500,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":501,"Name":"records read","Update":"37813","Value":"37813","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":566,"Name":"data size","Update":"16","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":585,"Name":"shuffle bytes written","Update":"56","Value":"56","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":586,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":587,"Name":"shuffle write time","Update":"302208","Value":"302208","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":588,"Name":"duration","Update":"96","Value":"96","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":589,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":592,"Name":"time in aggregation build","Update":"95","Value":"95","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":595,"Name":"number of output rows","Update":"37813","Value":"37813","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":596,"Name":"peak memory","Update":"35651568","Value":"35651568","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":598,"Name":"time in aggregation build","Update":"75","Value":"75","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":599,"Name":"avg hash probes per key","Update":"16","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":604,"Name":"internal.metrics.executorDeserializeTime","Update":37,"Value":37,"Internal":true,"Count Failed Values":true},{"ID":605,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16034371,"Value":16034371,"Internal":true,"Count Failed Values":true},{"ID":606,"Name":"internal.metrics.executorRunTime","Update":114,"Value":114,"Internal":true,"Count Failed Values":true},{"ID":607,"Name":"internal.metrics.executorCpuTime","Update":86300792,"Value":86300792,"Internal":true,"Count Failed Values":true},{"ID":608,"Name":"internal.metrics.resultSize","Update":5938,"Value":5938,"Internal":true,"Count Failed Values":true},{"ID":609,"Name":"internal.metrics.jvmGCTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":610,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":613,"Name":"internal.metrics.peakExecutionMemory","Update":35651568,"Value":35651568,"Internal":true,"Count Failed Values":true},{"ID":615,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":616,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":617,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":618,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":619,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1004411,"Value":1004411,"Internal":true,"Count Failed Values":true},{"ID":620,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":621,"Name":"internal.metrics.shuffle.read.recordsRead","Update":37813,"Value":37813,"Internal":true,"Count Failed Values":true},{"ID":622,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":623,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":624,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":625,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":626,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":627,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":628,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":629,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":630,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":631,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":632,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":56,"Internal":true,"Count Failed Values":true},{"ID":633,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":634,"Name":"internal.metrics.shuffle.write.writeTime","Update":302208,"Value":302208,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":37,"Executor Deserialize CPU Time":16034371,"Executor Run Time":114,"Executor CPU Time":86300792,"Peak Execution Memory":35651568,"Result Size":5938,"JVM GC Time":4,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1004411,"Total Records Read":37813,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":302208,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":10,"Stage Attempt ID":0,"Task Info":{"Task ID":25,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131138885,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":10,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":22,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131138724,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131138886,"Failed":false,"Killed":false,"Accumulables":[{"ID":496,"Name":"local blocks read","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":499,"Name":"local bytes read","Update":"1031257","Value":"2035668","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":500,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":501,"Name":"records read","Update":"38816","Value":"76629","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":566,"Name":"data size","Update":"16","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":585,"Name":"shuffle bytes written","Update":"56","Value":"112","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":586,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":587,"Name":"shuffle write time","Update":"308790","Value":"610998","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":588,"Name":"duration","Update":"96","Value":"192","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":589,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":592,"Name":"time in aggregation build","Update":"95","Value":"190","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":595,"Name":"number of output rows","Update":"38816","Value":"76629","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":596,"Name":"peak memory","Update":"35651568","Value":"71303136","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":598,"Name":"time in aggregation build","Update":"75","Value":"150","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":599,"Name":"avg hash probes per key","Update":"16","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":604,"Name":"internal.metrics.executorDeserializeTime","Update":37,"Value":74,"Internal":true,"Count Failed Values":true},{"ID":605,"Name":"internal.metrics.executorDeserializeCpuTime","Update":31355044,"Value":47389415,"Internal":true,"Count Failed Values":true},{"ID":606,"Name":"internal.metrics.executorRunTime","Update":116,"Value":230,"Internal":true,"Count Failed Values":true},{"ID":607,"Name":"internal.metrics.executorCpuTime","Update":95061459,"Value":181362251,"Internal":true,"Count Failed Values":true},{"ID":608,"Name":"internal.metrics.resultSize","Update":5895,"Value":11833,"Internal":true,"Count Failed Values":true},{"ID":609,"Name":"internal.metrics.jvmGCTime","Update":4,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":613,"Name":"internal.metrics.peakExecutionMemory","Update":35651568,"Value":71303136,"Internal":true,"Count Failed Values":true},{"ID":615,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":616,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":617,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":618,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":619,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1031257,"Value":2035668,"Internal":true,"Count Failed Values":true},{"ID":620,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":621,"Name":"internal.metrics.shuffle.read.recordsRead","Update":38816,"Value":76629,"Internal":true,"Count Failed Values":true},{"ID":622,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":623,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":624,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":625,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":626,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":627,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":628,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":629,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":630,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":631,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":632,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":112,"Internal":true,"Count Failed Values":true},{"ID":633,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":634,"Name":"internal.metrics.shuffle.write.writeTime","Update":308790,"Value":610998,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":37,"Executor Deserialize CPU Time":31355044,"Executor Run Time":116,"Executor CPU Time":95061459,"Peak Execution Memory":35651568,"Result Size":5895,"JVM GC Time":4,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1031257,"Total Records Read":38816,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":308790,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":10,"Stage Attempt ID":0,"Task Info":{"Task ID":26,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131138933,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":10,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":24,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131138884,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131138934,"Failed":false,"Killed":false,"Accumulables":[{"ID":496,"Name":"local blocks read","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":499,"Name":"local bytes read","Update":"1001272","Value":"3036940","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":500,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":501,"Name":"records read","Update":"37708","Value":"114337","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":566,"Name":"data size","Update":"16","Value":"48","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":585,"Name":"shuffle bytes written","Update":"56","Value":"168","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":586,"Name":"shuffle records written","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":587,"Name":"shuffle write time","Update":"268290","Value":"879288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":588,"Name":"duration","Update":"30","Value":"222","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":589,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":592,"Name":"time in aggregation build","Update":"29","Value":"219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":595,"Name":"number of output rows","Update":"37708","Value":"114337","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":596,"Name":"peak memory","Update":"35651568","Value":"106954704","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":598,"Name":"time in aggregation build","Update":"20","Value":"170","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":599,"Name":"avg hash probes per key","Update":"16","Value":"48","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":604,"Name":"internal.metrics.executorDeserializeTime","Update":7,"Value":81,"Internal":true,"Count Failed Values":true},{"ID":605,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3997083,"Value":51386498,"Internal":true,"Count Failed Values":true},{"ID":606,"Name":"internal.metrics.executorRunTime","Update":34,"Value":264,"Internal":true,"Count Failed Values":true},{"ID":607,"Name":"internal.metrics.executorCpuTime","Update":31633833,"Value":212996084,"Internal":true,"Count Failed Values":true},{"ID":608,"Name":"internal.metrics.resultSize","Update":5895,"Value":17728,"Internal":true,"Count Failed Values":true},{"ID":609,"Name":"internal.metrics.jvmGCTime","Update":1,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":613,"Name":"internal.metrics.peakExecutionMemory","Update":35651568,"Value":106954704,"Internal":true,"Count Failed Values":true},{"ID":615,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":616,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":617,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":618,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":619,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1001272,"Value":3036940,"Internal":true,"Count Failed Values":true},{"ID":620,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":621,"Name":"internal.metrics.shuffle.read.recordsRead","Update":37708,"Value":114337,"Internal":true,"Count Failed Values":true},{"ID":622,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":623,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":624,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":625,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":626,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":627,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":628,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":629,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":630,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":631,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":632,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":168,"Internal":true,"Count Failed Values":true},{"ID":633,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":634,"Name":"internal.metrics.shuffle.write.writeTime","Update":268290,"Value":879288,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":7,"Executor Deserialize CPU Time":3997083,"Executor Run Time":34,"Executor CPU Time":31633833,"Peak Execution Memory":35651568,"Result Size":5895,"JVM GC Time":1,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1001272,"Total Records Read":37708,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":268290,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":10,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":25,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131138885,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131138934,"Failed":false,"Killed":false,"Accumulables":[{"ID":496,"Name":"local blocks read","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":499,"Name":"local bytes read","Update":"1006861","Value":"4043801","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":500,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":501,"Name":"records read","Update":"37914","Value":"152251","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":566,"Name":"data size","Update":"16","Value":"64","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":585,"Name":"shuffle bytes written","Update":"56","Value":"224","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":586,"Name":"shuffle records written","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":587,"Name":"shuffle write time","Update":"200708","Value":"1079996","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":588,"Name":"duration","Update":"29","Value":"251","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":589,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":592,"Name":"time in aggregation build","Update":"29","Value":"248","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":595,"Name":"number of output rows","Update":"37914","Value":"152251","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":596,"Name":"peak memory","Update":"35651568","Value":"142606272","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":598,"Name":"time in aggregation build","Update":"20","Value":"190","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":599,"Name":"avg hash probes per key","Update":"15","Value":"63","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":604,"Name":"internal.metrics.executorDeserializeTime","Update":6,"Value":87,"Internal":true,"Count Failed Values":true},{"ID":605,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3486585,"Value":54873083,"Internal":true,"Count Failed Values":true},{"ID":606,"Name":"internal.metrics.executorRunTime","Update":32,"Value":296,"Internal":true,"Count Failed Values":true},{"ID":607,"Name":"internal.metrics.executorCpuTime","Update":31422204,"Value":244418288,"Internal":true,"Count Failed Values":true},{"ID":608,"Name":"internal.metrics.resultSize","Update":5938,"Value":23666,"Internal":true,"Count Failed Values":true},{"ID":609,"Name":"internal.metrics.jvmGCTime","Update":1,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":610,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":613,"Name":"internal.metrics.peakExecutionMemory","Update":35651568,"Value":142606272,"Internal":true,"Count Failed Values":true},{"ID":615,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":616,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":617,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":618,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":619,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1006861,"Value":4043801,"Internal":true,"Count Failed Values":true},{"ID":620,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":621,"Name":"internal.metrics.shuffle.read.recordsRead","Update":37914,"Value":152251,"Internal":true,"Count Failed Values":true},{"ID":622,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":623,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":624,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":625,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":626,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":627,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":628,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":629,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":630,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":631,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":632,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":224,"Internal":true,"Count Failed Values":true},{"ID":633,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":634,"Name":"internal.metrics.shuffle.write.writeTime","Update":200708,"Value":1079996,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":6,"Executor Deserialize CPU Time":3486585,"Executor Run Time":32,"Executor CPU Time":31422204,"Peak Execution Memory":35651568,"Result Size":5938,"JVM GC Time":1,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1006861,"Total Records Read":37914,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":200708,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":10,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":26,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131138933,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131138966,"Failed":false,"Killed":false,"Accumulables":[{"ID":496,"Name":"local blocks read","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":499,"Name":"local bytes read","Update":"1872382","Value":"5916183","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":500,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":501,"Name":"records read","Update":"70519","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":566,"Name":"data size","Update":"16","Value":"80","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":585,"Name":"shuffle bytes written","Update":"56","Value":"280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":586,"Name":"shuffle records written","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":587,"Name":"shuffle write time","Update":"378374","Value":"1458370","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":588,"Name":"duration","Update":"14","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":589,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":592,"Name":"time in aggregation build","Update":"14","Value":"262","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":595,"Name":"number of output rows","Update":"70519","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":596,"Name":"peak memory","Update":"37748720","Value":"180354992","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":598,"Name":"time in aggregation build","Update":"10","Value":"200","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":599,"Name":"avg hash probes per key","Update":"16","Value":"79","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":604,"Name":"internal.metrics.executorDeserializeTime","Update":5,"Value":92,"Internal":true,"Count Failed Values":true},{"ID":605,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2503000,"Value":57376083,"Internal":true,"Count Failed Values":true},{"ID":606,"Name":"internal.metrics.executorRunTime","Update":17,"Value":313,"Internal":true,"Count Failed Values":true},{"ID":607,"Name":"internal.metrics.executorCpuTime","Update":17331292,"Value":261749580,"Internal":true,"Count Failed Values":true},{"ID":608,"Name":"internal.metrics.resultSize","Update":5938,"Value":29604,"Internal":true,"Count Failed Values":true},{"ID":609,"Name":"internal.metrics.jvmGCTime","Update":1,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":610,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":613,"Name":"internal.metrics.peakExecutionMemory","Update":37748720,"Value":180354992,"Internal":true,"Count Failed Values":true},{"ID":615,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":616,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":617,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":618,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":619,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1872382,"Value":5916183,"Internal":true,"Count Failed Values":true},{"ID":620,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":621,"Name":"internal.metrics.shuffle.read.recordsRead","Update":70519,"Value":222770,"Internal":true,"Count Failed Values":true},{"ID":622,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":623,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":624,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":625,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":626,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":627,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":628,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":629,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":630,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":631,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":632,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":280,"Internal":true,"Count Failed Values":true},{"ID":633,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":634,"Name":"internal.metrics.shuffle.write.writeTime","Update":378374,"Value":1458370,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":5,"Executor Deserialize CPU Time":2503000,"Executor Run Time":17,"Executor CPU Time":17331292,"Peak Execution Memory":37748720,"Result Size":5938,"JVM GC Time":1,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1872382,"Total Records Read":70519,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":378374,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":5,"RDD Info":[{"RDD ID":24,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"60\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"64\",\"name\":\"AQEShuffleRead\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[9],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720131138719,"Completion Time":1720131138966,"Accumulables":[{"ID":496,"Name":"local blocks read","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":499,"Name":"local bytes read","Value":"5916183","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":500,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":501,"Name":"records read","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":566,"Name":"data size","Value":"80","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":585,"Name":"shuffle bytes written","Value":"280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":586,"Name":"shuffle records written","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":587,"Name":"shuffle write time","Value":"1458370","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":588,"Name":"duration","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":589,"Name":"number of output rows","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":592,"Name":"time in aggregation build","Value":"262","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":595,"Name":"number of output rows","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":596,"Name":"peak memory","Value":"180354992","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":598,"Name":"time in aggregation build","Value":"200","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":599,"Name":"avg hash probes per key","Value":"79","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":604,"Name":"internal.metrics.executorDeserializeTime","Value":92,"Internal":true,"Count Failed Values":true},{"ID":605,"Name":"internal.metrics.executorDeserializeCpuTime","Value":57376083,"Internal":true,"Count Failed Values":true},{"ID":606,"Name":"internal.metrics.executorRunTime","Value":313,"Internal":true,"Count Failed Values":true},{"ID":607,"Name":"internal.metrics.executorCpuTime","Value":261749580,"Internal":true,"Count Failed Values":true},{"ID":608,"Name":"internal.metrics.resultSize","Value":29604,"Internal":true,"Count Failed Values":true},{"ID":609,"Name":"internal.metrics.jvmGCTime","Value":11,"Internal":true,"Count Failed Values":true},{"ID":610,"Name":"internal.metrics.resultSerializationTime","Value":3,"Internal":true,"Count Failed Values":true},{"ID":613,"Name":"internal.metrics.peakExecutionMemory","Value":180354992,"Internal":true,"Count Failed Values":true},{"ID":615,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":616,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":5,"Internal":true,"Count Failed Values":true},{"ID":617,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":618,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":619,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":5916183,"Internal":true,"Count Failed Values":true},{"ID":620,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":621,"Name":"internal.metrics.shuffle.read.recordsRead","Value":222770,"Internal":true,"Count Failed Values":true},{"ID":622,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":623,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":624,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":625,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":626,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":627,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":628,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":629,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":630,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":631,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":632,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":280,"Internal":true,"Count Failed Values":true},{"ID":633,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":5,"Internal":true,"Count Failed Values":true},{"ID":634,"Name":"internal.metrics.shuffle.write.writeTime","Value":1458370,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":7,"Completion Time":1720131138967,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":2,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (20)\n+- == Final Plan ==\n   * HashAggregate (12)\n   +- ShuffleQueryStage (11), Statistics(sizeInBytes=80.0 B, rowCount=5)\n      +- Exchange (10)\n         +- * HashAggregate (9)\n            +- * HashAggregate (8)\n               +- AQEShuffleRead (7)\n                  +- ShuffleQueryStage (6), Statistics(sizeInBytes=10.2 MiB, rowCount=2.23E+5)\n                     +- Exchange (5)\n                        +- * HashAggregate (4)\n                           +- * Filter (3)\n                              +- * ColumnarToRow (2)\n                                 +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (19)\n   +- Exchange (18)\n      +- HashAggregate (17)\n         +- HashAggregate (16)\n            +- Exchange (15)\n               +- HashAggregate (14)\n                  +- Filter (13)\n                     +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [1]: [business_id#0]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nPushedFilters: [IsNotNull(business_id)]\nReadSchema: struct<business_id:string>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [1]: [business_id#0]\n\n(3) Filter [codegen id : 1]\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(4) HashAggregate [codegen id : 1]\nInput [1]: [business_id#0]\nKeys [1]: [business_id#0]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#116L]\nResults [2]: [business_id#0, count#117L]\n\n(5) Exchange\nInput [2]: [business_id#0, count#117L]\nArguments: hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=141]\n\n(6) ShuffleQueryStage\nOutput [2]: [business_id#0, count#117L]\nArguments: 0\n\n(7) AQEShuffleRead\nInput [2]: [business_id#0, count#117L]\nArguments: coalesced\n\n(8) HashAggregate [codegen id : 2]\nInput [2]: [business_id#0, count#117L]\nKeys [1]: [business_id#0]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#93L]\nResults [1]: [count(1)#93L AS com_amazon_deequ_dq_metrics_count#94L]\n\n(9) HashAggregate [codegen id : 2]\nInput [1]: [com_amazon_deequ_dq_metrics_count#94L]\nKeys: []\nFunctions [1]: [partial_sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))]\nAggregate Attributes [1]: [sum#114]\nResults [1]: [sum#115]\n\n(10) Exchange\nInput [1]: [sum#115]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=177]\n\n(11) ShuffleQueryStage\nOutput [1]: [sum#115]\nArguments: 1\n\n(12) HashAggregate [codegen id : 3]\nInput [1]: [sum#115]\nKeys: []\nFunctions [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))]\nAggregate Attributes [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))#108]\nResults [1]: [(sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))#108 / 586579.0) AS (sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#112]\n\n(13) Filter\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(14) HashAggregate\nInput [1]: [business_id#0]\nKeys [1]: [business_id#0]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#116L]\nResults [2]: [business_id#0, count#117L]\n\n(15) Exchange\nInput [2]: [business_id#0, count#117L]\nArguments: hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=114]\n\n(16) HashAggregate\nInput [2]: [business_id#0, count#117L]\nKeys [1]: [business_id#0]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#93L]\nResults [1]: [count(1)#93L AS com_amazon_deequ_dq_metrics_count#94L]\n\n(17) HashAggregate\nInput [1]: [com_amazon_deequ_dq_metrics_count#94L]\nKeys: []\nFunctions [1]: [partial_sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))]\nAggregate Attributes [1]: [sum#114]\nResults [1]: [sum#115]\n\n(18) Exchange\nInput [1]: [sum#115]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=118]\n\n(19) HashAggregate\nInput [1]: [sum#115]\nKeys: []\nFunctions [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))]\nAggregate Attributes [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))#108]\nResults [1]: [(sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))#108 / 586579.0) AS (sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#112]\n\n(20) AdaptiveSparkPlan\nOutput [1]: [(sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#112]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (3)","simpleString":"WholeStageCodegen (3)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 1","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=177]","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast((com_amazon_deequ_dq_metrics_count#94L = 1) as double))])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=141]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(business_id#0)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0] Batched: true, DataFilters: [isnotnull(business_id#0)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [IsNotNull(business_id)], ReadSchema: struct<business_id:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(business_id)]","DataFilters":"[isnotnull(business_id#0)]"},"metrics":[{"name":"number of files read","accumulatorId":450,"metricType":"sum"},{"name":"scan time","accumulatorId":449,"metricType":"timing"},{"name":"metadata time","accumulatorId":451,"metricType":"timing"},{"name":"size of files read","accumulatorId":452,"metricType":"size"},{"name":"number of output rows","accumulatorId":448,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":523,"metricType":"sum"},{"name":"number of input batches","accumulatorId":524,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":522,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":518,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":519,"metricType":"timing"},{"name":"peak memory","accumulatorId":517,"metricType":"size"},{"name":"number of output rows","accumulatorId":516,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":521,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":520,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":515,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":513,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":507,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":514,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":508,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":505,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":502,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":511,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":504,"metricType":"sum"},{"name":"records read","accumulatorId":501,"metricType":"sum"},{"name":"local bytes read","accumulatorId":499,"metricType":"size"},{"name":"fetch wait time","accumulatorId":500,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":497,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":503,"metricType":"sum"},{"name":"local blocks read","accumulatorId":496,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":506,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":495,"metricType":"sum"},{"name":"data size","accumulatorId":493,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":509,"metricType":"size"},{"name":"number of partitions","accumulatorId":494,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":510,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":498,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":512,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":601,"metricType":"sum"},{"name":"partition data size","accumulatorId":602,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":603,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":597,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":598,"metricType":"timing"},{"name":"peak memory","accumulatorId":596,"metricType":"size"},{"name":"number of output rows","accumulatorId":595,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":600,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":599,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":591,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":592,"metricType":"timing"},{"name":"peak memory","accumulatorId":590,"metricType":"size"},{"name":"number of output rows","accumulatorId":589,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":594,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":593,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":588,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":586,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":580,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":587,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":581,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":578,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":575,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":584,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":577,"metricType":"sum"},{"name":"records read","accumulatorId":574,"metricType":"sum"},{"name":"local bytes read","accumulatorId":572,"metricType":"size"},{"name":"fetch wait time","accumulatorId":573,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":570,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":576,"metricType":"sum"},{"name":"local blocks read","accumulatorId":569,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":579,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":568,"metricType":"sum"},{"name":"data size","accumulatorId":566,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":582,"metricType":"size"},{"name":"number of partitions","accumulatorId":567,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":583,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":571,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":585,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":642,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":643,"metricType":"timing"},{"name":"peak memory","accumulatorId":641,"metricType":"size"},{"name":"number of output rows","accumulatorId":640,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":645,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":644,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":639,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":8,"Submission Time":1720131138984,"Stage Infos":[{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":5,"RDD Info":[{"RDD ID":24,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"60\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"64\",\"name\":\"AQEShuffleRead\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[11],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":1,"RDD Info":[{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"65\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"69\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[12],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":6,"RDD Info":[{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"58\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"FileScanRDD","Scope":"{\"id\":\"58\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[12,13,11],"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"71\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"2","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"2","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":1,"RDD Info":[{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"65\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"69\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[12],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720131138984,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"71\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"2","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"2","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":13,"Stage Attempt ID":0,"Task Info":{"Task ID":27,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131138986,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":13,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":27,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131138986,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131139014,"Failed":false,"Killed":false,"Accumulables":[{"ID":569,"Name":"local blocks read","Update":"5","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":572,"Name":"local bytes read","Update":"280","Value":"280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":573,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":574,"Name":"records read","Update":"5","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":639,"Name":"duration","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":640,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":643,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":646,"Name":"internal.metrics.executorDeserializeTime","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":647,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4120708,"Value":4120708,"Internal":true,"Count Failed Values":true},{"ID":648,"Name":"internal.metrics.executorRunTime","Update":15,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":649,"Name":"internal.metrics.executorCpuTime","Update":10116954,"Value":10116954,"Internal":true,"Count Failed Values":true},{"ID":650,"Name":"internal.metrics.resultSize","Update":4038,"Value":4038,"Internal":true,"Count Failed Values":true},{"ID":651,"Name":"internal.metrics.jvmGCTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":657,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":658,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":659,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":660,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":661,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":280,"Value":280,"Internal":true,"Count Failed Values":true},{"ID":662,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":663,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":664,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":665,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":666,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":667,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":668,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":669,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":670,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":671,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":672,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":673,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":7,"Executor Deserialize CPU Time":4120708,"Executor Run Time":15,"Executor CPU Time":10116954,"Peak Execution Memory":0,"Result Size":4038,"JVM GC Time":1,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":5,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":280,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":1,"RDD Info":[{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"65\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"69\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[12],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720131138984,"Completion Time":1720131139015,"Accumulables":[{"ID":569,"Name":"local blocks read","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":572,"Name":"local bytes read","Value":"280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":573,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":574,"Name":"records read","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":639,"Name":"duration","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":640,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":643,"Name":"time in aggregation build","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":646,"Name":"internal.metrics.executorDeserializeTime","Value":7,"Internal":true,"Count Failed Values":true},{"ID":647,"Name":"internal.metrics.executorDeserializeCpuTime","Value":4120708,"Internal":true,"Count Failed Values":true},{"ID":648,"Name":"internal.metrics.executorRunTime","Value":15,"Internal":true,"Count Failed Values":true},{"ID":649,"Name":"internal.metrics.executorCpuTime","Value":10116954,"Internal":true,"Count Failed Values":true},{"ID":650,"Name":"internal.metrics.resultSize","Value":4038,"Internal":true,"Count Failed Values":true},{"ID":651,"Name":"internal.metrics.jvmGCTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":657,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":658,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":5,"Internal":true,"Count Failed Values":true},{"ID":659,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":660,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":661,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":280,"Internal":true,"Count Failed Values":true},{"ID":662,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":663,"Name":"internal.metrics.shuffle.read.recordsRead","Value":5,"Internal":true,"Count Failed Values":true},{"ID":664,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":665,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":666,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":667,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":668,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":669,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":670,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":671,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":672,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":673,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":8,"Completion Time":1720131139015,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":2,"time":1720131139021,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":3,"rootExecutionId":3,"description":"showString at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [6]: [toprettystring(check)#160, toprettystring(check_level)#161, toprettystring(check_status)#162, toprettystring(constraint)#163, toprettystring(constraint_status)#164, toprettystring(constraint_message)#165]\nArguments: [toprettystring(check)#160, toprettystring(check_level)#161, toprettystring(check_status)#162, toprettystring(constraint)#163, toprettystring(constraint_status)#164, toprettystring(constraint_message)#165]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [toprettystring(check)#160, toprettystring(check_level)#161, toprettystring(check_status)#162, toprettystring(constraint)#163, toprettystring(constraint_status)#164, toprettystring(constraint_message)#165]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":681,"metricType":"sum"}]},"time":1720131139138,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[681,4]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":3,"time":1720131139151,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":4,"rootExecutionId":4,"description":"collect at AnalysisRunner.scala:327","details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (5)\n+- HashAggregate (4)\n   +- Exchange (3)\n      +- HashAggregate (2)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [2]: [business_id#0, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,stars:double>\n\n(2) HashAggregate\nInput [2]: [business_id#0, stars#7]\nKeys: []\nFunctions [5]: [partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)]\nAggregate Attributes [56]: [count#735L, sum#736L, MS[0]#521L, MS[1]#522L, MS[2]#523L, MS[3]#524L, MS[4]#525L, MS[5]#526L, MS[6]#527L, MS[7]#528L, MS[8]#529L, MS[9]#530L, MS[10]#531L, MS[11]#532L, MS[12]#533L, MS[13]#534L, MS[14]#535L, MS[15]#536L, MS[16]#537L, MS[17]#538L, MS[18]#539L, MS[19]#540L, MS[20]#541L, MS[21]#542L, MS[22]#543L, MS[23]#544L, MS[24]#545L, MS[25]#546L, MS[26]#547L, MS[27]#548L, MS[28]#549L, MS[29]#550L, MS[30]#551L, MS[31]#552L, MS[32]#553L, MS[33]#554L, MS[34]#555L, MS[35]#556L, MS[36]#557L, MS[37]#558L, MS[38]#559L, MS[39]#560L, MS[40]#561L, MS[41]#562L, MS[42]#563L, MS[43]#564L, MS[44]#565L, MS[45]#566L, MS[46]#567L, MS[47]#568L, MS[48]#569L, MS[49]#570L, MS[50]#571L, MS[51]#572L, sum#737, count#738L]\nResults [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\n\n(3) Exchange\nInput [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=206]\n\n(4) HashAggregate\nInput [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\nKeys: []\nFunctions [5]: [count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)]\nAggregate Attributes [5]: [count(1)#179L, sum(cast(isnotnull(business_id#0) as int))#181L, stateful_approx_count_distinct(business_id#0, 0, 0)#288, sum(stars#7)#289, count(stars#7)#290L]\nResults [6]: [count(1)#179L AS count(1)#411L, sum(cast(isnotnull(business_id#0) as int))#181L AS sum(CAST((business_id IS NOT NULL) AS INT))#412L, count(1)#179L AS count(1)#413L, stateful_approx_count_distinct(business_id#0, 0, 0)#288 AS stateful_approx_count_distinct(business_id)#518, sum(stars#7)#289 AS CAST(sum(stars) AS DOUBLE)#519, count(stars#7)#290L AS CAST(count(stars) AS BIGINT)#520L]\n\n(5) AdaptiveSparkPlan\nOutput [6]: [count(1)#411L, sum(CAST((business_id IS NOT NULL) AS INT))#412L, count(1)#413L, stateful_approx_count_distinct(business_id)#518, CAST(sum(stars) AS DOUBLE)#519, CAST(count(stars) AS BIGINT)#520L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=206]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)])","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":718,"metricType":"sum"},{"name":"scan time","accumulatorId":717,"metricType":"timing"},{"name":"metadata time","accumulatorId":719,"metricType":"timing"},{"name":"size of files read","accumulatorId":720,"metricType":"size"},{"name":"number of output rows","accumulatorId":716,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":712,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":713,"metricType":"timing"},{"name":"peak memory","accumulatorId":711,"metricType":"size"},{"name":"number of output rows","accumulatorId":710,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":715,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":714,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":708,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":702,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":709,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":703,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":700,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":697,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":706,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":699,"metricType":"sum"},{"name":"records read","accumulatorId":696,"metricType":"sum"},{"name":"local bytes read","accumulatorId":694,"metricType":"size"},{"name":"fetch wait time","accumulatorId":695,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":692,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":698,"metricType":"sum"},{"name":"local blocks read","accumulatorId":691,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":701,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":690,"metricType":"sum"},{"name":"data size","accumulatorId":688,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":704,"metricType":"size"},{"name":"number of partitions","accumulatorId":689,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":705,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":693,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":707,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":684,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":685,"metricType":"timing"},{"name":"peak memory","accumulatorId":683,"metricType":"size"},{"name":"number of output rows","accumulatorId":682,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":687,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":686,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1720131139188,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":4,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Current Plan ==\n   HashAggregate (6)\n   +- ShuffleQueryStage (5)\n      +- Exchange (4)\n         +- HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [2]: [business_id#0, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [2]: [business_id#0, stars#7]\n\n(3) HashAggregate\nInput [2]: [business_id#0, stars#7]\nKeys: []\nFunctions [5]: [partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)]\nAggregate Attributes [56]: [count#735L, sum#736L, MS[0]#521L, MS[1]#522L, MS[2]#523L, MS[3]#524L, MS[4]#525L, MS[5]#526L, MS[6]#527L, MS[7]#528L, MS[8]#529L, MS[9]#530L, MS[10]#531L, MS[11]#532L, MS[12]#533L, MS[13]#534L, MS[14]#535L, MS[15]#536L, MS[16]#537L, MS[17]#538L, MS[18]#539L, MS[19]#540L, MS[20]#541L, MS[21]#542L, MS[22]#543L, MS[23]#544L, MS[24]#545L, MS[25]#546L, MS[26]#547L, MS[27]#548L, MS[28]#549L, MS[29]#550L, MS[30]#551L, MS[31]#552L, MS[32]#553L, MS[33]#554L, MS[34]#555L, MS[35]#556L, MS[36]#557L, MS[37]#558L, MS[38]#559L, MS[39]#560L, MS[40]#561L, MS[41]#562L, MS[42]#563L, MS[43]#564L, MS[44]#565L, MS[45]#566L, MS[46]#567L, MS[47]#568L, MS[48]#569L, MS[49]#570L, MS[50]#571L, MS[51]#572L, sum#737, count#738L]\nResults [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\n\n(4) Exchange\nInput [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=219]\n\n(5) ShuffleQueryStage\nOutput [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\nArguments: 0\n\n(6) HashAggregate\nInput [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\nKeys: []\nFunctions [5]: [count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)]\nAggregate Attributes [5]: [count(1)#179L, sum(cast(isnotnull(business_id#0) as int))#181L, stateful_approx_count_distinct(business_id#0, 0, 0)#288, sum(stars#7)#289, count(stars#7)#290L]\nResults [6]: [count(1)#179L AS count(1)#411L, sum(cast(isnotnull(business_id#0) as int))#181L AS sum(CAST((business_id IS NOT NULL) AS INT))#412L, count(1)#179L AS count(1)#413L, stateful_approx_count_distinct(business_id#0, 0, 0)#288 AS stateful_approx_count_distinct(business_id)#518, sum(stars#7)#289 AS CAST(sum(stars) AS DOUBLE)#519, count(stars#7)#290L AS CAST(count(stars) AS BIGINT)#520L]\n\n(7) HashAggregate\nInput [2]: [business_id#0, stars#7]\nKeys: []\nFunctions [5]: [partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)]\nAggregate Attributes [56]: [count#735L, sum#736L, MS[0]#521L, MS[1]#522L, MS[2]#523L, MS[3]#524L, MS[4]#525L, MS[5]#526L, MS[6]#527L, MS[7]#528L, MS[8]#529L, MS[9]#530L, MS[10]#531L, MS[11]#532L, MS[12]#533L, MS[13]#534L, MS[14]#535L, MS[15]#536L, MS[16]#537L, MS[17]#538L, MS[18]#539L, MS[19]#540L, MS[20]#541L, MS[21]#542L, MS[22]#543L, MS[23]#544L, MS[24]#545L, MS[25]#546L, MS[26]#547L, MS[27]#548L, MS[28]#549L, MS[29]#550L, MS[30]#551L, MS[31]#552L, MS[32]#553L, MS[33]#554L, MS[34]#555L, MS[35]#556L, MS[36]#557L, MS[37]#558L, MS[38]#559L, MS[39]#560L, MS[40]#561L, MS[41]#562L, MS[42]#563L, MS[43]#564L, MS[44]#565L, MS[45]#566L, MS[46]#567L, MS[47]#568L, MS[48]#569L, MS[49]#570L, MS[50]#571L, MS[51]#572L, sum#737, count#738L]\nResults [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\n\n(8) Exchange\nInput [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=206]\n\n(9) HashAggregate\nInput [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\nKeys: []\nFunctions [5]: [count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)]\nAggregate Attributes [5]: [count(1)#179L, sum(cast(isnotnull(business_id#0) as int))#181L, stateful_approx_count_distinct(business_id#0, 0, 0)#288, sum(stars#7)#289, count(stars#7)#290L]\nResults [6]: [count(1)#179L AS count(1)#411L, sum(cast(isnotnull(business_id#0) as int))#181L AS sum(CAST((business_id IS NOT NULL) AS INT))#412L, count(1)#179L AS count(1)#413L, stateful_approx_count_distinct(business_id#0, 0, 0)#288 AS stateful_approx_count_distinct(business_id)#518, sum(stars#7)#289 AS CAST(sum(stars) AS DOUBLE)#519, count(stars#7)#290L AS CAST(count(stars) AS BIGINT)#520L]\n\n(10) AdaptiveSparkPlan\nOutput [6]: [count(1)#411L, sum(CAST((business_id IS NOT NULL) AS INT))#412L, count(1)#413L, stateful_approx_count_distinct(business_id)#518, CAST(sum(stars) AS DOUBLE)#519, CAST(count(stars) AS BIGINT)#520L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=219]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)])","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":718,"metricType":"sum"},{"name":"scan time","accumulatorId":717,"metricType":"timing"},{"name":"metadata time","accumulatorId":719,"metricType":"timing"},{"name":"size of files read","accumulatorId":720,"metricType":"size"},{"name":"number of output rows","accumulatorId":716,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":756,"metricType":"sum"},{"name":"number of input batches","accumulatorId":757,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":755,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":751,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":752,"metricType":"timing"},{"name":"peak memory","accumulatorId":750,"metricType":"size"},{"name":"number of output rows","accumulatorId":749,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":754,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":753,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":747,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":741,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":748,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":742,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":739,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":736,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":745,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":738,"metricType":"sum"},{"name":"records read","accumulatorId":735,"metricType":"sum"},{"name":"local bytes read","accumulatorId":733,"metricType":"size"},{"name":"fetch wait time","accumulatorId":734,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":731,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":737,"metricType":"sum"},{"name":"local blocks read","accumulatorId":730,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":740,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":729,"metricType":"sum"},{"name":"data size","accumulatorId":727,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":743,"metricType":"size"},{"name":"number of partitions","accumulatorId":728,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":744,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":732,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":746,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":723,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":724,"metricType":"timing"},{"name":"peak memory","accumulatorId":722,"metricType":"size"},{"name":"number of output rows","accumulatorId":721,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":726,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":725,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":4,"accumUpdates":[[718,1],[719,0],[720,37975350]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":4,"accumUpdates":[[728,1]]}
{"Event":"SparkListenerJobStart","Job ID":9,"Submission Time":1720131139220,"Stage Infos":[{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"84\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"87\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"83\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"87\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[14],"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"82\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"4","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"84\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"87\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"83\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"87\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720131139220,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"82\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"4","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":14,"Stage Attempt ID":0,"Task Info":{"Task ID":28,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131139223,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":14,"Stage Attempt ID":0,"Task Info":{"Task ID":29,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131139223,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":14,"Stage Attempt ID":0,"Task Info":{"Task ID":30,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131139223,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":14,"Stage Attempt ID":0,"Task Info":{"Task ID":31,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131139223,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":14,"Stage Attempt ID":0,"Task Info":{"Task ID":32,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131139223,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":14,"Stage Attempt ID":0,"Task Info":{"Task ID":33,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131139223,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":14,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":32,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131139223,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131140577,"Failed":false,"Killed":false,"Accumulables":[{"ID":717,"Name":"scan time","Update":"947","Value":"947","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":727,"Name":"data size","Update":"456","Value":"456","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":746,"Name":"shuffle bytes written","Update":"66","Value":"66","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":747,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":748,"Name":"shuffle write time","Update":"1039170","Value":"1039170","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":750,"Name":"peak memory","Update":"33816560","Value":"33816560","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":751,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":752,"Name":"time in aggregation build","Update":"1282","Value":"1282","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":753,"Name":"avg hash probes per key","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":755,"Name":"duration","Update":"2228","Value":"2228","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":758,"Name":"internal.metrics.executorDeserializeTime","Update":40,"Value":40,"Internal":true,"Count Failed Values":true},{"ID":759,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16034376,"Value":16034376,"Internal":true,"Count Failed Values":true},{"ID":760,"Name":"internal.metrics.executorRunTime","Update":1294,"Value":1294,"Internal":true,"Count Failed Values":true},{"ID":761,"Name":"internal.metrics.executorCpuTime","Update":348031705,"Value":348031705,"Internal":true,"Count Failed Values":true},{"ID":762,"Name":"internal.metrics.resultSize","Update":2764,"Value":2764,"Internal":true,"Count Failed Values":true},{"ID":763,"Name":"internal.metrics.jvmGCTime","Update":10,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":764,"Name":"internal.metrics.resultSerializationTime","Update":10,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":767,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":33816560,"Internal":true,"Count Failed Values":true},{"ID":786,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":66,"Value":66,"Internal":true,"Count Failed Values":true},{"ID":787,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":788,"Name":"internal.metrics.shuffle.write.writeTime","Update":1039170,"Value":1039170,"Internal":true,"Count Failed Values":true},{"ID":789,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":1799,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":146519144,"JVMOffHeapMemory":101372992,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":982235,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":982235,"OffHeapUnifiedMemory":0,"DirectPoolMemory":25232187,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":14,"MinorGCTime":66,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":66},"Task Metrics":{"Executor Deserialize Time":40,"Executor Deserialize CPU Time":16034376,"Executor Run Time":1294,"Executor CPU Time":348031705,"Peak Execution Memory":33816560,"Result Size":2764,"JVM GC Time":10,"Result Serialization Time":10,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":66,"Shuffle Write Time":1039170,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":14,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":28,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131139223,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131140580,"Failed":false,"Killed":false,"Accumulables":[{"ID":717,"Name":"scan time","Update":"952","Value":"1899","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":727,"Name":"data size","Update":"456","Value":"912","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":746,"Name":"shuffle bytes written","Update":"66","Value":"132","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":747,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":748,"Name":"shuffle write time","Update":"377458","Value":"1416628","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":750,"Name":"peak memory","Update":"33816560","Value":"67633120","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":751,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":752,"Name":"time in aggregation build","Update":"1296","Value":"2578","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":753,"Name":"avg hash probes per key","Update":"10","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":755,"Name":"duration","Update":"2248","Value":"4476","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":758,"Name":"internal.metrics.executorDeserializeTime","Update":35,"Value":75,"Internal":true,"Count Failed Values":true},{"ID":759,"Name":"internal.metrics.executorDeserializeCpuTime","Update":20144624,"Value":36179000,"Internal":true,"Count Failed Values":true},{"ID":760,"Name":"internal.metrics.executorRunTime","Update":1310,"Value":2604,"Internal":true,"Count Failed Values":true},{"ID":761,"Name":"internal.metrics.executorCpuTime","Update":151808752,"Value":499840457,"Internal":true,"Count Failed Values":true},{"ID":762,"Name":"internal.metrics.resultSize","Update":2764,"Value":5528,"Internal":true,"Count Failed Values":true},{"ID":763,"Name":"internal.metrics.jvmGCTime","Update":7,"Value":17,"Internal":true,"Count Failed Values":true},{"ID":764,"Name":"internal.metrics.resultSerializationTime","Update":3,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":767,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":67633120,"Internal":true,"Count Failed Values":true},{"ID":786,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":66,"Value":132,"Internal":true,"Count Failed Values":true},{"ID":787,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":788,"Name":"internal.metrics.shuffle.write.writeTime","Update":377458,"Value":1416628,"Internal":true,"Count Failed Values":true},{"ID":789,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":3598,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":35,"Executor Deserialize CPU Time":20144624,"Executor Run Time":1310,"Executor CPU Time":151808752,"Peak Execution Memory":33816560,"Result Size":2764,"JVM GC Time":7,"Result Serialization Time":3,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":66,"Shuffle Write Time":377458,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":14,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":31,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131139223,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131140581,"Failed":false,"Killed":false,"Accumulables":[{"ID":717,"Name":"scan time","Update":"926","Value":"2825","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":727,"Name":"data size","Update":"456","Value":"1368","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":746,"Name":"shuffle bytes written","Update":"66","Value":"198","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":747,"Name":"shuffle records written","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":748,"Name":"shuffle write time","Update":"284168","Value":"1700796","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":750,"Name":"peak memory","Update":"33816560","Value":"101449680","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":751,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":752,"Name":"time in aggregation build","Update":"1298","Value":"3876","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":753,"Name":"avg hash probes per key","Update":"10","Value":"30","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":755,"Name":"duration","Update":"2224","Value":"6700","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":758,"Name":"internal.metrics.executorDeserializeTime","Update":35,"Value":110,"Internal":true,"Count Failed Values":true},{"ID":759,"Name":"internal.metrics.executorDeserializeCpuTime","Update":12281875,"Value":48460875,"Internal":true,"Count Failed Values":true},{"ID":760,"Name":"internal.metrics.executorRunTime","Update":1315,"Value":3919,"Internal":true,"Count Failed Values":true},{"ID":761,"Name":"internal.metrics.executorCpuTime","Update":354995376,"Value":854835833,"Internal":true,"Count Failed Values":true},{"ID":762,"Name":"internal.metrics.resultSize","Update":2721,"Value":8249,"Internal":true,"Count Failed Values":true},{"ID":763,"Name":"internal.metrics.jvmGCTime","Update":7,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":767,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":101449680,"Internal":true,"Count Failed Values":true},{"ID":786,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":66,"Value":198,"Internal":true,"Count Failed Values":true},{"ID":787,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":788,"Name":"internal.metrics.shuffle.write.writeTime","Update":284168,"Value":1700796,"Internal":true,"Count Failed Values":true},{"ID":789,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":5397,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":35,"Executor Deserialize CPU Time":12281875,"Executor Run Time":1315,"Executor CPU Time":354995376,"Peak Execution Memory":33816560,"Result Size":2721,"JVM GC Time":7,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":66,"Shuffle Write Time":284168,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":14,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":29,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131139223,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131140586,"Failed":false,"Killed":false,"Accumulables":[{"ID":717,"Name":"scan time","Update":"1013","Value":"3838","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":727,"Name":"data size","Update":"456","Value":"1824","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":746,"Name":"shuffle bytes written","Update":"66","Value":"264","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":747,"Name":"shuffle records written","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":748,"Name":"shuffle write time","Update":"282166","Value":"1982962","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":750,"Name":"peak memory","Update":"33816560","Value":"135266240","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":751,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":752,"Name":"time in aggregation build","Update":"1299","Value":"5175","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":753,"Name":"avg hash probes per key","Update":"10","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":755,"Name":"duration","Update":"2312","Value":"9012","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":758,"Name":"internal.metrics.executorDeserializeTime","Update":41,"Value":151,"Internal":true,"Count Failed Values":true},{"ID":759,"Name":"internal.metrics.executorDeserializeCpuTime","Update":17799667,"Value":66260542,"Internal":true,"Count Failed Values":true},{"ID":760,"Name":"internal.metrics.executorRunTime","Update":1313,"Value":5232,"Internal":true,"Count Failed Values":true},{"ID":761,"Name":"internal.metrics.executorCpuTime","Update":102876827,"Value":957712660,"Internal":true,"Count Failed Values":true},{"ID":762,"Name":"internal.metrics.resultSize","Update":2721,"Value":10970,"Internal":true,"Count Failed Values":true},{"ID":763,"Name":"internal.metrics.jvmGCTime","Update":10,"Value":34,"Internal":true,"Count Failed Values":true},{"ID":767,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":135266240,"Internal":true,"Count Failed Values":true},{"ID":786,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":66,"Value":264,"Internal":true,"Count Failed Values":true},{"ID":787,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":788,"Name":"internal.metrics.shuffle.write.writeTime","Update":282166,"Value":1982962,"Internal":true,"Count Failed Values":true},{"ID":789,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":7196,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":146519144,"JVMOffHeapMemory":101372992,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":982235,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":982235,"OffHeapUnifiedMemory":0,"DirectPoolMemory":25232187,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":14,"MinorGCTime":66,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":66},"Task Metrics":{"Executor Deserialize Time":41,"Executor Deserialize CPU Time":17799667,"Executor Run Time":1313,"Executor CPU Time":102876827,"Peak Execution Memory":33816560,"Result Size":2721,"JVM GC Time":10,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":66,"Shuffle Write Time":282166,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":14,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":33,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131139223,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131140675,"Failed":false,"Killed":false,"Accumulables":[{"ID":717,"Name":"scan time","Update":"1124","Value":"4962","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":727,"Name":"data size","Update":"456","Value":"2280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":746,"Name":"shuffle bytes written","Update":"66","Value":"330","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":747,"Name":"shuffle records written","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":748,"Name":"shuffle write time","Update":"236335","Value":"2219297","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":750,"Name":"peak memory","Update":"33816560","Value":"169082800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":751,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":752,"Name":"time in aggregation build","Update":"1399","Value":"6574","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":753,"Name":"avg hash probes per key","Update":"10","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":755,"Name":"duration","Update":"2522","Value":"11534","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":758,"Name":"internal.metrics.executorDeserializeTime","Update":29,"Value":180,"Internal":true,"Count Failed Values":true},{"ID":759,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4621543,"Value":70882085,"Internal":true,"Count Failed Values":true},{"ID":760,"Name":"internal.metrics.executorRunTime","Update":1413,"Value":6645,"Internal":true,"Count Failed Values":true},{"ID":761,"Name":"internal.metrics.executorCpuTime","Update":292374456,"Value":1250087116,"Internal":true,"Count Failed Values":true},{"ID":762,"Name":"internal.metrics.resultSize","Update":2764,"Value":13734,"Internal":true,"Count Failed Values":true},{"ID":763,"Name":"internal.metrics.jvmGCTime","Update":13,"Value":47,"Internal":true,"Count Failed Values":true},{"ID":764,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":767,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":169082800,"Internal":true,"Count Failed Values":true},{"ID":786,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":66,"Value":330,"Internal":true,"Count Failed Values":true},{"ID":787,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":788,"Name":"internal.metrics.shuffle.write.writeTime","Update":236335,"Value":2219297,"Internal":true,"Count Failed Values":true},{"ID":789,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":8995,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":29,"Executor Deserialize CPU Time":4621543,"Executor Run Time":1413,"Executor CPU Time":292374456,"Peak Execution Memory":33816560,"Result Size":2764,"JVM GC Time":13,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":66,"Shuffle Write Time":236335,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":14,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":30,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131139223,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131143576,"Failed":false,"Killed":false,"Accumulables":[{"ID":716,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":717,"Name":"scan time","Update":"4152","Value":"9114","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":727,"Name":"data size","Update":"456","Value":"2736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":746,"Name":"shuffle bytes written","Update":"490","Value":"820","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":747,"Name":"shuffle records written","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":748,"Name":"shuffle write time","Update":"2000668","Value":"4219965","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"number of output rows","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":750,"Name":"peak memory","Update":"33816560","Value":"202899360","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":751,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":752,"Name":"time in aggregation build","Update":"4293","Value":"10867","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":753,"Name":"avg hash probes per key","Update":"10","Value":"60","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":755,"Name":"duration","Update":"4293","Value":"15827","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":756,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":757,"Name":"number of input batches","Update":"144","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":758,"Name":"internal.metrics.executorDeserializeTime","Update":28,"Value":208,"Internal":true,"Count Failed Values":true},{"ID":759,"Name":"internal.metrics.executorDeserializeCpuTime","Update":12425084,"Value":83307169,"Internal":true,"Count Failed Values":true},{"ID":760,"Name":"internal.metrics.executorRunTime","Update":4312,"Value":10957,"Internal":true,"Count Failed Values":true},{"ID":761,"Name":"internal.metrics.executorCpuTime","Update":287066553,"Value":1537153669,"Internal":true,"Count Failed Values":true},{"ID":762,"Name":"internal.metrics.resultSize","Update":2807,"Value":16541,"Internal":true,"Count Failed Values":true},{"ID":763,"Name":"internal.metrics.jvmGCTime","Update":31,"Value":78,"Internal":true,"Count Failed Values":true},{"ID":764,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":17,"Internal":true,"Count Failed Values":true},{"ID":767,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":202899360,"Internal":true,"Count Failed Values":true},{"ID":786,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":490,"Value":820,"Internal":true,"Count Failed Values":true},{"ID":787,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":788,"Name":"internal.metrics.shuffle.write.writeTime","Update":2000668,"Value":4219965,"Internal":true,"Count Failed Values":true},{"ID":789,"Name":"internal.metrics.input.bytesRead","Update":14218434,"Value":14227429,"Internal":true,"Count Failed Values":true},{"ID":790,"Name":"internal.metrics.input.recordsRead","Update":586579,"Value":586579,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":28,"Executor Deserialize CPU Time":12425084,"Executor Run Time":4312,"Executor CPU Time":287066553,"Peak Execution Memory":33816560,"Result Size":2807,"JVM GC Time":31,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":490,"Shuffle Write Time":2000668,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":14218434,"Records Read":586579},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"84\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"87\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"83\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"87\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720131139220,"Completion Time":1720131143577,"Accumulables":[{"ID":716,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":717,"Name":"scan time","Value":"9114","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":727,"Name":"data size","Value":"2736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":746,"Name":"shuffle bytes written","Value":"820","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":747,"Name":"shuffle records written","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":748,"Name":"shuffle write time","Value":"4219965","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":750,"Name":"peak memory","Value":"202899360","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":751,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":752,"Name":"time in aggregation build","Value":"10867","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":753,"Name":"avg hash probes per key","Value":"60","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":755,"Name":"duration","Value":"15827","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":756,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":757,"Name":"number of input batches","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":758,"Name":"internal.metrics.executorDeserializeTime","Value":208,"Internal":true,"Count Failed Values":true},{"ID":759,"Name":"internal.metrics.executorDeserializeCpuTime","Value":83307169,"Internal":true,"Count Failed Values":true},{"ID":760,"Name":"internal.metrics.executorRunTime","Value":10957,"Internal":true,"Count Failed Values":true},{"ID":761,"Name":"internal.metrics.executorCpuTime","Value":1537153669,"Internal":true,"Count Failed Values":true},{"ID":762,"Name":"internal.metrics.resultSize","Value":16541,"Internal":true,"Count Failed Values":true},{"ID":763,"Name":"internal.metrics.jvmGCTime","Value":78,"Internal":true,"Count Failed Values":true},{"ID":764,"Name":"internal.metrics.resultSerializationTime","Value":17,"Internal":true,"Count Failed Values":true},{"ID":767,"Name":"internal.metrics.peakExecutionMemory","Value":202899360,"Internal":true,"Count Failed Values":true},{"ID":786,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":820,"Internal":true,"Count Failed Values":true},{"ID":787,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":6,"Internal":true,"Count Failed Values":true},{"ID":788,"Name":"internal.metrics.shuffle.write.writeTime","Value":4219965,"Internal":true,"Count Failed Values":true},{"ID":789,"Name":"internal.metrics.input.bytesRead","Value":14227429,"Internal":true,"Count Failed Values":true},{"ID":790,"Name":"internal.metrics.input.recordsRead","Value":586579,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":9,"Completion Time":1720131143577,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":4,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Final Plan ==\n   HashAggregate (6)\n   +- ShuffleQueryStage (5), Statistics(sizeInBytes=2.7 KiB, rowCount=6)\n      +- Exchange (4)\n         +- HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [2]: [business_id#0, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [2]: [business_id#0, stars#7]\n\n(3) HashAggregate\nInput [2]: [business_id#0, stars#7]\nKeys: []\nFunctions [5]: [partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)]\nAggregate Attributes [56]: [count#735L, sum#736L, MS[0]#521L, MS[1]#522L, MS[2]#523L, MS[3]#524L, MS[4]#525L, MS[5]#526L, MS[6]#527L, MS[7]#528L, MS[8]#529L, MS[9]#530L, MS[10]#531L, MS[11]#532L, MS[12]#533L, MS[13]#534L, MS[14]#535L, MS[15]#536L, MS[16]#537L, MS[17]#538L, MS[18]#539L, MS[19]#540L, MS[20]#541L, MS[21]#542L, MS[22]#543L, MS[23]#544L, MS[24]#545L, MS[25]#546L, MS[26]#547L, MS[27]#548L, MS[28]#549L, MS[29]#550L, MS[30]#551L, MS[31]#552L, MS[32]#553L, MS[33]#554L, MS[34]#555L, MS[35]#556L, MS[36]#557L, MS[37]#558L, MS[38]#559L, MS[39]#560L, MS[40]#561L, MS[41]#562L, MS[42]#563L, MS[43]#564L, MS[44]#565L, MS[45]#566L, MS[46]#567L, MS[47]#568L, MS[48]#569L, MS[49]#570L, MS[50]#571L, MS[51]#572L, sum#737, count#738L]\nResults [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\n\n(4) Exchange\nInput [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=219]\n\n(5) ShuffleQueryStage\nOutput [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\nArguments: 0\n\n(6) HashAggregate\nInput [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\nKeys: []\nFunctions [5]: [count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)]\nAggregate Attributes [5]: [count(1)#179L, sum(cast(isnotnull(business_id#0) as int))#181L, stateful_approx_count_distinct(business_id#0, 0, 0)#288, sum(stars#7)#289, count(stars#7)#290L]\nResults [6]: [count(1)#179L AS count(1)#411L, sum(cast(isnotnull(business_id#0) as int))#181L AS sum(CAST((business_id IS NOT NULL) AS INT))#412L, count(1)#179L AS count(1)#413L, stateful_approx_count_distinct(business_id#0, 0, 0)#288 AS stateful_approx_count_distinct(business_id)#518, sum(stars#7)#289 AS CAST(sum(stars) AS DOUBLE)#519, count(stars#7)#290L AS CAST(count(stars) AS BIGINT)#520L]\n\n(7) HashAggregate\nInput [2]: [business_id#0, stars#7]\nKeys: []\nFunctions [5]: [partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)]\nAggregate Attributes [56]: [count#735L, sum#736L, MS[0]#521L, MS[1]#522L, MS[2]#523L, MS[3]#524L, MS[4]#525L, MS[5]#526L, MS[6]#527L, MS[7]#528L, MS[8]#529L, MS[9]#530L, MS[10]#531L, MS[11]#532L, MS[12]#533L, MS[13]#534L, MS[14]#535L, MS[15]#536L, MS[16]#537L, MS[17]#538L, MS[18]#539L, MS[19]#540L, MS[20]#541L, MS[21]#542L, MS[22]#543L, MS[23]#544L, MS[24]#545L, MS[25]#546L, MS[26]#547L, MS[27]#548L, MS[28]#549L, MS[29]#550L, MS[30]#551L, MS[31]#552L, MS[32]#553L, MS[33]#554L, MS[34]#555L, MS[35]#556L, MS[36]#557L, MS[37]#558L, MS[38]#559L, MS[39]#560L, MS[40]#561L, MS[41]#562L, MS[42]#563L, MS[43]#564L, MS[44]#565L, MS[45]#566L, MS[46]#567L, MS[47]#568L, MS[48]#569L, MS[49]#570L, MS[50]#571L, MS[51]#572L, sum#737, count#738L]\nResults [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\n\n(8) Exchange\nInput [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=206]\n\n(9) HashAggregate\nInput [56]: [count#739L, sum#740L, MS[0]#573L, MS[1]#574L, MS[2]#575L, MS[3]#576L, MS[4]#577L, MS[5]#578L, MS[6]#579L, MS[7]#580L, MS[8]#581L, MS[9]#582L, MS[10]#583L, MS[11]#584L, MS[12]#585L, MS[13]#586L, MS[14]#587L, MS[15]#588L, MS[16]#589L, MS[17]#590L, MS[18]#591L, MS[19]#592L, MS[20]#593L, MS[21]#594L, MS[22]#595L, MS[23]#596L, MS[24]#597L, MS[25]#598L, MS[26]#599L, MS[27]#600L, MS[28]#601L, MS[29]#602L, MS[30]#603L, MS[31]#604L, MS[32]#605L, MS[33]#606L, MS[34]#607L, MS[35]#608L, MS[36]#609L, MS[37]#610L, MS[38]#611L, MS[39]#612L, MS[40]#613L, MS[41]#614L, MS[42]#615L, MS[43]#616L, MS[44]#617L, MS[45]#618L, MS[46]#619L, MS[47]#620L, MS[48]#621L, MS[49]#622L, MS[50]#623L, MS[51]#624L, sum#741, count#742L]\nKeys: []\nFunctions [5]: [count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)]\nAggregate Attributes [5]: [count(1)#179L, sum(cast(isnotnull(business_id#0) as int))#181L, stateful_approx_count_distinct(business_id#0, 0, 0)#288, sum(stars#7)#289, count(stars#7)#290L]\nResults [6]: [count(1)#179L AS count(1)#411L, sum(cast(isnotnull(business_id#0) as int))#181L AS sum(CAST((business_id IS NOT NULL) AS INT))#412L, count(1)#179L AS count(1)#413L, stateful_approx_count_distinct(business_id#0, 0, 0)#288 AS stateful_approx_count_distinct(business_id)#518, sum(stars#7)#289 AS CAST(sum(stars) AS DOUBLE)#519, count(stars#7)#290L AS CAST(count(stars) AS BIGINT)#520L]\n\n(10) AdaptiveSparkPlan\nOutput [6]: [count(1)#411L, sum(CAST((business_id IS NOT NULL) AS INT))#412L, count(1)#413L, stateful_approx_count_distinct(business_id)#518, CAST(sum(stars) AS DOUBLE)#519, CAST(count(stars) AS BIGINT)#520L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=219]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)])","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":718,"metricType":"sum"},{"name":"scan time","accumulatorId":717,"metricType":"timing"},{"name":"metadata time","accumulatorId":719,"metricType":"timing"},{"name":"size of files read","accumulatorId":720,"metricType":"size"},{"name":"number of output rows","accumulatorId":716,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":756,"metricType":"sum"},{"name":"number of input batches","accumulatorId":757,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":755,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":751,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":752,"metricType":"timing"},{"name":"peak memory","accumulatorId":750,"metricType":"size"},{"name":"number of output rows","accumulatorId":749,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":754,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":753,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":747,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":741,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":748,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":742,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":739,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":736,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":745,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":738,"metricType":"sum"},{"name":"records read","accumulatorId":735,"metricType":"sum"},{"name":"local bytes read","accumulatorId":733,"metricType":"size"},{"name":"fetch wait time","accumulatorId":734,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":731,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":737,"metricType":"sum"},{"name":"local blocks read","accumulatorId":730,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":740,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":729,"metricType":"sum"},{"name":"data size","accumulatorId":727,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":743,"metricType":"size"},{"name":"number of partitions","accumulatorId":728,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":744,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":732,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":746,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":723,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":724,"metricType":"timing"},{"name":"peak memory","accumulatorId":722,"metricType":"size"},{"name":"number of output rows","accumulatorId":721,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":726,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":725,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":10,"Submission Time":1720131143591,"Stage Infos":[{"Stage ID":15,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"84\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"87\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"83\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"87\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":16,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":35,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"91\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"90\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[15],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[15,16],"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"92\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"4","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":16,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":35,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"91\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"90\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[15],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720131143592,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"92\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"4","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":34,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131143598,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":34,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131143598,"Executor ID":"1","Host":"172.31.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131143672,"Failed":false,"Killed":false,"Accumulables":[{"ID":721,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":722,"Name":"peak memory","Update":"33816560","Value":"33816560","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":723,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":724,"Name":"time in aggregation build","Update":"38","Value":"38","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":725,"Name":"avg hash probes per key","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":729,"Name":"remote blocks read","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":730,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":731,"Name":"remote bytes read","Update":"264","Value":"264","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":733,"Name":"local bytes read","Update":"556","Value":"556","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":734,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":735,"Name":"records read","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":744,"Name":"remote reqs duration","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":793,"Name":"internal.metrics.executorDeserializeTime","Update":9,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":794,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5795167,"Value":5795167,"Internal":true,"Count Failed Values":true},{"ID":795,"Name":"internal.metrics.executorRunTime","Update":48,"Value":48,"Internal":true,"Count Failed Values":true},{"ID":796,"Name":"internal.metrics.executorCpuTime","Update":39381832,"Value":39381832,"Internal":true,"Count Failed Values":true},{"ID":797,"Name":"internal.metrics.resultSize","Update":5764,"Value":5764,"Internal":true,"Count Failed Values":true},{"ID":798,"Name":"internal.metrics.jvmGCTime","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":802,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":33816560,"Internal":true,"Count Failed Values":true},{"ID":804,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":805,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":806,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":264,"Value":264,"Internal":true,"Count Failed Values":true},{"ID":807,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":808,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":556,"Value":556,"Internal":true,"Count Failed Values":true},{"ID":809,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":810,"Name":"internal.metrics.shuffle.read.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":811,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":812,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":813,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":814,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":815,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":816,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":817,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":818,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":819,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":820,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":9,"Executor Deserialize CPU Time":5795167,"Executor Run Time":48,"Executor CPU Time":39381832,"Peak Execution Memory":33816560,"Result Size":5764,"JVM GC Time":2,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":4,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":264,"Remote Bytes Read To Disk":0,"Local Bytes Read":556,"Total Records Read":6,"Remote Requests Duration":2,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":16,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":35,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"91\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"90\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[15],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720131143592,"Completion Time":1720131143672,"Accumulables":[{"ID":721,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":722,"Name":"peak memory","Value":"33816560","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":723,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":724,"Name":"time in aggregation build","Value":"38","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":725,"Name":"avg hash probes per key","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":729,"Name":"remote blocks read","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":730,"Name":"local blocks read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":731,"Name":"remote bytes read","Value":"264","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":733,"Name":"local bytes read","Value":"556","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":734,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":735,"Name":"records read","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":744,"Name":"remote reqs duration","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":793,"Name":"internal.metrics.executorDeserializeTime","Value":9,"Internal":true,"Count Failed Values":true},{"ID":794,"Name":"internal.metrics.executorDeserializeCpuTime","Value":5795167,"Internal":true,"Count Failed Values":true},{"ID":795,"Name":"internal.metrics.executorRunTime","Value":48,"Internal":true,"Count Failed Values":true},{"ID":796,"Name":"internal.metrics.executorCpuTime","Value":39381832,"Internal":true,"Count Failed Values":true},{"ID":797,"Name":"internal.metrics.resultSize","Value":5764,"Internal":true,"Count Failed Values":true},{"ID":798,"Name":"internal.metrics.jvmGCTime","Value":2,"Internal":true,"Count Failed Values":true},{"ID":802,"Name":"internal.metrics.peakExecutionMemory","Value":33816560,"Internal":true,"Count Failed Values":true},{"ID":804,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":4,"Internal":true,"Count Failed Values":true},{"ID":805,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":2,"Internal":true,"Count Failed Values":true},{"ID":806,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":264,"Internal":true,"Count Failed Values":true},{"ID":807,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":808,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":556,"Internal":true,"Count Failed Values":true},{"ID":809,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":810,"Name":"internal.metrics.shuffle.read.recordsRead","Value":6,"Internal":true,"Count Failed Values":true},{"ID":811,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":812,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":813,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":814,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":815,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":816,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":817,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":818,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":819,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":2,"Internal":true,"Count Failed Values":true},{"ID":820,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":10,"Completion Time":1720131143672,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":4,"time":1720131143680,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":5,"rootExecutionId":5,"description":"showString at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [4]: [toprettystring(entity)#780, toprettystring(instance)#781, toprettystring(name)#782, toprettystring(value)#783]\nArguments: [toprettystring(entity)#780, toprettystring(instance)#781, toprettystring(name)#782, toprettystring(value)#783]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [toprettystring(entity)#780, toprettystring(instance)#781, toprettystring(name)#782, toprettystring(value)#783]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":828,"metricType":"sum"}]},"time":1720131143741,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[828,4]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":5,"time":1720131143752,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":6,"rootExecutionId":6,"description":"collect at AnalysisRunner.scala:327","details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (5)\n+- HashAggregate (4)\n   +- Exchange (3)\n      +- HashAggregate (2)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:string,review_count:bigint,stars:double>\n\n(2) HashAggregate\nInput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nKeys: []\nFunctions [35]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(subcategories#5) as int)), partial_stateful_approx_count_distinct(subcategories#5, 0, 0), partial_statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@75354698, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(review_count#6L) as int)), partial_stateful_approx_count_distinct(review_count#6L, 0, 0), partial_sum(cast(isnotnull(stars#7) as int)), partial_stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [467]: [sum#5547L, count#5548L, MS[0]#3720L, MS[1]#3721L, MS[2]#3722L, MS[3]#3723L, MS[4]#3724L, MS[5]#3725L, MS[6]#3726L, MS[7]#3727L, MS[8]#3728L, MS[9]#3729L, MS[10]#3730L, MS[11]#3731L, MS[12]#3732L, MS[13]#3733L, MS[14]#3734L, MS[15]#3735L, MS[16]#3736L, MS[17]#3737L, MS[18]#3738L, MS[19]#3739L, MS[20]#3740L, MS[21]#3741L, MS[22]#3742L, MS[23]#3743L, MS[24]#3744L, MS[25]#3745L, MS[26]#3746L, MS[27]#3747L, MS[28]#3748L, MS[29]#3749L, MS[30]#3750L, MS[31]#3751L, MS[32]#3752L, MS[33]#3753L, MS[34]#3754L, MS[35]#3755L, MS[36]#3756L, MS[37]#3757L, MS[38]#3758L, MS[39]#3759L, MS[40]#3760L, MS[41]#3761L, MS[42]#3762L, MS[43]#3763L, MS[44]#3764L, MS[45]#3765L, MS[46]#3766L, MS[47]#3767L, MS[48]#3768L, MS[49]#3769L, MS[50]#3770L, MS[51]#3771L, null#3824L, fractional#3825L, integral#3826L, boolean#3827L, string#3828L, min#5549, max#5550, sum#5551L, MS[0]#3834L, MS[1]#3835L, MS[2]#3836L, MS[3]#3837L, MS[4]#3838L, MS[5]#3839L, MS[6]#3840L, MS[7]#3841L, MS[8]#3842L, MS[9]#3843L, MS[10]#3844L, MS[11]#3845L, MS[12]#3846L, MS[13]#3847L, MS[14]#3848L, MS[15]#3849L, MS[16]#3850L, MS[17]#3851L, MS[18]#3852L, MS[19]#3853L, MS[20]#3854L, MS[21]#3855L, MS[22]#3856L, MS[23]#3857L, MS[24]#3858L, MS[25]#3859L, MS[26]#3860L, MS[27]#3861L, MS[28]#3862L, MS[29]#3863L, MS[30]#3864L, MS[31]#3865L, MS[32]#3866L, MS[33]#3867L, MS[34]#3868L, MS[35]#3869L, MS[36]#3870L, MS[37]#3871L, MS[38]#3872L, MS[39]#3873L, MS[40]#3874L, MS[41]#3875L, MS[42]#3876L, MS[43]#3877L, MS[44]#3878L, MS[45]#3879L, MS[46]#3880L, MS[47]#3881L, MS[48]#3882L, MS[49]#3883L, MS[50]#3884L, MS[51]#3885L, null#3938L, fractional#3939L, integral#3940L, boolean#3941L, string#3942L, min#5552, max#5553, sum#5554L, MS[0]#3948L, MS[1]#3949L, MS[2]#3950L, MS[3]#3951L, MS[4]#3952L, MS[5]#3953L, MS[6]#3954L, MS[7]#3955L, MS[8]#3956L, MS[9]#3957L, MS[10]#3958L, MS[11]#3959L, MS[12]#3960L, MS[13]#3961L, MS[14]#3962L, MS[15]#3963L, MS[16]#3964L, MS[17]#3965L, MS[18]#3966L, MS[19]#3967L, MS[20]#3968L, MS[21]#3969L, MS[22]#3970L, MS[23]#3971L, MS[24]#3972L, MS[25]#3973L, MS[26]#3974L, MS[27]#3975L, MS[28]#3976L, MS[29]#3977L, MS[30]#3978L, MS[31]#3979L, MS[32]#3980L, MS[33]#3981L, MS[34]#3982L, MS[35]#3983L, MS[36]#3984L, MS[37]#3985L, MS[38]#3986L, MS[39]#3987L, MS[40]#3988L, MS[41]#3989L, MS[42]#3990L, MS[43]#3991L, MS[44]#3992L, MS[45]#3993L, MS[46]#3994L, MS[47]#3995L, MS[48]#3996L, MS[49]#3997L, MS[50]#3998L, MS[51]#3999L, null#4052L, fractional#4053L, integral#4054L, boolean#4055L, string#4056L, min#5555, max#5556, sum#5557L, MS[0]#4062L, MS[1]#4063L, MS[2]#4064L, MS[3]#4065L, MS[4]#4066L, MS[5]#4067L, MS[6]#4068L, MS[7]#4069L, MS[8]#4070L, MS[9]#4071L, MS[10]#4072L, MS[11]#4073L, MS[12]#4074L, MS[13]#4075L, MS[14]#4076L, MS[15]#4077L, MS[16]#4078L, MS[17]#4079L, MS[18]#4080L, MS[19]#4081L, MS[20]#4082L, MS[21]#4083L, MS[22]#4084L, MS[23]#4085L, MS[24]#4086L, MS[25]#4087L, MS[26]#4088L, MS[27]#4089L, MS[28]#4090L, MS[29]#4091L, MS[30]#4092L, MS[31]#4093L, MS[32]#4094L, MS[33]#4095L, MS[34]#4096L, MS[35]#4097L, MS[36]#4098L, MS[37]#4099L, MS[38]#4100L, MS[39]#4101L, MS[40]#4102L, MS[41]#4103L, MS[42]#4104L, MS[43]#4105L, MS[44]#4106L, MS[45]#4107L, MS[46]#4108L, MS[47]#4109L, MS[48]#4110L, MS[49]#4111L, MS[50]#4112L, MS[51]#4113L, null#4166L, fractional#4167L, integral#4168L, boolean#4169L, string#4170L, min#5558, max#5559, sum#5560L, MS[0]#4176L, MS[1]#4177L, MS[2]#4178L, MS[3]#4179L, MS[4]#4180L, MS[5]#4181L, MS[6]#4182L, MS[7]#4183L, MS[8]#4184L, MS[9]#4185L, MS[10]#4186L, MS[11]#4187L, MS[12]#4188L, MS[13]#4189L, MS[14]#4190L, MS[15]#4191L, MS[16]#4192L, MS[17]#4193L, MS[18]#4194L, MS[19]#4195L, MS[20]#4196L, MS[21]#4197L, MS[22]#4198L, MS[23]#4199L, MS[24]#4200L, MS[25]#4201L, MS[26]#4202L, MS[27]#4203L, MS[28]#4204L, MS[29]#4205L, MS[30]#4206L, MS[31]#4207L, MS[32]#4208L, MS[33]#4209L, MS[34]#4210L, MS[35]#4211L, MS[36]#4212L, MS[37]#4213L, MS[38]#4214L, MS[39]#4215L, MS[40]#4216L, MS[41]#4217L, MS[42]#4218L, MS[43]#4219L, MS[44]#4220L, MS[45]#4221L, MS[46]#4222L, MS[47]#4223L, MS[48]#4224L, MS[49]#4225L, MS[50]#4226L, MS[51]#4227L, null#4280L, fractional#4281L, integral#4282L, boolean#4283L, string#4284L, min#5561, max#5562, sum#5563L, MS[0]#4290L, MS[1]#4291L, MS[2]#4292L, MS[3]#4293L, MS[4]#4294L, MS[5]#4295L, MS[6]#4296L, MS[7]#4297L, MS[8]#4298L, MS[9]#4299L, MS[10]#4300L, MS[11]#4301L, MS[12]#4302L, MS[13]#4303L, MS[14]#4304L, MS[15]#4305L, MS[16]#4306L, MS[17]#4307L, MS[18]#4308L, MS[19]#4309L, MS[20]#4310L, MS[21]#4311L, MS[22]#4312L, MS[23]#4313L, MS[24]#4314L, MS[25]#4315L, MS[26]#4316L, MS[27]#4317L, MS[28]#4318L, MS[29]#4319L, MS[30]#4320L, MS[31]#4321L, MS[32]#4322L, MS[33]#4323L, MS[34]#4324L, MS[35]#4325L, MS[36]#4326L, MS[37]#4327L, MS[38]#4328L, MS[39]#4329L, MS[40]#4330L, MS[41]#4331L, MS[42]#4332L, MS[43]#4333L, MS[44]#4334L, MS[45]#4335L, MS[46]#4336L, MS[47]#4337L, MS[48]#4338L, MS[49]#4339L, MS[50]#4340L, MS[51]#4341L, null#4394L, fractional#4395L, integral#4396L, boolean#4397L, string#4398L, min#5564, max#5565, sum#5566L, MS[0]#4404L, MS[1]#4405L, MS[2]#4406L, MS[3]#4407L, MS[4]#4408L, MS[5]#4409L, MS[6]#4410L, MS[7]#4411L, MS[8]#4412L, MS[9]#4413L, MS[10]#4414L, MS[11]#4415L, MS[12]#4416L, MS[13]#4417L, MS[14]#4418L, MS[15]#4419L, MS[16]#4420L, MS[17]#4421L, MS[18]#4422L, MS[19]#4423L, MS[20]#4424L, MS[21]#4425L, MS[22]#4426L, MS[23]#4427L, MS[24]#4428L, MS[25]#4429L, MS[26]#4430L, MS[27]#4431L, MS[28]#4432L, MS[29]#4433L, MS[30]#4434L, MS[31]#4435L, MS[32]#4436L, MS[33]#4437L, MS[34]#4438L, MS[35]#4439L, MS[36]#4440L, MS[37]#4441L, MS[38]#4442L, MS[39]#4443L, MS[40]#4444L, MS[41]#4445L, MS[42]#4446L, MS[43]#4447L, MS[44]#4448L, MS[45]#4449L, MS[46]#4450L, MS[47]#4451L, MS[48]#4452L, MS[49]#4453L, MS[50]#4454L, MS[51]#4455L, sum#5567L, MS[0]#4508L, MS[1]#4509L, MS[2]#4510L, MS[3]#4511L, MS[4]#4512L, MS[5]#4513L, MS[6]#4514L, MS[7]#4515L, MS[8]#4516L, MS[9]#4517L, MS[10]#4518L, MS[11]#4519L, MS[12]#4520L, MS[13]#4521L, MS[14]#4522L, MS[15]#4523L, MS[16]#4524L, MS[17]#4525L, MS[18]#4526L, MS[19]#4527L, MS[20]#4528L, MS[21]#4529L, MS[22]#4530L, MS[23]#4531L, MS[24]#4532L, MS[25]#4533L, MS[26]#4534L, MS[27]#4535L, MS[28]#4536L, MS[29]#4537L, MS[30]#4538L, MS[31]#4539L, MS[32]#4540L, MS[33]#4541L, MS[34]#4542L, MS[35]#4543L, MS[36]#4544L, MS[37]#4545L, MS[38]#4546L, MS[39]#4547L, MS[40]#4548L, MS[41]#4549L, MS[42]#4550L, MS[43]#4551L, MS[44]#4552L, MS[45]#4553L, MS[46]#4554L, MS[47]#4555L, MS[48]#4556L, MS[49]#4557L, MS[50]#4558L, MS[51]#4559L]\nResults [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\n\n(3) Exchange\nInput [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=243]\n\n(4) HashAggregate\nInput [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\nKeys: []\nFunctions [35]: [sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(subcategories#5) as int)), stateful_approx_count_distinct(subcategories#5, 0, 0), statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@75354698, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(review_count#6L) as int)), stateful_approx_count_distinct(review_count#6L, 0, 0), sum(cast(isnotnull(stars#7) as int)), stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [35]: [sum(cast(isnotnull(business_id#0) as int))#793L, count(1)#794L, stateful_approx_count_distinct(business_id#0, 0, 0)#900, StatefulDataType(business_id#0)#911, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#916, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#921, sum(cast(isnotnull(name#1) as int))#922L, stateful_approx_count_distinct(name#1, 0, 0)#1029, StatefulDataType(name#1)#1040, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1045, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1050, sum(cast(isnotnull(city#2) as int))#1051L, stateful_approx_count_distinct(city#2, 0, 0)#1158, StatefulDataType(city#2)#1169, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1174, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1179, sum(cast(isnotnull(state#3) as int))#1180L, stateful_approx_count_distinct(state#3, 0, 0)#1287, StatefulDataType(state#3)#1298, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1303, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1308, sum(cast(isnotnull(category#4) as int))#1309L, stateful_approx_count_distinct(category#4, 0, 0)#1416, StatefulDataType(category#4)#1427, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1432, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1437, sum(cast(isnotnull(subcategories#5) as int))#1438L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1545, StatefulDataType(subcategories#5)#1556, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1561, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1566, sum(cast(isnotnull(review_count#6L) as int))#1567L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1674, sum(cast(isnotnull(stars#7) as int))#1675L, stateful_approx_count_distinct(stars#7, 0, 0)#1782]\nResults [43]: [sum(cast(isnotnull(business_id#0) as int))#793L AS sum(CAST((business_id IS NOT NULL) AS INT))#2785L, count(1)#794L AS count(1)#2786L, stateful_approx_count_distinct(business_id#0, 0, 0)#900 AS stateful_approx_count_distinct(business_id)#2891, StatefulDataType(business_id#0)#911 AS statefuldatatype(business_id)#2902, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#916 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2903, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#921 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2904, sum(cast(isnotnull(name#1) as int))#922L AS sum(CAST((name IS NOT NULL) AS INT))#2905L, count(1)#794L AS count(1)#2906L, stateful_approx_count_distinct(name#1, 0, 0)#1029 AS stateful_approx_count_distinct(name)#3011, StatefulDataType(name#1)#1040 AS statefuldatatype(name)#3022, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1045 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3023, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1050 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3024, sum(cast(isnotnull(city#2) as int))#1051L AS sum(CAST((city IS NOT NULL) AS INT))#3025L, count(1)#794L AS count(1)#3026L, stateful_approx_count_distinct(city#2, 0, 0)#1158 AS stateful_approx_count_distinct(city)#3131, StatefulDataType(city#2)#1169 AS statefuldatatype(city)#3142, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1174 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3143, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1179 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3144, sum(cast(isnotnull(state#3) as int))#1180L AS sum(CAST((state IS NOT NULL) AS INT))#3145L, count(1)#794L AS count(1)#3146L, stateful_approx_count_distinct(state#3, 0, 0)#1287 AS stateful_approx_count_distinct(state)#3251, StatefulDataType(state#3)#1298 AS statefuldatatype(state)#3262, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1303 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3263, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1308 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3264, sum(cast(isnotnull(category#4) as int))#1309L AS sum(CAST((category IS NOT NULL) AS INT))#3265L, count(1)#794L AS count(1)#3266L, stateful_approx_count_distinct(category#4, 0, 0)#1416 AS stateful_approx_count_distinct(category)#3371, StatefulDataType(category#4)#1427 AS statefuldatatype(category)#3382, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1432 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3383, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1437 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3384, sum(cast(isnotnull(subcategories#5) as int))#1438L AS sum(CAST((subcategories IS NOT NULL) AS INT))#3385L, count(1)#794L AS count(1)#3386L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1545 AS stateful_approx_count_distinct(subcategories)#3491, StatefulDataType(subcategories#5)#1556 AS statefuldatatype(subcategories)#3502, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1561 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3503, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1566 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3504, sum(cast(isnotnull(review_count#6L) as int))#1567L AS sum(CAST((review_count IS NOT NULL) AS INT))#3505L, count(1)#794L AS count(1)#3506L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1674 AS stateful_approx_count_distinct(review_count)#3611, sum(cast(isnotnull(stars#7) as int))#1675L AS sum(CAST((stars IS NOT NULL) AS INT))#3612L, count(1)#794L AS count(1)#3613L, stateful_approx_count_distinct(stars#7, 0, 0)#1782 AS stateful_approx_count_distinct(stars)#3718, count(1)#794L AS count(1)#3719L]\n\n(5) AdaptiveSparkPlan\nOutput [43]: [sum(CAST((business_id IS NOT NULL) AS INT))#2785L, count(1)#2786L, stateful_approx_count_distinct(business_id)#2891, statefuldatatype(business_id)#2902, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2903, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2904, sum(CAST((name IS NOT NULL) AS INT))#2905L, count(1)#2906L, stateful_approx_count_distinct(name)#3011, statefuldatatype(name)#3022, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3023, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3024, sum(CAST((city IS NOT NULL) AS INT))#3025L, count(1)#3026L, stateful_approx_count_distinct(city)#3131, statefuldatatype(city)#3142, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3143, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3144, sum(CAST((state IS NOT NULL) AS INT))#3145L, count(1)#3146L, stateful_approx_count_distinct(state)#3251, statefuldatatype(state)#3262, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3263, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3264, sum(CAST((category IS NOT NULL) AS INT))#3265L, count(1)#3266L, stateful_approx_count_distinct(category)#3371, statefuldatatype(category)#3382, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3383, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3384, sum(CAST((subcategories IS NOT NULL) AS INT))#3385L, count(1)#3386L, stateful_approx_count_distinct(subcategories)#3491, statefuldatatype(subcategories)#3502, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3503, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3504, sum(CAST((review_count IS NOT NULL) AS INT))#3505L, count(1)#3506L, stateful_approx_count_distinct(review_count)#3611, sum(CAST((stars IS NOT NULL) AS INT))#3612L, count(1)#3613L, stateful_approx_count_distinct(stars)#3718, count(1)#3719L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), ... 11 more fields])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=243]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), ... 11 more fields])","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,name#1,city#2,state#3,category#4,subcategories#5,review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:stri...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:string,review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":865,"metricType":"sum"},{"name":"scan time","accumulatorId":864,"metricType":"timing"},{"name":"metadata time","accumulatorId":866,"metricType":"timing"},{"name":"size of files read","accumulatorId":867,"metricType":"size"},{"name":"number of output rows","accumulatorId":863,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":859,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":860,"metricType":"timing"},{"name":"peak memory","accumulatorId":858,"metricType":"size"},{"name":"number of output rows","accumulatorId":857,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":862,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":861,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":855,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":849,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":856,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":850,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":847,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":844,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":853,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":846,"metricType":"sum"},{"name":"records read","accumulatorId":843,"metricType":"sum"},{"name":"local bytes read","accumulatorId":841,"metricType":"size"},{"name":"fetch wait time","accumulatorId":842,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":839,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":845,"metricType":"sum"},{"name":"local blocks read","accumulatorId":838,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":848,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":837,"metricType":"sum"},{"name":"data size","accumulatorId":835,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":851,"metricType":"size"},{"name":"number of partitions","accumulatorId":836,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":852,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":840,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":854,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":831,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":832,"metricType":"timing"},{"name":"peak memory","accumulatorId":830,"metricType":"size"},{"name":"number of output rows","accumulatorId":829,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":834,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":833,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1720131143879,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":6,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Current Plan ==\n   HashAggregate (6)\n   +- ShuffleQueryStage (5)\n      +- Exchange (4)\n         +- HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:string,review_count:bigint,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\n\n(3) HashAggregate\nInput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nKeys: []\nFunctions [35]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(subcategories#5) as int)), partial_stateful_approx_count_distinct(subcategories#5, 0, 0), partial_statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@75354698, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(review_count#6L) as int)), partial_stateful_approx_count_distinct(review_count#6L, 0, 0), partial_sum(cast(isnotnull(stars#7) as int)), partial_stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [467]: [sum#5547L, count#5548L, MS[0]#3720L, MS[1]#3721L, MS[2]#3722L, MS[3]#3723L, MS[4]#3724L, MS[5]#3725L, MS[6]#3726L, MS[7]#3727L, MS[8]#3728L, MS[9]#3729L, MS[10]#3730L, MS[11]#3731L, MS[12]#3732L, MS[13]#3733L, MS[14]#3734L, MS[15]#3735L, MS[16]#3736L, MS[17]#3737L, MS[18]#3738L, MS[19]#3739L, MS[20]#3740L, MS[21]#3741L, MS[22]#3742L, MS[23]#3743L, MS[24]#3744L, MS[25]#3745L, MS[26]#3746L, MS[27]#3747L, MS[28]#3748L, MS[29]#3749L, MS[30]#3750L, MS[31]#3751L, MS[32]#3752L, MS[33]#3753L, MS[34]#3754L, MS[35]#3755L, MS[36]#3756L, MS[37]#3757L, MS[38]#3758L, MS[39]#3759L, MS[40]#3760L, MS[41]#3761L, MS[42]#3762L, MS[43]#3763L, MS[44]#3764L, MS[45]#3765L, MS[46]#3766L, MS[47]#3767L, MS[48]#3768L, MS[49]#3769L, MS[50]#3770L, MS[51]#3771L, null#3824L, fractional#3825L, integral#3826L, boolean#3827L, string#3828L, min#5549, max#5550, sum#5551L, MS[0]#3834L, MS[1]#3835L, MS[2]#3836L, MS[3]#3837L, MS[4]#3838L, MS[5]#3839L, MS[6]#3840L, MS[7]#3841L, MS[8]#3842L, MS[9]#3843L, MS[10]#3844L, MS[11]#3845L, MS[12]#3846L, MS[13]#3847L, MS[14]#3848L, MS[15]#3849L, MS[16]#3850L, MS[17]#3851L, MS[18]#3852L, MS[19]#3853L, MS[20]#3854L, MS[21]#3855L, MS[22]#3856L, MS[23]#3857L, MS[24]#3858L, MS[25]#3859L, MS[26]#3860L, MS[27]#3861L, MS[28]#3862L, MS[29]#3863L, MS[30]#3864L, MS[31]#3865L, MS[32]#3866L, MS[33]#3867L, MS[34]#3868L, MS[35]#3869L, MS[36]#3870L, MS[37]#3871L, MS[38]#3872L, MS[39]#3873L, MS[40]#3874L, MS[41]#3875L, MS[42]#3876L, MS[43]#3877L, MS[44]#3878L, MS[45]#3879L, MS[46]#3880L, MS[47]#3881L, MS[48]#3882L, MS[49]#3883L, MS[50]#3884L, MS[51]#3885L, null#3938L, fractional#3939L, integral#3940L, boolean#3941L, string#3942L, min#5552, max#5553, sum#5554L, MS[0]#3948L, MS[1]#3949L, MS[2]#3950L, MS[3]#3951L, MS[4]#3952L, MS[5]#3953L, MS[6]#3954L, MS[7]#3955L, MS[8]#3956L, MS[9]#3957L, MS[10]#3958L, MS[11]#3959L, MS[12]#3960L, MS[13]#3961L, MS[14]#3962L, MS[15]#3963L, MS[16]#3964L, MS[17]#3965L, MS[18]#3966L, MS[19]#3967L, MS[20]#3968L, MS[21]#3969L, MS[22]#3970L, MS[23]#3971L, MS[24]#3972L, MS[25]#3973L, MS[26]#3974L, MS[27]#3975L, MS[28]#3976L, MS[29]#3977L, MS[30]#3978L, MS[31]#3979L, MS[32]#3980L, MS[33]#3981L, MS[34]#3982L, MS[35]#3983L, MS[36]#3984L, MS[37]#3985L, MS[38]#3986L, MS[39]#3987L, MS[40]#3988L, MS[41]#3989L, MS[42]#3990L, MS[43]#3991L, MS[44]#3992L, MS[45]#3993L, MS[46]#3994L, MS[47]#3995L, MS[48]#3996L, MS[49]#3997L, MS[50]#3998L, MS[51]#3999L, null#4052L, fractional#4053L, integral#4054L, boolean#4055L, string#4056L, min#5555, max#5556, sum#5557L, MS[0]#4062L, MS[1]#4063L, MS[2]#4064L, MS[3]#4065L, MS[4]#4066L, MS[5]#4067L, MS[6]#4068L, MS[7]#4069L, MS[8]#4070L, MS[9]#4071L, MS[10]#4072L, MS[11]#4073L, MS[12]#4074L, MS[13]#4075L, MS[14]#4076L, MS[15]#4077L, MS[16]#4078L, MS[17]#4079L, MS[18]#4080L, MS[19]#4081L, MS[20]#4082L, MS[21]#4083L, MS[22]#4084L, MS[23]#4085L, MS[24]#4086L, MS[25]#4087L, MS[26]#4088L, MS[27]#4089L, MS[28]#4090L, MS[29]#4091L, MS[30]#4092L, MS[31]#4093L, MS[32]#4094L, MS[33]#4095L, MS[34]#4096L, MS[35]#4097L, MS[36]#4098L, MS[37]#4099L, MS[38]#4100L, MS[39]#4101L, MS[40]#4102L, MS[41]#4103L, MS[42]#4104L, MS[43]#4105L, MS[44]#4106L, MS[45]#4107L, MS[46]#4108L, MS[47]#4109L, MS[48]#4110L, MS[49]#4111L, MS[50]#4112L, MS[51]#4113L, null#4166L, fractional#4167L, integral#4168L, boolean#4169L, string#4170L, min#5558, max#5559, sum#5560L, MS[0]#4176L, MS[1]#4177L, MS[2]#4178L, MS[3]#4179L, MS[4]#4180L, MS[5]#4181L, MS[6]#4182L, MS[7]#4183L, MS[8]#4184L, MS[9]#4185L, MS[10]#4186L, MS[11]#4187L, MS[12]#4188L, MS[13]#4189L, MS[14]#4190L, MS[15]#4191L, MS[16]#4192L, MS[17]#4193L, MS[18]#4194L, MS[19]#4195L, MS[20]#4196L, MS[21]#4197L, MS[22]#4198L, MS[23]#4199L, MS[24]#4200L, MS[25]#4201L, MS[26]#4202L, MS[27]#4203L, MS[28]#4204L, MS[29]#4205L, MS[30]#4206L, MS[31]#4207L, MS[32]#4208L, MS[33]#4209L, MS[34]#4210L, MS[35]#4211L, MS[36]#4212L, MS[37]#4213L, MS[38]#4214L, MS[39]#4215L, MS[40]#4216L, MS[41]#4217L, MS[42]#4218L, MS[43]#4219L, MS[44]#4220L, MS[45]#4221L, MS[46]#4222L, MS[47]#4223L, MS[48]#4224L, MS[49]#4225L, MS[50]#4226L, MS[51]#4227L, null#4280L, fractional#4281L, integral#4282L, boolean#4283L, string#4284L, min#5561, max#5562, sum#5563L, MS[0]#4290L, MS[1]#4291L, MS[2]#4292L, MS[3]#4293L, MS[4]#4294L, MS[5]#4295L, MS[6]#4296L, MS[7]#4297L, MS[8]#4298L, MS[9]#4299L, MS[10]#4300L, MS[11]#4301L, MS[12]#4302L, MS[13]#4303L, MS[14]#4304L, MS[15]#4305L, MS[16]#4306L, MS[17]#4307L, MS[18]#4308L, MS[19]#4309L, MS[20]#4310L, MS[21]#4311L, MS[22]#4312L, MS[23]#4313L, MS[24]#4314L, MS[25]#4315L, MS[26]#4316L, MS[27]#4317L, MS[28]#4318L, MS[29]#4319L, MS[30]#4320L, MS[31]#4321L, MS[32]#4322L, MS[33]#4323L, MS[34]#4324L, MS[35]#4325L, MS[36]#4326L, MS[37]#4327L, MS[38]#4328L, MS[39]#4329L, MS[40]#4330L, MS[41]#4331L, MS[42]#4332L, MS[43]#4333L, MS[44]#4334L, MS[45]#4335L, MS[46]#4336L, MS[47]#4337L, MS[48]#4338L, MS[49]#4339L, MS[50]#4340L, MS[51]#4341L, null#4394L, fractional#4395L, integral#4396L, boolean#4397L, string#4398L, min#5564, max#5565, sum#5566L, MS[0]#4404L, MS[1]#4405L, MS[2]#4406L, MS[3]#4407L, MS[4]#4408L, MS[5]#4409L, MS[6]#4410L, MS[7]#4411L, MS[8]#4412L, MS[9]#4413L, MS[10]#4414L, MS[11]#4415L, MS[12]#4416L, MS[13]#4417L, MS[14]#4418L, MS[15]#4419L, MS[16]#4420L, MS[17]#4421L, MS[18]#4422L, MS[19]#4423L, MS[20]#4424L, MS[21]#4425L, MS[22]#4426L, MS[23]#4427L, MS[24]#4428L, MS[25]#4429L, MS[26]#4430L, MS[27]#4431L, MS[28]#4432L, MS[29]#4433L, MS[30]#4434L, MS[31]#4435L, MS[32]#4436L, MS[33]#4437L, MS[34]#4438L, MS[35]#4439L, MS[36]#4440L, MS[37]#4441L, MS[38]#4442L, MS[39]#4443L, MS[40]#4444L, MS[41]#4445L, MS[42]#4446L, MS[43]#4447L, MS[44]#4448L, MS[45]#4449L, MS[46]#4450L, MS[47]#4451L, MS[48]#4452L, MS[49]#4453L, MS[50]#4454L, MS[51]#4455L, sum#5567L, MS[0]#4508L, MS[1]#4509L, MS[2]#4510L, MS[3]#4511L, MS[4]#4512L, MS[5]#4513L, MS[6]#4514L, MS[7]#4515L, MS[8]#4516L, MS[9]#4517L, MS[10]#4518L, MS[11]#4519L, MS[12]#4520L, MS[13]#4521L, MS[14]#4522L, MS[15]#4523L, MS[16]#4524L, MS[17]#4525L, MS[18]#4526L, MS[19]#4527L, MS[20]#4528L, MS[21]#4529L, MS[22]#4530L, MS[23]#4531L, MS[24]#4532L, MS[25]#4533L, MS[26]#4534L, MS[27]#4535L, MS[28]#4536L, MS[29]#4537L, MS[30]#4538L, MS[31]#4539L, MS[32]#4540L, MS[33]#4541L, MS[34]#4542L, MS[35]#4543L, MS[36]#4544L, MS[37]#4545L, MS[38]#4546L, MS[39]#4547L, MS[40]#4548L, MS[41]#4549L, MS[42]#4550L, MS[43]#4551L, MS[44]#4552L, MS[45]#4553L, MS[46]#4554L, MS[47]#4555L, MS[48]#4556L, MS[49]#4557L, MS[50]#4558L, MS[51]#4559L]\nResults [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\n\n(4) Exchange\nInput [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=256]\n\n(5) ShuffleQueryStage\nOutput [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\nArguments: 0\n\n(6) HashAggregate\nInput [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\nKeys: []\nFunctions [35]: [sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(subcategories#5) as int)), stateful_approx_count_distinct(subcategories#5, 0, 0), statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@75354698, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(review_count#6L) as int)), stateful_approx_count_distinct(review_count#6L, 0, 0), sum(cast(isnotnull(stars#7) as int)), stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [35]: [sum(cast(isnotnull(business_id#0) as int))#793L, count(1)#794L, stateful_approx_count_distinct(business_id#0, 0, 0)#900, StatefulDataType(business_id#0)#911, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#916, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#921, sum(cast(isnotnull(name#1) as int))#922L, stateful_approx_count_distinct(name#1, 0, 0)#1029, StatefulDataType(name#1)#1040, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1045, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1050, sum(cast(isnotnull(city#2) as int))#1051L, stateful_approx_count_distinct(city#2, 0, 0)#1158, StatefulDataType(city#2)#1169, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1174, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1179, sum(cast(isnotnull(state#3) as int))#1180L, stateful_approx_count_distinct(state#3, 0, 0)#1287, StatefulDataType(state#3)#1298, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1303, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1308, sum(cast(isnotnull(category#4) as int))#1309L, stateful_approx_count_distinct(category#4, 0, 0)#1416, StatefulDataType(category#4)#1427, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1432, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1437, sum(cast(isnotnull(subcategories#5) as int))#1438L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1545, StatefulDataType(subcategories#5)#1556, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1561, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1566, sum(cast(isnotnull(review_count#6L) as int))#1567L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1674, sum(cast(isnotnull(stars#7) as int))#1675L, stateful_approx_count_distinct(stars#7, 0, 0)#1782]\nResults [43]: [sum(cast(isnotnull(business_id#0) as int))#793L AS sum(CAST((business_id IS NOT NULL) AS INT))#2785L, count(1)#794L AS count(1)#2786L, stateful_approx_count_distinct(business_id#0, 0, 0)#900 AS stateful_approx_count_distinct(business_id)#2891, StatefulDataType(business_id#0)#911 AS statefuldatatype(business_id)#2902, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#916 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2903, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#921 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2904, sum(cast(isnotnull(name#1) as int))#922L AS sum(CAST((name IS NOT NULL) AS INT))#2905L, count(1)#794L AS count(1)#2906L, stateful_approx_count_distinct(name#1, 0, 0)#1029 AS stateful_approx_count_distinct(name)#3011, StatefulDataType(name#1)#1040 AS statefuldatatype(name)#3022, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1045 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3023, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1050 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3024, sum(cast(isnotnull(city#2) as int))#1051L AS sum(CAST((city IS NOT NULL) AS INT))#3025L, count(1)#794L AS count(1)#3026L, stateful_approx_count_distinct(city#2, 0, 0)#1158 AS stateful_approx_count_distinct(city)#3131, StatefulDataType(city#2)#1169 AS statefuldatatype(city)#3142, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1174 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3143, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1179 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3144, sum(cast(isnotnull(state#3) as int))#1180L AS sum(CAST((state IS NOT NULL) AS INT))#3145L, count(1)#794L AS count(1)#3146L, stateful_approx_count_distinct(state#3, 0, 0)#1287 AS stateful_approx_count_distinct(state)#3251, StatefulDataType(state#3)#1298 AS statefuldatatype(state)#3262, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1303 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3263, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1308 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3264, sum(cast(isnotnull(category#4) as int))#1309L AS sum(CAST((category IS NOT NULL) AS INT))#3265L, count(1)#794L AS count(1)#3266L, stateful_approx_count_distinct(category#4, 0, 0)#1416 AS stateful_approx_count_distinct(category)#3371, StatefulDataType(category#4)#1427 AS statefuldatatype(category)#3382, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1432 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3383, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1437 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3384, sum(cast(isnotnull(subcategories#5) as int))#1438L AS sum(CAST((subcategories IS NOT NULL) AS INT))#3385L, count(1)#794L AS count(1)#3386L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1545 AS stateful_approx_count_distinct(subcategories)#3491, StatefulDataType(subcategories#5)#1556 AS statefuldatatype(subcategories)#3502, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1561 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3503, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1566 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3504, sum(cast(isnotnull(review_count#6L) as int))#1567L AS sum(CAST((review_count IS NOT NULL) AS INT))#3505L, count(1)#794L AS count(1)#3506L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1674 AS stateful_approx_count_distinct(review_count)#3611, sum(cast(isnotnull(stars#7) as int))#1675L AS sum(CAST((stars IS NOT NULL) AS INT))#3612L, count(1)#794L AS count(1)#3613L, stateful_approx_count_distinct(stars#7, 0, 0)#1782 AS stateful_approx_count_distinct(stars)#3718, count(1)#794L AS count(1)#3719L]\n\n(7) HashAggregate\nInput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nKeys: []\nFunctions [35]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(subcategories#5) as int)), partial_stateful_approx_count_distinct(subcategories#5, 0, 0), partial_statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@75354698, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(review_count#6L) as int)), partial_stateful_approx_count_distinct(review_count#6L, 0, 0), partial_sum(cast(isnotnull(stars#7) as int)), partial_stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [467]: [sum#5547L, count#5548L, MS[0]#3720L, MS[1]#3721L, MS[2]#3722L, MS[3]#3723L, MS[4]#3724L, MS[5]#3725L, MS[6]#3726L, MS[7]#3727L, MS[8]#3728L, MS[9]#3729L, MS[10]#3730L, MS[11]#3731L, MS[12]#3732L, MS[13]#3733L, MS[14]#3734L, MS[15]#3735L, MS[16]#3736L, MS[17]#3737L, MS[18]#3738L, MS[19]#3739L, MS[20]#3740L, MS[21]#3741L, MS[22]#3742L, MS[23]#3743L, MS[24]#3744L, MS[25]#3745L, MS[26]#3746L, MS[27]#3747L, MS[28]#3748L, MS[29]#3749L, MS[30]#3750L, MS[31]#3751L, MS[32]#3752L, MS[33]#3753L, MS[34]#3754L, MS[35]#3755L, MS[36]#3756L, MS[37]#3757L, MS[38]#3758L, MS[39]#3759L, MS[40]#3760L, MS[41]#3761L, MS[42]#3762L, MS[43]#3763L, MS[44]#3764L, MS[45]#3765L, MS[46]#3766L, MS[47]#3767L, MS[48]#3768L, MS[49]#3769L, MS[50]#3770L, MS[51]#3771L, null#3824L, fractional#3825L, integral#3826L, boolean#3827L, string#3828L, min#5549, max#5550, sum#5551L, MS[0]#3834L, MS[1]#3835L, MS[2]#3836L, MS[3]#3837L, MS[4]#3838L, MS[5]#3839L, MS[6]#3840L, MS[7]#3841L, MS[8]#3842L, MS[9]#3843L, MS[10]#3844L, MS[11]#3845L, MS[12]#3846L, MS[13]#3847L, MS[14]#3848L, MS[15]#3849L, MS[16]#3850L, MS[17]#3851L, MS[18]#3852L, MS[19]#3853L, MS[20]#3854L, MS[21]#3855L, MS[22]#3856L, MS[23]#3857L, MS[24]#3858L, MS[25]#3859L, MS[26]#3860L, MS[27]#3861L, MS[28]#3862L, MS[29]#3863L, MS[30]#3864L, MS[31]#3865L, MS[32]#3866L, MS[33]#3867L, MS[34]#3868L, MS[35]#3869L, MS[36]#3870L, MS[37]#3871L, MS[38]#3872L, MS[39]#3873L, MS[40]#3874L, MS[41]#3875L, MS[42]#3876L, MS[43]#3877L, MS[44]#3878L, MS[45]#3879L, MS[46]#3880L, MS[47]#3881L, MS[48]#3882L, MS[49]#3883L, MS[50]#3884L, MS[51]#3885L, null#3938L, fractional#3939L, integral#3940L, boolean#3941L, string#3942L, min#5552, max#5553, sum#5554L, MS[0]#3948L, MS[1]#3949L, MS[2]#3950L, MS[3]#3951L, MS[4]#3952L, MS[5]#3953L, MS[6]#3954L, MS[7]#3955L, MS[8]#3956L, MS[9]#3957L, MS[10]#3958L, MS[11]#3959L, MS[12]#3960L, MS[13]#3961L, MS[14]#3962L, MS[15]#3963L, MS[16]#3964L, MS[17]#3965L, MS[18]#3966L, MS[19]#3967L, MS[20]#3968L, MS[21]#3969L, MS[22]#3970L, MS[23]#3971L, MS[24]#3972L, MS[25]#3973L, MS[26]#3974L, MS[27]#3975L, MS[28]#3976L, MS[29]#3977L, MS[30]#3978L, MS[31]#3979L, MS[32]#3980L, MS[33]#3981L, MS[34]#3982L, MS[35]#3983L, MS[36]#3984L, MS[37]#3985L, MS[38]#3986L, MS[39]#3987L, MS[40]#3988L, MS[41]#3989L, MS[42]#3990L, MS[43]#3991L, MS[44]#3992L, MS[45]#3993L, MS[46]#3994L, MS[47]#3995L, MS[48]#3996L, MS[49]#3997L, MS[50]#3998L, MS[51]#3999L, null#4052L, fractional#4053L, integral#4054L, boolean#4055L, string#4056L, min#5555, max#5556, sum#5557L, MS[0]#4062L, MS[1]#4063L, MS[2]#4064L, MS[3]#4065L, MS[4]#4066L, MS[5]#4067L, MS[6]#4068L, MS[7]#4069L, MS[8]#4070L, MS[9]#4071L, MS[10]#4072L, MS[11]#4073L, MS[12]#4074L, MS[13]#4075L, MS[14]#4076L, MS[15]#4077L, MS[16]#4078L, MS[17]#4079L, MS[18]#4080L, MS[19]#4081L, MS[20]#4082L, MS[21]#4083L, MS[22]#4084L, MS[23]#4085L, MS[24]#4086L, MS[25]#4087L, MS[26]#4088L, MS[27]#4089L, MS[28]#4090L, MS[29]#4091L, MS[30]#4092L, MS[31]#4093L, MS[32]#4094L, MS[33]#4095L, MS[34]#4096L, MS[35]#4097L, MS[36]#4098L, MS[37]#4099L, MS[38]#4100L, MS[39]#4101L, MS[40]#4102L, MS[41]#4103L, MS[42]#4104L, MS[43]#4105L, MS[44]#4106L, MS[45]#4107L, MS[46]#4108L, MS[47]#4109L, MS[48]#4110L, MS[49]#4111L, MS[50]#4112L, MS[51]#4113L, null#4166L, fractional#4167L, integral#4168L, boolean#4169L, string#4170L, min#5558, max#5559, sum#5560L, MS[0]#4176L, MS[1]#4177L, MS[2]#4178L, MS[3]#4179L, MS[4]#4180L, MS[5]#4181L, MS[6]#4182L, MS[7]#4183L, MS[8]#4184L, MS[9]#4185L, MS[10]#4186L, MS[11]#4187L, MS[12]#4188L, MS[13]#4189L, MS[14]#4190L, MS[15]#4191L, MS[16]#4192L, MS[17]#4193L, MS[18]#4194L, MS[19]#4195L, MS[20]#4196L, MS[21]#4197L, MS[22]#4198L, MS[23]#4199L, MS[24]#4200L, MS[25]#4201L, MS[26]#4202L, MS[27]#4203L, MS[28]#4204L, MS[29]#4205L, MS[30]#4206L, MS[31]#4207L, MS[32]#4208L, MS[33]#4209L, MS[34]#4210L, MS[35]#4211L, MS[36]#4212L, MS[37]#4213L, MS[38]#4214L, MS[39]#4215L, MS[40]#4216L, MS[41]#4217L, MS[42]#4218L, MS[43]#4219L, MS[44]#4220L, MS[45]#4221L, MS[46]#4222L, MS[47]#4223L, MS[48]#4224L, MS[49]#4225L, MS[50]#4226L, MS[51]#4227L, null#4280L, fractional#4281L, integral#4282L, boolean#4283L, string#4284L, min#5561, max#5562, sum#5563L, MS[0]#4290L, MS[1]#4291L, MS[2]#4292L, MS[3]#4293L, MS[4]#4294L, MS[5]#4295L, MS[6]#4296L, MS[7]#4297L, MS[8]#4298L, MS[9]#4299L, MS[10]#4300L, MS[11]#4301L, MS[12]#4302L, MS[13]#4303L, MS[14]#4304L, MS[15]#4305L, MS[16]#4306L, MS[17]#4307L, MS[18]#4308L, MS[19]#4309L, MS[20]#4310L, MS[21]#4311L, MS[22]#4312L, MS[23]#4313L, MS[24]#4314L, MS[25]#4315L, MS[26]#4316L, MS[27]#4317L, MS[28]#4318L, MS[29]#4319L, MS[30]#4320L, MS[31]#4321L, MS[32]#4322L, MS[33]#4323L, MS[34]#4324L, MS[35]#4325L, MS[36]#4326L, MS[37]#4327L, MS[38]#4328L, MS[39]#4329L, MS[40]#4330L, MS[41]#4331L, MS[42]#4332L, MS[43]#4333L, MS[44]#4334L, MS[45]#4335L, MS[46]#4336L, MS[47]#4337L, MS[48]#4338L, MS[49]#4339L, MS[50]#4340L, MS[51]#4341L, null#4394L, fractional#4395L, integral#4396L, boolean#4397L, string#4398L, min#5564, max#5565, sum#5566L, MS[0]#4404L, MS[1]#4405L, MS[2]#4406L, MS[3]#4407L, MS[4]#4408L, MS[5]#4409L, MS[6]#4410L, MS[7]#4411L, MS[8]#4412L, MS[9]#4413L, MS[10]#4414L, MS[11]#4415L, MS[12]#4416L, MS[13]#4417L, MS[14]#4418L, MS[15]#4419L, MS[16]#4420L, MS[17]#4421L, MS[18]#4422L, MS[19]#4423L, MS[20]#4424L, MS[21]#4425L, MS[22]#4426L, MS[23]#4427L, MS[24]#4428L, MS[25]#4429L, MS[26]#4430L, MS[27]#4431L, MS[28]#4432L, MS[29]#4433L, MS[30]#4434L, MS[31]#4435L, MS[32]#4436L, MS[33]#4437L, MS[34]#4438L, MS[35]#4439L, MS[36]#4440L, MS[37]#4441L, MS[38]#4442L, MS[39]#4443L, MS[40]#4444L, MS[41]#4445L, MS[42]#4446L, MS[43]#4447L, MS[44]#4448L, MS[45]#4449L, MS[46]#4450L, MS[47]#4451L, MS[48]#4452L, MS[49]#4453L, MS[50]#4454L, MS[51]#4455L, sum#5567L, MS[0]#4508L, MS[1]#4509L, MS[2]#4510L, MS[3]#4511L, MS[4]#4512L, MS[5]#4513L, MS[6]#4514L, MS[7]#4515L, MS[8]#4516L, MS[9]#4517L, MS[10]#4518L, MS[11]#4519L, MS[12]#4520L, MS[13]#4521L, MS[14]#4522L, MS[15]#4523L, MS[16]#4524L, MS[17]#4525L, MS[18]#4526L, MS[19]#4527L, MS[20]#4528L, MS[21]#4529L, MS[22]#4530L, MS[23]#4531L, MS[24]#4532L, MS[25]#4533L, MS[26]#4534L, MS[27]#4535L, MS[28]#4536L, MS[29]#4537L, MS[30]#4538L, MS[31]#4539L, MS[32]#4540L, MS[33]#4541L, MS[34]#4542L, MS[35]#4543L, MS[36]#4544L, MS[37]#4545L, MS[38]#4546L, MS[39]#4547L, MS[40]#4548L, MS[41]#4549L, MS[42]#4550L, MS[43]#4551L, MS[44]#4552L, MS[45]#4553L, MS[46]#4554L, MS[47]#4555L, MS[48]#4556L, MS[49]#4557L, MS[50]#4558L, MS[51]#4559L]\nResults [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\n\n(8) Exchange\nInput [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=243]\n\n(9) HashAggregate\nInput [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\nKeys: []\nFunctions [35]: [sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(subcategories#5) as int)), stateful_approx_count_distinct(subcategories#5, 0, 0), statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@75354698, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(review_count#6L) as int)), stateful_approx_count_distinct(review_count#6L, 0, 0), sum(cast(isnotnull(stars#7) as int)), stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [35]: [sum(cast(isnotnull(business_id#0) as int))#793L, count(1)#794L, stateful_approx_count_distinct(business_id#0, 0, 0)#900, StatefulDataType(business_id#0)#911, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#916, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#921, sum(cast(isnotnull(name#1) as int))#922L, stateful_approx_count_distinct(name#1, 0, 0)#1029, StatefulDataType(name#1)#1040, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1045, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1050, sum(cast(isnotnull(city#2) as int))#1051L, stateful_approx_count_distinct(city#2, 0, 0)#1158, StatefulDataType(city#2)#1169, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1174, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1179, sum(cast(isnotnull(state#3) as int))#1180L, stateful_approx_count_distinct(state#3, 0, 0)#1287, StatefulDataType(state#3)#1298, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1303, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1308, sum(cast(isnotnull(category#4) as int))#1309L, stateful_approx_count_distinct(category#4, 0, 0)#1416, StatefulDataType(category#4)#1427, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1432, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1437, sum(cast(isnotnull(subcategories#5) as int))#1438L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1545, StatefulDataType(subcategories#5)#1556, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1561, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1566, sum(cast(isnotnull(review_count#6L) as int))#1567L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1674, sum(cast(isnotnull(stars#7) as int))#1675L, stateful_approx_count_distinct(stars#7, 0, 0)#1782]\nResults [43]: [sum(cast(isnotnull(business_id#0) as int))#793L AS sum(CAST((business_id IS NOT NULL) AS INT))#2785L, count(1)#794L AS count(1)#2786L, stateful_approx_count_distinct(business_id#0, 0, 0)#900 AS stateful_approx_count_distinct(business_id)#2891, StatefulDataType(business_id#0)#911 AS statefuldatatype(business_id)#2902, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#916 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2903, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#921 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2904, sum(cast(isnotnull(name#1) as int))#922L AS sum(CAST((name IS NOT NULL) AS INT))#2905L, count(1)#794L AS count(1)#2906L, stateful_approx_count_distinct(name#1, 0, 0)#1029 AS stateful_approx_count_distinct(name)#3011, StatefulDataType(name#1)#1040 AS statefuldatatype(name)#3022, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1045 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3023, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1050 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3024, sum(cast(isnotnull(city#2) as int))#1051L AS sum(CAST((city IS NOT NULL) AS INT))#3025L, count(1)#794L AS count(1)#3026L, stateful_approx_count_distinct(city#2, 0, 0)#1158 AS stateful_approx_count_distinct(city)#3131, StatefulDataType(city#2)#1169 AS statefuldatatype(city)#3142, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1174 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3143, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1179 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3144, sum(cast(isnotnull(state#3) as int))#1180L AS sum(CAST((state IS NOT NULL) AS INT))#3145L, count(1)#794L AS count(1)#3146L, stateful_approx_count_distinct(state#3, 0, 0)#1287 AS stateful_approx_count_distinct(state)#3251, StatefulDataType(state#3)#1298 AS statefuldatatype(state)#3262, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1303 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3263, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1308 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3264, sum(cast(isnotnull(category#4) as int))#1309L AS sum(CAST((category IS NOT NULL) AS INT))#3265L, count(1)#794L AS count(1)#3266L, stateful_approx_count_distinct(category#4, 0, 0)#1416 AS stateful_approx_count_distinct(category)#3371, StatefulDataType(category#4)#1427 AS statefuldatatype(category)#3382, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1432 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3383, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1437 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3384, sum(cast(isnotnull(subcategories#5) as int))#1438L AS sum(CAST((subcategories IS NOT NULL) AS INT))#3385L, count(1)#794L AS count(1)#3386L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1545 AS stateful_approx_count_distinct(subcategories)#3491, StatefulDataType(subcategories#5)#1556 AS statefuldatatype(subcategories)#3502, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1561 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3503, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1566 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3504, sum(cast(isnotnull(review_count#6L) as int))#1567L AS sum(CAST((review_count IS NOT NULL) AS INT))#3505L, count(1)#794L AS count(1)#3506L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1674 AS stateful_approx_count_distinct(review_count)#3611, sum(cast(isnotnull(stars#7) as int))#1675L AS sum(CAST((stars IS NOT NULL) AS INT))#3612L, count(1)#794L AS count(1)#3613L, stateful_approx_count_distinct(stars#7, 0, 0)#1782 AS stateful_approx_count_distinct(stars)#3718, count(1)#794L AS count(1)#3719L]\n\n(10) AdaptiveSparkPlan\nOutput [43]: [sum(CAST((business_id IS NOT NULL) AS INT))#2785L, count(1)#2786L, stateful_approx_count_distinct(business_id)#2891, statefuldatatype(business_id)#2902, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2903, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2904, sum(CAST((name IS NOT NULL) AS INT))#2905L, count(1)#2906L, stateful_approx_count_distinct(name)#3011, statefuldatatype(name)#3022, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3023, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3024, sum(CAST((city IS NOT NULL) AS INT))#3025L, count(1)#3026L, stateful_approx_count_distinct(city)#3131, statefuldatatype(city)#3142, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3143, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3144, sum(CAST((state IS NOT NULL) AS INT))#3145L, count(1)#3146L, stateful_approx_count_distinct(state)#3251, statefuldatatype(state)#3262, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3263, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3264, sum(CAST((category IS NOT NULL) AS INT))#3265L, count(1)#3266L, stateful_approx_count_distinct(category)#3371, statefuldatatype(category)#3382, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3383, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3384, sum(CAST((subcategories IS NOT NULL) AS INT))#3385L, count(1)#3386L, stateful_approx_count_distinct(subcategories)#3491, statefuldatatype(subcategories)#3502, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3503, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3504, sum(CAST((review_count IS NOT NULL) AS INT))#3505L, count(1)#3506L, stateful_approx_count_distinct(review_count)#3611, sum(CAST((stars IS NOT NULL) AS INT))#3612L, count(1)#3613L, stateful_approx_count_distinct(stars)#3718, count(1)#3719L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), ... 11 more fields])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=256]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), ... 11 more fields])","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,name#1,city#2,state#3,category#4,subcategories#5,review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:stri...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:string,review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":865,"metricType":"sum"},{"name":"scan time","accumulatorId":864,"metricType":"timing"},{"name":"metadata time","accumulatorId":866,"metricType":"timing"},{"name":"size of files read","accumulatorId":867,"metricType":"size"},{"name":"number of output rows","accumulatorId":863,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":903,"metricType":"sum"},{"name":"number of input batches","accumulatorId":904,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":902,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":898,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":899,"metricType":"timing"},{"name":"peak memory","accumulatorId":897,"metricType":"size"},{"name":"number of output rows","accumulatorId":896,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":901,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":900,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":894,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":888,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":895,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":889,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":886,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":883,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":892,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":885,"metricType":"sum"},{"name":"records read","accumulatorId":882,"metricType":"sum"},{"name":"local bytes read","accumulatorId":880,"metricType":"size"},{"name":"fetch wait time","accumulatorId":881,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":878,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":884,"metricType":"sum"},{"name":"local blocks read","accumulatorId":877,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":887,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":876,"metricType":"sum"},{"name":"data size","accumulatorId":874,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":890,"metricType":"size"},{"name":"number of partitions","accumulatorId":875,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":891,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":879,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":893,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":870,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":871,"metricType":"timing"},{"name":"peak memory","accumulatorId":869,"metricType":"size"},{"name":"number of output rows","accumulatorId":868,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":873,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":872,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":6,"accumUpdates":[[865,1],[866,0],[867,37975350]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":6,"accumUpdates":[[875,1]]}
{"Event":"SparkListenerJobStart","Job ID":11,"Submission Time":1720131143930,"Stage Infos":[{"Stage ID":17,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"101\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[37],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"106\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"FileScanRDD","Scope":"{\"id\":\"106\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"102\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[17],"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"101\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"6","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":17,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"101\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[37],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"106\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"FileScanRDD","Scope":"{\"id\":\"106\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"102\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","Submission Time":1720131143930,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"101\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"6","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":17,"Stage Attempt ID":0,"Task Info":{"Task ID":35,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131143939,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":17,"Stage Attempt ID":0,"Task Info":{"Task ID":36,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131143939,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":17,"Stage Attempt ID":0,"Task Info":{"Task ID":37,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131143939,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":17,"Stage Attempt ID":0,"Task Info":{"Task ID":38,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131143939,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":17,"Stage Attempt ID":0,"Task Info":{"Task ID":39,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131143939,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":17,"Stage Attempt ID":0,"Task Info":{"Task ID":40,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131143939,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":17,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":35,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131143939,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131145326,"Failed":false,"Killed":false,"Accumulables":[{"ID":864,"Name":"scan time","Update":"953","Value":"953","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":874,"Name":"data size","Update":"3800","Value":"3800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":893,"Name":"shuffle bytes written","Update":"93","Value":"93","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":894,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":895,"Name":"shuffle write time","Update":"265750","Value":"265750","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":896,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":897,"Name":"peak memory","Update":"33816560","Value":"33816560","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":898,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":899,"Name":"time in aggregation build","Update":"1306","Value":"1306","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":900,"Name":"avg hash probes per key","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":902,"Name":"duration","Update":"2259","Value":"2259","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":905,"Name":"internal.metrics.executorDeserializeTime","Update":48,"Value":48,"Internal":true,"Count Failed Values":true},{"ID":906,"Name":"internal.metrics.executorDeserializeCpuTime","Update":11740288,"Value":11740288,"Internal":true,"Count Failed Values":true},{"ID":907,"Name":"internal.metrics.executorRunTime","Update":1320,"Value":1320,"Internal":true,"Count Failed Values":true},{"ID":908,"Name":"internal.metrics.executorCpuTime","Update":245509837,"Value":245509837,"Internal":true,"Count Failed Values":true},{"ID":909,"Name":"internal.metrics.resultSize","Update":2721,"Value":2721,"Internal":true,"Count Failed Values":true},{"ID":910,"Name":"internal.metrics.jvmGCTime","Update":30,"Value":30,"Internal":true,"Count Failed Values":true},{"ID":914,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":33816560,"Internal":true,"Count Failed Values":true},{"ID":933,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":93,"Value":93,"Internal":true,"Count Failed Values":true},{"ID":934,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":935,"Name":"internal.metrics.shuffle.write.writeTime","Update":265750,"Value":265750,"Internal":true,"Count Failed Values":true},{"ID":936,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":1799,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":48,"Executor Deserialize CPU Time":11740288,"Executor Run Time":1320,"Executor CPU Time":245509837,"Peak Execution Memory":33816560,"Result Size":2721,"JVM GC Time":30,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":93,"Shuffle Write Time":265750,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":17,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":38,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131143939,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131145345,"Failed":false,"Killed":false,"Accumulables":[{"ID":864,"Name":"scan time","Update":"912","Value":"1865","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":874,"Name":"data size","Update":"3800","Value":"7600","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":893,"Name":"shuffle bytes written","Update":"93","Value":"186","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":894,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":895,"Name":"shuffle write time","Update":"466208","Value":"731958","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":896,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":897,"Name":"peak memory","Update":"33816560","Value":"67633120","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":898,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":899,"Name":"time in aggregation build","Update":"1322","Value":"2628","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":900,"Name":"avg hash probes per key","Update":"10","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":902,"Name":"duration","Update":"2234","Value":"4493","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":905,"Name":"internal.metrics.executorDeserializeTime","Update":55,"Value":103,"Internal":true,"Count Failed Values":true},{"ID":906,"Name":"internal.metrics.executorDeserializeCpuTime","Update":21171876,"Value":32912164,"Internal":true,"Count Failed Values":true},{"ID":907,"Name":"internal.metrics.executorRunTime","Update":1330,"Value":2650,"Internal":true,"Count Failed Values":true},{"ID":908,"Name":"internal.metrics.executorCpuTime","Update":295933098,"Value":541442935,"Internal":true,"Count Failed Values":true},{"ID":909,"Name":"internal.metrics.resultSize","Update":2721,"Value":5442,"Internal":true,"Count Failed Values":true},{"ID":910,"Name":"internal.metrics.jvmGCTime","Update":30,"Value":60,"Internal":true,"Count Failed Values":true},{"ID":914,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":67633120,"Internal":true,"Count Failed Values":true},{"ID":933,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":93,"Value":186,"Internal":true,"Count Failed Values":true},{"ID":934,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":935,"Name":"internal.metrics.shuffle.write.writeTime","Update":466208,"Value":731958,"Internal":true,"Count Failed Values":true},{"ID":936,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":3598,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":55,"Executor Deserialize CPU Time":21171876,"Executor Run Time":1330,"Executor CPU Time":295933098,"Peak Execution Memory":33816560,"Result Size":2721,"JVM GC Time":30,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":93,"Shuffle Write Time":466208,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":17,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":40,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131143939,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131145370,"Failed":false,"Killed":false,"Accumulables":[{"ID":864,"Name":"scan time","Update":"1025","Value":"2890","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":874,"Name":"data size","Update":"3800","Value":"11400","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":893,"Name":"shuffle bytes written","Update":"93","Value":"279","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":894,"Name":"shuffle records written","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":895,"Name":"shuffle write time","Update":"358666","Value":"1090624","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":896,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":897,"Name":"peak memory","Update":"33816560","Value":"101449680","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":898,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":899,"Name":"time in aggregation build","Update":"1369","Value":"3997","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":900,"Name":"avg hash probes per key","Update":"10","Value":"30","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":902,"Name":"duration","Update":"2394","Value":"6887","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":905,"Name":"internal.metrics.executorDeserializeTime","Update":37,"Value":140,"Internal":true,"Count Failed Values":true},{"ID":906,"Name":"internal.metrics.executorDeserializeCpuTime","Update":13194170,"Value":46106334,"Internal":true,"Count Failed Values":true},{"ID":907,"Name":"internal.metrics.executorRunTime","Update":1379,"Value":4029,"Internal":true,"Count Failed Values":true},{"ID":908,"Name":"internal.metrics.executorCpuTime","Update":258957790,"Value":800400725,"Internal":true,"Count Failed Values":true},{"ID":909,"Name":"internal.metrics.resultSize","Update":2764,"Value":8206,"Internal":true,"Count Failed Values":true},{"ID":910,"Name":"internal.metrics.jvmGCTime","Update":16,"Value":76,"Internal":true,"Count Failed Values":true},{"ID":911,"Name":"internal.metrics.resultSerializationTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":914,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":101449680,"Internal":true,"Count Failed Values":true},{"ID":933,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":93,"Value":279,"Internal":true,"Count Failed Values":true},{"ID":934,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":935,"Name":"internal.metrics.shuffle.write.writeTime","Update":358666,"Value":1090624,"Internal":true,"Count Failed Values":true},{"ID":936,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":5397,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":37,"Executor Deserialize CPU Time":13194170,"Executor Run Time":1379,"Executor CPU Time":258957790,"Peak Execution Memory":33816560,"Result Size":2764,"JVM GC Time":16,"Result Serialization Time":4,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":93,"Shuffle Write Time":358666,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":17,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":36,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131143939,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131145507,"Failed":false,"Killed":false,"Accumulables":[{"ID":864,"Name":"scan time","Update":"1117","Value":"4007","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":874,"Name":"data size","Update":"3800","Value":"15200","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":893,"Name":"shuffle bytes written","Update":"93","Value":"372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":894,"Name":"shuffle records written","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":895,"Name":"shuffle write time","Update":"240167","Value":"1330791","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":896,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":897,"Name":"peak memory","Update":"33816560","Value":"135266240","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":898,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":899,"Name":"time in aggregation build","Update":"1500","Value":"5497","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":900,"Name":"avg hash probes per key","Update":"10","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":902,"Name":"duration","Update":"2617","Value":"9504","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":905,"Name":"internal.metrics.executorDeserializeTime","Update":38,"Value":178,"Internal":true,"Count Failed Values":true},{"ID":906,"Name":"internal.metrics.executorDeserializeCpuTime","Update":12720039,"Value":58826373,"Internal":true,"Count Failed Values":true},{"ID":907,"Name":"internal.metrics.executorRunTime","Update":1521,"Value":5550,"Internal":true,"Count Failed Values":true},{"ID":908,"Name":"internal.metrics.executorCpuTime","Update":257365956,"Value":1057766681,"Internal":true,"Count Failed Values":true},{"ID":909,"Name":"internal.metrics.resultSize","Update":2721,"Value":10927,"Internal":true,"Count Failed Values":true},{"ID":910,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":88,"Internal":true,"Count Failed Values":true},{"ID":914,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":135266240,"Internal":true,"Count Failed Values":true},{"ID":933,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":93,"Value":372,"Internal":true,"Count Failed Values":true},{"ID":934,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":935,"Name":"internal.metrics.shuffle.write.writeTime","Update":240167,"Value":1330791,"Internal":true,"Count Failed Values":true},{"ID":936,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":7196,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":38,"Executor Deserialize CPU Time":12720039,"Executor Run Time":1521,"Executor CPU Time":257365956,"Peak Execution Memory":33816560,"Result Size":2721,"JVM GC Time":12,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":93,"Shuffle Write Time":240167,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":17,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":39,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131143939,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131145507,"Failed":false,"Killed":false,"Accumulables":[{"ID":864,"Name":"scan time","Update":"1076","Value":"5083","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":874,"Name":"data size","Update":"3800","Value":"19000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":893,"Name":"shuffle bytes written","Update":"93","Value":"465","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":894,"Name":"shuffle records written","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":895,"Name":"shuffle write time","Update":"242125","Value":"1572916","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":896,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":897,"Name":"peak memory","Update":"33816560","Value":"169082800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":898,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":899,"Name":"time in aggregation build","Update":"1500","Value":"6997","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":900,"Name":"avg hash probes per key","Update":"10","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":902,"Name":"duration","Update":"2576","Value":"12080","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":905,"Name":"internal.metrics.executorDeserializeTime","Update":34,"Value":212,"Internal":true,"Count Failed Values":true},{"ID":906,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14759417,"Value":73585790,"Internal":true,"Count Failed Values":true},{"ID":907,"Name":"internal.metrics.executorRunTime","Update":1522,"Value":7072,"Internal":true,"Count Failed Values":true},{"ID":908,"Name":"internal.metrics.executorCpuTime","Update":288656416,"Value":1346423097,"Internal":true,"Count Failed Values":true},{"ID":909,"Name":"internal.metrics.resultSize","Update":2764,"Value":13691,"Internal":true,"Count Failed Values":true},{"ID":910,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":100,"Internal":true,"Count Failed Values":true},{"ID":911,"Name":"internal.metrics.resultSerializationTime","Update":3,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":914,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":169082800,"Internal":true,"Count Failed Values":true},{"ID":933,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":93,"Value":465,"Internal":true,"Count Failed Values":true},{"ID":934,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":935,"Name":"internal.metrics.shuffle.write.writeTime","Update":242125,"Value":1572916,"Internal":true,"Count Failed Values":true},{"ID":936,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":8995,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":34,"Executor Deserialize CPU Time":14759417,"Executor Run Time":1522,"Executor CPU Time":288656416,"Peak Execution Memory":33816560,"Result Size":2764,"JVM GC Time":12,"Result Serialization Time":3,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":93,"Shuffle Write Time":242125,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":17,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":37,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131143939,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131151690,"Failed":false,"Killed":false,"Accumulables":[{"ID":863,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":864,"Name":"scan time","Update":"5929","Value":"11012","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":874,"Name":"data size","Update":"3800","Value":"22800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":893,"Name":"shuffle bytes written","Update":"2938","Value":"3403","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":894,"Name":"shuffle records written","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":895,"Name":"shuffle write time","Update":"337539","Value":"1910455","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":896,"Name":"number of output rows","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":897,"Name":"peak memory","Update":"33816560","Value":"202899360","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":898,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":899,"Name":"time in aggregation build","Update":"7698","Value":"14695","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":900,"Name":"avg hash probes per key","Update":"10","Value":"60","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":902,"Name":"duration","Update":"7698","Value":"19778","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":903,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":904,"Name":"number of input batches","Update":"144","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":905,"Name":"internal.metrics.executorDeserializeTime","Update":37,"Value":249,"Internal":true,"Count Failed Values":true},{"ID":906,"Name":"internal.metrics.executorDeserializeCpuTime","Update":20598337,"Value":94184127,"Internal":true,"Count Failed Values":true},{"ID":907,"Name":"internal.metrics.executorRunTime","Update":7709,"Value":14781,"Internal":true,"Count Failed Values":true},{"ID":908,"Name":"internal.metrics.executorCpuTime","Update":2233141979,"Value":3579565076,"Internal":true,"Count Failed Values":true},{"ID":909,"Name":"internal.metrics.resultSize","Update":2764,"Value":16455,"Internal":true,"Count Failed Values":true},{"ID":910,"Name":"internal.metrics.jvmGCTime","Update":48,"Value":148,"Internal":true,"Count Failed Values":true},{"ID":914,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":202899360,"Internal":true,"Count Failed Values":true},{"ID":933,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":2938,"Value":3403,"Internal":true,"Count Failed Values":true},{"ID":934,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":935,"Name":"internal.metrics.shuffle.write.writeTime","Update":337539,"Value":1910455,"Internal":true,"Count Failed Values":true},{"ID":936,"Name":"internal.metrics.input.bytesRead","Update":37977145,"Value":37986140,"Internal":true,"Count Failed Values":true},{"ID":937,"Name":"internal.metrics.input.recordsRead","Update":586579,"Value":586579,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":37,"Executor Deserialize CPU Time":20598337,"Executor Run Time":7709,"Executor CPU Time":2233141979,"Peak Execution Memory":33816560,"Result Size":2764,"JVM GC Time":48,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":2938,"Shuffle Write Time":337539,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":37977145,"Records Read":586579},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":17,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"101\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[37],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"106\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"FileScanRDD","Scope":"{\"id\":\"106\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"102\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","Submission Time":1720131143930,"Completion Time":1720131151691,"Accumulables":[{"ID":863,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":864,"Name":"scan time","Value":"11012","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":874,"Name":"data size","Value":"22800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":893,"Name":"shuffle bytes written","Value":"3403","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":894,"Name":"shuffle records written","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":895,"Name":"shuffle write time","Value":"1910455","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":896,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":897,"Name":"peak memory","Value":"202899360","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":898,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":899,"Name":"time in aggregation build","Value":"14695","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":900,"Name":"avg hash probes per key","Value":"60","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":902,"Name":"duration","Value":"19778","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":903,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":904,"Name":"number of input batches","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":905,"Name":"internal.metrics.executorDeserializeTime","Value":249,"Internal":true,"Count Failed Values":true},{"ID":906,"Name":"internal.metrics.executorDeserializeCpuTime","Value":94184127,"Internal":true,"Count Failed Values":true},{"ID":907,"Name":"internal.metrics.executorRunTime","Value":14781,"Internal":true,"Count Failed Values":true},{"ID":908,"Name":"internal.metrics.executorCpuTime","Value":3579565076,"Internal":true,"Count Failed Values":true},{"ID":909,"Name":"internal.metrics.resultSize","Value":16455,"Internal":true,"Count Failed Values":true},{"ID":910,"Name":"internal.metrics.jvmGCTime","Value":148,"Internal":true,"Count Failed Values":true},{"ID":911,"Name":"internal.metrics.resultSerializationTime","Value":7,"Internal":true,"Count Failed Values":true},{"ID":914,"Name":"internal.metrics.peakExecutionMemory","Value":202899360,"Internal":true,"Count Failed Values":true},{"ID":933,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":3403,"Internal":true,"Count Failed Values":true},{"ID":934,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":6,"Internal":true,"Count Failed Values":true},{"ID":935,"Name":"internal.metrics.shuffle.write.writeTime","Value":1910455,"Internal":true,"Count Failed Values":true},{"ID":936,"Name":"internal.metrics.input.bytesRead","Value":37986140,"Internal":true,"Count Failed Values":true},{"ID":937,"Name":"internal.metrics.input.recordsRead","Value":586579,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":11,"Completion Time":1720131151691,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":6,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Final Plan ==\n   HashAggregate (6)\n   +- ShuffleQueryStage (5), Statistics(sizeInBytes=22.3 KiB, rowCount=6)\n      +- Exchange (4)\n         +- HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:string,review_count:bigint,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\n\n(3) HashAggregate\nInput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nKeys: []\nFunctions [35]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(subcategories#5) as int)), partial_stateful_approx_count_distinct(subcategories#5, 0, 0), partial_statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@75354698, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(review_count#6L) as int)), partial_stateful_approx_count_distinct(review_count#6L, 0, 0), partial_sum(cast(isnotnull(stars#7) as int)), partial_stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [467]: [sum#5547L, count#5548L, MS[0]#3720L, MS[1]#3721L, MS[2]#3722L, MS[3]#3723L, MS[4]#3724L, MS[5]#3725L, MS[6]#3726L, MS[7]#3727L, MS[8]#3728L, MS[9]#3729L, MS[10]#3730L, MS[11]#3731L, MS[12]#3732L, MS[13]#3733L, MS[14]#3734L, MS[15]#3735L, MS[16]#3736L, MS[17]#3737L, MS[18]#3738L, MS[19]#3739L, MS[20]#3740L, MS[21]#3741L, MS[22]#3742L, MS[23]#3743L, MS[24]#3744L, MS[25]#3745L, MS[26]#3746L, MS[27]#3747L, MS[28]#3748L, MS[29]#3749L, MS[30]#3750L, MS[31]#3751L, MS[32]#3752L, MS[33]#3753L, MS[34]#3754L, MS[35]#3755L, MS[36]#3756L, MS[37]#3757L, MS[38]#3758L, MS[39]#3759L, MS[40]#3760L, MS[41]#3761L, MS[42]#3762L, MS[43]#3763L, MS[44]#3764L, MS[45]#3765L, MS[46]#3766L, MS[47]#3767L, MS[48]#3768L, MS[49]#3769L, MS[50]#3770L, MS[51]#3771L, null#3824L, fractional#3825L, integral#3826L, boolean#3827L, string#3828L, min#5549, max#5550, sum#5551L, MS[0]#3834L, MS[1]#3835L, MS[2]#3836L, MS[3]#3837L, MS[4]#3838L, MS[5]#3839L, MS[6]#3840L, MS[7]#3841L, MS[8]#3842L, MS[9]#3843L, MS[10]#3844L, MS[11]#3845L, MS[12]#3846L, MS[13]#3847L, MS[14]#3848L, MS[15]#3849L, MS[16]#3850L, MS[17]#3851L, MS[18]#3852L, MS[19]#3853L, MS[20]#3854L, MS[21]#3855L, MS[22]#3856L, MS[23]#3857L, MS[24]#3858L, MS[25]#3859L, MS[26]#3860L, MS[27]#3861L, MS[28]#3862L, MS[29]#3863L, MS[30]#3864L, MS[31]#3865L, MS[32]#3866L, MS[33]#3867L, MS[34]#3868L, MS[35]#3869L, MS[36]#3870L, MS[37]#3871L, MS[38]#3872L, MS[39]#3873L, MS[40]#3874L, MS[41]#3875L, MS[42]#3876L, MS[43]#3877L, MS[44]#3878L, MS[45]#3879L, MS[46]#3880L, MS[47]#3881L, MS[48]#3882L, MS[49]#3883L, MS[50]#3884L, MS[51]#3885L, null#3938L, fractional#3939L, integral#3940L, boolean#3941L, string#3942L, min#5552, max#5553, sum#5554L, MS[0]#3948L, MS[1]#3949L, MS[2]#3950L, MS[3]#3951L, MS[4]#3952L, MS[5]#3953L, MS[6]#3954L, MS[7]#3955L, MS[8]#3956L, MS[9]#3957L, MS[10]#3958L, MS[11]#3959L, MS[12]#3960L, MS[13]#3961L, MS[14]#3962L, MS[15]#3963L, MS[16]#3964L, MS[17]#3965L, MS[18]#3966L, MS[19]#3967L, MS[20]#3968L, MS[21]#3969L, MS[22]#3970L, MS[23]#3971L, MS[24]#3972L, MS[25]#3973L, MS[26]#3974L, MS[27]#3975L, MS[28]#3976L, MS[29]#3977L, MS[30]#3978L, MS[31]#3979L, MS[32]#3980L, MS[33]#3981L, MS[34]#3982L, MS[35]#3983L, MS[36]#3984L, MS[37]#3985L, MS[38]#3986L, MS[39]#3987L, MS[40]#3988L, MS[41]#3989L, MS[42]#3990L, MS[43]#3991L, MS[44]#3992L, MS[45]#3993L, MS[46]#3994L, MS[47]#3995L, MS[48]#3996L, MS[49]#3997L, MS[50]#3998L, MS[51]#3999L, null#4052L, fractional#4053L, integral#4054L, boolean#4055L, string#4056L, min#5555, max#5556, sum#5557L, MS[0]#4062L, MS[1]#4063L, MS[2]#4064L, MS[3]#4065L, MS[4]#4066L, MS[5]#4067L, MS[6]#4068L, MS[7]#4069L, MS[8]#4070L, MS[9]#4071L, MS[10]#4072L, MS[11]#4073L, MS[12]#4074L, MS[13]#4075L, MS[14]#4076L, MS[15]#4077L, MS[16]#4078L, MS[17]#4079L, MS[18]#4080L, MS[19]#4081L, MS[20]#4082L, MS[21]#4083L, MS[22]#4084L, MS[23]#4085L, MS[24]#4086L, MS[25]#4087L, MS[26]#4088L, MS[27]#4089L, MS[28]#4090L, MS[29]#4091L, MS[30]#4092L, MS[31]#4093L, MS[32]#4094L, MS[33]#4095L, MS[34]#4096L, MS[35]#4097L, MS[36]#4098L, MS[37]#4099L, MS[38]#4100L, MS[39]#4101L, MS[40]#4102L, MS[41]#4103L, MS[42]#4104L, MS[43]#4105L, MS[44]#4106L, MS[45]#4107L, MS[46]#4108L, MS[47]#4109L, MS[48]#4110L, MS[49]#4111L, MS[50]#4112L, MS[51]#4113L, null#4166L, fractional#4167L, integral#4168L, boolean#4169L, string#4170L, min#5558, max#5559, sum#5560L, MS[0]#4176L, MS[1]#4177L, MS[2]#4178L, MS[3]#4179L, MS[4]#4180L, MS[5]#4181L, MS[6]#4182L, MS[7]#4183L, MS[8]#4184L, MS[9]#4185L, MS[10]#4186L, MS[11]#4187L, MS[12]#4188L, MS[13]#4189L, MS[14]#4190L, MS[15]#4191L, MS[16]#4192L, MS[17]#4193L, MS[18]#4194L, MS[19]#4195L, MS[20]#4196L, MS[21]#4197L, MS[22]#4198L, MS[23]#4199L, MS[24]#4200L, MS[25]#4201L, MS[26]#4202L, MS[27]#4203L, MS[28]#4204L, MS[29]#4205L, MS[30]#4206L, MS[31]#4207L, MS[32]#4208L, MS[33]#4209L, MS[34]#4210L, MS[35]#4211L, MS[36]#4212L, MS[37]#4213L, MS[38]#4214L, MS[39]#4215L, MS[40]#4216L, MS[41]#4217L, MS[42]#4218L, MS[43]#4219L, MS[44]#4220L, MS[45]#4221L, MS[46]#4222L, MS[47]#4223L, MS[48]#4224L, MS[49]#4225L, MS[50]#4226L, MS[51]#4227L, null#4280L, fractional#4281L, integral#4282L, boolean#4283L, string#4284L, min#5561, max#5562, sum#5563L, MS[0]#4290L, MS[1]#4291L, MS[2]#4292L, MS[3]#4293L, MS[4]#4294L, MS[5]#4295L, MS[6]#4296L, MS[7]#4297L, MS[8]#4298L, MS[9]#4299L, MS[10]#4300L, MS[11]#4301L, MS[12]#4302L, MS[13]#4303L, MS[14]#4304L, MS[15]#4305L, MS[16]#4306L, MS[17]#4307L, MS[18]#4308L, MS[19]#4309L, MS[20]#4310L, MS[21]#4311L, MS[22]#4312L, MS[23]#4313L, MS[24]#4314L, MS[25]#4315L, MS[26]#4316L, MS[27]#4317L, MS[28]#4318L, MS[29]#4319L, MS[30]#4320L, MS[31]#4321L, MS[32]#4322L, MS[33]#4323L, MS[34]#4324L, MS[35]#4325L, MS[36]#4326L, MS[37]#4327L, MS[38]#4328L, MS[39]#4329L, MS[40]#4330L, MS[41]#4331L, MS[42]#4332L, MS[43]#4333L, MS[44]#4334L, MS[45]#4335L, MS[46]#4336L, MS[47]#4337L, MS[48]#4338L, MS[49]#4339L, MS[50]#4340L, MS[51]#4341L, null#4394L, fractional#4395L, integral#4396L, boolean#4397L, string#4398L, min#5564, max#5565, sum#5566L, MS[0]#4404L, MS[1]#4405L, MS[2]#4406L, MS[3]#4407L, MS[4]#4408L, MS[5]#4409L, MS[6]#4410L, MS[7]#4411L, MS[8]#4412L, MS[9]#4413L, MS[10]#4414L, MS[11]#4415L, MS[12]#4416L, MS[13]#4417L, MS[14]#4418L, MS[15]#4419L, MS[16]#4420L, MS[17]#4421L, MS[18]#4422L, MS[19]#4423L, MS[20]#4424L, MS[21]#4425L, MS[22]#4426L, MS[23]#4427L, MS[24]#4428L, MS[25]#4429L, MS[26]#4430L, MS[27]#4431L, MS[28]#4432L, MS[29]#4433L, MS[30]#4434L, MS[31]#4435L, MS[32]#4436L, MS[33]#4437L, MS[34]#4438L, MS[35]#4439L, MS[36]#4440L, MS[37]#4441L, MS[38]#4442L, MS[39]#4443L, MS[40]#4444L, MS[41]#4445L, MS[42]#4446L, MS[43]#4447L, MS[44]#4448L, MS[45]#4449L, MS[46]#4450L, MS[47]#4451L, MS[48]#4452L, MS[49]#4453L, MS[50]#4454L, MS[51]#4455L, sum#5567L, MS[0]#4508L, MS[1]#4509L, MS[2]#4510L, MS[3]#4511L, MS[4]#4512L, MS[5]#4513L, MS[6]#4514L, MS[7]#4515L, MS[8]#4516L, MS[9]#4517L, MS[10]#4518L, MS[11]#4519L, MS[12]#4520L, MS[13]#4521L, MS[14]#4522L, MS[15]#4523L, MS[16]#4524L, MS[17]#4525L, MS[18]#4526L, MS[19]#4527L, MS[20]#4528L, MS[21]#4529L, MS[22]#4530L, MS[23]#4531L, MS[24]#4532L, MS[25]#4533L, MS[26]#4534L, MS[27]#4535L, MS[28]#4536L, MS[29]#4537L, MS[30]#4538L, MS[31]#4539L, MS[32]#4540L, MS[33]#4541L, MS[34]#4542L, MS[35]#4543L, MS[36]#4544L, MS[37]#4545L, MS[38]#4546L, MS[39]#4547L, MS[40]#4548L, MS[41]#4549L, MS[42]#4550L, MS[43]#4551L, MS[44]#4552L, MS[45]#4553L, MS[46]#4554L, MS[47]#4555L, MS[48]#4556L, MS[49]#4557L, MS[50]#4558L, MS[51]#4559L]\nResults [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\n\n(4) Exchange\nInput [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=256]\n\n(5) ShuffleQueryStage\nOutput [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\nArguments: 0\n\n(6) HashAggregate\nInput [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\nKeys: []\nFunctions [35]: [sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(subcategories#5) as int)), stateful_approx_count_distinct(subcategories#5, 0, 0), statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@75354698, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(review_count#6L) as int)), stateful_approx_count_distinct(review_count#6L, 0, 0), sum(cast(isnotnull(stars#7) as int)), stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [35]: [sum(cast(isnotnull(business_id#0) as int))#793L, count(1)#794L, stateful_approx_count_distinct(business_id#0, 0, 0)#900, StatefulDataType(business_id#0)#911, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#916, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#921, sum(cast(isnotnull(name#1) as int))#922L, stateful_approx_count_distinct(name#1, 0, 0)#1029, StatefulDataType(name#1)#1040, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1045, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1050, sum(cast(isnotnull(city#2) as int))#1051L, stateful_approx_count_distinct(city#2, 0, 0)#1158, StatefulDataType(city#2)#1169, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1174, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1179, sum(cast(isnotnull(state#3) as int))#1180L, stateful_approx_count_distinct(state#3, 0, 0)#1287, StatefulDataType(state#3)#1298, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1303, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1308, sum(cast(isnotnull(category#4) as int))#1309L, stateful_approx_count_distinct(category#4, 0, 0)#1416, StatefulDataType(category#4)#1427, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1432, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1437, sum(cast(isnotnull(subcategories#5) as int))#1438L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1545, StatefulDataType(subcategories#5)#1556, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1561, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1566, sum(cast(isnotnull(review_count#6L) as int))#1567L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1674, sum(cast(isnotnull(stars#7) as int))#1675L, stateful_approx_count_distinct(stars#7, 0, 0)#1782]\nResults [43]: [sum(cast(isnotnull(business_id#0) as int))#793L AS sum(CAST((business_id IS NOT NULL) AS INT))#2785L, count(1)#794L AS count(1)#2786L, stateful_approx_count_distinct(business_id#0, 0, 0)#900 AS stateful_approx_count_distinct(business_id)#2891, StatefulDataType(business_id#0)#911 AS statefuldatatype(business_id)#2902, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#916 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2903, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#921 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2904, sum(cast(isnotnull(name#1) as int))#922L AS sum(CAST((name IS NOT NULL) AS INT))#2905L, count(1)#794L AS count(1)#2906L, stateful_approx_count_distinct(name#1, 0, 0)#1029 AS stateful_approx_count_distinct(name)#3011, StatefulDataType(name#1)#1040 AS statefuldatatype(name)#3022, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1045 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3023, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1050 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3024, sum(cast(isnotnull(city#2) as int))#1051L AS sum(CAST((city IS NOT NULL) AS INT))#3025L, count(1)#794L AS count(1)#3026L, stateful_approx_count_distinct(city#2, 0, 0)#1158 AS stateful_approx_count_distinct(city)#3131, StatefulDataType(city#2)#1169 AS statefuldatatype(city)#3142, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1174 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3143, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1179 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3144, sum(cast(isnotnull(state#3) as int))#1180L AS sum(CAST((state IS NOT NULL) AS INT))#3145L, count(1)#794L AS count(1)#3146L, stateful_approx_count_distinct(state#3, 0, 0)#1287 AS stateful_approx_count_distinct(state)#3251, StatefulDataType(state#3)#1298 AS statefuldatatype(state)#3262, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1303 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3263, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1308 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3264, sum(cast(isnotnull(category#4) as int))#1309L AS sum(CAST((category IS NOT NULL) AS INT))#3265L, count(1)#794L AS count(1)#3266L, stateful_approx_count_distinct(category#4, 0, 0)#1416 AS stateful_approx_count_distinct(category)#3371, StatefulDataType(category#4)#1427 AS statefuldatatype(category)#3382, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1432 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3383, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1437 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3384, sum(cast(isnotnull(subcategories#5) as int))#1438L AS sum(CAST((subcategories IS NOT NULL) AS INT))#3385L, count(1)#794L AS count(1)#3386L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1545 AS stateful_approx_count_distinct(subcategories)#3491, StatefulDataType(subcategories#5)#1556 AS statefuldatatype(subcategories)#3502, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1561 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3503, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1566 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3504, sum(cast(isnotnull(review_count#6L) as int))#1567L AS sum(CAST((review_count IS NOT NULL) AS INT))#3505L, count(1)#794L AS count(1)#3506L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1674 AS stateful_approx_count_distinct(review_count)#3611, sum(cast(isnotnull(stars#7) as int))#1675L AS sum(CAST((stars IS NOT NULL) AS INT))#3612L, count(1)#794L AS count(1)#3613L, stateful_approx_count_distinct(stars#7, 0, 0)#1782 AS stateful_approx_count_distinct(stars)#3718, count(1)#794L AS count(1)#3719L]\n\n(7) HashAggregate\nInput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nKeys: []\nFunctions [35]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(subcategories#5) as int)), partial_stateful_approx_count_distinct(subcategories#5, 0, 0), partial_statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@75354698, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(review_count#6L) as int)), partial_stateful_approx_count_distinct(review_count#6L, 0, 0), partial_sum(cast(isnotnull(stars#7) as int)), partial_stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [467]: [sum#5547L, count#5548L, MS[0]#3720L, MS[1]#3721L, MS[2]#3722L, MS[3]#3723L, MS[4]#3724L, MS[5]#3725L, MS[6]#3726L, MS[7]#3727L, MS[8]#3728L, MS[9]#3729L, MS[10]#3730L, MS[11]#3731L, MS[12]#3732L, MS[13]#3733L, MS[14]#3734L, MS[15]#3735L, MS[16]#3736L, MS[17]#3737L, MS[18]#3738L, MS[19]#3739L, MS[20]#3740L, MS[21]#3741L, MS[22]#3742L, MS[23]#3743L, MS[24]#3744L, MS[25]#3745L, MS[26]#3746L, MS[27]#3747L, MS[28]#3748L, MS[29]#3749L, MS[30]#3750L, MS[31]#3751L, MS[32]#3752L, MS[33]#3753L, MS[34]#3754L, MS[35]#3755L, MS[36]#3756L, MS[37]#3757L, MS[38]#3758L, MS[39]#3759L, MS[40]#3760L, MS[41]#3761L, MS[42]#3762L, MS[43]#3763L, MS[44]#3764L, MS[45]#3765L, MS[46]#3766L, MS[47]#3767L, MS[48]#3768L, MS[49]#3769L, MS[50]#3770L, MS[51]#3771L, null#3824L, fractional#3825L, integral#3826L, boolean#3827L, string#3828L, min#5549, max#5550, sum#5551L, MS[0]#3834L, MS[1]#3835L, MS[2]#3836L, MS[3]#3837L, MS[4]#3838L, MS[5]#3839L, MS[6]#3840L, MS[7]#3841L, MS[8]#3842L, MS[9]#3843L, MS[10]#3844L, MS[11]#3845L, MS[12]#3846L, MS[13]#3847L, MS[14]#3848L, MS[15]#3849L, MS[16]#3850L, MS[17]#3851L, MS[18]#3852L, MS[19]#3853L, MS[20]#3854L, MS[21]#3855L, MS[22]#3856L, MS[23]#3857L, MS[24]#3858L, MS[25]#3859L, MS[26]#3860L, MS[27]#3861L, MS[28]#3862L, MS[29]#3863L, MS[30]#3864L, MS[31]#3865L, MS[32]#3866L, MS[33]#3867L, MS[34]#3868L, MS[35]#3869L, MS[36]#3870L, MS[37]#3871L, MS[38]#3872L, MS[39]#3873L, MS[40]#3874L, MS[41]#3875L, MS[42]#3876L, MS[43]#3877L, MS[44]#3878L, MS[45]#3879L, MS[46]#3880L, MS[47]#3881L, MS[48]#3882L, MS[49]#3883L, MS[50]#3884L, MS[51]#3885L, null#3938L, fractional#3939L, integral#3940L, boolean#3941L, string#3942L, min#5552, max#5553, sum#5554L, MS[0]#3948L, MS[1]#3949L, MS[2]#3950L, MS[3]#3951L, MS[4]#3952L, MS[5]#3953L, MS[6]#3954L, MS[7]#3955L, MS[8]#3956L, MS[9]#3957L, MS[10]#3958L, MS[11]#3959L, MS[12]#3960L, MS[13]#3961L, MS[14]#3962L, MS[15]#3963L, MS[16]#3964L, MS[17]#3965L, MS[18]#3966L, MS[19]#3967L, MS[20]#3968L, MS[21]#3969L, MS[22]#3970L, MS[23]#3971L, MS[24]#3972L, MS[25]#3973L, MS[26]#3974L, MS[27]#3975L, MS[28]#3976L, MS[29]#3977L, MS[30]#3978L, MS[31]#3979L, MS[32]#3980L, MS[33]#3981L, MS[34]#3982L, MS[35]#3983L, MS[36]#3984L, MS[37]#3985L, MS[38]#3986L, MS[39]#3987L, MS[40]#3988L, MS[41]#3989L, MS[42]#3990L, MS[43]#3991L, MS[44]#3992L, MS[45]#3993L, MS[46]#3994L, MS[47]#3995L, MS[48]#3996L, MS[49]#3997L, MS[50]#3998L, MS[51]#3999L, null#4052L, fractional#4053L, integral#4054L, boolean#4055L, string#4056L, min#5555, max#5556, sum#5557L, MS[0]#4062L, MS[1]#4063L, MS[2]#4064L, MS[3]#4065L, MS[4]#4066L, MS[5]#4067L, MS[6]#4068L, MS[7]#4069L, MS[8]#4070L, MS[9]#4071L, MS[10]#4072L, MS[11]#4073L, MS[12]#4074L, MS[13]#4075L, MS[14]#4076L, MS[15]#4077L, MS[16]#4078L, MS[17]#4079L, MS[18]#4080L, MS[19]#4081L, MS[20]#4082L, MS[21]#4083L, MS[22]#4084L, MS[23]#4085L, MS[24]#4086L, MS[25]#4087L, MS[26]#4088L, MS[27]#4089L, MS[28]#4090L, MS[29]#4091L, MS[30]#4092L, MS[31]#4093L, MS[32]#4094L, MS[33]#4095L, MS[34]#4096L, MS[35]#4097L, MS[36]#4098L, MS[37]#4099L, MS[38]#4100L, MS[39]#4101L, MS[40]#4102L, MS[41]#4103L, MS[42]#4104L, MS[43]#4105L, MS[44]#4106L, MS[45]#4107L, MS[46]#4108L, MS[47]#4109L, MS[48]#4110L, MS[49]#4111L, MS[50]#4112L, MS[51]#4113L, null#4166L, fractional#4167L, integral#4168L, boolean#4169L, string#4170L, min#5558, max#5559, sum#5560L, MS[0]#4176L, MS[1]#4177L, MS[2]#4178L, MS[3]#4179L, MS[4]#4180L, MS[5]#4181L, MS[6]#4182L, MS[7]#4183L, MS[8]#4184L, MS[9]#4185L, MS[10]#4186L, MS[11]#4187L, MS[12]#4188L, MS[13]#4189L, MS[14]#4190L, MS[15]#4191L, MS[16]#4192L, MS[17]#4193L, MS[18]#4194L, MS[19]#4195L, MS[20]#4196L, MS[21]#4197L, MS[22]#4198L, MS[23]#4199L, MS[24]#4200L, MS[25]#4201L, MS[26]#4202L, MS[27]#4203L, MS[28]#4204L, MS[29]#4205L, MS[30]#4206L, MS[31]#4207L, MS[32]#4208L, MS[33]#4209L, MS[34]#4210L, MS[35]#4211L, MS[36]#4212L, MS[37]#4213L, MS[38]#4214L, MS[39]#4215L, MS[40]#4216L, MS[41]#4217L, MS[42]#4218L, MS[43]#4219L, MS[44]#4220L, MS[45]#4221L, MS[46]#4222L, MS[47]#4223L, MS[48]#4224L, MS[49]#4225L, MS[50]#4226L, MS[51]#4227L, null#4280L, fractional#4281L, integral#4282L, boolean#4283L, string#4284L, min#5561, max#5562, sum#5563L, MS[0]#4290L, MS[1]#4291L, MS[2]#4292L, MS[3]#4293L, MS[4]#4294L, MS[5]#4295L, MS[6]#4296L, MS[7]#4297L, MS[8]#4298L, MS[9]#4299L, MS[10]#4300L, MS[11]#4301L, MS[12]#4302L, MS[13]#4303L, MS[14]#4304L, MS[15]#4305L, MS[16]#4306L, MS[17]#4307L, MS[18]#4308L, MS[19]#4309L, MS[20]#4310L, MS[21]#4311L, MS[22]#4312L, MS[23]#4313L, MS[24]#4314L, MS[25]#4315L, MS[26]#4316L, MS[27]#4317L, MS[28]#4318L, MS[29]#4319L, MS[30]#4320L, MS[31]#4321L, MS[32]#4322L, MS[33]#4323L, MS[34]#4324L, MS[35]#4325L, MS[36]#4326L, MS[37]#4327L, MS[38]#4328L, MS[39]#4329L, MS[40]#4330L, MS[41]#4331L, MS[42]#4332L, MS[43]#4333L, MS[44]#4334L, MS[45]#4335L, MS[46]#4336L, MS[47]#4337L, MS[48]#4338L, MS[49]#4339L, MS[50]#4340L, MS[51]#4341L, null#4394L, fractional#4395L, integral#4396L, boolean#4397L, string#4398L, min#5564, max#5565, sum#5566L, MS[0]#4404L, MS[1]#4405L, MS[2]#4406L, MS[3]#4407L, MS[4]#4408L, MS[5]#4409L, MS[6]#4410L, MS[7]#4411L, MS[8]#4412L, MS[9]#4413L, MS[10]#4414L, MS[11]#4415L, MS[12]#4416L, MS[13]#4417L, MS[14]#4418L, MS[15]#4419L, MS[16]#4420L, MS[17]#4421L, MS[18]#4422L, MS[19]#4423L, MS[20]#4424L, MS[21]#4425L, MS[22]#4426L, MS[23]#4427L, MS[24]#4428L, MS[25]#4429L, MS[26]#4430L, MS[27]#4431L, MS[28]#4432L, MS[29]#4433L, MS[30]#4434L, MS[31]#4435L, MS[32]#4436L, MS[33]#4437L, MS[34]#4438L, MS[35]#4439L, MS[36]#4440L, MS[37]#4441L, MS[38]#4442L, MS[39]#4443L, MS[40]#4444L, MS[41]#4445L, MS[42]#4446L, MS[43]#4447L, MS[44]#4448L, MS[45]#4449L, MS[46]#4450L, MS[47]#4451L, MS[48]#4452L, MS[49]#4453L, MS[50]#4454L, MS[51]#4455L, sum#5567L, MS[0]#4508L, MS[1]#4509L, MS[2]#4510L, MS[3]#4511L, MS[4]#4512L, MS[5]#4513L, MS[6]#4514L, MS[7]#4515L, MS[8]#4516L, MS[9]#4517L, MS[10]#4518L, MS[11]#4519L, MS[12]#4520L, MS[13]#4521L, MS[14]#4522L, MS[15]#4523L, MS[16]#4524L, MS[17]#4525L, MS[18]#4526L, MS[19]#4527L, MS[20]#4528L, MS[21]#4529L, MS[22]#4530L, MS[23]#4531L, MS[24]#4532L, MS[25]#4533L, MS[26]#4534L, MS[27]#4535L, MS[28]#4536L, MS[29]#4537L, MS[30]#4538L, MS[31]#4539L, MS[32]#4540L, MS[33]#4541L, MS[34]#4542L, MS[35]#4543L, MS[36]#4544L, MS[37]#4545L, MS[38]#4546L, MS[39]#4547L, MS[40]#4548L, MS[41]#4549L, MS[42]#4550L, MS[43]#4551L, MS[44]#4552L, MS[45]#4553L, MS[46]#4554L, MS[47]#4555L, MS[48]#4556L, MS[49]#4557L, MS[50]#4558L, MS[51]#4559L]\nResults [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\n\n(8) Exchange\nInput [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=243]\n\n(9) HashAggregate\nInput [467]: [sum#5568L, count#5569L, MS[0]#3772L, MS[1]#3773L, MS[2]#3774L, MS[3]#3775L, MS[4]#3776L, MS[5]#3777L, MS[6]#3778L, MS[7]#3779L, MS[8]#3780L, MS[9]#3781L, MS[10]#3782L, MS[11]#3783L, MS[12]#3784L, MS[13]#3785L, MS[14]#3786L, MS[15]#3787L, MS[16]#3788L, MS[17]#3789L, MS[18]#3790L, MS[19]#3791L, MS[20]#3792L, MS[21]#3793L, MS[22]#3794L, MS[23]#3795L, MS[24]#3796L, MS[25]#3797L, MS[26]#3798L, MS[27]#3799L, MS[28]#3800L, MS[29]#3801L, MS[30]#3802L, MS[31]#3803L, MS[32]#3804L, MS[33]#3805L, MS[34]#3806L, MS[35]#3807L, MS[36]#3808L, MS[37]#3809L, MS[38]#3810L, MS[39]#3811L, MS[40]#3812L, MS[41]#3813L, MS[42]#3814L, MS[43]#3815L, MS[44]#3816L, MS[45]#3817L, MS[46]#3818L, MS[47]#3819L, MS[48]#3820L, MS[49]#3821L, MS[50]#3822L, MS[51]#3823L, null#3829L, fractional#3830L, integral#3831L, boolean#3832L, string#3833L, min#5570, max#5571, sum#5572L, MS[0]#3886L, MS[1]#3887L, MS[2]#3888L, MS[3]#3889L, MS[4]#3890L, MS[5]#3891L, MS[6]#3892L, MS[7]#3893L, MS[8]#3894L, MS[9]#3895L, MS[10]#3896L, MS[11]#3897L, MS[12]#3898L, MS[13]#3899L, MS[14]#3900L, MS[15]#3901L, MS[16]#3902L, MS[17]#3903L, MS[18]#3904L, MS[19]#3905L, MS[20]#3906L, MS[21]#3907L, MS[22]#3908L, MS[23]#3909L, MS[24]#3910L, MS[25]#3911L, MS[26]#3912L, MS[27]#3913L, MS[28]#3914L, MS[29]#3915L, MS[30]#3916L, MS[31]#3917L, MS[32]#3918L, MS[33]#3919L, MS[34]#3920L, MS[35]#3921L, MS[36]#3922L, MS[37]#3923L, MS[38]#3924L, MS[39]#3925L, MS[40]#3926L, MS[41]#3927L, MS[42]#3928L, MS[43]#3929L, MS[44]#3930L, MS[45]#3931L, MS[46]#3932L, MS[47]#3933L, MS[48]#3934L, MS[49]#3935L, MS[50]#3936L, MS[51]#3937L, null#3943L, fractional#3944L, integral#3945L, boolean#3946L, string#3947L, min#5573, max#5574, sum#5575L, MS[0]#4000L, MS[1]#4001L, MS[2]#4002L, MS[3]#4003L, MS[4]#4004L, MS[5]#4005L, MS[6]#4006L, MS[7]#4007L, MS[8]#4008L, MS[9]#4009L, MS[10]#4010L, MS[11]#4011L, MS[12]#4012L, MS[13]#4013L, MS[14]#4014L, MS[15]#4015L, MS[16]#4016L, MS[17]#4017L, MS[18]#4018L, MS[19]#4019L, MS[20]#4020L, MS[21]#4021L, MS[22]#4022L, MS[23]#4023L, MS[24]#4024L, MS[25]#4025L, MS[26]#4026L, MS[27]#4027L, MS[28]#4028L, MS[29]#4029L, MS[30]#4030L, MS[31]#4031L, MS[32]#4032L, MS[33]#4033L, MS[34]#4034L, MS[35]#4035L, MS[36]#4036L, MS[37]#4037L, MS[38]#4038L, MS[39]#4039L, MS[40]#4040L, MS[41]#4041L, MS[42]#4042L, MS[43]#4043L, MS[44]#4044L, MS[45]#4045L, MS[46]#4046L, MS[47]#4047L, MS[48]#4048L, MS[49]#4049L, MS[50]#4050L, MS[51]#4051L, null#4057L, fractional#4058L, integral#4059L, boolean#4060L, string#4061L, min#5576, max#5577, sum#5578L, MS[0]#4114L, MS[1]#4115L, MS[2]#4116L, MS[3]#4117L, MS[4]#4118L, MS[5]#4119L, MS[6]#4120L, MS[7]#4121L, MS[8]#4122L, MS[9]#4123L, MS[10]#4124L, MS[11]#4125L, MS[12]#4126L, MS[13]#4127L, MS[14]#4128L, MS[15]#4129L, MS[16]#4130L, MS[17]#4131L, MS[18]#4132L, MS[19]#4133L, MS[20]#4134L, MS[21]#4135L, MS[22]#4136L, MS[23]#4137L, MS[24]#4138L, MS[25]#4139L, MS[26]#4140L, MS[27]#4141L, MS[28]#4142L, MS[29]#4143L, MS[30]#4144L, MS[31]#4145L, MS[32]#4146L, MS[33]#4147L, MS[34]#4148L, MS[35]#4149L, MS[36]#4150L, MS[37]#4151L, MS[38]#4152L, MS[39]#4153L, MS[40]#4154L, MS[41]#4155L, MS[42]#4156L, MS[43]#4157L, MS[44]#4158L, MS[45]#4159L, MS[46]#4160L, MS[47]#4161L, MS[48]#4162L, MS[49]#4163L, MS[50]#4164L, MS[51]#4165L, null#4171L, fractional#4172L, integral#4173L, boolean#4174L, string#4175L, min#5579, max#5580, sum#5581L, MS[0]#4228L, MS[1]#4229L, MS[2]#4230L, MS[3]#4231L, MS[4]#4232L, MS[5]#4233L, MS[6]#4234L, MS[7]#4235L, MS[8]#4236L, MS[9]#4237L, MS[10]#4238L, MS[11]#4239L, MS[12]#4240L, MS[13]#4241L, MS[14]#4242L, MS[15]#4243L, MS[16]#4244L, MS[17]#4245L, MS[18]#4246L, MS[19]#4247L, MS[20]#4248L, MS[21]#4249L, MS[22]#4250L, MS[23]#4251L, MS[24]#4252L, MS[25]#4253L, MS[26]#4254L, MS[27]#4255L, MS[28]#4256L, MS[29]#4257L, MS[30]#4258L, MS[31]#4259L, MS[32]#4260L, MS[33]#4261L, MS[34]#4262L, MS[35]#4263L, MS[36]#4264L, MS[37]#4265L, MS[38]#4266L, MS[39]#4267L, MS[40]#4268L, MS[41]#4269L, MS[42]#4270L, MS[43]#4271L, MS[44]#4272L, MS[45]#4273L, MS[46]#4274L, MS[47]#4275L, MS[48]#4276L, MS[49]#4277L, MS[50]#4278L, MS[51]#4279L, null#4285L, fractional#4286L, integral#4287L, boolean#4288L, string#4289L, min#5582, max#5583, sum#5584L, MS[0]#4342L, MS[1]#4343L, MS[2]#4344L, MS[3]#4345L, MS[4]#4346L, MS[5]#4347L, MS[6]#4348L, MS[7]#4349L, MS[8]#4350L, MS[9]#4351L, MS[10]#4352L, MS[11]#4353L, MS[12]#4354L, MS[13]#4355L, MS[14]#4356L, MS[15]#4357L, MS[16]#4358L, MS[17]#4359L, MS[18]#4360L, MS[19]#4361L, MS[20]#4362L, MS[21]#4363L, MS[22]#4364L, MS[23]#4365L, MS[24]#4366L, MS[25]#4367L, MS[26]#4368L, MS[27]#4369L, MS[28]#4370L, MS[29]#4371L, MS[30]#4372L, MS[31]#4373L, MS[32]#4374L, MS[33]#4375L, MS[34]#4376L, MS[35]#4377L, MS[36]#4378L, MS[37]#4379L, MS[38]#4380L, MS[39]#4381L, MS[40]#4382L, MS[41]#4383L, MS[42]#4384L, MS[43]#4385L, MS[44]#4386L, MS[45]#4387L, MS[46]#4388L, MS[47]#4389L, MS[48]#4390L, MS[49]#4391L, MS[50]#4392L, MS[51]#4393L, null#4399L, fractional#4400L, integral#4401L, boolean#4402L, string#4403L, min#5585, max#5586, sum#5587L, MS[0]#4456L, MS[1]#4457L, MS[2]#4458L, MS[3]#4459L, MS[4]#4460L, MS[5]#4461L, MS[6]#4462L, MS[7]#4463L, MS[8]#4464L, MS[9]#4465L, MS[10]#4466L, MS[11]#4467L, MS[12]#4468L, MS[13]#4469L, MS[14]#4470L, MS[15]#4471L, MS[16]#4472L, MS[17]#4473L, MS[18]#4474L, MS[19]#4475L, MS[20]#4476L, MS[21]#4477L, MS[22]#4478L, MS[23]#4479L, MS[24]#4480L, MS[25]#4481L, MS[26]#4482L, MS[27]#4483L, MS[28]#4484L, MS[29]#4485L, MS[30]#4486L, MS[31]#4487L, MS[32]#4488L, MS[33]#4489L, MS[34]#4490L, MS[35]#4491L, MS[36]#4492L, MS[37]#4493L, MS[38]#4494L, MS[39]#4495L, MS[40]#4496L, MS[41]#4497L, MS[42]#4498L, MS[43]#4499L, MS[44]#4500L, MS[45]#4501L, MS[46]#4502L, MS[47]#4503L, MS[48]#4504L, MS[49]#4505L, MS[50]#4506L, MS[51]#4507L, sum#5588L, MS[0]#4560L, MS[1]#4561L, MS[2]#4562L, MS[3]#4563L, MS[4]#4564L, MS[5]#4565L, MS[6]#4566L, MS[7]#4567L, MS[8]#4568L, MS[9]#4569L, MS[10]#4570L, MS[11]#4571L, MS[12]#4572L, MS[13]#4573L, MS[14]#4574L, MS[15]#4575L, MS[16]#4576L, MS[17]#4577L, MS[18]#4578L, MS[19]#4579L, MS[20]#4580L, MS[21]#4581L, MS[22]#4582L, MS[23]#4583L, MS[24]#4584L, MS[25]#4585L, MS[26]#4586L, MS[27]#4587L, MS[28]#4588L, MS[29]#4589L, MS[30]#4590L, MS[31]#4591L, MS[32]#4592L, MS[33]#4593L, MS[34]#4594L, MS[35]#4595L, MS[36]#4596L, MS[37]#4597L, MS[38]#4598L, MS[39]#4599L, MS[40]#4600L, MS[41]#4601L, MS[42]#4602L, MS[43]#4603L, MS[44]#4604L, MS[45]#4605L, MS[46]#4606L, MS[47]#4607L, MS[48]#4608L, MS[49]#4609L, MS[50]#4610L, MS[51]#4611L]\nKeys: []\nFunctions [35]: [sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(subcategories#5) as int)), stateful_approx_count_distinct(subcategories#5, 0, 0), statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@75354698, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(review_count#6L) as int)), stateful_approx_count_distinct(review_count#6L, 0, 0), sum(cast(isnotnull(stars#7) as int)), stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [35]: [sum(cast(isnotnull(business_id#0) as int))#793L, count(1)#794L, stateful_approx_count_distinct(business_id#0, 0, 0)#900, StatefulDataType(business_id#0)#911, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#916, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#921, sum(cast(isnotnull(name#1) as int))#922L, stateful_approx_count_distinct(name#1, 0, 0)#1029, StatefulDataType(name#1)#1040, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1045, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1050, sum(cast(isnotnull(city#2) as int))#1051L, stateful_approx_count_distinct(city#2, 0, 0)#1158, StatefulDataType(city#2)#1169, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1174, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1179, sum(cast(isnotnull(state#3) as int))#1180L, stateful_approx_count_distinct(state#3, 0, 0)#1287, StatefulDataType(state#3)#1298, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1303, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1308, sum(cast(isnotnull(category#4) as int))#1309L, stateful_approx_count_distinct(category#4, 0, 0)#1416, StatefulDataType(category#4)#1427, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1432, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1437, sum(cast(isnotnull(subcategories#5) as int))#1438L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1545, StatefulDataType(subcategories#5)#1556, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1561, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1566, sum(cast(isnotnull(review_count#6L) as int))#1567L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1674, sum(cast(isnotnull(stars#7) as int))#1675L, stateful_approx_count_distinct(stars#7, 0, 0)#1782]\nResults [43]: [sum(cast(isnotnull(business_id#0) as int))#793L AS sum(CAST((business_id IS NOT NULL) AS INT))#2785L, count(1)#794L AS count(1)#2786L, stateful_approx_count_distinct(business_id#0, 0, 0)#900 AS stateful_approx_count_distinct(business_id)#2891, StatefulDataType(business_id#0)#911 AS statefuldatatype(business_id)#2902, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#916 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2903, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#921 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2904, sum(cast(isnotnull(name#1) as int))#922L AS sum(CAST((name IS NOT NULL) AS INT))#2905L, count(1)#794L AS count(1)#2906L, stateful_approx_count_distinct(name#1, 0, 0)#1029 AS stateful_approx_count_distinct(name)#3011, StatefulDataType(name#1)#1040 AS statefuldatatype(name)#3022, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1045 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3023, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1050 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3024, sum(cast(isnotnull(city#2) as int))#1051L AS sum(CAST((city IS NOT NULL) AS INT))#3025L, count(1)#794L AS count(1)#3026L, stateful_approx_count_distinct(city#2, 0, 0)#1158 AS stateful_approx_count_distinct(city)#3131, StatefulDataType(city#2)#1169 AS statefuldatatype(city)#3142, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1174 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3143, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1179 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3144, sum(cast(isnotnull(state#3) as int))#1180L AS sum(CAST((state IS NOT NULL) AS INT))#3145L, count(1)#794L AS count(1)#3146L, stateful_approx_count_distinct(state#3, 0, 0)#1287 AS stateful_approx_count_distinct(state)#3251, StatefulDataType(state#3)#1298 AS statefuldatatype(state)#3262, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1303 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3263, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1308 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3264, sum(cast(isnotnull(category#4) as int))#1309L AS sum(CAST((category IS NOT NULL) AS INT))#3265L, count(1)#794L AS count(1)#3266L, stateful_approx_count_distinct(category#4, 0, 0)#1416 AS stateful_approx_count_distinct(category)#3371, StatefulDataType(category#4)#1427 AS statefuldatatype(category)#3382, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1432 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3383, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1437 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3384, sum(cast(isnotnull(subcategories#5) as int))#1438L AS sum(CAST((subcategories IS NOT NULL) AS INT))#3385L, count(1)#794L AS count(1)#3386L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1545 AS stateful_approx_count_distinct(subcategories)#3491, StatefulDataType(subcategories#5)#1556 AS statefuldatatype(subcategories)#3502, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1561 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3503, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1566 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3504, sum(cast(isnotnull(review_count#6L) as int))#1567L AS sum(CAST((review_count IS NOT NULL) AS INT))#3505L, count(1)#794L AS count(1)#3506L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1674 AS stateful_approx_count_distinct(review_count)#3611, sum(cast(isnotnull(stars#7) as int))#1675L AS sum(CAST((stars IS NOT NULL) AS INT))#3612L, count(1)#794L AS count(1)#3613L, stateful_approx_count_distinct(stars#7, 0, 0)#1782 AS stateful_approx_count_distinct(stars)#3718, count(1)#794L AS count(1)#3719L]\n\n(10) AdaptiveSparkPlan\nOutput [43]: [sum(CAST((business_id IS NOT NULL) AS INT))#2785L, count(1)#2786L, stateful_approx_count_distinct(business_id)#2891, statefuldatatype(business_id)#2902, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2903, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2904, sum(CAST((name IS NOT NULL) AS INT))#2905L, count(1)#2906L, stateful_approx_count_distinct(name)#3011, statefuldatatype(name)#3022, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3023, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3024, sum(CAST((city IS NOT NULL) AS INT))#3025L, count(1)#3026L, stateful_approx_count_distinct(city)#3131, statefuldatatype(city)#3142, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3143, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3144, sum(CAST((state IS NOT NULL) AS INT))#3145L, count(1)#3146L, stateful_approx_count_distinct(state)#3251, statefuldatatype(state)#3262, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3263, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3264, sum(CAST((category IS NOT NULL) AS INT))#3265L, count(1)#3266L, stateful_approx_count_distinct(category)#3371, statefuldatatype(category)#3382, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3383, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3384, sum(CAST((subcategories IS NOT NULL) AS INT))#3385L, count(1)#3386L, stateful_approx_count_distinct(subcategories)#3491, statefuldatatype(subcategories)#3502, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3503, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3504, sum(CAST((review_count IS NOT NULL) AS INT))#3505L, count(1)#3506L, stateful_approx_count_distinct(review_count)#3611, sum(CAST((stars IS NOT NULL) AS INT))#3612L, count(1)#3613L, stateful_approx_count_distinct(stars)#3718, count(1)#3719L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), ... 11 more fields])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=256]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@14f1342d, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@384a30fe, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@58aa961c, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@1dc546e, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@1c115824, 0, 0, None), ... 11 more fields])","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,name#1,city#2,state#3,category#4,subcategories#5,review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:stri...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:string,review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":865,"metricType":"sum"},{"name":"scan time","accumulatorId":864,"metricType":"timing"},{"name":"metadata time","accumulatorId":866,"metricType":"timing"},{"name":"size of files read","accumulatorId":867,"metricType":"size"},{"name":"number of output rows","accumulatorId":863,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":903,"metricType":"sum"},{"name":"number of input batches","accumulatorId":904,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":902,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":898,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":899,"metricType":"timing"},{"name":"peak memory","accumulatorId":897,"metricType":"size"},{"name":"number of output rows","accumulatorId":896,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":901,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":900,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":894,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":888,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":895,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":889,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":886,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":883,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":892,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":885,"metricType":"sum"},{"name":"records read","accumulatorId":882,"metricType":"sum"},{"name":"local bytes read","accumulatorId":880,"metricType":"size"},{"name":"fetch wait time","accumulatorId":881,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":878,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":884,"metricType":"sum"},{"name":"local blocks read","accumulatorId":877,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":887,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":876,"metricType":"sum"},{"name":"data size","accumulatorId":874,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":890,"metricType":"size"},{"name":"number of partitions","accumulatorId":875,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":891,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":879,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":893,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":870,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":871,"metricType":"timing"},{"name":"peak memory","accumulatorId":869,"metricType":"size"},{"name":"number of output rows","accumulatorId":868,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":873,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":872,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":12,"Submission Time":1720131151710,"Stage Infos":[{"Stage ID":19,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"110\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"107\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"109\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[18],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":18,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"101\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"103\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[37],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"106\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"FileScanRDD","Scope":"{\"id\":\"106\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"102\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[19,18],"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"111\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"6","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":19,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"110\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"107\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"109\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[18],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","Submission Time":1720131151711,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"111\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"6","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":19,"Stage Attempt ID":0,"Task Info":{"Task ID":41,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131151715,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":19,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":41,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131151715,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131151824,"Failed":false,"Killed":false,"Accumulables":[{"ID":868,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":869,"Name":"peak memory","Update":"33816560","Value":"33816560","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":870,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":871,"Name":"time in aggregation build","Update":"80","Value":"80","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":872,"Name":"avg hash probes per key","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":876,"Name":"remote blocks read","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":877,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":878,"Name":"remote bytes read","Update":"372","Value":"372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":880,"Name":"local bytes read","Update":"3031","Value":"3031","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":881,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":882,"Name":"records read","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":891,"Name":"remote reqs duration","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":940,"Name":"internal.metrics.executorDeserializeTime","Update":16,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":941,"Name":"internal.metrics.executorDeserializeCpuTime","Update":11475626,"Value":11475626,"Internal":true,"Count Failed Values":true},{"ID":942,"Name":"internal.metrics.executorRunTime","Update":88,"Value":88,"Internal":true,"Count Failed Values":true},{"ID":943,"Name":"internal.metrics.executorCpuTime","Update":84170540,"Value":84170540,"Internal":true,"Count Failed Values":true},{"ID":944,"Name":"internal.metrics.resultSize","Update":8368,"Value":8368,"Internal":true,"Count Failed Values":true},{"ID":949,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":33816560,"Internal":true,"Count Failed Values":true},{"ID":951,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":952,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":953,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":372,"Value":372,"Internal":true,"Count Failed Values":true},{"ID":954,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":955,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":3031,"Value":3031,"Internal":true,"Count Failed Values":true},{"ID":956,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":957,"Name":"internal.metrics.shuffle.read.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":958,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":959,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":960,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":961,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":962,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":963,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":964,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":965,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":966,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":967,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":231067648,"JVMOffHeapMemory":125453480,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":688229,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":688229,"OffHeapUnifiedMemory":0,"DirectPoolMemory":27406614,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":39,"MinorGCTime":108,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":108},"Task Metrics":{"Executor Deserialize Time":16,"Executor Deserialize CPU Time":11475626,"Executor Run Time":88,"Executor CPU Time":84170540,"Peak Execution Memory":33816560,"Result Size":8368,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":4,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":372,"Remote Bytes Read To Disk":0,"Local Bytes Read":3031,"Total Records Read":6,"Remote Requests Duration":2,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":19,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"110\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"107\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"109\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[18],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","Submission Time":1720131151711,"Completion Time":1720131151825,"Accumulables":[{"ID":868,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":869,"Name":"peak memory","Value":"33816560","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":870,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":871,"Name":"time in aggregation build","Value":"80","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":872,"Name":"avg hash probes per key","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":876,"Name":"remote blocks read","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":877,"Name":"local blocks read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":878,"Name":"remote bytes read","Value":"372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":880,"Name":"local bytes read","Value":"3031","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":881,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":882,"Name":"records read","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":891,"Name":"remote reqs duration","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":940,"Name":"internal.metrics.executorDeserializeTime","Value":16,"Internal":true,"Count Failed Values":true},{"ID":941,"Name":"internal.metrics.executorDeserializeCpuTime","Value":11475626,"Internal":true,"Count Failed Values":true},{"ID":942,"Name":"internal.metrics.executorRunTime","Value":88,"Internal":true,"Count Failed Values":true},{"ID":943,"Name":"internal.metrics.executorCpuTime","Value":84170540,"Internal":true,"Count Failed Values":true},{"ID":944,"Name":"internal.metrics.resultSize","Value":8368,"Internal":true,"Count Failed Values":true},{"ID":949,"Name":"internal.metrics.peakExecutionMemory","Value":33816560,"Internal":true,"Count Failed Values":true},{"ID":951,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":4,"Internal":true,"Count Failed Values":true},{"ID":952,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":2,"Internal":true,"Count Failed Values":true},{"ID":953,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":372,"Internal":true,"Count Failed Values":true},{"ID":954,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":955,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":3031,"Internal":true,"Count Failed Values":true},{"ID":956,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":957,"Name":"internal.metrics.shuffle.read.recordsRead","Value":6,"Internal":true,"Count Failed Values":true},{"ID":958,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":959,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":960,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":961,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":962,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":963,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":964,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":965,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":966,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":2,"Internal":true,"Count Failed Values":true},{"ID":967,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":12,"Completion Time":1720131151825,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":6,"time":1720131151842,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":7,"rootExecutionId":7,"description":"collect at AnalysisRunner.scala:327","details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (5)\n+- HashAggregate (4)\n   +- Exchange (3)\n      +- HashAggregate (2)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [2]: [review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<review_count:bigint,stars:double>\n\n(2) HashAggregate\nInput [2]: [review_count#6L, stars#7]\nKeys: []\nFunctions [10]: [partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)]\nAggregate Attributes [14]: [min#5955, max#5956, sum#5957L, count#5958L, n#5923, avg#5924, m2#5925, min#5959, max#5960, sum#5961, count#5962L, n#5931, avg#5932, m2#5933]\nResults [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\n\n(3) Exchange\nInput [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=277]\n\n(4) HashAggregate\nInput [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\nKeys: []\nFunctions [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)]\nAggregate Attributes [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5759, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5764, sum(review_count#6L)#5765L, count(review_count#6L)#5766L, stateful_stddev_pop(cast(review_count#6L as double))#5775, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5781, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5786, sum(stars#7)#5787, count(stars#7)#5788L, stateful_stddev_pop(stars#7)#5797]\nResults [12]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5759 AS min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5851, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5764 AS max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5852, cast(sum(review_count#6L)#5765L as double) AS CAST(sum(review_count) AS DOUBLE)#5853, count(review_count#6L)#5766L AS CAST(count(review_count) AS BIGINT)#5854L, stateful_stddev_pop(cast(review_count#6L as double))#5775 AS stateful_stddev_pop(review_count)#5863, cast(sum(review_count#6L)#5765L as double) AS CAST(sum(review_count) AS DOUBLE)#5864, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5781 AS min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5865, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5786 AS max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5866, sum(stars#7)#5787 AS CAST(sum(stars) AS DOUBLE)#5867, count(stars#7)#5788L AS CAST(count(stars) AS BIGINT)#5868L, stateful_stddev_pop(stars#7)#5797 AS stateful_stddev_pop(stars)#5877, sum(stars#7)#5787 AS CAST(sum(stars) AS DOUBLE)#5878]\n\n(5) AdaptiveSparkPlan\nOutput [12]: [min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5851, max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5852, CAST(sum(review_count) AS DOUBLE)#5853, CAST(count(review_count) AS BIGINT)#5854L, stateful_stddev_pop(review_count)#5863, CAST(sum(review_count) AS DOUBLE)#5864, min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5865, max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5866, CAST(sum(stars) AS DOUBLE)#5867, CAST(count(stars) AS BIGINT)#5868L, stateful_stddev_pop(stars)#5877, CAST(sum(stars) AS DOUBLE)#5878]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=277]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)])","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<review_count:bigint,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":1011,"metricType":"sum"},{"name":"scan time","accumulatorId":1010,"metricType":"timing"},{"name":"metadata time","accumulatorId":1012,"metricType":"timing"},{"name":"size of files read","accumulatorId":1013,"metricType":"size"},{"name":"number of output rows","accumulatorId":1009,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1005,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1006,"metricType":"timing"},{"name":"peak memory","accumulatorId":1004,"metricType":"size"},{"name":"number of output rows","accumulatorId":1003,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1008,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1007,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1001,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":995,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1002,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":996,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":993,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":990,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":999,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":992,"metricType":"sum"},{"name":"records read","accumulatorId":989,"metricType":"sum"},{"name":"local bytes read","accumulatorId":987,"metricType":"size"},{"name":"fetch wait time","accumulatorId":988,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":985,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":991,"metricType":"sum"},{"name":"local blocks read","accumulatorId":984,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":994,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":983,"metricType":"sum"},{"name":"data size","accumulatorId":981,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":997,"metricType":"size"},{"name":"number of partitions","accumulatorId":982,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":998,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":986,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1000,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":977,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":978,"metricType":"timing"},{"name":"peak memory","accumulatorId":976,"metricType":"size"},{"name":"number of output rows","accumulatorId":975,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":980,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":979,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1720131151931,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":7,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Current Plan ==\n   HashAggregate (6)\n   +- ShuffleQueryStage (5)\n      +- Exchange (4)\n         +- * HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [2]: [review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<review_count:bigint,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [2]: [review_count#6L, stars#7]\n\n(3) HashAggregate [codegen id : 1]\nInput [2]: [review_count#6L, stars#7]\nKeys: []\nFunctions [10]: [partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)]\nAggregate Attributes [14]: [min#5955, max#5956, sum#5957L, count#5958L, n#5923, avg#5924, m2#5925, min#5959, max#5960, sum#5961, count#5962L, n#5931, avg#5932, m2#5933]\nResults [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\n\n(4) Exchange\nInput [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=290]\n\n(5) ShuffleQueryStage\nOutput [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\nArguments: 0\n\n(6) HashAggregate\nInput [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\nKeys: []\nFunctions [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)]\nAggregate Attributes [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5759, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5764, sum(review_count#6L)#5765L, count(review_count#6L)#5766L, stateful_stddev_pop(cast(review_count#6L as double))#5775, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5781, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5786, sum(stars#7)#5787, count(stars#7)#5788L, stateful_stddev_pop(stars#7)#5797]\nResults [12]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5759 AS min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5851, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5764 AS max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5852, cast(sum(review_count#6L)#5765L as double) AS CAST(sum(review_count) AS DOUBLE)#5853, count(review_count#6L)#5766L AS CAST(count(review_count) AS BIGINT)#5854L, stateful_stddev_pop(cast(review_count#6L as double))#5775 AS stateful_stddev_pop(review_count)#5863, cast(sum(review_count#6L)#5765L as double) AS CAST(sum(review_count) AS DOUBLE)#5864, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5781 AS min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5865, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5786 AS max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5866, sum(stars#7)#5787 AS CAST(sum(stars) AS DOUBLE)#5867, count(stars#7)#5788L AS CAST(count(stars) AS BIGINT)#5868L, stateful_stddev_pop(stars#7)#5797 AS stateful_stddev_pop(stars)#5877, sum(stars#7)#5787 AS CAST(sum(stars) AS DOUBLE)#5878]\n\n(7) HashAggregate\nInput [2]: [review_count#6L, stars#7]\nKeys: []\nFunctions [10]: [partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)]\nAggregate Attributes [14]: [min#5955, max#5956, sum#5957L, count#5958L, n#5923, avg#5924, m2#5925, min#5959, max#5960, sum#5961, count#5962L, n#5931, avg#5932, m2#5933]\nResults [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\n\n(8) Exchange\nInput [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=277]\n\n(9) HashAggregate\nInput [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\nKeys: []\nFunctions [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)]\nAggregate Attributes [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5759, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5764, sum(review_count#6L)#5765L, count(review_count#6L)#5766L, stateful_stddev_pop(cast(review_count#6L as double))#5775, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5781, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5786, sum(stars#7)#5787, count(stars#7)#5788L, stateful_stddev_pop(stars#7)#5797]\nResults [12]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5759 AS min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5851, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5764 AS max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5852, cast(sum(review_count#6L)#5765L as double) AS CAST(sum(review_count) AS DOUBLE)#5853, count(review_count#6L)#5766L AS CAST(count(review_count) AS BIGINT)#5854L, stateful_stddev_pop(cast(review_count#6L as double))#5775 AS stateful_stddev_pop(review_count)#5863, cast(sum(review_count#6L)#5765L as double) AS CAST(sum(review_count) AS DOUBLE)#5864, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5781 AS min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5865, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5786 AS max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5866, sum(stars#7)#5787 AS CAST(sum(stars) AS DOUBLE)#5867, count(stars#7)#5788L AS CAST(count(stars) AS BIGINT)#5868L, stateful_stddev_pop(stars#7)#5797 AS stateful_stddev_pop(stars)#5877, sum(stars#7)#5787 AS CAST(sum(stars) AS DOUBLE)#5878]\n\n(10) AdaptiveSparkPlan\nOutput [12]: [min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5851, max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5852, CAST(sum(review_count) AS DOUBLE)#5853, CAST(count(review_count) AS BIGINT)#5854L, stateful_stddev_pop(review_count)#5863, CAST(sum(review_count) AS DOUBLE)#5864, min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5865, max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5866, CAST(sum(stars) AS DOUBLE)#5867, CAST(count(stars) AS BIGINT)#5868L, stateful_stddev_pop(stars)#5877, CAST(sum(stars) AS DOUBLE)#5878]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=290]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)])","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<review_count:bigint,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":1011,"metricType":"sum"},{"name":"scan time","accumulatorId":1010,"metricType":"timing"},{"name":"metadata time","accumulatorId":1012,"metricType":"timing"},{"name":"size of files read","accumulatorId":1013,"metricType":"size"},{"name":"number of output rows","accumulatorId":1009,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1049,"metricType":"sum"},{"name":"number of input batches","accumulatorId":1050,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1045,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1046,"metricType":"timing"},{"name":"peak memory","accumulatorId":1044,"metricType":"size"},{"name":"number of output rows","accumulatorId":1043,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1048,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1047,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1042,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1040,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1034,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1041,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1035,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1032,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1029,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1038,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1031,"metricType":"sum"},{"name":"records read","accumulatorId":1028,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1026,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1027,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1024,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1030,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1023,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1033,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1022,"metricType":"sum"},{"name":"data size","accumulatorId":1020,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1036,"metricType":"size"},{"name":"number of partitions","accumulatorId":1021,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1037,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1025,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1039,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1016,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1017,"metricType":"timing"},{"name":"peak memory","accumulatorId":1015,"metricType":"size"},{"name":"number of output rows","accumulatorId":1014,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1019,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1018,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":7,"accumUpdates":[[1011,1],[1012,0],[1013,37975350]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":7,"accumUpdates":[[1021,1]]}
{"Event":"SparkListenerJobStart","Job ID":13,"Submission Time":1720131151992,"Stage Infos":[{"Stage ID":20,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"120\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"121\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"125\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"FileScanRDD","Scope":"{\"id\":\"125\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[20],"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"120\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"7","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"7","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":20,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"120\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"121\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"125\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"FileScanRDD","Scope":"{\"id\":\"125\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","Submission Time":1720131151993,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"120\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"7","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"7","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":20,"Stage Attempt ID":0,"Task Info":{"Task ID":42,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131151995,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":20,"Stage Attempt ID":0,"Task Info":{"Task ID":43,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131151995,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":20,"Stage Attempt ID":0,"Task Info":{"Task ID":44,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131151996,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":20,"Stage Attempt ID":0,"Task Info":{"Task ID":45,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131151996,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":20,"Stage Attempt ID":0,"Task Info":{"Task ID":46,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131151996,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":20,"Stage Attempt ID":0,"Task Info":{"Task ID":47,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131151996,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":20,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":46,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131151996,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131153073,"Failed":false,"Killed":false,"Accumulables":[{"ID":1010,"Name":"scan time","Update":"1017","Value":"1017","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1020,"Name":"data size","Update":"120","Value":"120","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1039,"Name":"shuffle bytes written","Update":"59","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1040,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1041,"Name":"shuffle write time","Update":"1526499","Value":"1526499","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1042,"Name":"duration","Update":"1018","Value":"1018","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1043,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1046,"Name":"time in aggregation build","Update":"1017","Value":"1017","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1051,"Name":"internal.metrics.executorDeserializeTime","Update":17,"Value":17,"Internal":true,"Count Failed Values":true},{"ID":1052,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2576375,"Value":2576375,"Internal":true,"Count Failed Values":true},{"ID":1053,"Name":"internal.metrics.executorRunTime","Update":1046,"Value":1046,"Internal":true,"Count Failed Values":true},{"ID":1054,"Name":"internal.metrics.executorCpuTime","Update":119130791,"Value":119130791,"Internal":true,"Count Failed Values":true},{"ID":1055,"Name":"internal.metrics.resultSize","Update":2086,"Value":2086,"Internal":true,"Count Failed Values":true},{"ID":1079,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":59,"Internal":true,"Count Failed Values":true},{"ID":1080,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":1081,"Name":"internal.metrics.shuffle.write.writeTime","Update":1526499,"Value":1526499,"Internal":true,"Count Failed Values":true},{"ID":1082,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":1799,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":17,"Executor Deserialize CPU Time":2576375,"Executor Run Time":1046,"Executor CPU Time":119130791,"Peak Execution Memory":0,"Result Size":2086,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":1526499,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":20,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":45,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131151996,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131153078,"Failed":false,"Killed":false,"Accumulables":[{"ID":1010,"Name":"scan time","Update":"1016","Value":"2033","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1020,"Name":"data size","Update":"120","Value":"240","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1039,"Name":"shuffle bytes written","Update":"59","Value":"118","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1040,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1041,"Name":"shuffle write time","Update":"1494710","Value":"3021209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1042,"Name":"duration","Update":"1017","Value":"2035","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1043,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1046,"Name":"time in aggregation build","Update":"1016","Value":"2033","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1051,"Name":"internal.metrics.executorDeserializeTime","Update":16,"Value":33,"Internal":true,"Count Failed Values":true},{"ID":1052,"Name":"internal.metrics.executorDeserializeCpuTime","Update":1682667,"Value":4259042,"Internal":true,"Count Failed Values":true},{"ID":1053,"Name":"internal.metrics.executorRunTime","Update":1048,"Value":2094,"Internal":true,"Count Failed Values":true},{"ID":1054,"Name":"internal.metrics.executorCpuTime","Update":99528085,"Value":218658876,"Internal":true,"Count Failed Values":true},{"ID":1055,"Name":"internal.metrics.resultSize","Update":2172,"Value":4258,"Internal":true,"Count Failed Values":true},{"ID":1056,"Name":"internal.metrics.jvmGCTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":1057,"Name":"internal.metrics.resultSerializationTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":1079,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":118,"Internal":true,"Count Failed Values":true},{"ID":1080,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":1081,"Name":"internal.metrics.shuffle.write.writeTime","Update":1494710,"Value":3021209,"Internal":true,"Count Failed Values":true},{"ID":1082,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":3598,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":16,"Executor Deserialize CPU Time":1682667,"Executor Run Time":1048,"Executor CPU Time":99528085,"Peak Execution Memory":0,"Result Size":2172,"JVM GC Time":4,"Result Serialization Time":4,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":1494710,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":20,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":47,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131151996,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131153083,"Failed":false,"Killed":false,"Accumulables":[{"ID":1010,"Name":"scan time","Update":"1015","Value":"3048","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1020,"Name":"data size","Update":"120","Value":"360","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1039,"Name":"shuffle bytes written","Update":"59","Value":"177","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1040,"Name":"shuffle records written","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1041,"Name":"shuffle write time","Update":"1641502","Value":"4662711","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1042,"Name":"duration","Update":"1016","Value":"3051","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1043,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1046,"Name":"time in aggregation build","Update":"1015","Value":"3048","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1051,"Name":"internal.metrics.executorDeserializeTime","Update":21,"Value":54,"Internal":true,"Count Failed Values":true},{"ID":1052,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5019124,"Value":9278166,"Internal":true,"Count Failed Values":true},{"ID":1053,"Name":"internal.metrics.executorRunTime","Update":1046,"Value":3140,"Internal":true,"Count Failed Values":true},{"ID":1054,"Name":"internal.metrics.executorCpuTime","Update":37262623,"Value":255921499,"Internal":true,"Count Failed Values":true},{"ID":1055,"Name":"internal.metrics.resultSize","Update":2172,"Value":6430,"Internal":true,"Count Failed Values":true},{"ID":1056,"Name":"internal.metrics.jvmGCTime","Update":6,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":1057,"Name":"internal.metrics.resultSerializationTime","Update":7,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":1079,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":177,"Internal":true,"Count Failed Values":true},{"ID":1080,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":1081,"Name":"internal.metrics.shuffle.write.writeTime","Update":1641502,"Value":4662711,"Internal":true,"Count Failed Values":true},{"ID":1082,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":5397,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":21,"Executor Deserialize CPU Time":5019124,"Executor Run Time":1046,"Executor CPU Time":37262623,"Peak Execution Memory":0,"Result Size":2172,"JVM GC Time":6,"Result Serialization Time":7,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":1641502,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":20,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":42,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131151995,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131153083,"Failed":false,"Killed":false,"Accumulables":[{"ID":1010,"Name":"scan time","Update":"1031","Value":"4079","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1020,"Name":"data size","Update":"120","Value":"480","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1039,"Name":"shuffle bytes written","Update":"59","Value":"236","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1040,"Name":"shuffle records written","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1041,"Name":"shuffle write time","Update":"1324251","Value":"5986962","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1042,"Name":"duration","Update":"1032","Value":"4083","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1043,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1046,"Name":"time in aggregation build","Update":"1031","Value":"4079","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1051,"Name":"internal.metrics.executorDeserializeTime","Update":17,"Value":71,"Internal":true,"Count Failed Values":true},{"ID":1052,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4816122,"Value":14094288,"Internal":true,"Count Failed Values":true},{"ID":1053,"Name":"internal.metrics.executorRunTime","Update":1060,"Value":4200,"Internal":true,"Count Failed Values":true},{"ID":1054,"Name":"internal.metrics.executorCpuTime","Update":49013955,"Value":304935454,"Internal":true,"Count Failed Values":true},{"ID":1055,"Name":"internal.metrics.resultSize","Update":2129,"Value":8559,"Internal":true,"Count Failed Values":true},{"ID":1056,"Name":"internal.metrics.jvmGCTime","Update":4,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":1079,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":236,"Internal":true,"Count Failed Values":true},{"ID":1080,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":1081,"Name":"internal.metrics.shuffle.write.writeTime","Update":1324251,"Value":5986962,"Internal":true,"Count Failed Values":true},{"ID":1082,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":7196,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":17,"Executor Deserialize CPU Time":4816122,"Executor Run Time":1060,"Executor CPU Time":49013955,"Peak Execution Memory":0,"Result Size":2129,"JVM GC Time":4,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":1324251,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":20,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":43,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131151995,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131153086,"Failed":false,"Killed":false,"Accumulables":[{"ID":1010,"Name":"scan time","Update":"1033","Value":"5112","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1020,"Name":"data size","Update":"120","Value":"600","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1039,"Name":"shuffle bytes written","Update":"59","Value":"295","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1040,"Name":"shuffle records written","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1041,"Name":"shuffle write time","Update":"809248","Value":"6796210","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1042,"Name":"duration","Update":"1034","Value":"5117","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1043,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1046,"Name":"time in aggregation build","Update":"1033","Value":"5112","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1051,"Name":"internal.metrics.executorDeserializeTime","Update":19,"Value":90,"Internal":true,"Count Failed Values":true},{"ID":1052,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5064501,"Value":19158789,"Internal":true,"Count Failed Values":true},{"ID":1053,"Name":"internal.metrics.executorRunTime","Update":1059,"Value":5259,"Internal":true,"Count Failed Values":true},{"ID":1054,"Name":"internal.metrics.executorCpuTime","Update":33462208,"Value":338397662,"Internal":true,"Count Failed Values":true},{"ID":1055,"Name":"internal.metrics.resultSize","Update":2129,"Value":10688,"Internal":true,"Count Failed Values":true},{"ID":1057,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":1079,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":295,"Internal":true,"Count Failed Values":true},{"ID":1080,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":1081,"Name":"internal.metrics.shuffle.write.writeTime","Update":809248,"Value":6796210,"Internal":true,"Count Failed Values":true},{"ID":1082,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":8995,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":19,"Executor Deserialize CPU Time":5064501,"Executor Run Time":1059,"Executor CPU Time":33462208,"Peak Execution Memory":0,"Result Size":2129,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":809248,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":20,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":44,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131151996,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131154418,"Failed":false,"Killed":false,"Accumulables":[{"ID":1009,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1010,"Name":"scan time","Update":"2192","Value":"7304","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1020,"Name":"data size","Update":"120","Value":"720","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1039,"Name":"shuffle bytes written","Update":"134","Value":"429","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1040,"Name":"shuffle records written","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1041,"Name":"shuffle write time","Update":"565416","Value":"7361626","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1042,"Name":"duration","Update":"2361","Value":"7478","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1043,"Name":"number of output rows","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1046,"Name":"time in aggregation build","Update":"2360","Value":"7472","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1049,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1050,"Name":"number of input batches","Update":"144","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1051,"Name":"internal.metrics.executorDeserializeTime","Update":19,"Value":109,"Internal":true,"Count Failed Values":true},{"ID":1052,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2025749,"Value":21184538,"Internal":true,"Count Failed Values":true},{"ID":1053,"Name":"internal.metrics.executorRunTime","Update":2392,"Value":7651,"Internal":true,"Count Failed Values":true},{"ID":1054,"Name":"internal.metrics.executorCpuTime","Update":549883332,"Value":888280994,"Internal":true,"Count Failed Values":true},{"ID":1055,"Name":"internal.metrics.resultSize","Update":2215,"Value":12903,"Internal":true,"Count Failed Values":true},{"ID":1056,"Name":"internal.metrics.jvmGCTime","Update":9,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":1057,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":1079,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":134,"Value":429,"Internal":true,"Count Failed Values":true},{"ID":1080,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":1081,"Name":"internal.metrics.shuffle.write.writeTime","Update":565416,"Value":7361626,"Internal":true,"Count Failed Values":true},{"ID":1082,"Name":"internal.metrics.input.bytesRead","Update":1111183,"Value":1120178,"Internal":true,"Count Failed Values":true},{"ID":1083,"Name":"internal.metrics.input.recordsRead","Update":586579,"Value":586579,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":19,"Executor Deserialize CPU Time":2025749,"Executor Run Time":2392,"Executor CPU Time":549883332,"Peak Execution Memory":0,"Result Size":2215,"JVM GC Time":9,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":134,"Shuffle Write Time":565416,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1111183,"Records Read":586579},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":20,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"120\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"121\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"125\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"FileScanRDD","Scope":"{\"id\":\"125\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","Submission Time":1720131151993,"Completion Time":1720131154418,"Accumulables":[{"ID":1009,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1010,"Name":"scan time","Value":"7304","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1020,"Name":"data size","Value":"720","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1039,"Name":"shuffle bytes written","Value":"429","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1040,"Name":"shuffle records written","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1041,"Name":"shuffle write time","Value":"7361626","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1042,"Name":"duration","Value":"7478","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1043,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1046,"Name":"time in aggregation build","Value":"7472","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1049,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1050,"Name":"number of input batches","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1051,"Name":"internal.metrics.executorDeserializeTime","Value":109,"Internal":true,"Count Failed Values":true},{"ID":1052,"Name":"internal.metrics.executorDeserializeCpuTime","Value":21184538,"Internal":true,"Count Failed Values":true},{"ID":1053,"Name":"internal.metrics.executorRunTime","Value":7651,"Internal":true,"Count Failed Values":true},{"ID":1054,"Name":"internal.metrics.executorCpuTime","Value":888280994,"Internal":true,"Count Failed Values":true},{"ID":1055,"Name":"internal.metrics.resultSize","Value":12903,"Internal":true,"Count Failed Values":true},{"ID":1056,"Name":"internal.metrics.jvmGCTime","Value":23,"Internal":true,"Count Failed Values":true},{"ID":1057,"Name":"internal.metrics.resultSerializationTime","Value":14,"Internal":true,"Count Failed Values":true},{"ID":1079,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":429,"Internal":true,"Count Failed Values":true},{"ID":1080,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":6,"Internal":true,"Count Failed Values":true},{"ID":1081,"Name":"internal.metrics.shuffle.write.writeTime","Value":7361626,"Internal":true,"Count Failed Values":true},{"ID":1082,"Name":"internal.metrics.input.bytesRead","Value":1120178,"Internal":true,"Count Failed Values":true},{"ID":1083,"Name":"internal.metrics.input.recordsRead","Value":586579,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":13,"Completion Time":1720131154419,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":7,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Final Plan ==\n   * HashAggregate (6)\n   +- ShuffleQueryStage (5), Statistics(sizeInBytes=720.0 B, rowCount=6)\n      +- Exchange (4)\n         +- * HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [2]: [review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<review_count:bigint,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [2]: [review_count#6L, stars#7]\n\n(3) HashAggregate [codegen id : 1]\nInput [2]: [review_count#6L, stars#7]\nKeys: []\nFunctions [10]: [partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)]\nAggregate Attributes [14]: [min#5955, max#5956, sum#5957L, count#5958L, n#5923, avg#5924, m2#5925, min#5959, max#5960, sum#5961, count#5962L, n#5931, avg#5932, m2#5933]\nResults [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\n\n(4) Exchange\nInput [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=290]\n\n(5) ShuffleQueryStage\nOutput [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\nArguments: 0\n\n(6) HashAggregate [codegen id : 2]\nInput [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\nKeys: []\nFunctions [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)]\nAggregate Attributes [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5759, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5764, sum(review_count#6L)#5765L, count(review_count#6L)#5766L, stateful_stddev_pop(cast(review_count#6L as double))#5775, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5781, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5786, sum(stars#7)#5787, count(stars#7)#5788L, stateful_stddev_pop(stars#7)#5797]\nResults [12]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5759 AS min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5851, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5764 AS max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5852, cast(sum(review_count#6L)#5765L as double) AS CAST(sum(review_count) AS DOUBLE)#5853, count(review_count#6L)#5766L AS CAST(count(review_count) AS BIGINT)#5854L, stateful_stddev_pop(cast(review_count#6L as double))#5775 AS stateful_stddev_pop(review_count)#5863, cast(sum(review_count#6L)#5765L as double) AS CAST(sum(review_count) AS DOUBLE)#5864, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5781 AS min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5865, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5786 AS max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5866, sum(stars#7)#5787 AS CAST(sum(stars) AS DOUBLE)#5867, count(stars#7)#5788L AS CAST(count(stars) AS BIGINT)#5868L, stateful_stddev_pop(stars#7)#5797 AS stateful_stddev_pop(stars)#5877, sum(stars#7)#5787 AS CAST(sum(stars) AS DOUBLE)#5878]\n\n(7) HashAggregate\nInput [2]: [review_count#6L, stars#7]\nKeys: []\nFunctions [10]: [partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)]\nAggregate Attributes [14]: [min#5955, max#5956, sum#5957L, count#5958L, n#5923, avg#5924, m2#5925, min#5959, max#5960, sum#5961, count#5962L, n#5931, avg#5932, m2#5933]\nResults [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\n\n(8) Exchange\nInput [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=277]\n\n(9) HashAggregate\nInput [14]: [min#5963, max#5964, sum#5965L, count#5966L, n#5928, avg#5929, m2#5930, min#5967, max#5968, sum#5969, count#5970L, n#5936, avg#5937, m2#5938]\nKeys: []\nFunctions [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)]\nAggregate Attributes [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5759, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5764, sum(review_count#6L)#5765L, count(review_count#6L)#5766L, stateful_stddev_pop(cast(review_count#6L as double))#5775, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5781, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5786, sum(stars#7)#5787, count(stars#7)#5788L, stateful_stddev_pop(stars#7)#5797]\nResults [12]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5759 AS min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5851, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5764 AS max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5852, cast(sum(review_count#6L)#5765L as double) AS CAST(sum(review_count) AS DOUBLE)#5853, count(review_count#6L)#5766L AS CAST(count(review_count) AS BIGINT)#5854L, stateful_stddev_pop(cast(review_count#6L as double))#5775 AS stateful_stddev_pop(review_count)#5863, cast(sum(review_count#6L)#5765L as double) AS CAST(sum(review_count) AS DOUBLE)#5864, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5781 AS min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5865, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5786 AS max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5866, sum(stars#7)#5787 AS CAST(sum(stars) AS DOUBLE)#5867, count(stars#7)#5788L AS CAST(count(stars) AS BIGINT)#5868L, stateful_stddev_pop(stars#7)#5797 AS stateful_stddev_pop(stars)#5877, sum(stars#7)#5787 AS CAST(sum(stars) AS DOUBLE)#5878]\n\n(10) AdaptiveSparkPlan\nOutput [12]: [min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5851, max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5852, CAST(sum(review_count) AS DOUBLE)#5853, CAST(count(review_count) AS BIGINT)#5854L, stateful_stddev_pop(review_count)#5863, CAST(sum(review_count) AS DOUBLE)#5864, min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5865, max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5866, CAST(sum(stars) AS DOUBLE)#5867, CAST(count(stars) AS BIGINT)#5868L, stateful_stddev_pop(stars)#5877, CAST(sum(stars) AS DOUBLE)#5878]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=290]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)])","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<review_count:bigint,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":1011,"metricType":"sum"},{"name":"scan time","accumulatorId":1010,"metricType":"timing"},{"name":"metadata time","accumulatorId":1012,"metricType":"timing"},{"name":"size of files read","accumulatorId":1013,"metricType":"size"},{"name":"number of output rows","accumulatorId":1009,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1049,"metricType":"sum"},{"name":"number of input batches","accumulatorId":1050,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1045,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1046,"metricType":"timing"},{"name":"peak memory","accumulatorId":1044,"metricType":"size"},{"name":"number of output rows","accumulatorId":1043,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1048,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1047,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1042,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1040,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1034,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1041,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1035,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1032,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1029,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1038,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1031,"metricType":"sum"},{"name":"records read","accumulatorId":1028,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1026,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1027,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1024,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1030,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1023,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1033,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1022,"metricType":"sum"},{"name":"data size","accumulatorId":1020,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1036,"metricType":"size"},{"name":"number of partitions","accumulatorId":1021,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1037,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1025,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1039,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1089,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1090,"metricType":"timing"},{"name":"peak memory","accumulatorId":1088,"metricType":"size"},{"name":"number of output rows","accumulatorId":1087,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1092,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1091,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1086,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":14,"Submission Time":1720131154454,"Stage Infos":[{"Stage ID":21,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"120\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"121\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"125\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"FileScanRDD","Scope":"{\"id\":\"125\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":22,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"131\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"126\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"130\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[21],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[21,22],"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"132\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"7","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"7","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":22,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"131\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"126\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"130\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[21],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","Submission Time":1720131154454,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"39097","spark.submit.pyFiles":"","spark.app.startTime":"1720131107866","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"132\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720131107343","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"7","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"590fa75cd8bd","spark.app.id":"app-20240704221148-0011","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"7","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":22,"Stage Attempt ID":0,"Task Info":{"Task ID":48,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131154457,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":22,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":48,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131154457,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131154511,"Failed":false,"Killed":false,"Accumulables":[{"ID":1022,"Name":"remote blocks read","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1023,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1024,"Name":"remote bytes read","Update":"311","Value":"311","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1026,"Name":"local bytes read","Update":"118","Value":"118","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1027,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1028,"Name":"records read","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1037,"Name":"remote reqs duration","Update":"7","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1086,"Name":"duration","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1087,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1090,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1093,"Name":"internal.metrics.executorDeserializeTime","Update":10,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":1094,"Name":"internal.metrics.executorDeserializeCpuTime","Update":6652581,"Value":6652581,"Internal":true,"Count Failed Values":true},{"ID":1095,"Name":"internal.metrics.executorRunTime","Update":32,"Value":32,"Internal":true,"Count Failed Values":true},{"ID":1096,"Name":"internal.metrics.executorCpuTime","Update":19883500,"Value":19883500,"Internal":true,"Count Failed Values":true},{"ID":1097,"Name":"internal.metrics.resultSize","Update":4100,"Value":4100,"Internal":true,"Count Failed Values":true},{"ID":1104,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":1105,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":1106,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":311,"Value":311,"Internal":true,"Count Failed Values":true},{"ID":1107,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1108,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":118,"Value":118,"Internal":true,"Count Failed Values":true},{"ID":1109,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1110,"Name":"internal.metrics.shuffle.read.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":1111,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1112,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1113,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1114,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1115,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1116,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1117,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1118,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1119,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":1120,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":10,"Executor Deserialize CPU Time":6652581,"Executor Run Time":32,"Executor CPU Time":19883500,"Peak Execution Memory":0,"Result Size":4100,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":4,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":311,"Remote Bytes Read To Disk":0,"Local Bytes Read":118,"Total Records Read":6,"Remote Requests Duration":7,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":22,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"131\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"126\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"130\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[21],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)","Submission Time":1720131154454,"Completion Time":1720131154512,"Accumulables":[{"ID":1022,"Name":"remote blocks read","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1023,"Name":"local blocks read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1024,"Name":"remote bytes read","Value":"311","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1026,"Name":"local bytes read","Value":"118","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1027,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1028,"Name":"records read","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1037,"Name":"remote reqs duration","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1086,"Name":"duration","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1087,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1090,"Name":"time in aggregation build","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1093,"Name":"internal.metrics.executorDeserializeTime","Value":10,"Internal":true,"Count Failed Values":true},{"ID":1094,"Name":"internal.metrics.executorDeserializeCpuTime","Value":6652581,"Internal":true,"Count Failed Values":true},{"ID":1095,"Name":"internal.metrics.executorRunTime","Value":32,"Internal":true,"Count Failed Values":true},{"ID":1096,"Name":"internal.metrics.executorCpuTime","Value":19883500,"Internal":true,"Count Failed Values":true},{"ID":1097,"Name":"internal.metrics.resultSize","Value":4100,"Internal":true,"Count Failed Values":true},{"ID":1104,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":4,"Internal":true,"Count Failed Values":true},{"ID":1105,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":2,"Internal":true,"Count Failed Values":true},{"ID":1106,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":311,"Internal":true,"Count Failed Values":true},{"ID":1107,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1108,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":118,"Internal":true,"Count Failed Values":true},{"ID":1109,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1110,"Name":"internal.metrics.shuffle.read.recordsRead","Value":6,"Internal":true,"Count Failed Values":true},{"ID":1111,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1112,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1113,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1114,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1115,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1116,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1117,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1118,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1119,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":7,"Internal":true,"Count Failed Values":true},{"ID":1120,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":14,"Completion Time":1720131154512,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":7,"time":1720131154525,"errorMessage":""}
{"Event":"SparkListenerJobStart","Job ID":15,"Submission Time":1720131154577,"Stage Infos":[{"Stage ID":24,"Stage Attempt ID":0,"Stage Name":"countByKey at ColumnProfiler.scala:631","Number of Tasks":6,"RDD Info":[{"RDD ID":59,"Name":"ShuffledRDD","Scope":"{\"id\":\"147\",\"name\":\"countByKey\"}","Callsite":"countByKey at ColumnProfiler.scala:631","Parent IDs":[58],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[23],"Details":"org.apache.spark.rdd.PairRDDFunctions.countByKey(PairRDDFunctions.scala:367)\ncom.amazon.deequ.profiles.ColumnProfiler$.computeHistograms(ColumnProfiler.scala:631)\ncom.amazon.deequ.profiles.ColumnProfiler$.getHistogramsForThirdPass(ColumnProfiler.scala:684)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:227)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":23,"Stage Attempt ID":0,"Stage Name":"countByKey at ColumnProfiler.scala:631","Number of Tasks":6,"RDD Info":[{"RDD ID":58,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"147\",\"name\":\"countByKey\"}","Callsite":"countByKey at ColumnProfiler.scala:631","Parent IDs":[57],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"FileScanRDD","Scope":"{\"id\":\"144\",\"name\":\"Scan parquet \"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"140\",\"name\":\"DeserializeToObject\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":57,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"146\",\"name\":\"flatMap\"}","Callsite":"flatMap at ColumnProfiler.scala:631","Parent IDs":[56],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":56,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"145\",\"name\":\"mapPartitions\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[55],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"141\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"144\",\"name\":\"Scan parquet \"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":55,"Name":"SQLExecutionRDD","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.rdd.PairRDDFunctions.countByKey(PairRDDFunctions.scala:367)\ncom.amazon.deequ.profiles.ColumnProfiler$.computeHistograms(ColumnProfiler.scala:631)\ncom.amazon.deequ.profiles.ColumnProfiler$.getHistogramsForThirdPass(ColumnProfiler.scala:684)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:227)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[24,23],"Properties":{"spark.rdd.scope":"{\"id\":\"147\",\"name\":\"countByKey\"}","__fetch_continuous_blocks_in_batch_enabled":"true","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":23,"Stage Attempt ID":0,"Stage Name":"countByKey at ColumnProfiler.scala:631","Number of Tasks":6,"RDD Info":[{"RDD ID":58,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"147\",\"name\":\"countByKey\"}","Callsite":"countByKey at ColumnProfiler.scala:631","Parent IDs":[57],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"FileScanRDD","Scope":"{\"id\":\"144\",\"name\":\"Scan parquet \"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"140\",\"name\":\"DeserializeToObject\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":57,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"146\",\"name\":\"flatMap\"}","Callsite":"flatMap at ColumnProfiler.scala:631","Parent IDs":[56],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":56,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"145\",\"name\":\"mapPartitions\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[55],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"141\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"144\",\"name\":\"Scan parquet \"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":55,"Name":"SQLExecutionRDD","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.rdd.PairRDDFunctions.countByKey(PairRDDFunctions.scala:367)\ncom.amazon.deequ.profiles.ColumnProfiler$.computeHistograms(ColumnProfiler.scala:631)\ncom.amazon.deequ.profiles.ColumnProfiler$.getHistogramsForThirdPass(ColumnProfiler.scala:684)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:227)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720131154578,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.rdd.scope":"{\"id\":\"147\",\"name\":\"countByKey\"}","__fetch_continuous_blocks_in_batch_enabled":"true","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":23,"Stage Attempt ID":0,"Task Info":{"Task ID":49,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131154584,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":23,"Stage Attempt ID":0,"Task Info":{"Task ID":50,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131154584,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":23,"Stage Attempt ID":0,"Task Info":{"Task ID":51,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131154584,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":23,"Stage Attempt ID":0,"Task Info":{"Task ID":52,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131154584,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":23,"Stage Attempt ID":0,"Task Info":{"Task ID":53,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131154584,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":23,"Stage Attempt ID":0,"Task Info":{"Task ID":54,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131154584,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":23,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":50,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131154584,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131156159,"Failed":false,"Killed":false,"Accumulables":[{"ID":1130,"Name":"duration","Update":"1453","Value":"1453","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1132,"Name":"scan time","Update":"957","Value":"957","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1136,"Name":"internal.metrics.executorDeserializeTime","Update":101,"Value":101,"Internal":true,"Count Failed Values":true},{"ID":1137,"Name":"internal.metrics.executorDeserializeCpuTime","Update":35421004,"Value":35421004,"Internal":true,"Count Failed Values":true},{"ID":1138,"Name":"internal.metrics.executorRunTime","Update":1463,"Value":1463,"Internal":true,"Count Failed Values":true},{"ID":1139,"Name":"internal.metrics.executorCpuTime","Update":76965169,"Value":76965169,"Internal":true,"Count Failed Values":true},{"ID":1140,"Name":"internal.metrics.resultSize","Update":1907,"Value":1907,"Internal":true,"Count Failed Values":true},{"ID":1143,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1144,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1145,"Name":"internal.metrics.peakExecutionMemory","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1166,"Name":"internal.metrics.shuffle.write.writeTime","Update":1138459,"Value":1138459,"Internal":true,"Count Failed Values":true},{"ID":1167,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":1799,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":101,"Executor Deserialize CPU Time":35421004,"Executor Run Time":1463,"Executor CPU Time":76965169,"Peak Execution Memory":0,"Result Size":1907,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":1138459,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":23,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":52,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131154584,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131156163,"Failed":false,"Killed":false,"Accumulables":[{"ID":1130,"Name":"duration","Update":"1461","Value":"2914","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1132,"Name":"scan time","Update":"947","Value":"1904","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1136,"Name":"internal.metrics.executorDeserializeTime","Update":84,"Value":185,"Internal":true,"Count Failed Values":true},{"ID":1137,"Name":"internal.metrics.executorDeserializeCpuTime","Update":27193663,"Value":62614667,"Internal":true,"Count Failed Values":true},{"ID":1138,"Name":"internal.metrics.executorRunTime","Update":1476,"Value":2939,"Internal":true,"Count Failed Values":true},{"ID":1139,"Name":"internal.metrics.executorCpuTime","Update":77650462,"Value":154615631,"Internal":true,"Count Failed Values":true},{"ID":1140,"Name":"internal.metrics.resultSize","Update":1993,"Value":3900,"Internal":true,"Count Failed Values":true},{"ID":1141,"Name":"internal.metrics.jvmGCTime","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":1142,"Name":"internal.metrics.resultSerializationTime","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":1143,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1144,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1145,"Name":"internal.metrics.peakExecutionMemory","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1166,"Name":"internal.metrics.shuffle.write.writeTime","Update":797041,"Value":1935500,"Internal":true,"Count Failed Values":true},{"ID":1167,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":3598,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":84,"Executor Deserialize CPU Time":27193663,"Executor Run Time":1476,"Executor CPU Time":77650462,"Peak Execution Memory":0,"Result Size":1993,"JVM GC Time":7,"Result Serialization Time":7,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":797041,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":23,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":49,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131154584,"Executor ID":"0","Host":"172.31.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131156189,"Failed":false,"Killed":false,"Accumulables":[{"ID":1130,"Name":"duration","Update":"1507","Value":"4421","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1132,"Name":"scan time","Update":"994","Value":"2898","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1136,"Name":"internal.metrics.executorDeserializeTime","Update":86,"Value":271,"Internal":true,"Count Failed Values":true},{"ID":1137,"Name":"internal.metrics.executorDeserializeCpuTime","Update":68991962,"Value":131606629,"Internal":true,"Count Failed Values":true},{"ID":1138,"Name":"internal.metrics.executorRunTime","Update":1511,"Value":4450,"Internal":true,"Count Failed Values":true},{"ID":1139,"Name":"internal.metrics.executorCpuTime","Update":510880524,"Value":665496155,"Internal":true,"Count Failed Values":true},{"ID":1140,"Name":"internal.metrics.resultSize","Update":1950,"Value":5850,"Internal":true,"Count Failed Values":true},{"ID":1141,"Name":"internal.metrics.jvmGCTime","Update":7,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":1143,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1144,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1145,"Name":"internal.metrics.peakExecutionMemory","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1166,"Name":"internal.metrics.shuffle.write.writeTime","Update":20500,"Value":1956000,"Internal":true,"Count Failed Values":true},{"ID":1167,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":5397,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":86,"Executor Deserialize CPU Time":68991962,"Executor Run Time":1511,"Executor CPU Time":510880524,"Peak Execution Memory":0,"Result Size":1950,"JVM GC Time":7,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":20500,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":23,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":53,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131154584,"Executor ID":"1","Host":"172.31.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131156252,"Failed":false,"Killed":false,"Accumulables":[{"ID":1130,"Name":"duration","Update":"1553","Value":"5974","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1132,"Name":"scan time","Update":"1057","Value":"3955","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1136,"Name":"internal.metrics.executorDeserializeTime","Update":101,"Value":372,"Internal":true,"Count Failed Values":true},{"ID":1137,"Name":"internal.metrics.executorDeserializeCpuTime","Update":70729835,"Value":202336464,"Internal":true,"Count Failed Values":true},{"ID":1138,"Name":"internal.metrics.executorRunTime","Update":1557,"Value":6007,"Internal":true,"Count Failed Values":true},{"ID":1139,"Name":"internal.metrics.executorCpuTime","Update":501019536,"Value":1166515691,"Internal":true,"Count Failed Values":true},{"ID":1140,"Name":"internal.metrics.resultSize","Update":1907,"Value":7757,"Internal":true,"Count Failed Values":true},{"ID":1143,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1144,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1145,"Name":"internal.metrics.peakExecutionMemory","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1166,"Name":"internal.metrics.shuffle.write.writeTime","Update":39834,"Value":1995834,"Internal":true,"Count Failed Values":true},{"ID":1167,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":7196,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":101,"Executor Deserialize CPU Time":70729835,"Executor Run Time":1557,"Executor CPU Time":501019536,"Peak Execution Memory":0,"Result Size":1907,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":39834,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":23,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":54,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131154584,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131156255,"Failed":false,"Killed":false,"Accumulables":[{"ID":1130,"Name":"duration","Update":"1563","Value":"7537","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1132,"Name":"scan time","Update":"1039","Value":"4994","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1136,"Name":"internal.metrics.executorDeserializeTime","Update":91,"Value":463,"Internal":true,"Count Failed Values":true},{"ID":1137,"Name":"internal.metrics.executorDeserializeCpuTime","Update":40143957,"Value":242480421,"Internal":true,"Count Failed Values":true},{"ID":1138,"Name":"internal.metrics.executorRunTime","Update":1572,"Value":7579,"Internal":true,"Count Failed Values":true},{"ID":1139,"Name":"internal.metrics.executorCpuTime","Update":512192118,"Value":1678707809,"Internal":true,"Count Failed Values":true},{"ID":1140,"Name":"internal.metrics.resultSize","Update":1907,"Value":9664,"Internal":true,"Count Failed Values":true},{"ID":1143,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1144,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1145,"Name":"internal.metrics.peakExecutionMemory","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1166,"Name":"internal.metrics.shuffle.write.writeTime","Update":594916,"Value":2590750,"Internal":true,"Count Failed Values":true},{"ID":1167,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":8995,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":91,"Executor Deserialize CPU Time":40143957,"Executor Run Time":1572,"Executor CPU Time":512192118,"Peak Execution Memory":0,"Result Size":1907,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":594916,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":23,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":51,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131154584,"Executor ID":"2","Host":"172.31.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131162366,"Failed":false,"Killed":false,"Accumulables":[{"ID":1128,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1129,"Name":"number of input batches","Update":"144","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1130,"Name":"duration","Update":"7676","Value":"15213","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1131,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1132,"Name":"scan time","Update":"6661","Value":"11655","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1136,"Name":"internal.metrics.executorDeserializeTime","Update":91,"Value":554,"Internal":true,"Count Failed Values":true},{"ID":1137,"Name":"internal.metrics.executorDeserializeCpuTime","Update":49642577,"Value":292122998,"Internal":true,"Count Failed Values":true},{"ID":1138,"Name":"internal.metrics.executorRunTime","Update":7684,"Value":15263,"Internal":true,"Count Failed Values":true},{"ID":1139,"Name":"internal.metrics.executorCpuTime","Update":838938094,"Value":2517645903,"Internal":true,"Count Failed Values":true},{"ID":1140,"Name":"internal.metrics.resultSize","Update":2079,"Value":11743,"Internal":true,"Count Failed Values":true},{"ID":1141,"Name":"internal.metrics.jvmGCTime","Update":20,"Value":34,"Internal":true,"Count Failed Values":true},{"ID":1143,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1144,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1145,"Name":"internal.metrics.peakExecutionMemory","Update":12360,"Value":12360,"Internal":true,"Count Failed Values":true},{"ID":1164,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":2379,"Value":2379,"Internal":true,"Count Failed Values":true},{"ID":1165,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":90,"Value":90,"Internal":true,"Count Failed Values":true},{"ID":1166,"Name":"internal.metrics.shuffle.write.writeTime","Update":31913,"Value":2622663,"Internal":true,"Count Failed Values":true},{"ID":1167,"Name":"internal.metrics.input.bytesRead","Update":37977145,"Value":37986140,"Internal":true,"Count Failed Values":true},{"ID":1168,"Name":"internal.metrics.input.recordsRead","Update":586579,"Value":586579,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":484823040,"JVMOffHeapMemory":148478632,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":1015089,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":1015089,"OffHeapUnifiedMemory":0,"DirectPoolMemory":27411009,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":39,"MinorGCTime":108,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":108},"Task Metrics":{"Executor Deserialize Time":91,"Executor Deserialize CPU Time":49642577,"Executor Run Time":7684,"Executor CPU Time":838938094,"Peak Execution Memory":12360,"Result Size":2079,"JVM GC Time":20,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":2379,"Shuffle Write Time":31913,"Shuffle Records Written":90},"Input Metrics":{"Bytes Read":37977145,"Records Read":586579},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":23,"Stage Attempt ID":0,"Stage Name":"countByKey at ColumnProfiler.scala:631","Number of Tasks":6,"RDD Info":[{"RDD ID":58,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"147\",\"name\":\"countByKey\"}","Callsite":"countByKey at ColumnProfiler.scala:631","Parent IDs":[57],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"FileScanRDD","Scope":"{\"id\":\"144\",\"name\":\"Scan parquet \"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"140\",\"name\":\"DeserializeToObject\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":57,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"146\",\"name\":\"flatMap\"}","Callsite":"flatMap at ColumnProfiler.scala:631","Parent IDs":[56],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":56,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"145\",\"name\":\"mapPartitions\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[55],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"141\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"144\",\"name\":\"Scan parquet \"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":55,"Name":"SQLExecutionRDD","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.rdd.PairRDDFunctions.countByKey(PairRDDFunctions.scala:367)\ncom.amazon.deequ.profiles.ColumnProfiler$.computeHistograms(ColumnProfiler.scala:631)\ncom.amazon.deequ.profiles.ColumnProfiler$.getHistogramsForThirdPass(ColumnProfiler.scala:684)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:227)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720131154578,"Completion Time":1720131162367,"Accumulables":[{"ID":1128,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1129,"Name":"number of input batches","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1130,"Name":"duration","Value":"15213","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1131,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1132,"Name":"scan time","Value":"11655","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1136,"Name":"internal.metrics.executorDeserializeTime","Value":554,"Internal":true,"Count Failed Values":true},{"ID":1137,"Name":"internal.metrics.executorDeserializeCpuTime","Value":292122998,"Internal":true,"Count Failed Values":true},{"ID":1138,"Name":"internal.metrics.executorRunTime","Value":15263,"Internal":true,"Count Failed Values":true},{"ID":1139,"Name":"internal.metrics.executorCpuTime","Value":2517645903,"Internal":true,"Count Failed Values":true},{"ID":1140,"Name":"internal.metrics.resultSize","Value":11743,"Internal":true,"Count Failed Values":true},{"ID":1141,"Name":"internal.metrics.jvmGCTime","Value":34,"Internal":true,"Count Failed Values":true},{"ID":1142,"Name":"internal.metrics.resultSerializationTime","Value":7,"Internal":true,"Count Failed Values":true},{"ID":1143,"Name":"internal.metrics.memoryBytesSpilled","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1144,"Name":"internal.metrics.diskBytesSpilled","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1145,"Name":"internal.metrics.peakExecutionMemory","Value":12360,"Internal":true,"Count Failed Values":true},{"ID":1164,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":2379,"Internal":true,"Count Failed Values":true},{"ID":1165,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":90,"Internal":true,"Count Failed Values":true},{"ID":1166,"Name":"internal.metrics.shuffle.write.writeTime","Value":2622663,"Internal":true,"Count Failed Values":true},{"ID":1167,"Name":"internal.metrics.input.bytesRead","Value":37986140,"Internal":true,"Count Failed Values":true},{"ID":1168,"Name":"internal.metrics.input.recordsRead","Value":586579,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":24,"Stage Attempt ID":0,"Stage Name":"countByKey at ColumnProfiler.scala:631","Number of Tasks":6,"RDD Info":[{"RDD ID":59,"Name":"ShuffledRDD","Scope":"{\"id\":\"147\",\"name\":\"countByKey\"}","Callsite":"countByKey at ColumnProfiler.scala:631","Parent IDs":[58],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[23],"Details":"org.apache.spark.rdd.PairRDDFunctions.countByKey(PairRDDFunctions.scala:367)\ncom.amazon.deequ.profiles.ColumnProfiler$.computeHistograms(ColumnProfiler.scala:631)\ncom.amazon.deequ.profiles.ColumnProfiler$.getHistogramsForThirdPass(ColumnProfiler.scala:684)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:227)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720131162368,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.rdd.scope":"{\"id\":\"147\",\"name\":\"countByKey\"}","__fetch_continuous_blocks_in_batch_enabled":"true","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":24,"Stage Attempt ID":0,"Task Info":{"Task ID":55,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131162372,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":24,"Stage Attempt ID":0,"Task Info":{"Task ID":56,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131162373,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":24,"Stage Attempt ID":0,"Task Info":{"Task ID":57,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131162397,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":24,"Stage Attempt ID":0,"Task Info":{"Task ID":58,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131162398,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":24,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":55,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720131162372,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131162398,"Failed":false,"Killed":false,"Accumulables":[{"ID":1171,"Name":"internal.metrics.executorDeserializeTime","Update":9,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":1172,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5529085,"Value":5529085,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.executorRunTime","Update":9,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":1174,"Name":"internal.metrics.executorCpuTime","Update":6687125,"Value":6687125,"Internal":true,"Count Failed Values":true},{"ID":1175,"Name":"internal.metrics.resultSize","Update":2352,"Value":2352,"Internal":true,"Count Failed Values":true},{"ID":1178,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1179,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1180,"Name":"internal.metrics.peakExecutionMemory","Update":2232,"Value":2232,"Internal":true,"Count Failed Values":true},{"ID":1182,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1183,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":1184,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1185,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1186,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":409,"Value":409,"Internal":true,"Count Failed Values":true},{"ID":1187,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1188,"Name":"internal.metrics.shuffle.read.recordsRead","Update":15,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":1189,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1190,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1191,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1192,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1193,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1194,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1195,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1196,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1197,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1198,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":9,"Executor Deserialize CPU Time":5529085,"Executor Run Time":9,"Executor CPU Time":6687125,"Peak Execution Memory":2232,"Result Size":2352,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":409,"Total Records Read":15,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":24,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":56,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720131162373,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131162398,"Failed":false,"Killed":false,"Accumulables":[{"ID":1171,"Name":"internal.metrics.executorDeserializeTime","Update":9,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":1172,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2040123,"Value":7569208,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.executorRunTime","Update":9,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":1174,"Name":"internal.metrics.executorCpuTime","Update":4229751,"Value":10916876,"Internal":true,"Count Failed Values":true},{"ID":1175,"Name":"internal.metrics.resultSize","Update":2509,"Value":4861,"Internal":true,"Count Failed Values":true},{"ID":1178,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1179,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1180,"Name":"internal.metrics.peakExecutionMemory","Update":2628,"Value":4860,"Internal":true,"Count Failed Values":true},{"ID":1182,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1183,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":1184,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1185,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1186,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":466,"Value":875,"Internal":true,"Count Failed Values":true},{"ID":1187,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1188,"Name":"internal.metrics.shuffle.read.recordsRead","Update":20,"Value":35,"Internal":true,"Count Failed Values":true},{"ID":1189,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1190,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1191,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1192,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1193,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1194,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1195,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1196,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1197,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1198,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":9,"Executor Deserialize CPU Time":2040123,"Executor Run Time":9,"Executor CPU Time":4229751,"Peak Execution Memory":2628,"Result Size":2509,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":466,"Total Records Read":20,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":24,"Stage Attempt ID":0,"Task Info":{"Task ID":59,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131162410,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":24,"Stage Attempt ID":0,"Task Info":{"Task ID":60,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131162410,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":24,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":58,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720131162398,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131162410,"Failed":false,"Killed":false,"Accumulables":[{"ID":1172,"Name":"internal.metrics.executorDeserializeCpuTime","Update":881792,"Value":8451000,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.executorRunTime","Update":6,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":1174,"Name":"internal.metrics.executorCpuTime","Update":1656959,"Value":12573835,"Internal":true,"Count Failed Values":true},{"ID":1175,"Name":"internal.metrics.resultSize","Update":2093,"Value":6954,"Internal":true,"Count Failed Values":true},{"ID":1178,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1179,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1180,"Name":"internal.metrics.peakExecutionMemory","Update":1680,"Value":6540,"Internal":true,"Count Failed Values":true},{"ID":1182,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1183,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":1184,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1185,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1186,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":321,"Value":1196,"Internal":true,"Count Failed Values":true},{"ID":1187,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1188,"Name":"internal.metrics.shuffle.read.recordsRead","Update":9,"Value":44,"Internal":true,"Count Failed Values":true},{"ID":1189,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1190,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1191,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1192,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1193,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1194,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1195,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1196,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1197,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1198,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":0,"Executor Deserialize CPU Time":881792,"Executor Run Time":6,"Executor CPU Time":1656959,"Peak Execution Memory":1680,"Result Size":2093,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":321,"Total Records Read":9,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":24,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":57,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720131162397,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131162410,"Failed":false,"Killed":false,"Accumulables":[{"ID":1171,"Name":"internal.metrics.executorDeserializeTime","Update":1,"Value":19,"Internal":true,"Count Failed Values":true},{"ID":1172,"Name":"internal.metrics.executorDeserializeCpuTime","Update":921168,"Value":9372168,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.executorRunTime","Update":6,"Value":30,"Internal":true,"Count Failed Values":true},{"ID":1174,"Name":"internal.metrics.executorCpuTime","Update":1447912,"Value":14021747,"Internal":true,"Count Failed Values":true},{"ID":1175,"Name":"internal.metrics.resultSize","Update":2405,"Value":9359,"Internal":true,"Count Failed Values":true},{"ID":1178,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1179,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1180,"Name":"internal.metrics.peakExecutionMemory","Update":2376,"Value":8916,"Internal":true,"Count Failed Values":true},{"ID":1182,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1183,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":1184,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1185,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1186,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":415,"Value":1611,"Internal":true,"Count Failed Values":true},{"ID":1187,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1188,"Name":"internal.metrics.shuffle.read.recordsRead","Update":17,"Value":61,"Internal":true,"Count Failed Values":true},{"ID":1189,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1190,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1191,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1192,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1193,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1194,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1195,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1196,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1197,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1198,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":1,"Executor Deserialize CPU Time":921168,"Executor Run Time":6,"Executor CPU Time":1447912,"Peak Execution Memory":2376,"Result Size":2405,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":415,"Total Records Read":17,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":24,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":60,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720131162410,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131162415,"Failed":false,"Killed":false,"Accumulables":[{"ID":1171,"Name":"internal.metrics.executorDeserializeTime","Update":1,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":1172,"Name":"internal.metrics.executorDeserializeCpuTime","Update":1001959,"Value":10374127,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.executorRunTime","Update":1,"Value":31,"Internal":true,"Count Failed Values":true},{"ID":1174,"Name":"internal.metrics.executorCpuTime","Update":1222374,"Value":15244121,"Internal":true,"Count Failed Values":true},{"ID":1175,"Name":"internal.metrics.resultSize","Update":2296,"Value":11655,"Internal":true,"Count Failed Values":true},{"ID":1178,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1179,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1180,"Name":"internal.metrics.peakExecutionMemory","Update":2040,"Value":10956,"Internal":true,"Count Failed Values":true},{"ID":1182,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1183,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":1184,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1185,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1186,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":381,"Value":1992,"Internal":true,"Count Failed Values":true},{"ID":1187,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1188,"Name":"internal.metrics.shuffle.read.recordsRead","Update":14,"Value":75,"Internal":true,"Count Failed Values":true},{"ID":1189,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1190,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1191,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1192,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1193,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1194,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1195,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1196,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1197,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1198,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":1,"Executor Deserialize CPU Time":1001959,"Executor Run Time":1,"Executor CPU Time":1222374,"Peak Execution Memory":2040,"Result Size":2296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":381,"Total Records Read":14,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":24,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":59,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720131162410,"Executor ID":"2","Host":"172.31.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720131162415,"Failed":false,"Killed":false,"Accumulables":[{"ID":1171,"Name":"internal.metrics.executorDeserializeTime","Update":1,"Value":21,"Internal":true,"Count Failed Values":true},{"ID":1172,"Name":"internal.metrics.executorDeserializeCpuTime","Update":1161500,"Value":11535627,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.executorRunTime","Update":1,"Value":32,"Internal":true,"Count Failed Values":true},{"ID":1174,"Name":"internal.metrics.executorCpuTime","Update":1412709,"Value":16656830,"Internal":true,"Count Failed Values":true},{"ID":1175,"Name":"internal.metrics.resultSize","Update":2315,"Value":13970,"Internal":true,"Count Failed Values":true},{"ID":1178,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1179,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1180,"Name":"internal.metrics.peakExecutionMemory","Update":2160,"Value":13116,"Internal":true,"Count Failed Values":true},{"ID":1182,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1183,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":1184,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1185,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1186,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":387,"Value":2379,"Internal":true,"Count Failed Values":true},{"ID":1187,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1188,"Name":"internal.metrics.shuffle.read.recordsRead","Update":15,"Value":90,"Internal":true,"Count Failed Values":true},{"ID":1189,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1190,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1191,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1192,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1193,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1194,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1195,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1196,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1197,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1198,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":1,"Executor Deserialize CPU Time":1161500,"Executor Run Time":1,"Executor CPU Time":1412709,"Peak Execution Memory":2160,"Result Size":2315,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":387,"Total Records Read":15,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":24,"Stage Attempt ID":0,"Stage Name":"countByKey at ColumnProfiler.scala:631","Number of Tasks":6,"RDD Info":[{"RDD ID":59,"Name":"ShuffledRDD","Scope":"{\"id\":\"147\",\"name\":\"countByKey\"}","Callsite":"countByKey at ColumnProfiler.scala:631","Parent IDs":[58],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[23],"Details":"org.apache.spark.rdd.PairRDDFunctions.countByKey(PairRDDFunctions.scala:367)\ncom.amazon.deequ.profiles.ColumnProfiler$.computeHistograms(ColumnProfiler.scala:631)\ncom.amazon.deequ.profiles.ColumnProfiler$.getHistogramsForThirdPass(ColumnProfiler.scala:684)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:227)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.profileAndSuggest(ConstraintSuggestionRunner.scala:213)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunner.run(ConstraintSuggestionRunner.scala:112)\ncom.amazon.deequ.suggestions.ConstraintSuggestionRunBuilder.run(ConstraintSuggestionRunBuilder.scala:226)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720131162368,"Completion Time":1720131162416,"Accumulables":[{"ID":1171,"Name":"internal.metrics.executorDeserializeTime","Value":21,"Internal":true,"Count Failed Values":true},{"ID":1172,"Name":"internal.metrics.executorDeserializeCpuTime","Value":11535627,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.executorRunTime","Value":32,"Internal":true,"Count Failed Values":true},{"ID":1174,"Name":"internal.metrics.executorCpuTime","Value":16656830,"Internal":true,"Count Failed Values":true},{"ID":1175,"Name":"internal.metrics.resultSize","Value":13970,"Internal":true,"Count Failed Values":true},{"ID":1178,"Name":"internal.metrics.memoryBytesSpilled","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1179,"Name":"internal.metrics.diskBytesSpilled","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1180,"Name":"internal.metrics.peakExecutionMemory","Value":13116,"Internal":true,"Count Failed Values":true},{"ID":1182,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1183,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":6,"Internal":true,"Count Failed Values":true},{"ID":1184,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1185,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1186,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":2379,"Internal":true,"Count Failed Values":true},{"ID":1187,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1188,"Name":"internal.metrics.shuffle.read.recordsRead","Value":90,"Internal":true,"Count Failed Values":true},{"ID":1189,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1190,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1191,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1192,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1193,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1194,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1195,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1196,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1197,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1198,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":15,"Completion Time":1720131162416,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"SparkListenerApplicationEnd","Timestamp":1720131178485}
