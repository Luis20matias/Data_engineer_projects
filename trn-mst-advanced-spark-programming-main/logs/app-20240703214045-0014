{"Event":"SparkListenerLogStart","Spark Version":"3.5.1"}
{"Event":"SparkListenerResourceProfileAdded","Resource Profile Id":0,"Executor Resource Requests":{"memory":{"Resource Name":"memory","Amount":1024,"Discovery Script":"","Vendor":""},"offHeap":{"Resource Name":"offHeap","Amount":0,"Discovery Script":"","Vendor":""}},"Task Resource Requests":{"cpus":{"Resource Name":"cpus","Amount":1.0}}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"driver","Host":"add9f8b3a401","Port":36379},"Maximum Memory":303667609,"Timestamp":1720042845219,"Maximum Onheap Memory":303667609,"Maximum Offheap Memory":0}
{"Event":"SparkListenerEnvironmentUpdate","JVM Information":{"Java Home":"/opt/bitnami/java","Java Version":"17.0.11 (BellSoft)","Scala Version":"version 2.12.18"},"Spark Properties":{"fs.s3a.connection.maximum":"100","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false -XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.driver.host":"add9f8b3a401","spark.serializer.objectStreamReset":"100","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.eventLog.enabled":"true","spark.driver.port":"40137","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.hadoop.fs.s3a.path.style.access":"true","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.scheduler.mode":"FIFO","spark.driver.memory":"1g","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.submit.pyFiles":"","spark.app.submitTime":"1720042844157","spark.app.startTime":"1720042844635","spark.executor.id":"driver","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED","spark.submit.deployMode":"client","spark.master":"spark://spark-master:7077","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.executor.memory":"1g","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.memory.fraction":"0.4","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.app.id":"app-20240703214045-0014","spark.hadoop.fs.s3a.fast.upload":"true","spark.sql.shuffle.partitions":"200"},"Hadoop Properties":{"hadoop.service.shutdown.timeout":"30s","yarn.resourcemanager.amlauncher.thread-count":"50","yarn.sharedcache.enabled":"false","fs.s3a.connection.maximum":"96","yarn.nodemanager.numa-awareness.numactl.cmd":"/usr/bin/numactl","fs.viewfs.overload.scheme.target.o3fs.impl":"org.apache.hadoop.fs.ozone.OzoneFileSystem","fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.app.mapreduce.am.scheduler.heartbeat.interval-ms":"1000","yarn.timeline-service.timeline-client.number-of-async-entities-to-merge":"10","hadoop.security.kms.client.timeout":"60","hadoop.http.authentication.kerberos.principal":"HTTP/_HOST@LOCALHOST","mapreduce.jobhistory.loadedjob.tasks.max":"-1","yarn.resourcemanager.application-tag-based-placement.enable":"false","mapreduce.framework.name":"local","yarn.sharedcache.uploader.server.thread-count":"50","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds.min":"3600","yarn.nodemanager.linux-container-executor.nonsecure-mode.user-pattern":"^[_.A-Za-z0-9][-@_.A-Za-z0-9]{0,255}?[$]?$","tfile.fs.output.buffer.size":"262144","yarn.app.mapreduce.am.job.task.listener.thread-count":"30","yarn.nodemanager.node-attributes.resync-interval-ms":"120000","fs.s3a.secret.key":"*********(redacted)","yarn.nodemanager.container-log-monitor.interval-ms":"60000","hadoop.security.groups.cache.background.reload.threads":"3","yarn.resourcemanager.webapp.cross-origin.enabled":"false","fs.AbstractFileSystem.ftp.impl":"org.apache.hadoop.fs.ftp.FtpFs","fs.viewfs.overload.scheme.target.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","hadoop.registry.secure":"false","hadoop.shell.safely.delete.limit.num.files":"100","mapreduce.job.acl-view-job":" ","fs.s3a.s3guard.ddb.background.sleep":"25ms","fs.s3a.retry.limit":"7","mapreduce.jobhistory.loadedjobs.cache.size":"5","fs.s3a.s3guard.ddb.table.create":"false","fs.viewfs.overload.scheme.target.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.nodemanager.amrmproxy.enabled":"false","yarn.timeline-service.entity-group-fs-store.with-user-dir":"false","mapreduce.shuffle.pathcache.expire-after-access-minutes":"5","mapreduce.input.fileinputformat.split.minsize":"0","yarn.resourcemanager.container.liveness-monitor.interval-ms":"600000","yarn.resourcemanager.client.thread-count":"50","io.seqfile.compress.blocksize":"1000000","yarn.nodemanager.runtime.linux.docker.allowed-container-runtimes":"runc","fs.viewfs.overload.scheme.target.http.impl":"org.apache.hadoop.fs.http.HttpFileSystem","yarn.resourcemanager.nodemanagers.heartbeat-interval-slowdown-factor":"1.0","yarn.sharedcache.checksum.algo.impl":"org.apache.hadoop.yarn.sharedcache.ChecksumSHA256Impl","yarn.nodemanager.amrmproxy.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor","yarn.timeline-service.entity-group-fs-store.leveldb-cache-read-cache-size":"10485760","mapreduce.reduce.shuffle.fetch.retry.interval-ms":"1000","mapreduce.task.profile.maps":"0-2","yarn.scheduler.include-port-in-node-name":"false","yarn.nodemanager.admin-env":"MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX","yarn.resourcemanager.node-removal-untracked.timeout-ms":"60000","mapreduce.am.max-attempts":"2","hadoop.security.kms.client.failover.sleep.base.millis":"100","mapreduce.jobhistory.webapp.https.address":"0.0.0.0:19890","yarn.node-labels.fs-store.impl.class":"org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore","yarn.nodemanager.collector-service.address":"${yarn.nodemanager.hostname}:8048","fs.trash.checkpoint.interval":"0","mapreduce.job.map.output.collector.class":"org.apache.hadoop.mapred.MapTask$MapOutputBuffer","yarn.resourcemanager.node-ip-cache.expiry-interval-secs":"-1","hadoop.http.authentication.signature.secret.file":"*********(redacted)","hadoop.jetty.logs.serve.aliases":"true","yarn.resourcemanager.placement-constraints.handler":"disabled","yarn.timeline-service.handler-thread-count":"10","yarn.resourcemanager.max-completed-applications":"1000","yarn.nodemanager.aux-services.manifest.enabled":"false","yarn.resourcemanager.system-metrics-publisher.enabled":"false","yarn.resourcemanager.placement-constraints.algorithm.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.constraint.algorithm.DefaultPlacementAlgorithm","yarn.sharedcache.webapp.address":"0.0.0.0:8788","fs.s3a.select.input.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.renew-interval":"*********(redacted)","yarn.sharedcache.nm.uploader.replication.factor":"10","hadoop.security.groups.negative-cache.secs":"30","yarn.app.mapreduce.task.container.log.backups":"0","mapreduce.reduce.skip.proc-count.auto-incr":"true","fs.viewfs.overload.scheme.target.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","hadoop.security.group.mapping.ldap.posix.attr.gid.name":"gidNumber","ipc.client.fallback-to-simple-auth-allowed":"false","yarn.nodemanager.resource.memory.enforced":"true","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.enable-batch":"false","yarn.client.failover-proxy-provider":"org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider","yarn.timeline-service.http-authentication.simple.anonymous.allowed":"true","ha.health-monitor.check-interval.ms":"1000","yarn.nodemanager.runtime.linux.runc.host-pid-namespace.allowed":"false","hadoop.metrics.jvm.use-thread-mxbean":"false","ipc.[port_number].faircallqueue.multiplexer.weights":"8,4,2,1","yarn.acl.reservation-enable":"false","yarn.resourcemanager.store.class":"org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore","yarn.app.mapreduce.am.hard-kill-timeout-ms":"10000","fs.s3a.etag.checksum.enabled":"false","yarn.nodemanager.container-metrics.enable":"true","ha.health-monitor.rpc.connect.max.retries":"1","yarn.timeline-service.client.fd-clean-interval-secs":"60","yarn.resourcemanager.nodemanagers.heartbeat-interval-scaling-enable":"false","yarn.resourcemanager.nodemanagers.heartbeat-interval-ms":"1000","hadoop.common.configuration.version":"3.0.0","fs.s3a.s3guard.ddb.table.capacity.read":"0","yarn.nodemanager.remote-app-log-dir-suffix":"logs","yarn.nodemanager.container-log-monitor.dir-size-limit-bytes":"1000000000","yarn.nodemanager.windows-container.cpu-limit.enabled":"false","yarn.nodemanager.runtime.linux.docker.privileged-containers.allowed":"false","file.blocksize":"67108864","hadoop.http.idle_timeout.ms":"60000","hadoop.registry.zk.retry.ceiling.ms":"60000","yarn.scheduler.configuration.leveldb-store.path":"${hadoop.tmp.dir}/yarn/system/confstore","yarn.sharedcache.store.in-memory.initial-delay-mins":"10","mapreduce.jobhistory.principal":"jhs/_HOST@REALM.TLD","mapreduce.map.skip.proc-count.auto-incr":"true","fs.s3a.committer.name":"file","mapreduce.task.profile.reduces":"0-2","hadoop.zk.num-retries":"1000","yarn.webapp.xfs-filter.enabled":"true","fs.viewfs.overload.scheme.target.hdfs.impl":"org.apache.hadoop.hdfs.DistributedFileSystem","seq.io.sort.mb":"100","yarn.scheduler.configuration.max.version":"100","yarn.timeline-service.webapp.https.address":"${yarn.timeline-service.hostname}:8190","yarn.resourcemanager.scheduler.address":"${yarn.resourcemanager.hostname}:8030","yarn.node-labels.enabled":"false","yarn.resourcemanager.webapp.ui-actions.enabled":"true","mapreduce.task.timeout":"600000","yarn.sharedcache.client-server.thread-count":"50","hadoop.security.groups.shell.command.timeout":"0s","hadoop.security.crypto.cipher.suite":"AES/CTR/NoPadding","yarn.nodemanager.elastic-memory-control.oom-handler":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.DefaultOOMHandler","yarn.resourcemanager.connect.max-wait.ms":"900000","fs.defaultFS":"file:///","yarn.minicluster.use-rpc":"false","ipc.[port_number].decay-scheduler.decay-factor":"0.5","fs.har.impl.disable.cache":"true","yarn.webapp.ui2.enable":"false","io.compression.codec.bzip2.library":"system-native","yarn.webapp.filter-invalid-xml-chars":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-interval-secs":"600","fs.s3a.select.input.csv.record.delimiter":"\\n","fs.s3a.change.detection.source":"etag","ipc.[port_number].backoff.enable":"false","yarn.nodemanager.distributed-scheduling.enabled":"false","mapreduce.shuffle.connection-keep-alive.timeout":"5","yarn.resourcemanager.webapp.https.address":"${yarn.resourcemanager.hostname}:8090","yarn.webapp.enable-rest-app-submissions":"true","mapreduce.jobhistory.address":"0.0.0.0:10020","yarn.resourcemanager.nm-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.is.minicluster":"false","yarn.nodemanager.address":"${yarn.nodemanager.hostname}:0","fs.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","fs.AbstractFileSystem.s3a.impl":"org.apache.hadoop.fs.s3a.S3A","mapreduce.task.combine.progress.records":"10000","yarn.resourcemanager.epoch.range":"0","yarn.resourcemanager.am.max-attempts":"2","yarn.nodemanager.runtime.linux.runc.image-toplevel-dir":"/runc-root","yarn.nodemanager.linux-container-executor.cgroups.hierarchy":"/hadoop-yarn","fs.AbstractFileSystem.wasbs.impl":"org.apache.hadoop.fs.azure.Wasbs","yarn.timeline-service.entity-group-fs-store.cache-store-class":"org.apache.hadoop.yarn.server.timeline.MemoryTimelineStore","yarn.nodemanager.runtime.linux.runc.allowed-container-networks":"host,none,bridge","fs.ftp.transfer.mode":"BLOCK_TRANSFER_MODE","ipc.server.log.slow.rpc":"false","ipc.server.reuseaddr":"true","fs.ftp.timeout":"0","yarn.resourcemanager.node-labels.provider.fetch-interval-ms":"1800000","yarn.router.webapp.https.address":"0.0.0.0:8091","yarn.nodemanager.webapp.cross-origin.enabled":"false","fs.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","yarn.resourcemanager.auto-update.containers":"false","yarn.app.mapreduce.am.job.committer.cancel-timeout":"60000","yarn.scheduler.configuration.zk-store.parent-path":"/confstore","yarn.nodemanager.default-container-executor.log-dirs.permissions":"710","yarn.app.attempt.diagnostics.limit.kc":"64","fs.viewfs.overload.scheme.target.swebhdfs.impl":"org.apache.hadoop.hdfs.web.SWebHdfsFileSystem","yarn.client.failover-no-ha-proxy-provider":"org.apache.hadoop.yarn.client.DefaultNoHARMFailoverProxyProvider","fs.s3a.change.detection.mode":"server","ftp.bytes-per-checksum":"512","yarn.nodemanager.resource.memory-mb":"-1","fs.AbstractFileSystem.abfs.impl":"org.apache.hadoop.fs.azurebfs.Abfs","yarn.timeline-service.writer.flush-interval-seconds":"60","fs.s3a.fast.upload.active.blocks":"4","yarn.resourcemanager.submission-preprocessor.enabled":"false","hadoop.security.credential.clear-text-fallback":"true","yarn.nodemanager.collector-service.thread-count":"5","ipc.[port_number].scheduler.impl":"org.apache.hadoop.ipc.DefaultRpcScheduler","fs.azure.secure.mode":"false","mapreduce.jobhistory.joblist.cache.size":"20000","fs.ftp.host":"0.0.0.0","yarn.timeline-service.writer.async.queue.capacity":"100","yarn.resourcemanager.fs.state-store.num-retries":"0","yarn.resourcemanager.nodemanager-connect-retries":"10","yarn.nodemanager.log-aggregation.num-log-files-per-app":"30","hadoop.security.kms.client.encrypted.key.cache.low-watermark":"0.3f","fs.s3a.committer.magic.enabled":"true","yarn.timeline-service.client.max-retries":"30","dfs.ha.fencing.ssh.connect-timeout":"30000","yarn.log-aggregation-enable":"false","yarn.system-metrics-publisher.enabled":"false","mapreduce.reduce.markreset.buffer.percent":"0.0","fs.AbstractFileSystem.viewfs.impl":"org.apache.hadoop.fs.viewfs.ViewFs","yarn.resourcemanager.nodemanagers.heartbeat-interval-speedup-factor":"1.0","mapreduce.task.io.sort.factor":"10","yarn.nodemanager.amrmproxy.client.thread-count":"25","ha.failover-controller.new-active.rpc-timeout.ms":"60000","yarn.nodemanager.container-localizer.java.opts":"-Xmx256m","mapreduce.jobhistory.datestring.cache.size":"200000","mapreduce.job.acl-modify-job":" ","yarn.nodemanager.windows-container.memory-limit.enabled":"false","yarn.timeline-service.webapp.address":"${yarn.timeline-service.hostname}:8188","yarn.app.mapreduce.am.job.committer.commit-window":"10000","yarn.nodemanager.container-manager.thread-count":"20","yarn.minicluster.fixed.ports":"false","hadoop.tags.system":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.cluster.max-application-priority":"0","yarn.timeline-service.ttl-enable":"true","mapreduce.jobhistory.recovery.store.fs.uri":"${hadoop.tmp.dir}/mapred/history/recoverystore","hadoop.caller.context.signature.max.size":"40","ipc.[port_number].decay-scheduler.backoff.responsetime.enable":"false","yarn.client.load.resource-types.from-server":"false","ha.zookeeper.session-timeout.ms":"10000","ipc.[port_number].decay-scheduler.metrics.top.user.count":"10","tfile.io.chunk.size":"1048576","fs.s3a.s3guard.ddb.table.capacity.write":"0","yarn.dispatcher.print-events-info.threshold":"5000","mapreduce.job.speculative.slowtaskthreshold":"1.0","io.serializations":"org.apache.hadoop.io.serializer.WritableSerialization, org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization, org.apache.hadoop.io.serializer.avro.AvroReflectSerialization","hadoop.security.kms.client.failover.sleep.max.millis":"2000","hadoop.security.group.mapping.ldap.directory.search.timeout":"10000","yarn.scheduler.configuration.store.max-logs":"1000","yarn.nodemanager.node-attributes.provider.fetch-interval-ms":"600000","fs.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","yarn.nodemanager.local-cache.max-files-per-directory":"8192","hadoop.http.cross-origin.enabled":"false","hadoop.zk.acl":"world:anyone:rwcda","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.num-manifests-to-cache":"10","mapreduce.map.sort.spill.percent":"0.80","yarn.timeline-service.entity-group-fs-store.scan-interval-seconds":"60","yarn.node-attribute.fs-store.impl.class":"org.apache.hadoop.yarn.server.resourcemanager.nodelabels.FileSystemNodeAttributeStore","fs.s3a.retry.interval":"500ms","yarn.timeline-service.client.best-effort":"false","yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled":"*********(redacted)","hadoop.security.group.mapping.ldap.posix.attr.uid.name":"uidNumber","fs.AbstractFileSystem.swebhdfs.impl":"org.apache.hadoop.fs.SWebHdfs","yarn.nodemanager.elastic-memory-control.timeout-sec":"5","fs.s3a.select.enabled":"true","mapreduce.ifile.readahead":"true","yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms":"300000","yarn.timeline-service.reader.webapp.address":"${yarn.timeline-service.webapp.address}","yarn.resourcemanager.placement-constraints.algorithm.pool-size":"1","yarn.timeline-service.hbase.coprocessor.jar.hdfs.location":"/hbase/coprocessor/hadoop-yarn-server-timelineservice.jar","hadoop.security.kms.client.encrypted.key.cache.num.refill.threads":"2","yarn.resourcemanager.scheduler.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler","yarn.app.mapreduce.am.command-opts":"-Xmx1024m","fs.s3a.metadatastore.fail.on.write.error":"true","hadoop.http.sni.host.check.enabled":"false","mapreduce.cluster.local.dir":"${hadoop.tmp.dir}/mapred/local","io.mapfile.bloom.error.rate":"0.005","fs.client.resolve.topology.enabled":"false","yarn.nodemanager.runtime.linux.allowed-runtimes":"default","yarn.sharedcache.store.class":"org.apache.hadoop.yarn.server.sharedcachemanager.store.InMemorySCMStore","ha.failover-controller.graceful-fence.rpc-timeout.ms":"5000","ftp.replication":"3","fs.getspaceused.jitterMillis":"60000","hadoop.security.uid.cache.secs":"14400","mapreduce.job.maxtaskfailures.per.tracker":"3","fs.s3a.metadatastore.impl":"org.apache.hadoop.fs.s3a.s3guard.NullMetadataStore","io.skip.checksum.errors":"false","yarn.app.mapreduce.client-am.ipc.max-retries-on-timeouts":"3","yarn.timeline-service.webapp.xfs-filter.xframe-options":"SAMEORIGIN","fs.s3a.connection.timeout":"200000","yarn.app.mapreduce.am.webapp.https.enabled":"false","mapreduce.job.max.split.locations":"15","yarn.resourcemanager.nm-container-queuing.max-queue-length":"15","yarn.resourcemanager.delegation-token.always-cancel":"*********(redacted)","hadoop.registry.zk.session.timeout.ms":"60000","yarn.federation.cache-ttl.secs":"300","mapreduce.jvm.system-properties-to-log":"os.name,os.version,java.home,java.runtime.version,java.vendor,java.version,java.vm.name,java.class.path,java.io.tmpdir,user.dir,user.name","yarn.resourcemanager.opportunistic-container-allocation.nodes-used":"10","yarn.timeline-service.entity-group-fs-store.active-dir":"/tmp/entity-file-history/active","mapreduce.shuffle.transfer.buffer.size":"131072","yarn.timeline-service.client.retry-interval-ms":"1000","yarn.timeline-service.flowname.max-size":"0","yarn.http.policy":"HTTP_ONLY","fs.s3a.socket.send.buffer":"8192","fs.AbstractFileSystem.abfss.impl":"org.apache.hadoop.fs.azurebfs.Abfss","yarn.sharedcache.uploader.server.address":"0.0.0.0:8046","yarn.resourcemanager.delegation-token.max-conf-size-bytes":"*********(redacted)","hadoop.http.authentication.token.validity":"*********(redacted)","mapreduce.shuffle.max.connections":"0","yarn.minicluster.yarn.nodemanager.resource.memory-mb":"4096","mapreduce.job.emit-timeline-data":"false","yarn.nodemanager.resource.system-reserved-memory-mb":"-1","hadoop.kerberos.min.seconds.before.relogin":"60","mapreduce.jobhistory.move.thread-count":"3","yarn.resourcemanager.admin.client.thread-count":"1","yarn.dispatcher.drain-events.timeout":"300000","ipc.[port_number].decay-scheduler.backoff.responsetime.thresholds":"10s,20s,30s,40s","fs.s3a.buffer.dir":"${hadoop.tmp.dir}/s3a","hadoop.ssl.enabled.protocols":"TLSv1.2","mapreduce.jobhistory.admin.address":"0.0.0.0:10033","yarn.log-aggregation-status.time-out.ms":"600000","fs.s3a.accesspoint.required":"false","mapreduce.shuffle.port":"13562","yarn.resourcemanager.max-log-aggregation-diagnostics-in-memory":"10","yarn.nodemanager.health-checker.interval-ms":"600000","yarn.resourcemanager.proxy.connection.timeout":"60000","yarn.router.clientrm.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.clientrm.DefaultClientRequestInterceptor","yarn.resourcemanager.zk-appid-node.split-index":"0","ftp.blocksize":"67108864","yarn.nodemanager.runtime.linux.sandbox-mode.local-dirs.permissions":"read","yarn.router.rmadmin.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.rmadmin.DefaultRMAdminRequestInterceptor","yarn.nodemanager.log-container-debug-info.enabled":"true","yarn.resourcemanager.activities-manager.app-activities.max-queue-length":"100","yarn.resourcemanager.application-https.policy":"NONE","yarn.client.max-cached-nodemanagers-proxies":"0","yarn.nodemanager.linux-container-executor.cgroups.delete-delay-ms":"20","yarn.nodemanager.delete.debug-delay-sec":"0","yarn.nodemanager.pmem-check-enabled":"true","yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage":"90.0","mapreduce.app-submission.cross-platform":"false","yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms":"10000","yarn.nodemanager.container-retry-minimum-interval-ms":"1000","hadoop.security.groups.cache.secs":"300","yarn.federation.enabled":"false","yarn.workflow-id.tag-prefix":"workflowid:","fs.azure.local.sas.key.mode":"false","ipc.maximum.data.length":"134217728","fs.s3a.endpoint":"http://138.197.224.4","mapreduce.shuffle.max.threads":"0","yarn.router.pipeline.cache-max-size":"25","yarn.resourcemanager.nm-container-queuing.load-comparator":"QUEUE_LENGTH","yarn.resourcemanager.resource-tracker.nm.ip-hostname-check":"false","hadoop.security.authorization":"false","mapreduce.job.complete.cancel.delegation.tokens":"*********(redacted)","fs.s3a.paging.maximum":"5000","nfs.exports.allowed.hosts":"* rw","yarn.nodemanager.amrmproxy.ha.enable":"false","fs.AbstractFileSystem.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","mapreduce.jobhistory.http.policy":"HTTP_ONLY","yarn.sharedcache.store.in-memory.check-period-mins":"720","hadoop.security.group.mapping.ldap.ssl":"false","fs.s3a.downgrade.syncable.exceptions":"true","yarn.client.application-client-protocol.poll-interval-ms":"200","yarn.scheduler.configuration.leveldb-store.compaction-interval-secs":"86400","yarn.timeline-service.writer.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineWriterImpl","ha.zookeeper.parent-znode":"/hadoop-ha","yarn.resourcemanager.submission-preprocessor.file-refresh-interval-ms":"60000","yarn.nodemanager.log-aggregation.policy.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AllContainerLogAggregationPolicy","mapreduce.reduce.shuffle.merge.percent":"0.66","hadoop.security.group.mapping.ldap.search.filter.group":"(objectClass=group)","yarn.resourcemanager.placement-constraints.scheduler.pool-size":"1","yarn.resourcemanager.activities-manager.cleanup-interval-ms":"5000","yarn.nodemanager.resourcemanager.minimum.version":"NONE","mapreduce.job.speculative.speculative-cap-running-tasks":"0.1","yarn.admin.acl":"*","ipc.[port_number].identity-provider.impl":"org.apache.hadoop.ipc.UserIdentityProvider","yarn.nodemanager.recovery.supervised":"false","yarn.sharedcache.admin.thread-count":"1","yarn.resourcemanager.ha.automatic-failover.enabled":"true","yarn.nodemanager.container-log-monitor.total-size-limit-bytes":"10000000000","mapreduce.reduce.skip.maxgroups":"0","mapreduce.reduce.shuffle.connect.timeout":"180000","yarn.nodemanager.health-checker.scripts":"script","yarn.resourcemanager.address":"${yarn.resourcemanager.hostname}:8032","ipc.client.ping":"true","mapreduce.task.local-fs.write-limit.bytes":"-1","fs.adl.oauth2.access.token.provider.type":"*********(redacted)","mapreduce.shuffle.ssl.file.buffer.size":"65536","yarn.resourcemanager.ha.automatic-failover.embedded":"true","yarn.nodemanager.resource-plugins.gpu.docker-plugin":"nvidia-docker-v1","fs.s3a.s3guard.consistency.retry.interval":"2s","fs.s3a.multipart.purge":"false","yarn.scheduler.configuration.store.class":"file","yarn.resourcemanager.nm-container-queuing.queue-limit-stdev":"1.0f","mapreduce.job.end-notification.max.attempts":"5","mapreduce.output.fileoutputformat.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","yarn.nodemanager.container-monitor.procfs-tree.smaps-based-rss.enabled":"false","ipc.client.bind.wildcard.addr":"false","yarn.resourcemanager.webapp.rest-csrf.enabled":"false","ha.health-monitor.connect-retry-interval.ms":"1000","yarn.nodemanager.keytab":"/etc/krb5.keytab","mapreduce.jobhistory.keytab":"/etc/security/keytab/jhs.service.keytab","fs.s3a.threads.max":"64","yarn.nodemanager.runtime.linux.docker.image-update":"false","mapreduce.reduce.shuffle.input.buffer.percent":"0.70","fs.viewfs.overload.scheme.target.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","yarn.dispatcher.cpu-monitor.samples-per-min":"60","hadoop.security.token.service.use_ip":"*********(redacted)","yarn.nodemanager.runtime.linux.docker.allowed-container-networks":"host,none,bridge","yarn.nodemanager.node-labels.resync-interval-ms":"120000","hadoop.tmp.dir":"/tmp/hadoop-${user.name}","mapreduce.job.maps":"2","mapreduce.jobhistory.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.job.end-notification.max.retry.interval":"5000","yarn.log-aggregation.retain-check-interval-seconds":"-1","yarn.resourcemanager.resource-tracker.client.thread-count":"50","yarn.nodemanager.containers-launcher.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainersLauncher","yarn.rm.system-metrics-publisher.emit-container-events":"false","yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size":"10000","yarn.resourcemanager.ha.automatic-failover.zk-base-path":"/yarn-leader-election","io.seqfile.local.dir":"${hadoop.tmp.dir}/io/local","fs.s3a.s3guard.ddb.throttle.retry.interval":"100ms","fs.AbstractFileSystem.wasb.impl":"org.apache.hadoop.fs.azure.Wasb","mapreduce.client.submit.file.replication":"10","mapreduce.jobhistory.minicluster.fixed.ports":"false","fs.s3a.multipart.threshold":"128M","yarn.resourcemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","mapreduce.jobhistory.done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done","ipc.server.purge.interval":"15","ipc.client.idlethreshold":"4000","yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage":"false","mapreduce.reduce.input.buffer.percent":"0.0","yarn.nodemanager.runtime.linux.docker.userremapping-gid-threshold":"1","yarn.nodemanager.webapp.rest-csrf.enabled":"false","fs.ftp.host.port":"21","ipc.ping.interval":"60000","yarn.resourcemanager.history-writer.multi-threaded-dispatcher.pool-size":"10","yarn.resourcemanager.admin.address":"${yarn.resourcemanager.hostname}:8033","file.client-write-packet-size":"65536","ipc.client.kill.max":"10","mapreduce.reduce.speculative":"true","hadoop.security.key.default.bitlength":"128","mapreduce.job.reducer.unconditional-preempt.delay.sec":"300","yarn.nodemanager.disk-health-checker.interval-ms":"120000","yarn.nodemanager.log.deletion-threads-count":"4","fs.s3a.committer.abort.pending.uploads":"true","yarn.webapp.filter-entity-list-by-user":"false","yarn.resourcemanager.activities-manager.app-activities.ttl-ms":"600000","ipc.client.connection.maxidletime":"10000","mapreduce.task.io.sort.mb":"100","yarn.nodemanager.localizer.client.thread-count":"5","io.erasurecode.codec.rs.rawcoders":"rs_native,rs_java","io.erasurecode.codec.rs-legacy.rawcoders":"rs-legacy_java","yarn.sharedcache.admin.address":"0.0.0.0:8047","yarn.resourcemanager.placement-constraints.algorithm.iterator":"SERIAL","yarn.nodemanager.localizer.cache.cleanup.interval-ms":"600000","hadoop.security.crypto.codec.classes.aes.ctr.nopadding":"org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec, org.apache.hadoop.crypto.JceAesCtrCryptoCodec","mapreduce.job.cache.limit.max-resources-mb":"0","fs.s3a.connection.ssl.enabled":"true","yarn.nodemanager.process-kill-wait.ms":"5000","mapreduce.job.hdfs-servers":"${fs.defaultFS}","yarn.app.mapreduce.am.webapp.https.client.auth":"false","hadoop.workaround.non.threadsafe.getpwuid":"true","fs.df.interval":"60000","ipc.[port_number].decay-scheduler.thresholds":"13,25,50","fs.s3a.multiobjectdelete.enable":"true","yarn.sharedcache.cleaner.resource-sleep-ms":"0","yarn.nodemanager.disk-health-checker.min-healthy-disks":"0.25","hadoop.shell.missing.defaultFs.warning":"false","io.file.buffer.size":"65536","fs.viewfs.overload.scheme.target.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","hadoop.security.group.mapping.ldap.search.attr.member":"member","hadoop.security.random.device.file.path":"/dev/urandom","hadoop.security.sensitive-config-keys":"*********(redacted)","fs.s3a.s3guard.ddb.max.retries":"9","fs.viewfs.overload.scheme.target.file.impl":"org.apache.hadoop.fs.LocalFileSystem","hadoop.rpc.socket.factory.class.default":"org.apache.hadoop.net.StandardSocketFactory","yarn.intermediate-data-encryption.enable":"false","yarn.resourcemanager.connect.retry-interval.ms":"30000","yarn.nodemanager.container.stderr.pattern":"{*stderr*,*STDERR*}","yarn.scheduler.minimum-allocation-mb":"1024","yarn.app.mapreduce.am.staging-dir":"/tmp/hadoop-yarn/staging","mapreduce.reduce.shuffle.read.timeout":"180000","hadoop.http.cross-origin.max-age":"1800","io.erasurecode.codec.xor.rawcoders":"xor_native,xor_java","fs.s3a.s3guard.consistency.retry.limit":"7","fs.s3a.connection.establish.timeout":"5000","mapreduce.job.running.map.limit":"0","yarn.minicluster.control-resource-monitoring":"false","hadoop.ssl.require.client.cert":"false","hadoop.kerberos.kinit.command":"kinit","yarn.federation.state-store.class":"org.apache.hadoop.yarn.server.federation.store.impl.MemoryFederationStateStore","mapreduce.reduce.log.level":"INFO","hadoop.security.dns.log-slow-lookups.threshold.ms":"1000","mapreduce.job.ubertask.enable":"false","adl.http.timeout":"-1","yarn.resourcemanager.placement-constraints.retry-attempts":"3","hadoop.caller.context.enabled":"false","hadoop.security.group.mapping.ldap.num.attempts":"3","yarn.nodemanager.vmem-pmem-ratio":"2.1","hadoop.rpc.protection":"authentication","ha.health-monitor.rpc-timeout.ms":"45000","yarn.nodemanager.remote-app-log-dir":"/tmp/logs","hadoop.zk.timeout-ms":"10000","fs.s3a.s3guard.cli.prune.age":"86400000","yarn.nodemanager.resource.pcores-vcores-multiplier":"1.0","yarn.nodemanager.runtime.linux.sandbox-mode":"disabled","yarn.app.mapreduce.am.containerlauncher.threadpool-initial-size":"10","fs.viewfs.overload.scheme.target.webhdfs.impl":"org.apache.hadoop.hdfs.web.WebHdfsFileSystem","fs.s3a.committer.threads":"8","hadoop.zk.retry-interval-ms":"1000","hadoop.security.crypto.buffer.size":"8192","yarn.nodemanager.node-labels.provider.fetch-interval-ms":"600000","mapreduce.jobhistory.recovery.store.leveldb.path":"${hadoop.tmp.dir}/mapred/history/recoverystore","yarn.client.failover-retries-on-socket-timeouts":"0","fs.s3a.ssl.channel.mode":"default_jsse","yarn.nodemanager.resource.memory.enabled":"false","fs.azure.authorization.caching.enable":"true","fs.s3a.access.key":"*********(redacted)","hadoop.security.instrumentation.requires.admin":"false","yarn.nodemanager.delete.thread-count":"4","mapreduce.job.finish-when-all-reducers-done":"true","hadoop.registry.jaas.context":"Client","yarn.timeline-service.leveldb-timeline-store.path":"${hadoop.tmp.dir}/yarn/timeline","io.map.index.interval":"128","yarn.resourcemanager.nm-container-queuing.max-queue-wait-time-ms":"100","fs.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","mapreduce.job.counters.max":"120","mapreduce.jobhistory.webapp.rest-csrf.enabled":"false","yarn.timeline-service.store-class":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.jobhistory.move.interval-ms":"180000","fs.s3a.change.detection.version.required":"true","yarn.nodemanager.localizer.fetch.thread-count":"4","yarn.resourcemanager.scheduler.client.thread-count":"50","hadoop.ssl.hostname.verifier":"DEFAULT","yarn.timeline-service.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/timeline","mapreduce.job.classloader":"false","mapreduce.task.profile.map.params":"${mapreduce.task.profile.params}","ipc.client.connect.timeout":"20000","hadoop.security.auth_to_local.mechanism":"hadoop","yarn.timeline-service.app-collector.linger-period.ms":"60000","yarn.nm.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.reservation-system.planfollower.time-step":"1000","yarn.resourcemanager.proxy.timeout.enabled":"true","yarn.resourcemanager.activities-manager.scheduler-activities.ttl-ms":"600000","yarn.nodemanager.runtime.linux.docker.enable-userremapping.allowed":"true","yarn.webapp.api-service.enable":"false","yarn.nodemanager.recovery.enabled":"false","mapreduce.job.end-notification.retry.interval":"1000","fs.du.interval":"600000","fs.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","yarn.nodemanager.container.stderr.tail.bytes":"4096","yarn.nodemanager.disk-health-checker.disk-free-space-threshold.enabled":"true","hadoop.security.group.mapping.ldap.read.timeout.ms":"60000","hadoop.security.groups.cache.warn.after.ms":"5000","file.bytes-per-checksum":"512","mapreduce.outputcommitter.factory.scheme.s3a":"org.apache.hadoop.fs.s3a.commit.S3ACommitterFactory","hadoop.security.groups.cache.background.reload":"false","yarn.nodemanager.container-monitor.enabled":"true","yarn.nodemanager.elastic-memory-control.enabled":"false","net.topology.script.number.args":"100","mapreduce.task.merge.progress.records":"10000","yarn.nodemanager.localizer.address":"${yarn.nodemanager.hostname}:8040","yarn.timeline-service.keytab":"/etc/krb5.keytab","mapreduce.reduce.shuffle.fetch.retry.timeout-ms":"30000","yarn.resourcemanager.rm.container-allocation.expiry-interval-ms":"600000","yarn.nodemanager.container-executor.exit-code-file.timeout-ms":"2000","mapreduce.fileoutputcommitter.algorithm.version":"1","yarn.resourcemanager.work-preserving-recovery.enabled":"true","mapreduce.map.skip.maxrecords":"0","yarn.sharedcache.root-dir":"/sharedcache","fs.s3a.retry.throttle.limit":"20","hadoop.http.authentication.type":"simple","fs.viewfs.overload.scheme.target.oss.impl":"org.apache.hadoop.fs.aliyun.oss.AliyunOSSFileSystem","mapreduce.job.cache.limit.max-resources":"0","mapreduce.task.userlog.limit.kb":"0","ipc.[port_number].weighted-cost.handler":"1","yarn.resourcemanager.scheduler.monitor.enable":"false","ipc.client.connect.max.retries":"10","hadoop.registry.zk.retry.times":"5","yarn.nodemanager.resource-monitor.interval-ms":"3000","yarn.nodemanager.resource-plugins.gpu.allowed-gpu-devices":"auto","mapreduce.job.sharedcache.mode":"disabled","yarn.nodemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.shuffle.listen.queue.size":"128","yarn.scheduler.configuration.mutation.acl-policy.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.DefaultConfigurationMutationACLPolicy","mapreduce.map.cpu.vcores":"1","yarn.log-aggregation.file-formats":"TFile","yarn.timeline-service.client.fd-retain-secs":"300","fs.s3a.select.output.csv.field.delimiter":",","yarn.nodemanager.health-checker.timeout-ms":"1200000","hadoop.user.group.static.mapping.overrides":"dr.who=;","fs.azure.sas.expiry.period":"90d","fs.s3a.select.output.csv.record.delimiter":"\\n","mapreduce.jobhistory.recovery.store.class":"org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService","fs.viewfs.overload.scheme.target.https.impl":"org.apache.hadoop.fs.http.HttpsFileSystem","fs.s3a.s3guard.ddb.table.sse.enabled":"false","yarn.resourcemanager.fail-fast":"${yarn.fail-fast}","yarn.resourcemanager.proxy-user-privileges.enabled":"false","yarn.router.webapp.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.webapp.DefaultRequestInterceptorREST","yarn.nodemanager.resource.memory.cgroups.soft-limit-percentage":"90.0","mapreduce.job.reducer.preempt.delay.sec":"0","hadoop.util.hash.type":"murmur","yarn.nodemanager.disk-validator":"basic","yarn.app.mapreduce.client.job.max-retries":"3","fs.viewfs.overload.scheme.target.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","mapreduce.reduce.shuffle.retry-delay.max.ms":"60000","hadoop.security.group.mapping.ldap.connection.timeout.ms":"60000","mapreduce.task.profile.params":"-agentlib:hprof=cpu=samples,heap=sites,force=n,thread=y,verbose=n,file=%s","yarn.app.mapreduce.shuffle.log.backups":"0","yarn.nodemanager.container-diagnostics-maximum-size":"10000","hadoop.registry.zk.retry.interval.ms":"1000","yarn.nodemanager.linux-container-executor.cgroups.delete-timeout-ms":"1000","fs.AbstractFileSystem.file.impl":"org.apache.hadoop.fs.local.LocalFs","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds":"-1","mapreduce.jobhistory.cleaner.interval-ms":"86400000","hadoop.registry.zk.quorum":"localhost:2181","yarn.nodemanager.runtime.linux.runc.allowed-container-runtimes":"runc","mapreduce.output.fileoutputformat.compress":"false","yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs":"*********(redacted)","fs.s3a.assumed.role.session.duration":"30m","hadoop.security.group.mapping.ldap.conversion.rule":"none","hadoop.ssl.server.conf":"ssl-server.xml","fs.s3a.retry.throttle.interval":"100ms","seq.io.sort.factor":"100","fs.viewfs.overload.scheme.target.ofs.impl":"org.apache.hadoop.fs.ozone.RootedOzoneFileSystem","yarn.sharedcache.cleaner.initial-delay-mins":"10","mapreduce.client.completion.pollinterval":"5000","hadoop.ssl.keystores.factory.class":"org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory","yarn.app.mapreduce.am.resource.cpu-vcores":"1","yarn.timeline-service.enabled":"false","yarn.nodemanager.runtime.linux.docker.capabilities":"CHOWN,DAC_OVERRIDE,FSETID,FOWNER,MKNOD,NET_RAW,SETGID,SETUID,SETFCAP,SETPCAP,NET_BIND_SERVICE,SYS_CHROOT,KILL,AUDIT_WRITE","yarn.acl.enable":"false","yarn.timeline-service.entity-group-fs-store.done-dir":"/tmp/entity-file-history/done/","hadoop.security.group.mapping.ldap.num.attempts.before.failover":"3","mapreduce.task.profile":"false","hadoop.prometheus.endpoint.enabled":"false","yarn.resourcemanager.fs.state-store.uri":"${hadoop.tmp.dir}/yarn/system/rmstore","mapreduce.jobhistory.always-scan-user-dir":"false","fs.s3a.metadatastore.metadata.ttl":"15m","yarn.nodemanager.opportunistic-containers-use-pause-for-preemption":"false","yarn.nodemanager.linux-container-executor.nonsecure-mode.local-user":"nobody","yarn.timeline-service.reader.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineReaderImpl","yarn.resourcemanager.configuration.provider-class":"org.apache.hadoop.yarn.LocalConfigurationProvider","yarn.nodemanager.runtime.linux.docker.userremapping-uid-threshold":"1","yarn.resourcemanager.configuration.file-system-based-store":"/yarn/conf","mapreduce.job.cache.limit.max-single-resource-mb":"0","yarn.nodemanager.runtime.linux.docker.stop.grace-period":"10","yarn.resourcemanager.resource-profiles.source-file":"resource-profiles.json","mapreduce.job.dfs.storage.capacity.kill-limit-exceed":"false","yarn.nodemanager.resource.percentage-physical-cpu-limit":"100","mapreduce.jobhistory.client.thread-count":"10","tfile.fs.input.buffer.size":"262144","mapreduce.client.progressmonitor.pollinterval":"1000","yarn.nodemanager.log-dirs":"${yarn.log.dir}/userlogs","yarn.resourcemanager.opportunistic.max.container-allocation.per.am.heartbeat":"-1","fs.automatic.close":"true","yarn.resourcemanager.delegation-token-renewer.thread-retry-interval":"*********(redacted)","fs.s3a.select.input.csv.quote.character":"\"","yarn.nodemanager.hostname":"0.0.0.0","ipc.[port_number].cost-provider.impl":"org.apache.hadoop.ipc.DefaultCostProvider","yarn.nodemanager.runtime.linux.runc.manifest-to-resources-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.HdfsManifestToResourcesPlugin","yarn.nodemanager.remote-app-log-dir-include-older":"true","yarn.nodemanager.resource.memory.cgroups.swappiness":"0","ftp.stream-buffer-size":"4096","yarn.fail-fast":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-to-keep":"100","yarn.timeline-service.app-aggregation-interval-secs":"15","hadoop.security.group.mapping.ldap.search.filter.user":"(&(objectClass=user)(sAMAccountName={0}))","ipc.[port_number].weighted-cost.lockshared":"10","yarn.nodemanager.container-localizer.log.level":"INFO","yarn.timeline-service.address":"${yarn.timeline-service.hostname}:10200","mapreduce.job.ubertask.maxmaps":"9","fs.s3a.threads.keepalivetime":"60","mapreduce.jobhistory.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.task.files.preserve.failedtasks":"false","yarn.app.mapreduce.client.job.retry-interval":"2000","ha.failover-controller.graceful-fence.connection.retries":"1","fs.s3a.select.output.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.max-lifetime":"*********(redacted)","hadoop.kerberos.keytab.login.autorenewal.enabled":"false","yarn.timeline-service.client.drain-entities.timeout.ms":"2000","yarn.nodemanager.resource-plugins.fpga.vendor-plugin.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin","yarn.resourcemanager.nodemanagers.heartbeat-interval-min-ms":"1000","yarn.timeline-service.entity-group-fs-store.summary-store":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.reduce.cpu.vcores":"1","mapreduce.job.encrypted-intermediate-data.buffer.kb":"128","fs.client.resolve.remote.symlinks":"true","yarn.nodemanager.webapp.https.address":"0.0.0.0:8044","hadoop.http.cross-origin.allowed-origins":"*","mapreduce.job.encrypted-intermediate-data":"false","yarn.nodemanager.disk-health-checker.disk-utilization-threshold.enabled":"true","fs.s3a.executor.capacity":"16","yarn.timeline-service.entity-group-fs-store.retain-seconds":"604800","yarn.resourcemanager.metrics.runtime.buckets":"60,300,1440","yarn.timeline-service.generic-application-history.max-applications":"10000","yarn.nodemanager.local-dirs":"${hadoop.tmp.dir}/nm-local-dir","mapreduce.shuffle.connection-keep-alive.enable":"false","yarn.node-labels.configuration-type":"centralized","fs.s3a.path.style.access":"true","yarn.nodemanager.aux-services.mapreduce_shuffle.class":"org.apache.hadoop.mapred.ShuffleHandler","yarn.sharedcache.store.in-memory.staleness-period-mins":"10080","fs.adl.impl":"org.apache.hadoop.fs.adl.AdlFileSystem","yarn.resourcemanager.application.max-tags":"10","hadoop.domainname.resolver.impl":"org.apache.hadoop.net.DNSDomainNameResolver","yarn.resourcemanager.nodemanager.minimum.version":"NONE","mapreduce.jobhistory.webapp.xfs-filter.xframe-options":"SAMEORIGIN","yarn.app.mapreduce.am.staging-dir.erasurecoding.enabled":"false","net.topology.impl":"org.apache.hadoop.net.NetworkTopology","io.map.index.skip":"0","yarn.timeline-service.reader.webapp.https.address":"${yarn.timeline-service.webapp.https.address}","fs.ftp.data.connection.mode":"ACTIVE_LOCAL_DATA_CONNECTION_MODE","mapreduce.job.local-fs.single-disk-limit.check.kill-limit-exceed":"true","fs.azure.buffer.dir":"${hadoop.tmp.dir}/abfs","yarn.scheduler.maximum-allocation-vcores":"4","hadoop.http.cross-origin.allowed-headers":"X-Requested-With,Content-Type,Accept,Origin","yarn.nodemanager.log-aggregation.compression-type":"none","yarn.timeline-service.version":"1.0f","yarn.ipc.rpc.class":"org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC","mapreduce.reduce.maxattempts":"4","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.batch-size":"1000","hadoop.security.dns.log-slow-lookups.enabled":"false","mapreduce.job.committer.setup.cleanup.needed":"true","hadoop.security.secure.random.impl":"org.apache.hadoop.crypto.random.OpensslSecureRandom","mapreduce.job.running.reduce.limit":"0","fs.s3a.select.errors.include.sql":"false","fs.s3a.connection.request.timeout":"0","ipc.maximum.response.length":"134217728","yarn.resourcemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.job.token.tracking.ids.enabled":"*********(redacted)","hadoop.caller.context.max.size":"128","yarn.nodemanager.runtime.linux.docker.host-pid-namespace.allowed":"false","yarn.nodemanager.runtime.linux.docker.delayed-removal.allowed":"false","hadoop.registry.system.acls":"sasl:yarn@, sasl:mapred@, sasl:hdfs@","yarn.nodemanager.recovery.dir":"${hadoop.tmp.dir}/yarn-nm-recovery","fs.s3a.fast.upload.buffer":"disk","mapreduce.jobhistory.intermediate-done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done_intermediate","yarn.app.mapreduce.shuffle.log.separate":"true","yarn.log-aggregation.debug.filesize":"104857600","fs.s3a.max.total.tasks":"32","fs.s3a.readahead.range":"64K","hadoop.http.authentication.simple.anonymous.allowed":"true","fs.s3a.fast.upload":"true","fs.s3a.attempts.maximum":"20","hadoop.registry.zk.connection.timeout.ms":"15000","yarn.resourcemanager.delegation-token-renewer.thread-count":"*********(redacted)","yarn.resourcemanager.delegation-token-renewer.thread-timeout":"*********(redacted)","yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size":"10000","yarn.nodemanager.aux-services.manifest.reload-ms":"0","yarn.nodemanager.emit-container-events":"true","yarn.resourcemanager.resource-profiles.enabled":"false","yarn.timeline-service.hbase-schema.prefix":"prod.","fs.azure.authorization":"false","mapreduce.map.log.level":"INFO","ha.failover-controller.active-standby-elector.zk.op.retries":"3","yarn.resourcemanager.decommissioning-nodes-watcher.poll-interval-secs":"20","mapreduce.output.fileoutputformat.compress.type":"RECORD","yarn.resourcemanager.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/system/rmstore","yarn.timeline-service.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.ifile.readahead.bytes":"4194304","yarn.sharedcache.app-checker.class":"org.apache.hadoop.yarn.server.sharedcachemanager.RemoteAppChecker","yarn.nodemanager.linux-container-executor.nonsecure-mode.limit-users":"true","yarn.nodemanager.resource.detect-hardware-capabilities":"false","mapreduce.cluster.acls.enabled":"false","mapreduce.job.speculative.retry-after-no-speculate":"1000","fs.viewfs.overload.scheme.target.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","hadoop.security.group.mapping.ldap.search.group.hierarchy.levels":"0","yarn.resourcemanager.fs.state-store.retry-interval-ms":"1000","file.stream-buffer-size":"4096","yarn.resourcemanager.application-timeouts.monitor.interval-ms":"3000","mapreduce.map.output.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","mapreduce.map.speculative":"true","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.hdfs-hash-file":"/runc-root/image-tag-to-hash","mapreduce.job.speculative.retry-after-speculate":"15000","yarn.nodemanager.linux-container-executor.cgroups.mount":"false","yarn.app.mapreduce.am.container.log.backups":"0","yarn.app.mapreduce.am.log.level":"INFO","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.ImageTagToManifestPlugin","io.bytes.per.checksum":"512","mapreduce.job.reduce.slowstart.completedmaps":"0.05","yarn.timeline-service.http-authentication.type":"simple","hadoop.security.group.mapping.ldap.search.attr.group.name":"cn","yarn.nodemanager.resource-plugins.fpga.allowed-fpga-devices":"auto","yarn.timeline-service.client.internal-timers-ttl-secs":"420","fs.s3a.select.output.csv.quote.character":"\"","hadoop.http.logs.enabled":"true","fs.s3a.block.size":"32M","yarn.sharedcache.client-server.address":"0.0.0.0:8045","yarn.nodemanager.logaggregation.threadpool-size-max":"100","yarn.resourcemanager.hostname":"0.0.0.0","yarn.resourcemanager.delegation.key.update-interval":"86400000","mapreduce.reduce.shuffle.fetch.retry.enabled":"${yarn.nodemanager.recovery.enabled}","mapreduce.map.memory.mb":"-1","mapreduce.task.skip.start.attempts":"2","fs.AbstractFileSystem.hdfs.impl":"org.apache.hadoop.fs.Hdfs","yarn.nodemanager.disk-health-checker.enable":"true","fs.s3a.select.output.csv.quote.fields":"always","ipc.client.tcpnodelay":"true","ipc.client.rpc-timeout.ms":"0","yarn.nodemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","yarn.resourcemanager.delegation-token-renewer.thread-retry-max-attempts":"*********(redacted)","ipc.client.low-latency":"false","mapreduce.input.lineinputformat.linespermap":"1","yarn.router.interceptor.user.threadpool-size":"5","ipc.client.connect.max.retries.on.timeouts":"45","yarn.timeline-service.leveldb-timeline-store.read-cache-size":"104857600","fs.AbstractFileSystem.har.impl":"org.apache.hadoop.fs.HarFs","mapreduce.job.split.metainfo.maxsize":"10000000","yarn.am.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.timeline-service.entity-group-fs-store.app-cache-size":"10","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-timeout-interval-secs":"360","fs.s3a.socket.recv.buffer":"8192","rpc.metrics.timeunit":"MILLISECONDS","yarn.resourcemanager.resource-tracker.address":"${yarn.resourcemanager.hostname}:8031","yarn.nodemanager.node-labels.provider.fetch-timeout-ms":"1200000","mapreduce.job.heap.memory-mb.ratio":"0.8","yarn.resourcemanager.leveldb-state-store.compaction-interval-secs":"3600","yarn.resourcemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","yarn.nodemanager.pluggable-device-framework.enabled":"false","yarn.scheduler.configuration.fs.path":"file://${hadoop.tmp.dir}/yarn/system/schedconf","mapreduce.client.output.filter":"FAILED","hadoop.http.filter.initializers":"org.apache.hadoop.http.lib.StaticUserWebFilter","mapreduce.reduce.memory.mb":"-1","yarn.timeline-service.hostname":"0.0.0.0","file.replication":"1","yarn.nodemanager.container-metrics.unregister-delay-ms":"10000","yarn.nodemanager.container-metrics.period-ms":"-1","mapreduce.fileoutputcommitter.task.cleanup.enabled":"false","yarn.nodemanager.log.retain-seconds":"10800","yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds":"3600","ipc.[port_number].callqueue.impl":"java.util.concurrent.LinkedBlockingQueue","yarn.resourcemanager.keytab":"/etc/krb5.keytab","hadoop.security.group.mapping.providers.combined":"true","mapreduce.reduce.merge.inmem.threshold":"1000","yarn.timeline-service.recovery.enabled":"false","fs.azure.saskey.usecontainersaskeyforallaccess":"true","yarn.sharedcache.nm.uploader.thread-count":"20","yarn.resourcemanager.nodemanager-graceful-decommission-timeout-secs":"3600","ipc.[port_number].weighted-cost.lockfree":"1","mapreduce.shuffle.ssl.enabled":"false","yarn.timeline-service.hbase.coprocessor.app-final-value-retention-milliseconds":"259200000","yarn.nodemanager.opportunistic-containers-max-queue-length":"0","yarn.resourcemanager.state-store.max-completed-applications":"${yarn.resourcemanager.max-completed-applications}","mapreduce.job.speculative.minimum-allowed-tasks":"10","fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","yarn.log-aggregation.retain-seconds":"-1","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb":"0","mapreduce.jobhistory.max-age-ms":"604800000","hadoop.http.cross-origin.allowed-methods":"GET,POST,HEAD","yarn.resourcemanager.opportunistic-container-allocation.enabled":"false","mapreduce.jobhistory.webapp.address":"0.0.0.0:19888","hadoop.system.tags":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.log-aggregation.file-controller.TFile.class":"org.apache.hadoop.yarn.logaggregation.filecontroller.tfile.LogAggregationTFileController","yarn.client.nodemanager-connect.max-wait-ms":"180000","yarn.resourcemanager.webapp.address":"${yarn.resourcemanager.hostname}:8088","mapreduce.jobhistory.recovery.enable":"false","mapreduce.reduce.shuffle.parallelcopies":"5","fs.AbstractFileSystem.webhdfs.impl":"org.apache.hadoop.fs.WebHdfs","fs.trash.interval":"0","yarn.app.mapreduce.client.max-retries":"3","hadoop.security.authentication":"simple","mapreduce.task.profile.reduce.params":"${mapreduce.task.profile.params}","yarn.app.mapreduce.am.resource.mb":"1536","mapreduce.input.fileinputformat.list-status.num-threads":"1","yarn.nodemanager.container-executor.class":"org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor","io.mapfile.bloom.size":"1048576","yarn.timeline-service.ttl-ms":"604800000","yarn.resourcemanager.nm-container-queuing.min-queue-length":"5","yarn.nodemanager.resource.cpu-vcores":"-1","mapreduce.job.reduces":"1","fs.s3a.multipart.size":"104857600","fs.s3a.select.input.csv.comment.marker":"#","yarn.scheduler.minimum-allocation-vcores":"1","mapreduce.job.speculative.speculative-cap-total-tasks":"0.01","hadoop.ssl.client.conf":"ssl-client.xml","mapreduce.job.queuename":"default","mapreduce.job.encrypted-intermediate-data-key-size-bits":"128","fs.s3a.metadatastore.authoritative":"false","ipc.[port_number].weighted-cost.response":"1","yarn.nodemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","ha.health-monitor.sleep-after-disconnect.ms":"1000","yarn.app.mapreduce.shuffle.log.limit.kb":"0","hadoop.security.group.mapping":"org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback","yarn.client.application-client-protocol.poll-timeout-ms":"-1","mapreduce.jobhistory.jhist.format":"binary","mapreduce.task.stuck.timeout-ms":"600000","yarn.resourcemanager.application.max-tag.length":"100","yarn.resourcemanager.ha.enabled":"false","dfs.client.ignore.namenode.default.kms.uri":"false","hadoop.http.staticuser.user":"dr.who","mapreduce.task.exit.timeout.check-interval-ms":"20000","mapreduce.jobhistory.intermediate-user-done-dir.permissions":"770","mapreduce.task.exit.timeout":"60000","yarn.nodemanager.linux-container-executor.resources-handler.class":"org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler","mapreduce.reduce.shuffle.memory.limit.percent":"0.25","yarn.resourcemanager.reservation-system.enable":"false","mapreduce.map.output.compress":"false","ha.zookeeper.acl":"world:anyone:rwcda","ipc.server.max.connections":"0","yarn.nodemanager.runtime.linux.docker.default-container-network":"host","yarn.router.webapp.address":"0.0.0.0:8089","yarn.scheduler.maximum-allocation-mb":"8192","yarn.resourcemanager.scheduler.monitor.policies":"org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy","yarn.sharedcache.cleaner.period-mins":"1440","yarn.nodemanager.resource-plugins.gpu.docker-plugin.nvidia-docker-v1.endpoint":"http://localhost:3476/v1.0/docker/cli","yarn.app.mapreduce.am.container.log.limit.kb":"0","ipc.client.connect.retry.interval":"1000","yarn.timeline-service.http-cross-origin.enabled":"false","fs.wasbs.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem$Secure","yarn.resourcemanager.nodemanagers.heartbeat-interval-max-ms":"1000","yarn.federation.subcluster-resolver.class":"org.apache.hadoop.yarn.server.federation.resolver.DefaultSubClusterResolverImpl","yarn.resourcemanager.zk-state-store.parent-path":"/rmstore","fs.s3a.select.input.csv.field.delimiter":",","mapreduce.jobhistory.cleaner.enable":"true","yarn.timeline-service.client.fd-flush-interval-secs":"10","hadoop.security.kms.client.encrypted.key.cache.expiry":"43200000","yarn.client.nodemanager-client-async.thread-pool-max-size":"500","mapreduce.map.maxattempts":"4","yarn.resourcemanager.nm-container-queuing.sorting-nodes-interval-ms":"1000","fs.s3a.committer.staging.tmp.path":"tmp/staging","yarn.nodemanager.sleep-delay-before-sigkill.ms":"250","yarn.resourcemanager.nm-container-queuing.min-queue-wait-time-ms":"10","mapreduce.job.end-notification.retry.attempts":"0","yarn.nodemanager.resource.count-logical-processors-as-cores":"false","hadoop.registry.zk.root":"/registry","adl.feature.ownerandgroup.enableupn":"false","yarn.resourcemanager.zk-max-znode-size.bytes":"1048576","mapreduce.job.reduce.shuffle.consumer.plugin.class":"org.apache.hadoop.mapreduce.task.reduce.Shuffle","yarn.resourcemanager.delayed.delegation-token.removal-interval-ms":"*********(redacted)","yarn.nodemanager.localizer.cache.target-size-mb":"10240","fs.s3a.committer.staging.conflict-mode":"append","mapreduce.client.libjars.wildcard":"true","fs.s3a.committer.staging.unique-filenames":"true","yarn.nodemanager.node-attributes.provider.fetch-timeout-ms":"1200000","fs.s3a.list.version":"2","ftp.client-write-packet-size":"65536","ipc.[port_number].weighted-cost.lockexclusive":"100","fs.AbstractFileSystem.adl.impl":"org.apache.hadoop.fs.adl.Adl","yarn.nodemanager.container-log-monitor.enable":"false","hadoop.security.key.default.cipher":"AES/CTR/NoPadding","yarn.client.failover-retries":"0","fs.s3a.multipart.purge.age":"86400","mapreduce.job.local-fs.single-disk-limit.check.interval-ms":"5000","net.topology.node.switch.mapping.impl":"org.apache.hadoop.net.ScriptBasedMapping","yarn.nodemanager.amrmproxy.address":"0.0.0.0:8049","ipc.server.listen.queue.size":"256","ipc.[port_number].decay-scheduler.period-ms":"5000","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.cache-refresh-interval-secs":"60","map.sort.class":"org.apache.hadoop.util.QuickSort","fs.viewfs.rename.strategy":"SAME_MOUNTPOINT","hadoop.security.kms.client.authentication.retry-count":"1","fs.permissions.umask-mode":"022","fs.s3a.assumed.role.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","yarn.nodemanager.runtime.linux.runc.privileged-containers.allowed":"false","yarn.nodemanager.vmem-check-enabled":"true","yarn.nodemanager.numa-awareness.enabled":"false","yarn.nodemanager.recovery.compaction-interval-secs":"3600","yarn.app.mapreduce.client-am.ipc.max-retries":"3","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.interval-seconds":"60","yarn.federation.registry.base-dir":"yarnfederation/","yarn.nodemanager.health-checker.run-before-startup":"false","mapreduce.job.max.map":"-1","mapreduce.job.local-fs.single-disk-limit.bytes":"-1","mapreduce.shuffle.pathcache.concurrency-level":"16","mapreduce.job.ubertask.maxreduces":"1","mapreduce.shuffle.pathcache.max-weight":"10485760","hadoop.security.kms.client.encrypted.key.cache.size":"500","hadoop.security.java.secure.random.algorithm":"SHA1PRNG","ha.failover-controller.cli-check.rpc-timeout.ms":"20000","mapreduce.jobhistory.jobname.limit":"50","fs.s3a.select.input.compression":"none","yarn.client.nodemanager-connect.retry-interval-ms":"10000","ipc.[port_number].scheduler.priority.levels":"4","yarn.timeline-service.state-store-class":"org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore","yarn.nodemanager.env-whitelist":"JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_HOME,PATH,LANG,TZ","yarn.sharedcache.nested-level":"3","yarn.timeline-service.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","fs.azure.user.agent.prefix":"unknown","yarn.resourcemanager.zk-delegation-token-node.split-index":"*********(redacted)","yarn.nodemanager.numa-awareness.read-topology":"false","yarn.nodemanager.webapp.address":"${yarn.nodemanager.hostname}:8042","rpc.metrics.quantile.enable":"false","yarn.registry.class":"org.apache.hadoop.registry.client.impl.FSRegistryOperationsService","mapreduce.jobhistory.admin.acl":"*","yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size":"10","yarn.scheduler.queue-placement-rules":"user-group","hadoop.http.authentication.kerberos.keytab":"${user.home}/hadoop.keytab","yarn.resourcemanager.recovery.enabled":"false","fs.s3a.select.input.csv.header":"none","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-size":"500","yarn.timeline-service.webapp.rest-csrf.enabled":"false","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-watermark-high-mb":"0"},"System Properties":{"java.io.tmpdir":"/tmp","line.separator":"\n","path.separator":":","sun.management.compiler":"HotSpot 64-Bit Tiered Compilers","SPARK_SUBMIT":"true","sun.cpu.endian":"little","java.specification.version":"17","java.vm.specification.name":"Java Virtual Machine Specification","java.vendor":"BellSoft","java.vm.specification.version":"17","user.home":"/root","sun.arch.data.model":"64","sun.boot.library.path":"/opt/bitnami/java/lib","user.dir":"/opt/bitnami/spark","java.library.path":"/opt/bitnami/python/lib:/opt/bitnami/spark/venv/lib/python3.8/site-packages/numpy.libs::/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib","os.arch":"aarch64","java.vm.version":"17.0.11+12-LTS","jetty.git.hash":"abdcda73818a1a2c705da276edb0bf6581e7997e","java.runtime.version":"17.0.11+12-LTS","java.vm.info":"mixed mode, sharing","java.runtime.name":"OpenJDK Runtime Environment","java.version.date":"2024-04-16","file.separator":"/","java.class.version":"61.0","java.specification.name":"Java Platform API Specification","file.encoding":"ANSI_X3.4-1968","jdk.reflect.useDirectMethodHandle":"false","user.timezone":"Etc/UTC","java.specification.vendor":"Oracle Corporation","sun.java.launcher":"SUN_STANDARD","java.vm.compressedOopsMode":"32-bit","os.version":"6.6.26-linuxkit","native.encoding":"ANSI_X3.4-1968","java.vm.specification.vendor":"Oracle Corporation","sun.stderr.encoding":"ANSI_X3.4-1968","user.country":"US","sun.jnu.encoding":"ANSI_X3.4-1968","user.language":"en","sun.stdout.encoding":"ANSI_X3.4-1968","java.vendor.url":"https://bell-sw.com/","os.name":"Linux","java.vm.vendor":"BellSoft","jdk.debug":"release","java.vendor.url.bug":"https://bell-sw.com/support","user.name":"root","java.vm.name":"OpenJDK 64-Bit Server VM","sun.java.command":"org.apache.spark.deploy.SparkSubmit --master spark://spark-master:7077 --deploy-mode client --conf spark.driver.extraJavaOptions=--add-exports java.base/sun.nio.ch=ALL-UNNAMED /opt/bitnami/spark/jobs/elt-rides-fhvhv-spill.py","java.home":"/opt/bitnami/java","java.version":"17.0.11","sun.io.unicode.encoding":"UnicodeLittle"},"Metrics Properties":{"*.sink.servlet.class":"org.apache.spark.metrics.sink.MetricsServlet","*.sink.servlet.path":"/metrics/json","applications.sink.servlet.path":"/metrics/applications/json","master.sink.servlet.path":"/metrics/master/json"},"Classpath Entries":{"/opt/bitnami/spark/jars/jsr305-3.0.0.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-classes-kqueue-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/javolution-5.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/audience-annotations-0.5.0.jar":"System Classpath","/opt/bitnami/spark/jars/spark-mllib_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/hk2-api-2.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/osgi-resource-locator-1.0.3.jar":"System Classpath","/opt/bitnami/spark/jars/javax.jdo-3.2.0-m3.jar":"System Classpath","/opt/bitnami/spark/jars/spark-hive_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/arrow-vector-12.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-container-servlet-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/jdo-api-3.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/javassist-3.29.2-GA.jar":"System Classpath","/opt/bitnami/spark/jars/netty-buffer-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/slf4j-api-2.0.7.jar":"System Classpath","/opt/bitnami/spark/jars/xbean-asm9-shaded-4.23.jar":"System Classpath","/opt/bitnami/spark/jars/spark-sketch_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/commons-compiler-3.1.9.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-discovery-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/json4s-scalap_2.12-3.7.0-M11.jar":"System Classpath","/opt/bitnami/spark/jars/jaxb-runtime-2.3.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-sql-api_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-core-asl-1.9.13.jar":"System Classpath","/opt/bitnami/spark/jars/httpclient-4.5.14.jar":"System Classpath","/opt/bitnami/spark/jars/chill_2.12-0.10.0.jar":"System Classpath","/opt/bitnami/spark/jars/aws-java-sdk-bundle-1.12.262.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-common-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/metrics-jvm-4.2.19.jar":"System Classpath","/opt/bitnami/spark/jars/netty-handler-proxy-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-x86_64.jar":"System Classpath","/opt/bitnami/spark/jars/aopalliance-repackaged-2.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/avro-mapred-1.11.2.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-coordination-6.7.2.jar":"System Classpath","/opt/bitnami/spark/conf/":"System Classpath","/opt/bitnami/spark/jars/arrow-format-12.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/arrow-memory-netty-12.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/snappy-java-1.1.10.3.jar":"System Classpath","/opt/bitnami/spark/jars/okio-1.15.0.jar":"System Classpath","/opt/bitnami/spark/jars/hive-shims-scheduler-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/tink-1.9.0.jar":"System Classpath","/opt/bitnami/spark/jars/spark-network-common_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/paranamer-2.8.jar":"System Classpath","/opt/bitnami/spark/jars/oro-2.0.8.jar":"System Classpath","/opt/bitnami/spark/jars/scala-reflect-2.12.18.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.annotation-api-1.3.5.jar":"System Classpath","/opt/bitnami/spark/jars/commons-lang-2.6.jar":"System Classpath","/opt/bitnami/spark/jars/spark-streaming_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/ivy-2.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/datanucleus-api-jdo-4.2.4.jar":"System Classpath","/opt/bitnami/spark/jars/antlr-runtime-3.5.2.jar":"System Classpath","/opt/bitnami/spark/jars/datasketches-java-3.3.0.jar":"System Classpath","/opt/bitnami/spark/jars/zookeeper-3.6.3.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-dataformat-yaml-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/janino-3.1.9.jar":"System Classpath","/opt/bitnami/spark/jars/orc-core-1.9.2-shaded-protobuf.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-extensions-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/scala-xml_2.12-2.1.0.jar":"System Classpath","/opt/bitnami/spark/jars/spark-measure_2.12-0.24.jar":"System Classpath","/opt/bitnami/spark/jars/spark-common-utils_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-core-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/flatbuffers-java-1.12.0.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-events-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-tags_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/metrics-jmx-4.2.19.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-client-api-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-catalyst_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/py4j-0.10.9.7.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-resource-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.inject-2.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/logging-interceptor-3.12.12.jar":"System Classpath","/opt/bitnami/spark/jars/commons-logging-1.1.3.jar":"System Classpath","/opt/bitnami/spark/jars/hadoop-client-runtime-3.3.4.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.validation-api-2.0.2.jar":"System Classpath","/opt/bitnami/spark/jars/curator-client-2.13.0.jar":"System Classpath","/opt/bitnami/spark/jars/datasketches-memory-2.1.0.jar":"System Classpath","/opt/bitnami/spark/jars/jline-2.14.6.jar":"System Classpath","/opt/bitnami/spark/jars/RoaringBitmap-0.9.45.jar":"System Classpath","/opt/bitnami/spark/jars/zookeeper-jute-3.6.3.jar":"System Classpath","/opt/bitnami/spark/jars/hive-serde-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/netty-common-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/spark-network-shuffle_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/log4j-api-2.20.0.jar":"System Classpath","/opt/bitnami/spark/jars/spark-core_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-httpclient-okhttp-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/hadoop-shaded-guava-1.1.1.jar":"System Classpath","/opt/bitnami/spark/jars/activation-1.1.1.jar":"System Classpath","/opt/bitnami/spark/jars/json4s-jackson_2.12-3.7.0-M11.jar":"System Classpath","/opt/bitnami/spark/jars/commons-crypto-1.1.0.jar":"System Classpath","/opt/bitnami/spark/jars/HikariCP-2.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/istack-commons-runtime-3.0.8.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-storageclass-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/lz4-java-1.8.0.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.xml.bind-api-2.3.2.jar":"System Classpath","/opt/bitnami/spark/jars/metrics-core-4.2.19.jar":"System Classpath","/opt/bitnami/spark/jars/spark-graphx_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-rbac-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/jodd-core-3.5.2.jar":"System Classpath","/opt/bitnami/spark/jars/log4j-core-2.20.0.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-datatype-jsr310-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/log4j-slf4j2-impl-2.20.0.jar":"System Classpath","/opt/bitnami/spark/jars/dropwizard-metrics-hadoop-metrics2-reporter-0.1.2.jar":"System Classpath","/opt/bitnami/spark/jars/breeze_2.12-2.1.0.jar":"System Classpath","/opt/bitnami/spark/jars/spark-unsafe_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/spark-yarn_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-format-structures-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-scheduling-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/snakeyaml-engine-2.6.jar":"System Classpath","/opt/bitnami/spark/jars/hive-shims-0.23-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-aarch_64.jar":"System Classpath","/opt/bitnami/spark/jars/jcl-over-slf4j-2.0.7.jar":"System Classpath","/opt/bitnami/spark/jars/json4s-core_2.12-3.7.0-M11.jar":"System Classpath","/opt/bitnami/spark/jars/aircompressor-0.26.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-annotations-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/xz-1.9.jar":"System Classpath","/opt/bitnami/spark/jars/commons-collections4-4.4.jar":"System Classpath","/opt/bitnami/spark/jars/avro-ipc-1.11.2.jar":"System Classpath","/opt/bitnami/spark/jars/hive-metastore-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/spire-macros_2.12-0.17.0.jar":"System Classpath","/opt/bitnami/spark/jars/stax-api-1.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/libthrift-0.12.0.jar":"System Classpath","/opt/bitnami/spark/jars/okhttp-3.12.12.jar":"System Classpath","/opt/bitnami/spark/jars/netty-handler-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/stream-2.9.6.jar":"System Classpath","/opt/bitnami/spark/jars/scala-compiler-2.12.18.jar":"System Classpath","/opt/bitnami/spark/jars/scala-parser-combinators_2.12-2.3.0.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-native-epoll-4.1.96.Final-linux-aarch_64.jar":"System Classpath","/opt/bitnami/spark/jars/hive-exec-2.3.9-core.jar":"System Classpath","/opt/bitnami/spark/jars/blas-3.0.3.jar":"System Classpath","/opt/bitnami/spark/jars/ST4-4.0.4.jar":"System Classpath","/opt/bitnami/spark/jars/datanucleus-rdbms-4.1.19.jar":"System Classpath","/opt/bitnami/spark/jars/spire_2.12-0.17.0.jar":"System Classpath","/opt/bitnami/spark/jars/jpam-1.1.jar":"System Classpath","/opt/bitnami/spark/jars/annotations-17.0.0.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-container-servlet-core-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/delta-storage-3.2.0.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-common-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/scala-collection-compat_2.12-2.7.0.jar":"System Classpath","/opt/bitnami/spark/jars/json4s-ast_2.12-3.7.0-M11.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-module-scala_2.12-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-launcher_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/compress-lzf-1.1.2.jar":"System Classpath","/opt/bitnami/spark/jars/hive-shims-common-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/commons-lang3-3.12.0.jar":"System Classpath","/opt/bitnami/spark/jars/transaction-api-1.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-autoscaling-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/chill-java-0.10.0.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-flowcontrol-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/hive-beeline-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-client-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-hadoop-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/netty-codec-http-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-column-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/univocity-parsers-2.9.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-metrics-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/objenesis-3.3.jar":"System Classpath","/opt/bitnami/spark/jars/hive-llap-common-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/arrow-memory-core-12.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/orc-mapreduce-1.9.2-shaded-protobuf.jar":"System Classpath","/opt/bitnami/spark/jars/curator-recipes-2.13.0.jar":"System Classpath","/opt/bitnami/spark/jars/hive-shims-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/snakeyaml-2.0.jar":"System Classpath","/opt/bitnami/spark/jars/log4j-1.2-api-2.20.0.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-common-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/netty-resolver-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-encoding-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-native-unix-common-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/commons-codec-1.16.0.jar":"System Classpath","/opt/bitnami/spark/jars/hk2-utils-2.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-classes-epoll-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-mapper-asl-1.9.13.jar":"System Classpath","/opt/bitnami/spark/jars/spark-mesos_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/bonecp-0.8.0.RELEASE.jar":"System Classpath","/opt/bitnami/spark/jars/scala-library-2.12.18.jar":"System Classpath","/opt/bitnami/spark/jars/JTransforms-3.1.jar":"System Classpath","/opt/bitnami/spark/jars/spark-kubernetes_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/netty-codec-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/commons-text-1.10.0.jar":"System Classpath","/opt/bitnami/spark/jars/mesos-1.4.3-shaded-protobuf.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-server-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/spark-repl_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/kryo-shaded-4.0.2.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-policy-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/commons-dbcp-1.4.jar":"System Classpath","/opt/bitnami/spark/jars/leveldbjni-all-1.8.jar":"System Classpath","/opt/bitnami/spark/jars/metrics-json-4.2.19.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-batch-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-admissionregistration-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-jackson-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/libfb303-0.9.3.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.ws.rs-api-2.1.6.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-networking-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/datanucleus-core-4.1.17.jar":"System Classpath","/opt/bitnami/spark/jars/JLargeArrays-1.5.jar":"System Classpath","/opt/bitnami/spark/jars/hadoop-yarn-server-web-proxy-3.3.4.jar":"System Classpath","/opt/bitnami/spark/jars/json-1.8.jar":"System Classpath","/opt/bitnami/spark/jars/commons-collections-3.2.2.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-gatewayapi-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-kvstore_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/spark-sql_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/jul-to-slf4j-2.0.7.jar":"System Classpath","/opt/bitnami/spark/jars/hadoop-client-api-3.3.4.jar":"System Classpath","/opt/bitnami/spark/jars/jta-1.1.jar":"System Classpath","/opt/bitnami/spark/jars/rocksdbjni-8.3.2.jar":"System Classpath","/opt/bitnami/spark/jars/metrics-graphite-4.2.19.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-native-epoll-4.1.96.Final-linux-x86_64.jar":"System Classpath","/opt/bitnami/spark/jars/hive-cli-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/commons-io-2.13.0.jar":"System Classpath","/opt/bitnami/spark/jars/algebra_2.12-2.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/breeze-macros_2.12-2.1.0.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.servlet-api-4.0.3.jar":"System Classpath","/opt/bitnami/spark/jars/commons-pool-1.5.4.jar":"System Classpath","/opt/bitnami/spark/jars/commons-compress-1.23.0.jar":"System Classpath","/opt/bitnami/spark/jars/netty-all-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/joda-time-2.12.5.jar":"System Classpath","/opt/bitnami/spark/jars/arpack-3.0.3.jar":"System Classpath","/opt/bitnami/spark/jars/httpcore-4.4.16.jar":"System Classpath","/opt/bitnami/spark/jars/hive-jdbc-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/netty-codec-http2-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/netty-codec-socks-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/orc-shims-1.9.2.jar":"System Classpath","/opt/bitnami/spark/jars/opencsv-2.3.jar":"System Classpath","/opt/bitnami/spark/jars/shims-0.9.45.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-apiextensions-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/hadoop-aws-3.3.4.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-node-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/zjsonpatch-0.3.0.jar":"System Classpath","/opt/bitnami/spark/jars/avro-1.11.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-mllib-local_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/arpack_combined_all-0.1.jar":"System Classpath","/opt/bitnami/spark/jars/hive-common-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/guava-14.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-hk2-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/hive-storage-api-2.8.1.jar":"System Classpath","/opt/bitnami/spark/jars/spire-util_2.12-0.17.0.jar":"System Classpath","/opt/bitnami/spark/jars/lapack-3.0.3.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-certificates-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/pickle-1.3.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-client-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/commons-cli-1.5.0.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-databind-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/curator-framework-2.13.0.jar":"System Classpath","/opt/bitnami/spark/jars/minlog-1.3.0.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-core-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/hk2-locator-2.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-apps-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-hive-thriftserver_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/threeten-extra-1.7.1.jar":"System Classpath","/opt/bitnami/spark/jars/hive-service-rpc-3.1.3.jar":"System Classpath","/opt/bitnami/spark/jars/gson-2.2.4.jar":"System Classpath","/opt/bitnami/spark/jars/commons-math3-3.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/derby-10.14.2.0.jar":"System Classpath","/opt/bitnami/spark/jars/spire-platform_2.12-0.17.0.jar":"System Classpath","/opt/bitnami/spark/jars/super-csv-2.2.0.jar":"System Classpath","/opt/bitnami/spark/jars/antlr4-runtime-4.9.3.jar":"System Classpath","/opt/bitnami/spark/jars/cats-kernel_2.12-2.1.1.jar":"System Classpath","/opt/bitnami/spark/jars/zstd-jni-1.5.5-4.jar":"System Classpath"}}
{"Event":"SparkListenerApplicationStart","App Name":"elt-rides-fhvhv-spill","App ID":"app-20240703214045-0014","Timestamp":1720042844635,"User":"spark"}
{"Event":"SparkListenerJobStart","Job ID":0,"Submission Time":1720042846720,"Stage Infos":[{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"0\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[0],"Properties":{"spark.rdd.scope":"{\"id\":\"2\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"0\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042846738,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.rdd.scope":"{\"id\":\"2\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720042846967,"Executor ID":"1","Executor Info":{"Host":"172.24.0.3","Total Cores":2,"Log Urls":{"stdout":"http://172.24.0.3:8081/logPage/?appId=app-20240703214045-0014&executorId=1&logType=stdout","stderr":"http://172.24.0.3:8081/logPage/?appId=app-20240703214045-0014&executorId=1&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720042846967}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720042847010,"Executor ID":"2","Executor Info":{"Host":"172.24.0.4","Total Cores":2,"Log Urls":{"stdout":"http://172.24.0.4:8081/logPage/?appId=app-20240703214045-0014&executorId=2&logType=stdout","stderr":"http://172.24.0.4:8081/logPage/?appId=app-20240703214045-0014&executorId=2&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720042847010}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"1","Host":"172.24.0.3","Port":35545},"Maximum Memory":303667609,"Timestamp":1720042847010,"Maximum Onheap Memory":303667609,"Maximum Offheap Memory":0}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720042847014,"Executor ID":"0","Executor Info":{"Host":"172.24.0.5","Total Cores":2,"Log Urls":{"stdout":"http://172.24.0.5:8081/logPage/?appId=app-20240703214045-0014&executorId=0&logType=stdout","stderr":"http://172.24.0.5:8081/logPage/?appId=app-20240703214045-0014&executorId=0&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720042847014}}
{"Event":"SparkListenerTaskStart","Stage ID":0,"Stage Attempt ID":0,"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042847040,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"2","Host":"172.24.0.4","Port":33755},"Maximum Memory":303667609,"Timestamp":1720042847052,"Maximum Onheap Memory":303667609,"Maximum Offheap Memory":0}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"0","Host":"172.24.0.5","Port":42283},"Maximum Memory":303667609,"Timestamp":1720042847058,"Maximum Onheap Memory":303667609,"Maximum Offheap Memory":0}
{"Event":"SparkListenerTaskEnd","Stage ID":0,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042847040,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042847477,"Failed":false,"Killed":false,"Accumulables":[{"ID":1,"Name":"internal.metrics.executorDeserializeTime","Update":197,"Value":197,"Internal":true,"Count Failed Values":true},{"ID":2,"Name":"internal.metrics.executorDeserializeCpuTime","Update":151501294,"Value":151501294,"Internal":true,"Count Failed Values":true},{"ID":3,"Name":"internal.metrics.executorRunTime","Update":188,"Value":188,"Internal":true,"Count Failed Values":true},{"ID":4,"Name":"internal.metrics.executorCpuTime","Update":58448832,"Value":58448832,"Internal":true,"Count Failed Values":true},{"ID":5,"Name":"internal.metrics.resultSize","Update":2649,"Value":2649,"Internal":true,"Count Failed Values":true},{"ID":6,"Name":"internal.metrics.jvmGCTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":7,"Name":"internal.metrics.resultSerializationTime","Update":3,"Value":3,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":197,"Executor Deserialize CPU Time":151501294,"Executor Run Time":188,"Executor CPU Time":58448832,"Peak Execution Memory":0,"Result Size":2649,"JVM GC Time":4,"Result Serialization Time":3,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"0\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042846738,"Completion Time":1720042847481,"Accumulables":[{"ID":1,"Name":"internal.metrics.executorDeserializeTime","Value":197,"Internal":true,"Count Failed Values":true},{"ID":2,"Name":"internal.metrics.executorDeserializeCpuTime","Value":151501294,"Internal":true,"Count Failed Values":true},{"ID":3,"Name":"internal.metrics.executorRunTime","Value":188,"Internal":true,"Count Failed Values":true},{"ID":4,"Name":"internal.metrics.executorCpuTime","Value":58448832,"Internal":true,"Count Failed Values":true},{"ID":5,"Name":"internal.metrics.resultSize","Value":2649,"Internal":true,"Count Failed Values":true},{"ID":6,"Name":"internal.metrics.jvmGCTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":7,"Name":"internal.metrics.resultSerializationTime","Value":3,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":0,"Completion Time":1720042847484,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":0,"rootExecutionId":0,"description":"csv at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nCollectLimit (3)\n+- * Filter (2)\n   +- Scan text  (1)\n\n\n(1) Scan text \nOutput [1]: [value#48]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/zones.csv]\nReadSchema: struct<value:string>\n\n(2) Filter [codegen id : 1]\nInput [1]: [value#48]\nCondition : (length(trim(value#48, None)) > 0)\n\n(3) CollectLimit\nInput [1]: [value#48]\nArguments: 1\n\n","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 1","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter (length(trim(value#48, None)) > 0)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan text ","simpleString":"FileScan text [value#48] Batched: false, DataFilters: [(length(trim(value#48, None)) > 0)], Format: Text, Location: InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<value:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv]","ReadSchema":"struct<value:string>","Format":"Text","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[(length(trim(value#48, None)) > 0)]"},"metrics":[{"name":"number of output rows","accumulatorId":58,"metricType":"sum"},{"name":"number of files read","accumulatorId":59,"metricType":"sum"},{"name":"metadata time","accumulatorId":60,"metricType":"timing"},{"name":"size of files read","accumulatorId":61,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":57,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":56,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":54,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":48,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":55,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":49,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":46,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":43,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":52,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":45,"metricType":"sum"},{"name":"records read","accumulatorId":42,"metricType":"sum"},{"name":"local bytes read","accumulatorId":40,"metricType":"size"},{"name":"fetch wait time","accumulatorId":41,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":38,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":44,"metricType":"sum"},{"name":"local blocks read","accumulatorId":37,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":47,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":36,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":50,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":51,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":39,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":53,"metricType":"size"}]},"time":1720042848709,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":0,"accumUpdates":[[59,1],[60,2],[61,12331]]}
{"Event":"SparkListenerJobStart","Job ID":1,"Submission Time":1720042848901,"Stage Infos":[{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"9\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"5\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[3],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"8\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"FileScanRDD","Scope":"{\"id\":\"8\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[1],"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"0","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"0","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"9\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"5\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[3],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"8\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"FileScanRDD","Scope":"{\"id\":\"8\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042848903,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"0","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"0","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":1,"Stage Attempt ID":0,"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042848927,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":1,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042848927,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042849420,"Failed":false,"Killed":false,"Accumulables":[{"ID":57,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":58,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":62,"Name":"internal.metrics.executorDeserializeTime","Update":205,"Value":205,"Internal":true,"Count Failed Values":true},{"ID":63,"Name":"internal.metrics.executorDeserializeCpuTime","Update":178422749,"Value":178422749,"Internal":true,"Count Failed Values":true},{"ID":64,"Name":"internal.metrics.executorRunTime","Update":265,"Value":265,"Internal":true,"Count Failed Values":true},{"ID":65,"Name":"internal.metrics.executorCpuTime","Update":245168413,"Value":245168413,"Internal":true,"Count Failed Values":true},{"ID":66,"Name":"internal.metrics.resultSize","Update":1702,"Value":1702,"Internal":true,"Count Failed Values":true},{"ID":67,"Name":"internal.metrics.jvmGCTime","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":68,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":93,"Name":"internal.metrics.input.bytesRead","Update":12331,"Value":12331,"Internal":true,"Count Failed Values":true},{"ID":94,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":205,"Executor Deserialize CPU Time":178422749,"Executor Run Time":265,"Executor CPU Time":245168413,"Peak Execution Memory":0,"Result Size":1702,"JVM GC Time":6,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":12331,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"9\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"5\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[3],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"8\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"FileScanRDD","Scope":"{\"id\":\"8\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042848903,"Completion Time":1720042849423,"Accumulables":[{"ID":57,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":58,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":62,"Name":"internal.metrics.executorDeserializeTime","Value":205,"Internal":true,"Count Failed Values":true},{"ID":63,"Name":"internal.metrics.executorDeserializeCpuTime","Value":178422749,"Internal":true,"Count Failed Values":true},{"ID":64,"Name":"internal.metrics.executorRunTime","Value":265,"Internal":true,"Count Failed Values":true},{"ID":65,"Name":"internal.metrics.executorCpuTime","Value":245168413,"Internal":true,"Count Failed Values":true},{"ID":66,"Name":"internal.metrics.resultSize","Value":1702,"Internal":true,"Count Failed Values":true},{"ID":67,"Name":"internal.metrics.jvmGCTime","Value":6,"Internal":true,"Count Failed Values":true},{"ID":68,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":93,"Name":"internal.metrics.input.bytesRead","Value":12331,"Internal":true,"Count Failed Values":true},{"ID":94,"Name":"internal.metrics.input.recordsRead","Value":1,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":1,"Completion Time":1720042849423,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":0,"time":1720042849438,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":1,"rootExecutionId":1,"description":"createOrReplaceTempView at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.createOrReplaceTempView(Dataset.scala:3908)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nExecute CreateViewCommand (1)\n   +- CreateViewCommand (2)\n         +- LogicalRelation (3)\n\n\n(1) Execute CreateViewCommand\nOutput: []\n\n(2) CreateViewCommand\nArguments: `hvfhs`, false, true, LocalTempView, true\n\n(3) LogicalRelation\nArguments: parquet, [hvfhs_license_num#0, dispatching_base_num#1, originating_base_num#2, request_datetime#3, on_scene_datetime#4, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, airport_fee#16, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, access_a_ride_flag#21, wav_request_flag#22, wav_match_flag#23], false\n\n","sparkPlanInfo":{"nodeName":"Execute CreateViewCommand","simpleString":"Execute CreateViewCommand","children":[],"metadata":{},"metrics":[]},"time":1720042849518,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":1,"time":1720042849523,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":2,"rootExecutionId":2,"description":"createOrReplaceTempView at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.createOrReplaceTempView(Dataset.scala:3908)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nExecute CreateViewCommand (1)\n   +- CreateViewCommand (2)\n         +- LogicalRelation (3)\n\n\n(1) Execute CreateViewCommand\nOutput: []\n\n(2) CreateViewCommand\nArguments: `zones`, false, true, LocalTempView, true\n\n(3) LogicalRelation\nArguments: csv, [LocationID#65, Borough#66, Zone#67, service_zone#68], false\n\n","sparkPlanInfo":{"nodeName":"Execute CreateViewCommand","simpleString":"Execute CreateViewCommand","children":[],"metadata":{},"metrics":[]},"time":1720042849529,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":2,"time":1720042849530,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":3,"rootExecutionId":3,"description":"showString at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (14)\n+- CollectLimit (13)\n   +- Project (12)\n      +- BroadcastHashJoin Inner BuildRight (11)\n         :- Project (7)\n         :  +- BroadcastHashJoin Inner BuildRight (6)\n         :     :- Filter (2)\n         :     :  +- Scan parquet  (1)\n         :     +- BroadcastExchange (5)\n         :        +- Filter (4)\n         :           +- Scan csv  (3)\n         +- BroadcastExchange (10)\n            +- Filter (9)\n               +- Scan csv  (8)\n\n\n(1) Scan parquet \nOutput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nBatched: true\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01.parquet, ... 11 entries]\nPushedFilters: [IsNotNull(PULocationID), IsNotNull(DOLocationID)]\nReadSchema: struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,dropoff_datetime:timestamp_ntz,PULocationID:bigint,DOLocationID:bigint,trip_miles:double,trip_time:bigint,base_passenger_fare:double,tolls:double,bcf:double,sales_tax:double,congestion_surcharge:double,tips:double,driver_pay:double,shared_request_flag:string,shared_match_flag:string>\n\n(2) Filter\nInput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nCondition : (isnotnull(PULocationID#7L) AND isnotnull(DOLocationID#8L))\n\n(3) Scan csv \nOutput [3]: [LocationID#65, Borough#66, Zone#67]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/zones.csv]\nPushedFilters: [IsNotNull(LocationID)]\nReadSchema: struct<LocationID:string,Borough:string,Zone:string>\n\n(4) Filter\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nCondition : isnotnull(LocationID#65)\n\n(5) BroadcastExchange\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nArguments: HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=73]\n\n(6) BroadcastHashJoin\nLeft keys [1]: [cast(PULocationID#7L as int)]\nRight keys [1]: [cast(LocationID#65 as int)]\nJoin type: Inner\nJoin condition: None\n\n(7) Project\nOutput [18]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]\nInput [20]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, LocationID#65, Borough#66, Zone#67]\n\n(8) Scan csv \nOutput [3]: [LocationID#77, Borough#78, Zone#79]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/zones.csv]\nPushedFilters: [IsNotNull(LocationID)]\nReadSchema: struct<LocationID:string,Borough:string,Zone:string>\n\n(9) Filter\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nCondition : isnotnull(LocationID#77)\n\n(10) BroadcastExchange\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nArguments: HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=77]\n\n(11) BroadcastHashJoin\nLeft keys [1]: [DOLocationID#8L]\nRight keys [1]: [cast(LocationID#77 as bigint)]\nJoin type: Inner\nJoin condition: None\n\n(12) Project\nOutput [19]: [toprettystring(hvfhs_license_num#0, Some(Etc/UTC)) AS toprettystring(hvfhs_license_num)#119, toprettystring(Borough#66, Some(Etc/UTC)) AS toprettystring(PU_Borough)#120, toprettystring(Zone#67, Some(Etc/UTC)) AS toprettystring(PU_Zone)#121, toprettystring(Borough#78, Some(Etc/UTC)) AS toprettystring(DO_Borough)#122, toprettystring(Zone#79, Some(Etc/UTC)) AS toprettystring(DO_Zone)#123, toprettystring(request_datetime#3, Some(Etc/UTC)) AS toprettystring(request_datetime)#124, toprettystring(pickup_datetime#5, Some(Etc/UTC)) AS toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime#6, Some(Etc/UTC)) AS toprettystring(dropoff_datetime)#126, toprettystring(trip_miles#9, Some(Etc/UTC)) AS toprettystring(trip_miles)#127, toprettystring(trip_time#10L, Some(Etc/UTC)) AS toprettystring(trip_time)#128, toprettystring(base_passenger_fare#11, Some(Etc/UTC)) AS toprettystring(base_passenger_fare)#129, toprettystring(tolls#12, Some(Etc/UTC)) AS toprettystring(tolls)#130, toprettystring(bcf#13, Some(Etc/UTC)) AS toprettystring(bcf)#131, toprettystring(sales_tax#14, Some(Etc/UTC)) AS toprettystring(sales_tax)#132, toprettystring(congestion_surcharge#15, Some(Etc/UTC)) AS toprettystring(congestion_surcharge)#133, toprettystring(tips#17, Some(Etc/UTC)) AS toprettystring(tips)#134, toprettystring(driver_pay#18, Some(Etc/UTC)) AS toprettystring(driver_pay)#135, toprettystring(shared_request_flag#19, Some(Etc/UTC)) AS toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag#20, Some(Etc/UTC)) AS toprettystring(shared_match_flag)#137]\nInput [21]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67, LocationID#77, Borough#78, Zone#79]\n\n(13) CollectLimit\nInput [19]: [toprettystring(hvfhs_license_num)#119, toprettystring(PU_Borough)#120, toprettystring(PU_Zone)#121, toprettystring(DO_Borough)#122, toprettystring(DO_Zone)#123, toprettystring(request_datetime)#124, toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime)#126, toprettystring(trip_miles)#127, toprettystring(trip_time)#128, toprettystring(base_passenger_fare)#129, toprettystring(tolls)#130, toprettystring(bcf)#131, toprettystring(sales_tax)#132, toprettystring(congestion_surcharge)#133, toprettystring(tips)#134, toprettystring(driver_pay)#135, toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag)#137]\nArguments: 21\n\n(14) AdaptiveSparkPlan\nOutput [19]: [toprettystring(hvfhs_license_num)#119, toprettystring(PU_Borough)#120, toprettystring(PU_Zone)#121, toprettystring(DO_Borough)#122, toprettystring(DO_Zone)#123, toprettystring(request_datetime)#124, toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime)#126, toprettystring(trip_miles)#127, toprettystring(trip_time)#128, toprettystring(base_passenger_fare)#129, toprettystring(tolls)#130, toprettystring(bcf)#131, toprettystring(sales_tax)#132, toprettystring(congestion_surcharge)#133, toprettystring(tips)#134, toprettystring(driver_pay)#135, toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag)#137]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 21","children":[{"nodeName":"Project","simpleString":"Project [toprettystring(hvfhs_license_num#0, Some(Etc/UTC)) AS toprettystring(hvfhs_license_num)#119, toprettystring(Borough#66, Some(Etc/UTC)) AS toprettystring(PU_Borough)#120, toprettystring(Zone#67, Some(Etc/UTC)) AS toprettystring(PU_Zone)#121, toprettystring(Borough#78, Some(Etc/UTC)) AS toprettystring(DO_Borough)#122, toprettystring(Zone#79, Some(Etc/UTC)) AS toprettystring(DO_Zone)#123, toprettystring(request_datetime#3, Some(Etc/UTC)) AS toprettystring(request_datetime)#124, toprettystring(pickup_datetime#5, Some(Etc/UTC)) AS toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime#6, Some(Etc/UTC)) AS toprettystring(dropoff_datetime)#126, toprettystring(trip_miles#9, Some(Etc/UTC)) AS toprettystring(trip_miles)#127, toprettystring(trip_time#10L, Some(Etc/UTC)) AS toprettystring(trip_time)#128, toprettystring(base_passenger_fare#11, Some(Etc/UTC)) AS toprettystring(base_passenger_fare)#129, toprettystring(tolls#12, Some(Etc/UTC)) AS toprettystring(tolls)#130, toprettystring(bcf#13, Some(Etc/UTC)) AS toprettystring(bcf)#131, toprettystring(sales_tax#14, Some(Etc/UTC)) AS toprettystring(sales_tax)#132, toprettystring(congestion_surcharge#15, Some(Etc/UTC)) AS toprettystring(congestion_surcharge)#133, toprettystring(tips#17, Some(Etc/UTC)) AS toprettystring(tips)#134, toprettystring(driver_pay#18, Some(Etc/UTC)) AS toprettystring(driver_pay)#135, toprettystring(shared_request_flag#19, Some(Etc/UTC)) AS toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag#20, Some(Etc/UTC)) AS toprettystring(shared_match_flag)#137]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [DOLocationID#8L], [cast(LocationID#77 as bigint)], Inner, BuildRight, false","children":[{"nodeName":"Project","simpleString":"Project [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [cast(PULocationID#7L as int)], [cast(LocationID#65 as int)], Inner, BuildRight, false","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(PULocationID#7L) AND isnotnull(DOLocationID#8L))","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [hvfhs_license_num#0,request_datetime#3,pickup_datetime#5,dropoff_datetime#6,PULocationID#7L,DOLocationID#8L,trip_miles#9,trip_time#10L,base_passenger_fare#11,tolls#12,bcf#13,sales_tax#14,congestion_surcharge#15,tips#17,driver_pay#18,shared_request_flag#19,shared_match_flag#20] Batched: true, DataFilters: [isnotnull(PULocationID#7L), isnotnull(DOLocationID#8L)], Format: Parquet, Location: InMemoryFileIndex(12 paths)[file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01..., PartitionFilters: [], PushedFilters: [IsNotNull(PULocationID), IsNotNull(DOLocationID)], ReadSchema: struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,drop...","children":[],"metadata":{"Location":"InMemoryFileIndex(12 paths)[file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01.parquet, file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-02.parquet, ...]","ReadSchema":"struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,dropoff_datetime:timestamp_ntz,PULocationID:bigint,DOLocationID:bigint,trip_miles:double,trip_time:bigint,base_passenger_fare:double,tolls:double,bcf:double,sales_tax:double,congestion_surcharge:double,tips:double,driver_pay:double,shared_request_flag:string,shared_match_flag:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(PULocationID), IsNotNull(DOLocationID)]","DataFilters":"[isnotnull(PULocationID#7L), isnotnull(DOLocationID#8L)]"},"metrics":[{"name":"number of files read","accumulatorId":126,"metricType":"sum"},{"name":"scan time","accumulatorId":125,"metricType":"timing"},{"name":"metadata time","accumulatorId":127,"metricType":"timing"},{"name":"size of files read","accumulatorId":128,"metricType":"size"},{"name":"number of output rows","accumulatorId":124,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":123,"metricType":"sum"}]},{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=73]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(LocationID#65)","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [LocationID#65,Borough#66,Zone#67] Batched: false, DataFilters: [isnotnull(LocationID#65)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LocationID)], ReadSchema: struct<LocationID:string,Borough:string,Zone:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv]","ReadSchema":"struct<LocationID:string,Borough:string,Zone:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(LocationID)]","DataFilters":"[isnotnull(LocationID#65)]"},"metrics":[{"name":"number of output rows","accumulatorId":135,"metricType":"sum"},{"name":"number of files read","accumulatorId":136,"metricType":"sum"},{"name":"metadata time","accumulatorId":137,"metricType":"timing"},{"name":"size of files read","accumulatorId":138,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":134,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":133,"metricType":"timing"},{"name":"time to build","accumulatorId":132,"metricType":"timing"},{"name":"time to collect","accumulatorId":131,"metricType":"timing"},{"name":"number of output rows","accumulatorId":130,"metricType":"sum"},{"name":"data size","accumulatorId":129,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":122,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=77]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(LocationID#77)","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [LocationID#77,Borough#78,Zone#79] Batched: false, DataFilters: [isnotnull(LocationID#77)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LocationID)], ReadSchema: struct<LocationID:string,Borough:string,Zone:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv]","ReadSchema":"struct<LocationID:string,Borough:string,Zone:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(LocationID)]","DataFilters":"[isnotnull(LocationID#77)]"},"metrics":[{"name":"number of output rows","accumulatorId":145,"metricType":"sum"},{"name":"number of files read","accumulatorId":146,"metricType":"sum"},{"name":"metadata time","accumulatorId":147,"metricType":"timing"},{"name":"size of files read","accumulatorId":148,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":144,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":143,"metricType":"timing"},{"name":"time to build","accumulatorId":142,"metricType":"timing"},{"name":"time to collect","accumulatorId":141,"metricType":"timing"},{"name":"number of output rows","accumulatorId":140,"metricType":"sum"},{"name":"data size","accumulatorId":139,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":121,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":119,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":113,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":120,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":114,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":111,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":108,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":117,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":110,"metricType":"sum"},{"name":"records read","accumulatorId":107,"metricType":"sum"},{"name":"local bytes read","accumulatorId":105,"metricType":"size"},{"name":"fetch wait time","accumulatorId":106,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":103,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":109,"metricType":"sum"},{"name":"local blocks read","accumulatorId":102,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":112,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":101,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":115,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":116,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":104,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":118,"metricType":"size"}]}],"metadata":{},"metrics":[]},"time":1720042849732,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":3,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (25)\n+- == Current Plan ==\n   CollectLimit (15)\n   +- Project (14)\n      +- BroadcastHashJoin Inner BuildRight (13)\n         :- Project (8)\n         :  +- BroadcastHashJoin Inner BuildRight (7)\n         :     :- Filter (2)\n         :     :  +- Scan parquet  (1)\n         :     +- BroadcastQueryStage (6)\n         :        +- BroadcastExchange (5)\n         :           +- * Filter (4)\n         :              +- Scan csv  (3)\n         +- BroadcastQueryStage (12)\n            +- BroadcastExchange (11)\n               +- * Filter (10)\n                  +- Scan csv  (9)\n+- == Initial Plan ==\n   CollectLimit (24)\n   +- Project (23)\n      +- BroadcastHashJoin Inner BuildRight (22)\n         :- Project (19)\n         :  +- BroadcastHashJoin Inner BuildRight (18)\n         :     :- Filter (2)\n         :     :  +- Scan parquet  (1)\n         :     +- BroadcastExchange (17)\n         :        +- Filter (16)\n         :           +- Scan csv  (3)\n         +- BroadcastExchange (21)\n            +- Filter (20)\n               +- Scan csv  (9)\n\n\n(1) Scan parquet \nOutput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nBatched: true\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01.parquet, ... 11 entries]\nPushedFilters: [IsNotNull(PULocationID), IsNotNull(DOLocationID)]\nReadSchema: struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,dropoff_datetime:timestamp_ntz,PULocationID:bigint,DOLocationID:bigint,trip_miles:double,trip_time:bigint,base_passenger_fare:double,tolls:double,bcf:double,sales_tax:double,congestion_surcharge:double,tips:double,driver_pay:double,shared_request_flag:string,shared_match_flag:string>\n\n(2) Filter\nInput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nCondition : (isnotnull(PULocationID#7L) AND isnotnull(DOLocationID#8L))\n\n(3) Scan csv \nOutput [3]: [LocationID#65, Borough#66, Zone#67]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/zones.csv]\nPushedFilters: [IsNotNull(LocationID)]\nReadSchema: struct<LocationID:string,Borough:string,Zone:string>\n\n(4) Filter [codegen id : 1]\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nCondition : isnotnull(LocationID#65)\n\n(5) BroadcastExchange\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nArguments: HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=88]\n\n(6) BroadcastQueryStage\nOutput [3]: [LocationID#65, Borough#66, Zone#67]\nArguments: 0\n\n(7) BroadcastHashJoin\nLeft keys [1]: [cast(PULocationID#7L as int)]\nRight keys [1]: [cast(LocationID#65 as int)]\nJoin type: Inner\nJoin condition: None\n\n(8) Project\nOutput [18]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]\nInput [20]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, LocationID#65, Borough#66, Zone#67]\n\n(9) Scan csv \nOutput [3]: [LocationID#77, Borough#78, Zone#79]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/zones.csv]\nPushedFilters: [IsNotNull(LocationID)]\nReadSchema: struct<LocationID:string,Borough:string,Zone:string>\n\n(10) Filter [codegen id : 2]\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nCondition : isnotnull(LocationID#77)\n\n(11) BroadcastExchange\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nArguments: HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=104]\n\n(12) BroadcastQueryStage\nOutput [3]: [LocationID#77, Borough#78, Zone#79]\nArguments: 1\n\n(13) BroadcastHashJoin\nLeft keys [1]: [DOLocationID#8L]\nRight keys [1]: [cast(LocationID#77 as bigint)]\nJoin type: Inner\nJoin condition: None\n\n(14) Project\nOutput [19]: [toprettystring(hvfhs_license_num#0, Some(Etc/UTC)) AS toprettystring(hvfhs_license_num)#119, toprettystring(Borough#66, Some(Etc/UTC)) AS toprettystring(PU_Borough)#120, toprettystring(Zone#67, Some(Etc/UTC)) AS toprettystring(PU_Zone)#121, toprettystring(Borough#78, Some(Etc/UTC)) AS toprettystring(DO_Borough)#122, toprettystring(Zone#79, Some(Etc/UTC)) AS toprettystring(DO_Zone)#123, toprettystring(request_datetime#3, Some(Etc/UTC)) AS toprettystring(request_datetime)#124, toprettystring(pickup_datetime#5, Some(Etc/UTC)) AS toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime#6, Some(Etc/UTC)) AS toprettystring(dropoff_datetime)#126, toprettystring(trip_miles#9, Some(Etc/UTC)) AS toprettystring(trip_miles)#127, toprettystring(trip_time#10L, Some(Etc/UTC)) AS toprettystring(trip_time)#128, toprettystring(base_passenger_fare#11, Some(Etc/UTC)) AS toprettystring(base_passenger_fare)#129, toprettystring(tolls#12, Some(Etc/UTC)) AS toprettystring(tolls)#130, toprettystring(bcf#13, Some(Etc/UTC)) AS toprettystring(bcf)#131, toprettystring(sales_tax#14, Some(Etc/UTC)) AS toprettystring(sales_tax)#132, toprettystring(congestion_surcharge#15, Some(Etc/UTC)) AS toprettystring(congestion_surcharge)#133, toprettystring(tips#17, Some(Etc/UTC)) AS toprettystring(tips)#134, toprettystring(driver_pay#18, Some(Etc/UTC)) AS toprettystring(driver_pay)#135, toprettystring(shared_request_flag#19, Some(Etc/UTC)) AS toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag#20, Some(Etc/UTC)) AS toprettystring(shared_match_flag)#137]\nInput [21]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67, LocationID#77, Borough#78, Zone#79]\n\n(15) CollectLimit\nInput [19]: [toprettystring(hvfhs_license_num)#119, toprettystring(PU_Borough)#120, toprettystring(PU_Zone)#121, toprettystring(DO_Borough)#122, toprettystring(DO_Zone)#123, toprettystring(request_datetime)#124, toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime)#126, toprettystring(trip_miles)#127, toprettystring(trip_time)#128, toprettystring(base_passenger_fare)#129, toprettystring(tolls)#130, toprettystring(bcf)#131, toprettystring(sales_tax)#132, toprettystring(congestion_surcharge)#133, toprettystring(tips)#134, toprettystring(driver_pay)#135, toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag)#137]\nArguments: 21\n\n(16) Filter\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nCondition : isnotnull(LocationID#65)\n\n(17) BroadcastExchange\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nArguments: HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=73]\n\n(18) BroadcastHashJoin\nLeft keys [1]: [cast(PULocationID#7L as int)]\nRight keys [1]: [cast(LocationID#65 as int)]\nJoin type: Inner\nJoin condition: None\n\n(19) Project\nOutput [18]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]\nInput [20]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, LocationID#65, Borough#66, Zone#67]\n\n(20) Filter\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nCondition : isnotnull(LocationID#77)\n\n(21) BroadcastExchange\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nArguments: HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=77]\n\n(22) BroadcastHashJoin\nLeft keys [1]: [DOLocationID#8L]\nRight keys [1]: [cast(LocationID#77 as bigint)]\nJoin type: Inner\nJoin condition: None\n\n(23) Project\nOutput [19]: [toprettystring(hvfhs_license_num#0, Some(Etc/UTC)) AS toprettystring(hvfhs_license_num)#119, toprettystring(Borough#66, Some(Etc/UTC)) AS toprettystring(PU_Borough)#120, toprettystring(Zone#67, Some(Etc/UTC)) AS toprettystring(PU_Zone)#121, toprettystring(Borough#78, Some(Etc/UTC)) AS toprettystring(DO_Borough)#122, toprettystring(Zone#79, Some(Etc/UTC)) AS toprettystring(DO_Zone)#123, toprettystring(request_datetime#3, Some(Etc/UTC)) AS toprettystring(request_datetime)#124, toprettystring(pickup_datetime#5, Some(Etc/UTC)) AS toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime#6, Some(Etc/UTC)) AS toprettystring(dropoff_datetime)#126, toprettystring(trip_miles#9, Some(Etc/UTC)) AS toprettystring(trip_miles)#127, toprettystring(trip_time#10L, Some(Etc/UTC)) AS toprettystring(trip_time)#128, toprettystring(base_passenger_fare#11, Some(Etc/UTC)) AS toprettystring(base_passenger_fare)#129, toprettystring(tolls#12, Some(Etc/UTC)) AS toprettystring(tolls)#130, toprettystring(bcf#13, Some(Etc/UTC)) AS toprettystring(bcf)#131, toprettystring(sales_tax#14, Some(Etc/UTC)) AS toprettystring(sales_tax)#132, toprettystring(congestion_surcharge#15, Some(Etc/UTC)) AS toprettystring(congestion_surcharge)#133, toprettystring(tips#17, Some(Etc/UTC)) AS toprettystring(tips)#134, toprettystring(driver_pay#18, Some(Etc/UTC)) AS toprettystring(driver_pay)#135, toprettystring(shared_request_flag#19, Some(Etc/UTC)) AS toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag#20, Some(Etc/UTC)) AS toprettystring(shared_match_flag)#137]\nInput [21]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67, LocationID#77, Borough#78, Zone#79]\n\n(24) CollectLimit\nInput [19]: [toprettystring(hvfhs_license_num)#119, toprettystring(PU_Borough)#120, toprettystring(PU_Zone)#121, toprettystring(DO_Borough)#122, toprettystring(DO_Zone)#123, toprettystring(request_datetime)#124, toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime)#126, toprettystring(trip_miles)#127, toprettystring(trip_time)#128, toprettystring(base_passenger_fare)#129, toprettystring(tolls)#130, toprettystring(bcf)#131, toprettystring(sales_tax)#132, toprettystring(congestion_surcharge)#133, toprettystring(tips)#134, toprettystring(driver_pay)#135, toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag)#137]\nArguments: 21\n\n(25) AdaptiveSparkPlan\nOutput [19]: [toprettystring(hvfhs_license_num)#119, toprettystring(PU_Borough)#120, toprettystring(PU_Zone)#121, toprettystring(DO_Borough)#122, toprettystring(DO_Zone)#123, toprettystring(request_datetime)#124, toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime)#126, toprettystring(trip_miles)#127, toprettystring(trip_time)#128, toprettystring(base_passenger_fare)#129, toprettystring(tolls)#130, toprettystring(bcf)#131, toprettystring(sales_tax)#132, toprettystring(congestion_surcharge)#133, toprettystring(tips)#134, toprettystring(driver_pay)#135, toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag)#137]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 21","children":[{"nodeName":"Project","simpleString":"Project [toprettystring(hvfhs_license_num#0, Some(Etc/UTC)) AS toprettystring(hvfhs_license_num)#119, toprettystring(Borough#66, Some(Etc/UTC)) AS toprettystring(PU_Borough)#120, toprettystring(Zone#67, Some(Etc/UTC)) AS toprettystring(PU_Zone)#121, toprettystring(Borough#78, Some(Etc/UTC)) AS toprettystring(DO_Borough)#122, toprettystring(Zone#79, Some(Etc/UTC)) AS toprettystring(DO_Zone)#123, toprettystring(request_datetime#3, Some(Etc/UTC)) AS toprettystring(request_datetime)#124, toprettystring(pickup_datetime#5, Some(Etc/UTC)) AS toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime#6, Some(Etc/UTC)) AS toprettystring(dropoff_datetime)#126, toprettystring(trip_miles#9, Some(Etc/UTC)) AS toprettystring(trip_miles)#127, toprettystring(trip_time#10L, Some(Etc/UTC)) AS toprettystring(trip_time)#128, toprettystring(base_passenger_fare#11, Some(Etc/UTC)) AS toprettystring(base_passenger_fare)#129, toprettystring(tolls#12, Some(Etc/UTC)) AS toprettystring(tolls)#130, toprettystring(bcf#13, Some(Etc/UTC)) AS toprettystring(bcf)#131, toprettystring(sales_tax#14, Some(Etc/UTC)) AS toprettystring(sales_tax)#132, toprettystring(congestion_surcharge#15, Some(Etc/UTC)) AS toprettystring(congestion_surcharge)#133, toprettystring(tips#17, Some(Etc/UTC)) AS toprettystring(tips)#134, toprettystring(driver_pay#18, Some(Etc/UTC)) AS toprettystring(driver_pay)#135, toprettystring(shared_request_flag#19, Some(Etc/UTC)) AS toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag#20, Some(Etc/UTC)) AS toprettystring(shared_match_flag)#137]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [DOLocationID#8L], [cast(LocationID#77 as bigint)], Inner, BuildRight, false","children":[{"nodeName":"Project","simpleString":"Project [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [cast(PULocationID#7L as int)], [cast(LocationID#65 as int)], Inner, BuildRight, false","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(PULocationID#7L) AND isnotnull(DOLocationID#8L))","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [hvfhs_license_num#0,request_datetime#3,pickup_datetime#5,dropoff_datetime#6,PULocationID#7L,DOLocationID#8L,trip_miles#9,trip_time#10L,base_passenger_fare#11,tolls#12,bcf#13,sales_tax#14,congestion_surcharge#15,tips#17,driver_pay#18,shared_request_flag#19,shared_match_flag#20] Batched: true, DataFilters: [isnotnull(PULocationID#7L), isnotnull(DOLocationID#8L)], Format: Parquet, Location: InMemoryFileIndex(12 paths)[file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01..., PartitionFilters: [], PushedFilters: [IsNotNull(PULocationID), IsNotNull(DOLocationID)], ReadSchema: struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,drop...","children":[],"metadata":{"Location":"InMemoryFileIndex(12 paths)[file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01.parquet, file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-02.parquet, ...]","ReadSchema":"struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,dropoff_datetime:timestamp_ntz,PULocationID:bigint,DOLocationID:bigint,trip_miles:double,trip_time:bigint,base_passenger_fare:double,tolls:double,bcf:double,sales_tax:double,congestion_surcharge:double,tips:double,driver_pay:double,shared_request_flag:string,shared_match_flag:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(PULocationID), IsNotNull(DOLocationID)]","DataFilters":"[isnotnull(PULocationID#7L), isnotnull(DOLocationID#8L)]"},"metrics":[{"name":"number of files read","accumulatorId":126,"metricType":"sum"},{"name":"scan time","accumulatorId":125,"metricType":"timing"},{"name":"metadata time","accumulatorId":127,"metricType":"timing"},{"name":"size of files read","accumulatorId":128,"metricType":"size"},{"name":"number of output rows","accumulatorId":124,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":123,"metricType":"sum"}]},{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 0","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=88]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(LocationID#65)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [LocationID#65,Borough#66,Zone#67] Batched: false, DataFilters: [isnotnull(LocationID#65)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LocationID)], ReadSchema: struct<LocationID:string,Borough:string,Zone:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv]","ReadSchema":"struct<LocationID:string,Borough:string,Zone:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(LocationID)]","DataFilters":"[isnotnull(LocationID#65)]"},"metrics":[{"name":"number of output rows","accumulatorId":135,"metricType":"sum"},{"name":"number of files read","accumulatorId":136,"metricType":"sum"},{"name":"metadata time","accumulatorId":137,"metricType":"timing"},{"name":"size of files read","accumulatorId":138,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":177,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":176,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":175,"metricType":"timing"},{"name":"time to build","accumulatorId":174,"metricType":"timing"},{"name":"time to collect","accumulatorId":173,"metricType":"timing"},{"name":"number of output rows","accumulatorId":172,"metricType":"sum"},{"name":"data size","accumulatorId":171,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":170,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 1","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=104]","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(LocationID#77)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [LocationID#77,Borough#78,Zone#79] Batched: false, DataFilters: [isnotnull(LocationID#77)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LocationID)], ReadSchema: struct<LocationID:string,Borough:string,Zone:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv]","ReadSchema":"struct<LocationID:string,Borough:string,Zone:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(LocationID)]","DataFilters":"[isnotnull(LocationID#77)]"},"metrics":[{"name":"number of output rows","accumulatorId":145,"metricType":"sum"},{"name":"number of files read","accumulatorId":146,"metricType":"sum"},{"name":"metadata time","accumulatorId":147,"metricType":"timing"},{"name":"size of files read","accumulatorId":148,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":184,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":183,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":182,"metricType":"timing"},{"name":"time to build","accumulatorId":181,"metricType":"timing"},{"name":"time to collect","accumulatorId":180,"metricType":"timing"},{"name":"number of output rows","accumulatorId":179,"metricType":"sum"},{"name":"data size","accumulatorId":178,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":169,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":167,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":161,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":168,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":162,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":159,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":156,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":165,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":158,"metricType":"sum"},{"name":"records read","accumulatorId":155,"metricType":"sum"},{"name":"local bytes read","accumulatorId":153,"metricType":"size"},{"name":"fetch wait time","accumulatorId":154,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":151,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":157,"metricType":"sum"},{"name":"local blocks read","accumulatorId":150,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":160,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":149,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":163,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":164,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":152,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":166,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[136,1],[137,0],[138,12331]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[146,1],[147,0],[148,12331]]}
{"Event":"SparkListenerJobStart","Job ID":2,"Submission Time":1720042849796,"Stage Infos":[{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"18\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"19\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"26\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"FileScanRDD","Scope":"{\"id\":\"26\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[2],"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"18\",\"name\":\"BroadcastExchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"3","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.job.interruptOnCancel":"true","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","spark.job.tags":"broadcast exchange (runId 34305493-ce77-4ec0-b7af-a5d5a2ca6d77)","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"3","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"18\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"19\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"26\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"FileScanRDD","Scope":"{\"id\":\"26\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042849798,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"18\",\"name\":\"BroadcastExchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"3","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.job.interruptOnCancel":"true","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","spark.job.tags":"broadcast exchange (runId 34305493-ce77-4ec0-b7af-a5d5a2ca6d77)","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"3","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerJobStart","Job ID":3,"Submission Time":1720042849811,"Stage Infos":[{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"21\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"27\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"FileScanRDD","Scope":"{\"id\":\"27\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[3],"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"21\",\"name\":\"BroadcastExchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"3","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.job.interruptOnCancel":"true","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","spark.job.tags":"broadcast exchange (runId 5273e08a-65fc-480e-9758-af3f44589d3b)","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"3","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"21\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"27\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"FileScanRDD","Scope":"{\"id\":\"27\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042849812,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"21\",\"name\":\"BroadcastExchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"3","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.job.interruptOnCancel":"true","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","spark.job.tags":"broadcast exchange (runId 5273e08a-65fc-480e-9758-af3f44589d3b)","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"3","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":2,"Stage Attempt ID":0,"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042849809,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":3,"Stage Attempt ID":0,"Task Info":{"Task ID":3,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042849831,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":3,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":3,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042849831,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042850312,"Failed":false,"Killed":false,"Accumulables":[{"ID":145,"Name":"number of output rows","Update":"265","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":183,"Name":"duration","Update":"199","Value":"199","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":184,"Name":"number of output rows","Update":"265","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"internal.metrics.executorDeserializeTime","Update":109,"Value":109,"Internal":true,"Count Failed Values":true},{"ID":221,"Name":"internal.metrics.executorDeserializeCpuTime","Update":78683451,"Value":78683451,"Internal":true,"Count Failed Values":true},{"ID":222,"Name":"internal.metrics.executorRunTime","Update":359,"Value":359,"Internal":true,"Count Failed Values":true},{"ID":223,"Name":"internal.metrics.executorCpuTime","Update":318497829,"Value":318497829,"Internal":true,"Count Failed Values":true},{"ID":224,"Name":"internal.metrics.resultSize","Update":9423,"Value":9423,"Internal":true,"Count Failed Values":true},{"ID":225,"Name":"internal.metrics.jvmGCTime","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":226,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":251,"Name":"internal.metrics.input.bytesRead","Update":12331,"Value":12331,"Internal":true,"Count Failed Values":true},{"ID":252,"Name":"internal.metrics.input.recordsRead","Update":265,"Value":265,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":109,"Executor Deserialize CPU Time":78683451,"Executor Run Time":359,"Executor CPU Time":318497829,"Peak Execution Memory":0,"Result Size":9423,"JVM GC Time":7,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":12331,"Records Read":265},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"21\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"27\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"FileScanRDD","Scope":"{\"id\":\"27\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042849812,"Completion Time":1720042850314,"Accumulables":[{"ID":145,"Name":"number of output rows","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":183,"Name":"duration","Value":"199","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":184,"Name":"number of output rows","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":220,"Name":"internal.metrics.executorDeserializeTime","Value":109,"Internal":true,"Count Failed Values":true},{"ID":221,"Name":"internal.metrics.executorDeserializeCpuTime","Value":78683451,"Internal":true,"Count Failed Values":true},{"ID":222,"Name":"internal.metrics.executorRunTime","Value":359,"Internal":true,"Count Failed Values":true},{"ID":223,"Name":"internal.metrics.executorCpuTime","Value":318497829,"Internal":true,"Count Failed Values":true},{"ID":224,"Name":"internal.metrics.resultSize","Value":9423,"Internal":true,"Count Failed Values":true},{"ID":225,"Name":"internal.metrics.jvmGCTime","Value":7,"Internal":true,"Count Failed Values":true},{"ID":226,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":251,"Name":"internal.metrics.input.bytesRead","Value":12331,"Internal":true,"Count Failed Values":true},{"ID":252,"Name":"internal.metrics.input.recordsRead","Value":265,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":3,"Completion Time":1720042850315,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[182,6],[181,21],[180,563],[179,265],[178,1050696]]}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042849809,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042850543,"Failed":false,"Killed":false,"Accumulables":[{"ID":135,"Name":"number of output rows","Update":"265","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":176,"Name":"duration","Update":"202","Value":"202","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":177,"Name":"number of output rows","Update":"265","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":185,"Name":"internal.metrics.executorDeserializeTime","Update":283,"Value":283,"Internal":true,"Count Failed Values":true},{"ID":186,"Name":"internal.metrics.executorDeserializeCpuTime","Update":231852451,"Value":231852451,"Internal":true,"Count Failed Values":true},{"ID":187,"Name":"internal.metrics.executorRunTime","Update":421,"Value":421,"Internal":true,"Count Failed Values":true},{"ID":188,"Name":"internal.metrics.executorCpuTime","Update":383892799,"Value":383892799,"Internal":true,"Count Failed Values":true},{"ID":189,"Name":"internal.metrics.resultSize","Update":9423,"Value":9423,"Internal":true,"Count Failed Values":true},{"ID":190,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":191,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":216,"Name":"internal.metrics.input.bytesRead","Update":12331,"Value":12331,"Internal":true,"Count Failed Values":true},{"ID":217,"Name":"internal.metrics.input.recordsRead","Update":265,"Value":265,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":283,"Executor Deserialize CPU Time":231852451,"Executor Run Time":421,"Executor CPU Time":383892799,"Peak Execution Memory":0,"Result Size":9423,"JVM GC Time":12,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":12331,"Records Read":265},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"18\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"19\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"26\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"FileScanRDD","Scope":"{\"id\":\"26\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042849798,"Completion Time":1720042850544,"Accumulables":[{"ID":135,"Name":"number of output rows","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":176,"Name":"duration","Value":"202","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":177,"Name":"number of output rows","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":185,"Name":"internal.metrics.executorDeserializeTime","Value":283,"Internal":true,"Count Failed Values":true},{"ID":186,"Name":"internal.metrics.executorDeserializeCpuTime","Value":231852451,"Internal":true,"Count Failed Values":true},{"ID":187,"Name":"internal.metrics.executorRunTime","Value":421,"Internal":true,"Count Failed Values":true},{"ID":188,"Name":"internal.metrics.executorCpuTime","Value":383892799,"Internal":true,"Count Failed Values":true},{"ID":189,"Name":"internal.metrics.resultSize","Value":9423,"Internal":true,"Count Failed Values":true},{"ID":190,"Name":"internal.metrics.jvmGCTime","Value":12,"Internal":true,"Count Failed Values":true},{"ID":191,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":216,"Name":"internal.metrics.input.bytesRead","Value":12331,"Internal":true,"Count Failed Values":true},{"ID":217,"Name":"internal.metrics.input.recordsRead","Value":265,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":2,"Completion Time":1720042850545,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[175,3],[174,10],[173,793],[172,265],[171,1050696]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":3,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (27)\n+- == Final Plan ==\n   CollectLimit (16)\n   +- * Project (15)\n      +- * BroadcastHashJoin Inner BuildRight (14)\n         :- * Project (9)\n         :  +- * BroadcastHashJoin Inner BuildRight (8)\n         :     :- * Filter (3)\n         :     :  +- * ColumnarToRow (2)\n         :     :     +- Scan parquet  (1)\n         :     +- BroadcastQueryStage (7), Statistics(sizeInBytes=1026.1 KiB, rowCount=265)\n         :        +- BroadcastExchange (6)\n         :           +- * Filter (5)\n         :              +- Scan csv  (4)\n         +- BroadcastQueryStage (13), Statistics(sizeInBytes=1026.1 KiB, rowCount=265)\n            +- BroadcastExchange (12)\n               +- * Filter (11)\n                  +- Scan csv  (10)\n+- == Initial Plan ==\n   CollectLimit (26)\n   +- Project (25)\n      +- BroadcastHashJoin Inner BuildRight (24)\n         :- Project (21)\n         :  +- BroadcastHashJoin Inner BuildRight (20)\n         :     :- Filter (17)\n         :     :  +- Scan parquet  (1)\n         :     +- BroadcastExchange (19)\n         :        +- Filter (18)\n         :           +- Scan csv  (4)\n         +- BroadcastExchange (23)\n            +- Filter (22)\n               +- Scan csv  (10)\n\n\n(1) Scan parquet \nOutput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nBatched: true\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01.parquet, ... 11 entries]\nPushedFilters: [IsNotNull(PULocationID), IsNotNull(DOLocationID)]\nReadSchema: struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,dropoff_datetime:timestamp_ntz,PULocationID:bigint,DOLocationID:bigint,trip_miles:double,trip_time:bigint,base_passenger_fare:double,tolls:double,bcf:double,sales_tax:double,congestion_surcharge:double,tips:double,driver_pay:double,shared_request_flag:string,shared_match_flag:string>\n\n(2) ColumnarToRow [codegen id : 3]\nInput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\n\n(3) Filter [codegen id : 3]\nInput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nCondition : (isnotnull(PULocationID#7L) AND isnotnull(DOLocationID#8L))\n\n(4) Scan csv \nOutput [3]: [LocationID#65, Borough#66, Zone#67]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/zones.csv]\nPushedFilters: [IsNotNull(LocationID)]\nReadSchema: struct<LocationID:string,Borough:string,Zone:string>\n\n(5) Filter [codegen id : 1]\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nCondition : isnotnull(LocationID#65)\n\n(6) BroadcastExchange\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nArguments: HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=88]\n\n(7) BroadcastQueryStage\nOutput [3]: [LocationID#65, Borough#66, Zone#67]\nArguments: 0\n\n(8) BroadcastHashJoin [codegen id : 3]\nLeft keys [1]: [cast(PULocationID#7L as int)]\nRight keys [1]: [cast(LocationID#65 as int)]\nJoin type: Inner\nJoin condition: None\n\n(9) Project [codegen id : 3]\nOutput [18]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]\nInput [20]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, LocationID#65, Borough#66, Zone#67]\n\n(10) Scan csv \nOutput [3]: [LocationID#77, Borough#78, Zone#79]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/zones.csv]\nPushedFilters: [IsNotNull(LocationID)]\nReadSchema: struct<LocationID:string,Borough:string,Zone:string>\n\n(11) Filter [codegen id : 2]\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nCondition : isnotnull(LocationID#77)\n\n(12) BroadcastExchange\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nArguments: HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=104]\n\n(13) BroadcastQueryStage\nOutput [3]: [LocationID#77, Borough#78, Zone#79]\nArguments: 1\n\n(14) BroadcastHashJoin [codegen id : 3]\nLeft keys [1]: [DOLocationID#8L]\nRight keys [1]: [cast(LocationID#77 as bigint)]\nJoin type: Inner\nJoin condition: None\n\n(15) Project [codegen id : 3]\nOutput [19]: [toprettystring(hvfhs_license_num#0, Some(Etc/UTC)) AS toprettystring(hvfhs_license_num)#119, toprettystring(Borough#66, Some(Etc/UTC)) AS toprettystring(PU_Borough)#120, toprettystring(Zone#67, Some(Etc/UTC)) AS toprettystring(PU_Zone)#121, toprettystring(Borough#78, Some(Etc/UTC)) AS toprettystring(DO_Borough)#122, toprettystring(Zone#79, Some(Etc/UTC)) AS toprettystring(DO_Zone)#123, toprettystring(request_datetime#3, Some(Etc/UTC)) AS toprettystring(request_datetime)#124, toprettystring(pickup_datetime#5, Some(Etc/UTC)) AS toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime#6, Some(Etc/UTC)) AS toprettystring(dropoff_datetime)#126, toprettystring(trip_miles#9, Some(Etc/UTC)) AS toprettystring(trip_miles)#127, toprettystring(trip_time#10L, Some(Etc/UTC)) AS toprettystring(trip_time)#128, toprettystring(base_passenger_fare#11, Some(Etc/UTC)) AS toprettystring(base_passenger_fare)#129, toprettystring(tolls#12, Some(Etc/UTC)) AS toprettystring(tolls)#130, toprettystring(bcf#13, Some(Etc/UTC)) AS toprettystring(bcf)#131, toprettystring(sales_tax#14, Some(Etc/UTC)) AS toprettystring(sales_tax)#132, toprettystring(congestion_surcharge#15, Some(Etc/UTC)) AS toprettystring(congestion_surcharge)#133, toprettystring(tips#17, Some(Etc/UTC)) AS toprettystring(tips)#134, toprettystring(driver_pay#18, Some(Etc/UTC)) AS toprettystring(driver_pay)#135, toprettystring(shared_request_flag#19, Some(Etc/UTC)) AS toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag#20, Some(Etc/UTC)) AS toprettystring(shared_match_flag)#137]\nInput [21]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67, LocationID#77, Borough#78, Zone#79]\n\n(16) CollectLimit\nInput [19]: [toprettystring(hvfhs_license_num)#119, toprettystring(PU_Borough)#120, toprettystring(PU_Zone)#121, toprettystring(DO_Borough)#122, toprettystring(DO_Zone)#123, toprettystring(request_datetime)#124, toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime)#126, toprettystring(trip_miles)#127, toprettystring(trip_time)#128, toprettystring(base_passenger_fare)#129, toprettystring(tolls)#130, toprettystring(bcf)#131, toprettystring(sales_tax)#132, toprettystring(congestion_surcharge)#133, toprettystring(tips)#134, toprettystring(driver_pay)#135, toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag)#137]\nArguments: 21\n\n(17) Filter\nInput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nCondition : (isnotnull(PULocationID#7L) AND isnotnull(DOLocationID#8L))\n\n(18) Filter\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nCondition : isnotnull(LocationID#65)\n\n(19) BroadcastExchange\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nArguments: HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=73]\n\n(20) BroadcastHashJoin\nLeft keys [1]: [cast(PULocationID#7L as int)]\nRight keys [1]: [cast(LocationID#65 as int)]\nJoin type: Inner\nJoin condition: None\n\n(21) Project\nOutput [18]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]\nInput [20]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, LocationID#65, Borough#66, Zone#67]\n\n(22) Filter\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nCondition : isnotnull(LocationID#77)\n\n(23) BroadcastExchange\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nArguments: HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=77]\n\n(24) BroadcastHashJoin\nLeft keys [1]: [DOLocationID#8L]\nRight keys [1]: [cast(LocationID#77 as bigint)]\nJoin type: Inner\nJoin condition: None\n\n(25) Project\nOutput [19]: [toprettystring(hvfhs_license_num#0, Some(Etc/UTC)) AS toprettystring(hvfhs_license_num)#119, toprettystring(Borough#66, Some(Etc/UTC)) AS toprettystring(PU_Borough)#120, toprettystring(Zone#67, Some(Etc/UTC)) AS toprettystring(PU_Zone)#121, toprettystring(Borough#78, Some(Etc/UTC)) AS toprettystring(DO_Borough)#122, toprettystring(Zone#79, Some(Etc/UTC)) AS toprettystring(DO_Zone)#123, toprettystring(request_datetime#3, Some(Etc/UTC)) AS toprettystring(request_datetime)#124, toprettystring(pickup_datetime#5, Some(Etc/UTC)) AS toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime#6, Some(Etc/UTC)) AS toprettystring(dropoff_datetime)#126, toprettystring(trip_miles#9, Some(Etc/UTC)) AS toprettystring(trip_miles)#127, toprettystring(trip_time#10L, Some(Etc/UTC)) AS toprettystring(trip_time)#128, toprettystring(base_passenger_fare#11, Some(Etc/UTC)) AS toprettystring(base_passenger_fare)#129, toprettystring(tolls#12, Some(Etc/UTC)) AS toprettystring(tolls)#130, toprettystring(bcf#13, Some(Etc/UTC)) AS toprettystring(bcf)#131, toprettystring(sales_tax#14, Some(Etc/UTC)) AS toprettystring(sales_tax)#132, toprettystring(congestion_surcharge#15, Some(Etc/UTC)) AS toprettystring(congestion_surcharge)#133, toprettystring(tips#17, Some(Etc/UTC)) AS toprettystring(tips)#134, toprettystring(driver_pay#18, Some(Etc/UTC)) AS toprettystring(driver_pay)#135, toprettystring(shared_request_flag#19, Some(Etc/UTC)) AS toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag#20, Some(Etc/UTC)) AS toprettystring(shared_match_flag)#137]\nInput [21]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67, LocationID#77, Borough#78, Zone#79]\n\n(26) CollectLimit\nInput [19]: [toprettystring(hvfhs_license_num)#119, toprettystring(PU_Borough)#120, toprettystring(PU_Zone)#121, toprettystring(DO_Borough)#122, toprettystring(DO_Zone)#123, toprettystring(request_datetime)#124, toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime)#126, toprettystring(trip_miles)#127, toprettystring(trip_time)#128, toprettystring(base_passenger_fare)#129, toprettystring(tolls)#130, toprettystring(bcf)#131, toprettystring(sales_tax)#132, toprettystring(congestion_surcharge)#133, toprettystring(tips)#134, toprettystring(driver_pay)#135, toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag)#137]\nArguments: 21\n\n(27) AdaptiveSparkPlan\nOutput [19]: [toprettystring(hvfhs_license_num)#119, toprettystring(PU_Borough)#120, toprettystring(PU_Zone)#121, toprettystring(DO_Borough)#122, toprettystring(DO_Zone)#123, toprettystring(request_datetime)#124, toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime)#126, toprettystring(trip_miles)#127, toprettystring(trip_time)#128, toprettystring(base_passenger_fare)#129, toprettystring(tolls)#130, toprettystring(bcf)#131, toprettystring(sales_tax)#132, toprettystring(congestion_surcharge)#133, toprettystring(tips)#134, toprettystring(driver_pay)#135, toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag)#137]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 21","children":[{"nodeName":"WholeStageCodegen (3)","simpleString":"WholeStageCodegen (3)","children":[{"nodeName":"Project","simpleString":"Project [toprettystring(hvfhs_license_num#0, Some(Etc/UTC)) AS toprettystring(hvfhs_license_num)#119, toprettystring(Borough#66, Some(Etc/UTC)) AS toprettystring(PU_Borough)#120, toprettystring(Zone#67, Some(Etc/UTC)) AS toprettystring(PU_Zone)#121, toprettystring(Borough#78, Some(Etc/UTC)) AS toprettystring(DO_Borough)#122, toprettystring(Zone#79, Some(Etc/UTC)) AS toprettystring(DO_Zone)#123, toprettystring(request_datetime#3, Some(Etc/UTC)) AS toprettystring(request_datetime)#124, toprettystring(pickup_datetime#5, Some(Etc/UTC)) AS toprettystring(pickup_datetime)#125, toprettystring(dropoff_datetime#6, Some(Etc/UTC)) AS toprettystring(dropoff_datetime)#126, toprettystring(trip_miles#9, Some(Etc/UTC)) AS toprettystring(trip_miles)#127, toprettystring(trip_time#10L, Some(Etc/UTC)) AS toprettystring(trip_time)#128, toprettystring(base_passenger_fare#11, Some(Etc/UTC)) AS toprettystring(base_passenger_fare)#129, toprettystring(tolls#12, Some(Etc/UTC)) AS toprettystring(tolls)#130, toprettystring(bcf#13, Some(Etc/UTC)) AS toprettystring(bcf)#131, toprettystring(sales_tax#14, Some(Etc/UTC)) AS toprettystring(sales_tax)#132, toprettystring(congestion_surcharge#15, Some(Etc/UTC)) AS toprettystring(congestion_surcharge)#133, toprettystring(tips#17, Some(Etc/UTC)) AS toprettystring(tips)#134, toprettystring(driver_pay#18, Some(Etc/UTC)) AS toprettystring(driver_pay)#135, toprettystring(shared_request_flag#19, Some(Etc/UTC)) AS toprettystring(shared_request_flag)#136, toprettystring(shared_match_flag#20, Some(Etc/UTC)) AS toprettystring(shared_match_flag)#137]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [DOLocationID#8L], [cast(LocationID#77 as bigint)], Inner, BuildRight, false","children":[{"nodeName":"Project","simpleString":"Project [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [cast(PULocationID#7L as int)], [cast(LocationID#65 as int)], Inner, BuildRight, false","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(PULocationID#7L) AND isnotnull(DOLocationID#8L))","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [hvfhs_license_num#0,request_datetime#3,pickup_datetime#5,dropoff_datetime#6,PULocationID#7L,DOLocationID#8L,trip_miles#9,trip_time#10L,base_passenger_fare#11,tolls#12,bcf#13,sales_tax#14,congestion_surcharge#15,tips#17,driver_pay#18,shared_request_flag#19,shared_match_flag#20] Batched: true, DataFilters: [isnotnull(PULocationID#7L), isnotnull(DOLocationID#8L)], Format: Parquet, Location: InMemoryFileIndex(12 paths)[file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01..., PartitionFilters: [], PushedFilters: [IsNotNull(PULocationID), IsNotNull(DOLocationID)], ReadSchema: struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,drop...","children":[],"metadata":{"Location":"InMemoryFileIndex(12 paths)[file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01.parquet, file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-02.parquet, ...]","ReadSchema":"struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,dropoff_datetime:timestamp_ntz,PULocationID:bigint,DOLocationID:bigint,trip_miles:double,trip_time:bigint,base_passenger_fare:double,tolls:double,bcf:double,sales_tax:double,congestion_surcharge:double,tips:double,driver_pay:double,shared_request_flag:string,shared_match_flag:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(PULocationID), IsNotNull(DOLocationID)]","DataFilters":"[isnotnull(PULocationID#7L), isnotnull(DOLocationID#8L)]"},"metrics":[{"name":"number of files read","accumulatorId":126,"metricType":"sum"},{"name":"scan time","accumulatorId":125,"metricType":"timing"},{"name":"metadata time","accumulatorId":127,"metricType":"timing"},{"name":"size of files read","accumulatorId":128,"metricType":"size"},{"name":"number of output rows","accumulatorId":124,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":279,"metricType":"sum"},{"name":"number of input batches","accumulatorId":280,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":278,"metricType":"sum"}]},{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 0","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=88]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(LocationID#65)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [LocationID#65,Borough#66,Zone#67] Batched: false, DataFilters: [isnotnull(LocationID#65)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LocationID)], ReadSchema: struct<LocationID:string,Borough:string,Zone:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv]","ReadSchema":"struct<LocationID:string,Borough:string,Zone:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(LocationID)]","DataFilters":"[isnotnull(LocationID#65)]"},"metrics":[{"name":"number of output rows","accumulatorId":135,"metricType":"sum"},{"name":"number of files read","accumulatorId":136,"metricType":"sum"},{"name":"metadata time","accumulatorId":137,"metricType":"timing"},{"name":"size of files read","accumulatorId":138,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":177,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":176,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":175,"metricType":"timing"},{"name":"time to build","accumulatorId":174,"metricType":"timing"},{"name":"time to collect","accumulatorId":173,"metricType":"timing"},{"name":"number of output rows","accumulatorId":172,"metricType":"sum"},{"name":"data size","accumulatorId":171,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":277,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 1","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=104]","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(LocationID#77)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [LocationID#77,Borough#78,Zone#79] Batched: false, DataFilters: [isnotnull(LocationID#77)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LocationID)], ReadSchema: struct<LocationID:string,Borough:string,Zone:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv]","ReadSchema":"struct<LocationID:string,Borough:string,Zone:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(LocationID)]","DataFilters":"[isnotnull(LocationID#77)]"},"metrics":[{"name":"number of output rows","accumulatorId":145,"metricType":"sum"},{"name":"number of files read","accumulatorId":146,"metricType":"sum"},{"name":"metadata time","accumulatorId":147,"metricType":"timing"},{"name":"size of files read","accumulatorId":148,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":184,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":183,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":182,"metricType":"timing"},{"name":"time to build","accumulatorId":181,"metricType":"timing"},{"name":"time to collect","accumulatorId":180,"metricType":"timing"},{"name":"number of output rows","accumulatorId":179,"metricType":"sum"},{"name":"data size","accumulatorId":178,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":276,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":275,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":273,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":267,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":274,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":268,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":265,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":262,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":271,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":264,"metricType":"sum"},{"name":"records read","accumulatorId":261,"metricType":"sum"},{"name":"local bytes read","accumulatorId":259,"metricType":"size"},{"name":"fetch wait time","accumulatorId":260,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":257,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":263,"metricType":"sum"},{"name":"local blocks read","accumulatorId":256,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":266,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":255,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":269,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":270,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":258,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":272,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[126,12],[127,0],[128,5436647219]]}
{"Event":"SparkListenerJobStart","Job ID":4,"Submission Time":1720042850687,"Stage Infos":[{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"FileScanRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"36\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[4],"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"3","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"3","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"FileScanRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"36\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042850688,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"3","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"3","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":4,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042850696,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":4,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042850696,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042851033,"Failed":false,"Killed":false,"Accumulables":[{"ID":125,"Name":"scan time","Update":"181","Value":"181","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"duration","Update":"203","Value":"203","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":281,"Name":"internal.metrics.executorDeserializeTime","Update":50,"Value":50,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.executorDeserializeCpuTime","Update":21784583,"Value":21784583,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.executorRunTime","Update":276,"Value":276,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.executorCpuTime","Update":231226784,"Value":231226784,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.resultSize","Update":1957,"Value":1957,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.jvmGCTime","Update":13,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":45536,"Internal":true,"Count Failed Values":true},{"ID":312,"Name":"internal.metrics.input.bytesRead","Update":12999,"Value":12999,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":50,"Executor Deserialize CPU Time":21784583,"Executor Run Time":276,"Executor CPU Time":231226784,"Peak Execution Memory":45536,"Result Size":1957,"JVM GC Time":13,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":12999,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"FileScanRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"36\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042850688,"Completion Time":1720042851038,"Accumulables":[{"ID":125,"Name":"scan time","Value":"181","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"duration","Value":"203","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":281,"Name":"internal.metrics.executorDeserializeTime","Value":50,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.executorDeserializeCpuTime","Value":21784583,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.executorRunTime","Value":276,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.executorCpuTime","Value":231226784,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.resultSize","Value":1957,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.jvmGCTime","Value":13,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.resultSerializationTime","Value":2,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.peakExecutionMemory","Value":45536,"Internal":true,"Count Failed Values":true},{"ID":312,"Name":"internal.metrics.input.bytesRead","Value":12999,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":4,"Completion Time":1720042851038,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"SparkListenerJobStart","Job ID":5,"Submission Time":1720042851045,"Stage Infos":[{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":4,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"FileScanRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"36\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[5],"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"3","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"3","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":4,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"FileScanRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"36\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042851046,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"3","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"3","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":5,"Stage Attempt ID":0,"Task Info":{"Task ID":5,"Index":0,"Attempt":0,"Partition ID":1,"Launch Time":1720042851054,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":5,"Stage Attempt ID":0,"Task Info":{"Task ID":6,"Index":1,"Attempt":0,"Partition ID":2,"Launch Time":1720042851055,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":5,"Stage Attempt ID":0,"Task Info":{"Task ID":7,"Index":2,"Attempt":0,"Partition ID":3,"Launch Time":1720042851056,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":5,"Stage Attempt ID":0,"Task Info":{"Task ID":8,"Index":3,"Attempt":0,"Partition ID":4,"Launch Time":1720042851056,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":5,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":6,"Index":1,"Attempt":0,"Partition ID":2,"Launch Time":1720042851055,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042851185,"Failed":false,"Killed":false,"Accumulables":[{"ID":125,"Name":"scan time","Update":"50","Value":"231","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"duration","Update":"50","Value":"253","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":316,"Name":"internal.metrics.executorDeserializeTime","Update":27,"Value":27,"Internal":true,"Count Failed Values":true},{"ID":317,"Name":"internal.metrics.executorDeserializeCpuTime","Update":10548079,"Value":10548079,"Internal":true,"Count Failed Values":true},{"ID":318,"Name":"internal.metrics.executorRunTime","Update":68,"Value":68,"Internal":true,"Count Failed Values":true},{"ID":319,"Name":"internal.metrics.executorCpuTime","Update":34643252,"Value":34643252,"Internal":true,"Count Failed Values":true},{"ID":320,"Name":"internal.metrics.resultSize","Update":1957,"Value":1957,"Internal":true,"Count Failed Values":true},{"ID":321,"Name":"internal.metrics.jvmGCTime","Update":13,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":322,"Name":"internal.metrics.resultSerializationTime","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":325,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":45536,"Internal":true,"Count Failed Values":true},{"ID":347,"Name":"internal.metrics.input.bytesRead","Update":13001,"Value":13001,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":27,"Executor Deserialize CPU Time":10548079,"Executor Run Time":68,"Executor CPU Time":34643252,"Peak Execution Memory":45536,"Result Size":1957,"JVM GC Time":13,"Result Serialization Time":3,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":13001,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":5,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":8,"Index":3,"Attempt":0,"Partition ID":4,"Launch Time":1720042851056,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042851369,"Failed":false,"Killed":false,"Accumulables":[{"ID":125,"Name":"scan time","Update":"95","Value":"326","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"duration","Update":"143","Value":"396","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":316,"Name":"internal.metrics.executorDeserializeTime","Update":46,"Value":73,"Internal":true,"Count Failed Values":true},{"ID":317,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16582207,"Value":27130286,"Internal":true,"Count Failed Values":true},{"ID":318,"Name":"internal.metrics.executorRunTime","Update":251,"Value":319,"Internal":true,"Count Failed Values":true},{"ID":319,"Name":"internal.metrics.executorCpuTime","Update":148694408,"Value":183337660,"Internal":true,"Count Failed Values":true},{"ID":320,"Name":"internal.metrics.resultSize","Update":1914,"Value":3871,"Internal":true,"Count Failed Values":true},{"ID":321,"Name":"internal.metrics.jvmGCTime","Update":5,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":325,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":91072,"Internal":true,"Count Failed Values":true},{"ID":347,"Name":"internal.metrics.input.bytesRead","Update":13001,"Value":26002,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":46,"Executor Deserialize CPU Time":16582207,"Executor Run Time":251,"Executor CPU Time":148694408,"Peak Execution Memory":45536,"Result Size":1914,"JVM GC Time":5,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":13001,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":5,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":5,"Index":0,"Attempt":0,"Partition ID":1,"Launch Time":1720042851054,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042852305,"Failed":false,"Killed":false,"Accumulables":[{"ID":124,"Name":"number of output rows","Update":"4096","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":125,"Name":"scan time","Update":"1017","Value":"1343","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"number of output rows","Update":"21","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"number of output rows","Update":"21","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":278,"Name":"number of output rows","Update":"21","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":279,"Name":"number of output rows","Update":"4096","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":280,"Name":"number of input batches","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":316,"Name":"internal.metrics.executorDeserializeTime","Update":48,"Value":121,"Internal":true,"Count Failed Values":true},{"ID":317,"Name":"internal.metrics.executorDeserializeCpuTime","Update":25576290,"Value":52706576,"Internal":true,"Count Failed Values":true},{"ID":318,"Name":"internal.metrics.executorRunTime","Update":1192,"Value":1511,"Internal":true,"Count Failed Values":true},{"ID":319,"Name":"internal.metrics.executorCpuTime","Update":590551189,"Value":773888849,"Internal":true,"Count Failed Values":true},{"ID":320,"Name":"internal.metrics.resultSize","Update":5279,"Value":9150,"Internal":true,"Count Failed Values":true},{"ID":321,"Name":"internal.metrics.jvmGCTime","Update":83,"Value":101,"Internal":true,"Count Failed Values":true},{"ID":325,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":136608,"Internal":true,"Count Failed Values":true},{"ID":347,"Name":"internal.metrics.input.bytesRead","Update":329398373,"Value":329424375,"Internal":true,"Count Failed Values":true},{"ID":348,"Name":"internal.metrics.input.recordsRead","Update":4096,"Value":4096,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":48,"Executor Deserialize CPU Time":25576290,"Executor Run Time":1192,"Executor CPU Time":590551189,"Peak Execution Memory":45536,"Result Size":5279,"JVM GC Time":83,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":329398373,"Records Read":4096},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":5,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":7,"Index":2,"Attempt":0,"Partition ID":3,"Launch Time":1720042851056,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042852602,"Failed":false,"Killed":false,"Accumulables":[{"ID":124,"Name":"number of output rows","Update":"4096","Value":"8192","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":125,"Name":"scan time","Update":"1247","Value":"2590","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"number of output rows","Update":"21","Value":"42","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"number of output rows","Update":"21","Value":"42","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":278,"Name":"number of output rows","Update":"21","Value":"42","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":279,"Name":"number of output rows","Update":"4096","Value":"8192","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":280,"Name":"number of input batches","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":316,"Name":"internal.metrics.executorDeserializeTime","Update":53,"Value":174,"Internal":true,"Count Failed Values":true},{"ID":317,"Name":"internal.metrics.executorDeserializeCpuTime","Update":27130087,"Value":79836663,"Internal":true,"Count Failed Values":true},{"ID":318,"Name":"internal.metrics.executorRunTime","Update":1478,"Value":2989,"Internal":true,"Count Failed Values":true},{"ID":319,"Name":"internal.metrics.executorCpuTime","Update":896903340,"Value":1670792189,"Internal":true,"Count Failed Values":true},{"ID":320,"Name":"internal.metrics.resultSize","Update":5619,"Value":14769,"Internal":true,"Count Failed Values":true},{"ID":321,"Name":"internal.metrics.jvmGCTime","Update":91,"Value":192,"Internal":true,"Count Failed Values":true},{"ID":325,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":182144,"Internal":true,"Count Failed Values":true},{"ID":347,"Name":"internal.metrics.input.bytesRead","Update":359311216,"Value":688735591,"Internal":true,"Count Failed Values":true},{"ID":348,"Name":"internal.metrics.input.recordsRead","Update":4096,"Value":8192,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":53,"Executor Deserialize CPU Time":27130087,"Executor Run Time":1478,"Executor CPU Time":896903340,"Peak Execution Memory":45536,"Result Size":5619,"JVM GC Time":91,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":359311216,"Records Read":4096},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":4,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"FileScanRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"36\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042851046,"Completion Time":1720042852610,"Accumulables":[{"ID":124,"Name":"number of output rows","Value":"8192","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":125,"Name":"scan time","Value":"2590","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"duration","Value":"396","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"number of output rows","Value":"42","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"number of output rows","Value":"42","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":278,"Name":"number of output rows","Value":"42","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":279,"Name":"number of output rows","Value":"8192","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":280,"Name":"number of input batches","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":316,"Name":"internal.metrics.executorDeserializeTime","Value":174,"Internal":true,"Count Failed Values":true},{"ID":317,"Name":"internal.metrics.executorDeserializeCpuTime","Value":79836663,"Internal":true,"Count Failed Values":true},{"ID":318,"Name":"internal.metrics.executorRunTime","Value":2989,"Internal":true,"Count Failed Values":true},{"ID":319,"Name":"internal.metrics.executorCpuTime","Value":1670792189,"Internal":true,"Count Failed Values":true},{"ID":320,"Name":"internal.metrics.resultSize","Value":14769,"Internal":true,"Count Failed Values":true},{"ID":321,"Name":"internal.metrics.jvmGCTime","Value":192,"Internal":true,"Count Failed Values":true},{"ID":322,"Name":"internal.metrics.resultSerializationTime","Value":3,"Internal":true,"Count Failed Values":true},{"ID":325,"Name":"internal.metrics.peakExecutionMemory","Value":182144,"Internal":true,"Count Failed Values":true},{"ID":347,"Name":"internal.metrics.input.bytesRead","Value":688735591,"Internal":true,"Count Failed Values":true},{"ID":348,"Name":"internal.metrics.input.recordsRead","Value":8192,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":5,"Completion Time":1720042852613,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":3,"time":1720042852648,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":4,"rootExecutionId":4,"description":"save at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nExecute SaveIntoDataSourceCommand (1)\n   +- SaveIntoDataSourceCommand (2)\n         +- Project (16)\n            +- Join (15)\n               :- Join (10)\n               :  :- SubqueryAlias (5)\n               :  :  +- View (4)\n               :  :     +- LogicalRelation (3)\n               :  +- SubqueryAlias (9)\n               :     +- SubqueryAlias (8)\n               :        +- View (7)\n               :           +- LogicalRelation (6)\n               +- SubqueryAlias (14)\n                  +- SubqueryAlias (13)\n                     +- View (12)\n                        +- LogicalRelation (11)\n\n\n(1) Execute SaveIntoDataSourceCommand\nOutput: []\n\n(2) SaveIntoDataSourceCommand\nArguments: org.apache.spark.sql.delta.sources.DeltaDataSource@7bf0508b, [path=./storage/rides/delta/rides], Overwrite\n\n(3) LogicalRelation\nArguments: parquet, [hvfhs_license_num#0, dispatching_base_num#1, originating_base_num#2, request_datetime#3, on_scene_datetime#4, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, airport_fee#16, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, access_a_ride_flag#21, wav_request_flag#22, wav_match_flag#23], false\n\n(4) View\nArguments: `hvfhs`, true\n\n(5) SubqueryAlias\nArguments: hvfhs\n\n(6) LogicalRelation\nArguments: csv, [LocationID#65, Borough#66, Zone#67, service_zone#68], false\n\n(7) View\nArguments: `zones`, true\n\n(8) SubqueryAlias\nArguments: zones\n\n(9) SubqueryAlias\nArguments: zones_pu\n\n(10) Join\nArguments: Inner, (cast(PULocationID#7L as int) = cast(LocationID#65 as int))\n\n(11) LogicalRelation\nArguments: csv, [LocationID#77, Borough#78, Zone#79, service_zone#80], false\n\n(12) View\nArguments: `zones`, true\n\n(13) SubqueryAlias\nArguments: zones\n\n(14) SubqueryAlias\nArguments: zones_do\n\n(15) Join\nArguments: Inner, (DOLocationID#8L = cast(LocationID#77 as bigint))\n\n(16) Project\nArguments: [hvfhs_license_num#0, Borough#66 AS PU_Borough#73, Zone#67 AS PU_Zone#74, Borough#78 AS DO_Borough#75, Zone#79 AS DO_Zone#76, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\n\n","sparkPlanInfo":{"nodeName":"Execute SaveIntoDataSourceCommand","simpleString":"Execute SaveIntoDataSourceCommand","children":[],"metadata":{},"metrics":[]},"time":1720042852776,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":5,"rootExecutionId":4,"description":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog$.recordOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog$.recordDeltaOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.DeltaLog$.createDeltaLog$1(DeltaLog.scala:847)\norg.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$5(DeltaLog.scala:866)\ncom.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4792)\ncom.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)\ncom.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)\ncom.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)\ncom.google.common.cache.LocalCache$Segment.get(LocalCache.java:2257)\ncom.google.common.cache.LocalCache.get(LocalCache.java:4000)\ncom.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4789)\norg.apache.spark.sql.delta.DeltaLog$.getDeltaLogFromCache$1(DeltaLog.scala:865)\norg.apache.spark.sql.delta.DeltaLog$.apply(DeltaLog.scala:875)\norg.apache.spark.sql.delta.DeltaLog$.forTable(DeltaLog.scala:751)","physicalPlanDescription":"== Physical Plan ==\n* Project (3)\n+- * Filter (2)\n   +- Scan json  (1)\n\n\n(1) Scan json \nOutput [4]: [metaData#231, protocol#232, commitInfo#233, version#234L]\nBatched: false\nLocation: DeltaLogFileIndex [file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log/00000000000000000000.json]\nReadSchema: struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(2) Filter [codegen id : 1]\nInput [4]: [metaData#231, protocol#232, commitInfo#233, version#234L]\nCondition : ((isnotnull(protocol#232.minReaderVersion) OR isnotnull(metaData#231.id)) OR (isnotnull(commitInfo#233.inCommitTimestamp) AND (version#234L = 0)))\n\n(3) Project [codegen id : 1]\nOutput [4]: [protocol#232, metaData#231, commitInfo#233.inCommitTimestamp AS inCommitTimestamp#239L, version#234L]\nInput [4]: [metaData#231, protocol#232, commitInfo#233, version#234L]\n\n","sparkPlanInfo":{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [protocol#232, metaData#231, commitInfo#233.inCommitTimestamp AS inCommitTimestamp#239L, version#234L]","children":[{"nodeName":"Filter","simpleString":"Filter ((isnotnull(protocol#232.minReaderVersion) OR isnotnull(metaData#231.id)) OR (isnotnull(commitInfo#233.inCommitTimestamp) AND (version#234L = 0)))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan json ","simpleString":"FileScan json [metaData#231,protocol#232,commitInfo#233,version#234L] Batched: false, DataFilters: [((isnotnull(protocol#232.minReaderVersion) OR isnotnull(metaData#231.id)) OR isnotnull(commitInf..., Format: JSON, Location: DeltaLogFileIndex(1 paths)[file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log/000000000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,opt...","children":[],"metadata":{"Location":"DeltaLogFileIndex(1 paths)[file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log/00000000000000000000.json]","ReadSchema":"struct<metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[((isnotnull(protocol#232.minReaderVersion) OR isnotnull(metaData#231.id)) OR isnotnull(commitInfo#233.inCommitTimestamp))]"},"metrics":[{"name":"number of files read","accumulatorId":354,"metricType":"sum"},{"name":"dynamic partition pruning time","accumulatorId":358,"metricType":"timing"},{"name":"metadata time","accumulatorId":355,"metricType":"timing"},{"name":"size of files read","accumulatorId":356,"metricType":"size"},{"name":"number of output rows","accumulatorId":353,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":357,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":352,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":351,"metricType":"timing"}]},"time":1720042853167,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[354,1],[358,0],[355,0],[356,344389],[357,1]]}
{"Event":"SparkListenerJobStart","Job ID":6,"Submission Time":1720042853273,"Stage Infos":[{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Number of Tasks":1,"RDD Info":[{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"64\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"FileScanRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog$.recordOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog$.recordDeltaOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.DeltaLog$.createDeltaLog$1(DeltaLog.scala:847)\norg.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$5(DeltaLog.scala:866)\ncom.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4792)\ncom.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)\ncom.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)\ncom.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)\ncom.google.common.cache.LocalCache$Segment.get(LocalCache.java:2257)\ncom.google.common.cache.LocalCache.get(LocalCache.java:4000)\ncom.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4789)\norg.apache.spark.sql.delta.DeltaLog$.getDeltaLogFromCache$1(DeltaLog.scala:865)\norg.apache.spark.sql.delta.DeltaLog$.apply(DeltaLog.scala:875)\norg.apache.spark.sql.delta.DeltaLog$.forTable(DeltaLog.scala:751)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[6],"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"65\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"5","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Number of Tasks":1,"RDD Info":[{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"64\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"FileScanRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog$.recordOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog$.recordDeltaOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.DeltaLog$.createDeltaLog$1(DeltaLog.scala:847)\norg.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$5(DeltaLog.scala:866)\ncom.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4792)\ncom.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)\ncom.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)\ncom.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)\ncom.google.common.cache.LocalCache$Segment.get(LocalCache.java:2257)\ncom.google.common.cache.LocalCache.get(LocalCache.java:4000)\ncom.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4789)\norg.apache.spark.sql.delta.DeltaLog$.getDeltaLogFromCache$1(DeltaLog.scala:865)\norg.apache.spark.sql.delta.DeltaLog$.apply(DeltaLog.scala:875)\norg.apache.spark.sql.delta.DeltaLog$.forTable(DeltaLog.scala:751)","Submission Time":1720042853275,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"65\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"5","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":9,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042853280,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":9,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042853280,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042853476,"Failed":false,"Killed":false,"Accumulables":[{"ID":351,"Name":"duration","Update":"102","Value":"102","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":352,"Name":"number of output rows","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":353,"Name":"number of output rows","Update":"203","Value":"203","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":359,"Name":"internal.metrics.executorDeserializeTime","Update":18,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.executorDeserializeCpuTime","Update":13332333,"Value":13332333,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.executorRunTime","Update":167,"Value":167,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.executorCpuTime","Update":135546331,"Value":135546331,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.resultSize","Update":2214,"Value":2214,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.jvmGCTime","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":390,"Name":"internal.metrics.input.bytesRead","Update":347093,"Value":347093,"Internal":true,"Count Failed Values":true},{"ID":391,"Name":"internal.metrics.input.recordsRead","Update":203,"Value":203,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":18,"Executor Deserialize CPU Time":13332333,"Executor Run Time":167,"Executor CPU Time":135546331,"Peak Execution Memory":0,"Result Size":2214,"JVM GC Time":3,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":347093,"Records Read":203},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Number of Tasks":1,"RDD Info":[{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"64\",\"name\":\"mapPartitionsInternal\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"FileScanRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan json \"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"59\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$recordDeltaOperationInternal$1 at DatabricksLogging.scala:128","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:136)\ncom.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\ncom.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\norg.apache.spark.sql.delta.DeltaLog$.recordOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:135)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:125)\norg.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:115)\norg.apache.spark.sql.delta.DeltaLog$.recordDeltaOperation(DeltaLog.scala:651)\norg.apache.spark.sql.delta.DeltaLog$.createDeltaLog$1(DeltaLog.scala:847)\norg.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$5(DeltaLog.scala:866)\ncom.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4792)\ncom.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)\ncom.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)\ncom.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)\ncom.google.common.cache.LocalCache$Segment.get(LocalCache.java:2257)\ncom.google.common.cache.LocalCache.get(LocalCache.java:4000)\ncom.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4789)\norg.apache.spark.sql.delta.DeltaLog$.getDeltaLogFromCache$1(DeltaLog.scala:865)\norg.apache.spark.sql.delta.DeltaLog$.apply(DeltaLog.scala:875)\norg.apache.spark.sql.delta.DeltaLog$.forTable(DeltaLog.scala:751)","Submission Time":1720042853275,"Completion Time":1720042853478,"Accumulables":[{"ID":351,"Name":"duration","Value":"102","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":352,"Name":"number of output rows","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":353,"Name":"number of output rows","Value":"203","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":359,"Name":"internal.metrics.executorDeserializeTime","Value":18,"Internal":true,"Count Failed Values":true},{"ID":360,"Name":"internal.metrics.executorDeserializeCpuTime","Value":13332333,"Internal":true,"Count Failed Values":true},{"ID":361,"Name":"internal.metrics.executorRunTime","Value":167,"Internal":true,"Count Failed Values":true},{"ID":362,"Name":"internal.metrics.executorCpuTime","Value":135546331,"Internal":true,"Count Failed Values":true},{"ID":363,"Name":"internal.metrics.resultSize","Value":2214,"Internal":true,"Count Failed Values":true},{"ID":364,"Name":"internal.metrics.jvmGCTime","Value":3,"Internal":true,"Count Failed Values":true},{"ID":390,"Name":"internal.metrics.input.bytesRead","Value":347093,"Internal":true,"Count Failed Values":true},{"ID":391,"Name":"internal.metrics.input.recordsRead","Value":203,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":6,"Completion Time":1720042853478,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":5,"time":1720042853511,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":6,"rootExecutionId":4,"description":"Delta: Compute snapshot for version: 0","details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (9)\n+- SerializeFromObject (8)\n   +- MapPartitions (7)\n      +- DeserializeToObject (6)\n         +- Project (5)\n            +- Sort (4)\n               +- Exchange (3)\n                  +- Project (2)\n                     +- Scan json  (1)\n\n\n(1) Scan json \nOutput [11]: [txn#273, add#274, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L]\nBatched: false\nLocation: DeltaLogFileIndex [file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log/00000000000000000000.json]\nReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(2) Project\nOutput [23]: [txn#273, add#274.path AS _extract_path#455, add#274.partitionValues AS _extract_partitionValues#456, add#274.size AS _extract_size#457L, add#274.modificationTime AS _extract_modificationTime#458L, add#274.dataChange AS _extract_dataChange#459, add#274.tags AS _extract_tags#460, add#274.deletionVector AS _extract_deletionVector#461, add#274.baseRowId AS _extract_baseRowId#462L, add#274.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#463L, add#274.clusteringProvider AS _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add#274.stats AS add_stats_to_use#295, CASE WHEN isnotnull(add#274.path) THEN UDF(add#274.path) END AS add_path_canonical#310, CASE WHEN isnotnull(remove#275.path) THEN UDF(remove#275.path) END AS remove_path_canonical#329]\nInput [11]: [txn#273, add#274, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L]\n\n(3) Exchange\nInput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\nArguments: hashpartitioning(coalesce(add_path_canonical#310, remove_path_canonical#329), 50), REPARTITION_BY_NUM, [plan_id=274]\n\n(4) Sort\nInput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\nArguments: [version#283L ASC NULLS FIRST], false, 0\n\n(5) Project\nOutput [10]: [txn#273, CASE WHEN isnotnull(_extract_path#455) THEN struct(path, add_path_canonical#310, partitionValues, _extract_partitionValues#456, size, _extract_size#457L, modificationTime, _extract_modificationTime#458L, dataChange, _extract_dataChange#459, stats, add_stats_to_use#295, tags, _extract_tags#460, deletionVector, _extract_deletionVector#461, baseRowId, _extract_baseRowId#462L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#463L, clusteringProvider, _extract_clusteringProvider#464) END AS add#351, CASE WHEN isnotnull(remove#275.path) THEN if (isnull(remove#275)) null else named_struct(path, remove_path_canonical#329, deletionTimestamp, remove#275.deletionTimestamp, dataChange, remove#275.dataChange, extendedFileMetadata, remove#275.extendedFileMetadata, partitionValues, remove#275.partitionValues, size, remove#275.size, tags, remove#275.tags, deletionVector, remove#275.deletionVector, baseRowId, remove#275.baseRowId, defaultRowCommitVersion, remove#275.defaultRowCommitVersion, stats, remove#275.stats) END AS remove#376, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282]\nInput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\n\n(6) DeserializeToObject\nInput [10]: [txn#273, add#351, remove#376, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282]\nArguments: newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#433: org.apache.spark.sql.delta.actions.SingleAction\n\n(7) MapPartitions\nInput [1]: [obj#433]\nArguments: org.apache.spark.sql.delta.Snapshot$$Lambda$4135/0x000000e0020a5f88@4e595707, obj#434: org.apache.spark.sql.delta.actions.SingleAction\n\n(8) SerializeFromObject\nInput [1]: [obj#434]\nArguments: [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#435, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#436, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#437, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#438, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#439, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#440, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#441, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#442, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#443, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#444]\n\n(9) AdaptiveSparkPlan\nOutput [10]: [txn#435, add#436, remove#437, metaData#438, protocol#439, cdc#440, checkpointMetadata#441, sidecar#442, domainMetadata#443, commitInfo#444]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"SerializeFromObject","simpleString":"SerializeFromObject [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#435, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#436, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#437, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#438, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#439, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#440, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#441, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#442, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#443, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#444]","children":[{"nodeName":"MapPartitions","simpleString":"MapPartitions org.apache.spark.sql.delta.Snapshot$$Lambda$4135/0x000000e0020a5f88@4e595707, obj#434: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"DeserializeToObject","simpleString":"DeserializeToObject newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#433: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"Project","simpleString":"Project [txn#273, CASE WHEN isnotnull(_extract_path#455) THEN struct(path, add_path_canonical#310, partitionValues, _extract_partitionValues#456, size, _extract_size#457L, modificationTime, _extract_modificationTime#458L, dataChange, _extract_dataChange#459, stats, add_stats_to_use#295, tags, _extract_tags#460, deletionVector, _extract_deletionVector#461, baseRowId, _extract_baseRowId#462L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#463L, clusteringProvider, _extract_clusteringProvider#464) END AS add#351, CASE WHEN isnotnull(remove#275.path) THEN if (isnull(remove#275)) null else named_struct(path, remove_path_canonical#329, deletionTimestamp, remove#275.deletionTimestamp, dataChange, remove#275.dataChange, extendedFileMetadata, remove#275.extendedFileMetadata, partitionValues, remove#275.partitionValues, size, remove#275.size, tags, remove#275.tags, deletionVector, remove#275.deletionVector, baseRowId, remove#275.baseRowId, defaultRowCommitVersion, remove#275.defaultRowCommitVersion, stats, remove#275.stats) END AS remove#376, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282]","children":[{"nodeName":"Sort","simpleString":"Sort [version#283L ASC NULLS FIRST], false, 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(coalesce(add_path_canonical#310, remove_path_canonical#329), 50), REPARTITION_BY_NUM, [plan_id=274]","children":[{"nodeName":"Project","simpleString":"Project [txn#273, add#274.path AS _extract_path#455, add#274.partitionValues AS _extract_partitionValues#456, add#274.size AS _extract_size#457L, add#274.modificationTime AS _extract_modificationTime#458L, add#274.dataChange AS _extract_dataChange#459, add#274.tags AS _extract_tags#460, add#274.deletionVector AS _extract_deletionVector#461, add#274.baseRowId AS _extract_baseRowId#462L, add#274.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#463L, add#274.clusteringProvider AS _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add#274.stats AS add_stats_to_use#295, CASE WHEN isnotnull(add#274.path) THEN UDF(add#274.path) END AS add_path_canonical#310, CASE WHEN isnotnull(remove#275.path) THEN UDF(remove#275.path) END AS remove_path_canonical#329]","children":[{"nodeName":"Scan json ","simpleString":"FileScan json [txn#273,add#274,remove#275,metaData#276,protocol#277,cdc#278,checkpointMetadata#279,sidecar#280,domainMetadata#281,commitInfo#282,version#283L] Batched: false, DataFilters: [], Format: JSON, Location: DeltaLogFileIndex(1 paths)[file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log/000000000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitio...","children":[],"metadata":{"Location":"DeltaLogFileIndex(1 paths)[file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log/00000000000000000000.json]","ReadSchema":"struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":420,"metricType":"sum"},{"name":"dynamic partition pruning time","accumulatorId":424,"metricType":"timing"},{"name":"metadata time","accumulatorId":421,"metricType":"timing"},{"name":"size of files read","accumulatorId":422,"metricType":"size"},{"name":"number of output rows","accumulatorId":419,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":423,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":417,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":411,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":418,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":412,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":409,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":406,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":415,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":408,"metricType":"sum"},{"name":"records read","accumulatorId":405,"metricType":"sum"},{"name":"local bytes read","accumulatorId":403,"metricType":"size"},{"name":"fetch wait time","accumulatorId":404,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":401,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":407,"metricType":"sum"},{"name":"local blocks read","accumulatorId":400,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":410,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":399,"metricType":"sum"},{"name":"data size","accumulatorId":397,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":413,"metricType":"size"},{"name":"number of partitions","accumulatorId":398,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":414,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":402,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":416,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":394,"metricType":"timing"},{"name":"peak memory","accumulatorId":395,"metricType":"size"},{"name":"spill size","accumulatorId":396,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]},"time":1720042853927,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":6,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (17)\n+- == Current Plan ==\n   SerializeFromObject (9)\n   +- MapPartitions (8)\n      +- DeserializeToObject (7)\n         +- Project (6)\n            +- Sort (5)\n               +- ShuffleQueryStage (4)\n                  +- Exchange (3)\n                     +- * Project (2)\n                        +- Scan json  (1)\n+- == Initial Plan ==\n   SerializeFromObject (16)\n   +- MapPartitions (15)\n      +- DeserializeToObject (14)\n         +- Project (13)\n            +- Sort (12)\n               +- Exchange (11)\n                  +- Project (10)\n                     +- Scan json  (1)\n\n\n(1) Scan json \nOutput [11]: [txn#273, add#274, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L]\nBatched: false\nLocation: DeltaLogFileIndex [file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log/00000000000000000000.json]\nReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(2) Project [codegen id : 1]\nOutput [23]: [txn#273, add#274.path AS _extract_path#455, add#274.partitionValues AS _extract_partitionValues#456, add#274.size AS _extract_size#457L, add#274.modificationTime AS _extract_modificationTime#458L, add#274.dataChange AS _extract_dataChange#459, add#274.tags AS _extract_tags#460, add#274.deletionVector AS _extract_deletionVector#461, add#274.baseRowId AS _extract_baseRowId#462L, add#274.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#463L, add#274.clusteringProvider AS _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add#274.stats AS add_stats_to_use#295, CASE WHEN isnotnull(add#274.path) THEN UDF(add#274.path) END AS add_path_canonical#310, CASE WHEN isnotnull(remove#275.path) THEN UDF(remove#275.path) END AS remove_path_canonical#329]\nInput [11]: [txn#273, add#274, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L]\n\n(3) Exchange\nInput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\nArguments: hashpartitioning(coalesce(add_path_canonical#310, remove_path_canonical#329), 50), REPARTITION_BY_NUM, [plan_id=289]\n\n(4) ShuffleQueryStage\nOutput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\nArguments: 0\n\n(5) Sort\nInput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\nArguments: [version#283L ASC NULLS FIRST], false, 0\n\n(6) Project\nOutput [10]: [txn#273, CASE WHEN isnotnull(_extract_path#455) THEN struct(path, add_path_canonical#310, partitionValues, _extract_partitionValues#456, size, _extract_size#457L, modificationTime, _extract_modificationTime#458L, dataChange, _extract_dataChange#459, stats, add_stats_to_use#295, tags, _extract_tags#460, deletionVector, _extract_deletionVector#461, baseRowId, _extract_baseRowId#462L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#463L, clusteringProvider, _extract_clusteringProvider#464) END AS add#351, CASE WHEN isnotnull(remove#275.path) THEN if (isnull(remove#275)) null else named_struct(path, remove_path_canonical#329, deletionTimestamp, remove#275.deletionTimestamp, dataChange, remove#275.dataChange, extendedFileMetadata, remove#275.extendedFileMetadata, partitionValues, remove#275.partitionValues, size, remove#275.size, tags, remove#275.tags, deletionVector, remove#275.deletionVector, baseRowId, remove#275.baseRowId, defaultRowCommitVersion, remove#275.defaultRowCommitVersion, stats, remove#275.stats) END AS remove#376, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282]\nInput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\n\n(7) DeserializeToObject\nInput [10]: [txn#273, add#351, remove#376, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282]\nArguments: newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#433: org.apache.spark.sql.delta.actions.SingleAction\n\n(8) MapPartitions\nInput [1]: [obj#433]\nArguments: org.apache.spark.sql.delta.Snapshot$$Lambda$4135/0x000000e0020a5f88@4e595707, obj#434: org.apache.spark.sql.delta.actions.SingleAction\n\n(9) SerializeFromObject\nInput [1]: [obj#434]\nArguments: [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#435, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#436, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#437, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#438, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#439, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#440, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#441, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#442, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#443, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#444]\n\n(10) Project\nOutput [23]: [txn#273, add#274.path AS _extract_path#455, add#274.partitionValues AS _extract_partitionValues#456, add#274.size AS _extract_size#457L, add#274.modificationTime AS _extract_modificationTime#458L, add#274.dataChange AS _extract_dataChange#459, add#274.tags AS _extract_tags#460, add#274.deletionVector AS _extract_deletionVector#461, add#274.baseRowId AS _extract_baseRowId#462L, add#274.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#463L, add#274.clusteringProvider AS _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add#274.stats AS add_stats_to_use#295, CASE WHEN isnotnull(add#274.path) THEN UDF(add#274.path) END AS add_path_canonical#310, CASE WHEN isnotnull(remove#275.path) THEN UDF(remove#275.path) END AS remove_path_canonical#329]\nInput [11]: [txn#273, add#274, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L]\n\n(11) Exchange\nInput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\nArguments: hashpartitioning(coalesce(add_path_canonical#310, remove_path_canonical#329), 50), REPARTITION_BY_NUM, [plan_id=274]\n\n(12) Sort\nInput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\nArguments: [version#283L ASC NULLS FIRST], false, 0\n\n(13) Project\nOutput [10]: [txn#273, CASE WHEN isnotnull(_extract_path#455) THEN struct(path, add_path_canonical#310, partitionValues, _extract_partitionValues#456, size, _extract_size#457L, modificationTime, _extract_modificationTime#458L, dataChange, _extract_dataChange#459, stats, add_stats_to_use#295, tags, _extract_tags#460, deletionVector, _extract_deletionVector#461, baseRowId, _extract_baseRowId#462L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#463L, clusteringProvider, _extract_clusteringProvider#464) END AS add#351, CASE WHEN isnotnull(remove#275.path) THEN if (isnull(remove#275)) null else named_struct(path, remove_path_canonical#329, deletionTimestamp, remove#275.deletionTimestamp, dataChange, remove#275.dataChange, extendedFileMetadata, remove#275.extendedFileMetadata, partitionValues, remove#275.partitionValues, size, remove#275.size, tags, remove#275.tags, deletionVector, remove#275.deletionVector, baseRowId, remove#275.baseRowId, defaultRowCommitVersion, remove#275.defaultRowCommitVersion, stats, remove#275.stats) END AS remove#376, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282]\nInput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\n\n(14) DeserializeToObject\nInput [10]: [txn#273, add#351, remove#376, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282]\nArguments: newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#433: org.apache.spark.sql.delta.actions.SingleAction\n\n(15) MapPartitions\nInput [1]: [obj#433]\nArguments: org.apache.spark.sql.delta.Snapshot$$Lambda$4135/0x000000e0020a5f88@4e595707, obj#434: org.apache.spark.sql.delta.actions.SingleAction\n\n(16) SerializeFromObject\nInput [1]: [obj#434]\nArguments: [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#435, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#436, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#437, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#438, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#439, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#440, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#441, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#442, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#443, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#444]\n\n(17) AdaptiveSparkPlan\nOutput [10]: [txn#435, add#436, remove#437, metaData#438, protocol#439, cdc#440, checkpointMetadata#441, sidecar#442, domainMetadata#443, commitInfo#444]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"SerializeFromObject","simpleString":"SerializeFromObject [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#435, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#436, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#437, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#438, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#439, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#440, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#441, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#442, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#443, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#444]","children":[{"nodeName":"MapPartitions","simpleString":"MapPartitions org.apache.spark.sql.delta.Snapshot$$Lambda$4135/0x000000e0020a5f88@4e595707, obj#434: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"DeserializeToObject","simpleString":"DeserializeToObject newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#433: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"Project","simpleString":"Project [txn#273, CASE WHEN isnotnull(_extract_path#455) THEN struct(path, add_path_canonical#310, partitionValues, _extract_partitionValues#456, size, _extract_size#457L, modificationTime, _extract_modificationTime#458L, dataChange, _extract_dataChange#459, stats, add_stats_to_use#295, tags, _extract_tags#460, deletionVector, _extract_deletionVector#461, baseRowId, _extract_baseRowId#462L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#463L, clusteringProvider, _extract_clusteringProvider#464) END AS add#351, CASE WHEN isnotnull(remove#275.path) THEN if (isnull(remove#275)) null else named_struct(path, remove_path_canonical#329, deletionTimestamp, remove#275.deletionTimestamp, dataChange, remove#275.dataChange, extendedFileMetadata, remove#275.extendedFileMetadata, partitionValues, remove#275.partitionValues, size, remove#275.size, tags, remove#275.tags, deletionVector, remove#275.deletionVector, baseRowId, remove#275.baseRowId, defaultRowCommitVersion, remove#275.defaultRowCommitVersion, stats, remove#275.stats) END AS remove#376, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282]","children":[{"nodeName":"Sort","simpleString":"Sort [version#283L ASC NULLS FIRST], false, 0","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(coalesce(add_path_canonical#310, remove_path_canonical#329), 50), REPARTITION_BY_NUM, [plan_id=289]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [txn#273, add#274.path AS _extract_path#455, add#274.partitionValues AS _extract_partitionValues#456, add#274.size AS _extract_size#457L, add#274.modificationTime AS _extract_modificationTime#458L, add#274.dataChange AS _extract_dataChange#459, add#274.tags AS _extract_tags#460, add#274.deletionVector AS _extract_deletionVector#461, add#274.baseRowId AS _extract_baseRowId#462L, add#274.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#463L, add#274.clusteringProvider AS _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add#274.stats AS add_stats_to_use#295, CASE WHEN isnotnull(add#274.path) THEN UDF(add#274.path) END AS add_path_canonical#310, CASE WHEN isnotnull(remove#275.path) THEN UDF(remove#275.path) END AS remove_path_canonical#329]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan json ","simpleString":"FileScan json [txn#273,add#274,remove#275,metaData#276,protocol#277,cdc#278,checkpointMetadata#279,sidecar#280,domainMetadata#281,commitInfo#282,version#283L] Batched: false, DataFilters: [], Format: JSON, Location: DeltaLogFileIndex(1 paths)[file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log/000000000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitio...","children":[],"metadata":{"Location":"DeltaLogFileIndex(1 paths)[file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log/00000000000000000000.json]","ReadSchema":"struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":420,"metricType":"sum"},{"name":"dynamic partition pruning time","accumulatorId":424,"metricType":"timing"},{"name":"metadata time","accumulatorId":421,"metricType":"timing"},{"name":"size of files read","accumulatorId":422,"metricType":"size"},{"name":"number of output rows","accumulatorId":419,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":423,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":450,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":448,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":442,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":449,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":443,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":440,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":437,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":446,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":439,"metricType":"sum"},{"name":"records read","accumulatorId":436,"metricType":"sum"},{"name":"local bytes read","accumulatorId":434,"metricType":"size"},{"name":"fetch wait time","accumulatorId":435,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":432,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":438,"metricType":"sum"},{"name":"local blocks read","accumulatorId":431,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":441,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":430,"metricType":"sum"},{"name":"data size","accumulatorId":428,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":444,"metricType":"size"},{"name":"number of partitions","accumulatorId":429,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":445,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":433,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":447,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":425,"metricType":"timing"},{"name":"peak memory","accumulatorId":426,"metricType":"size"},{"name":"spill size","accumulatorId":427,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":6,"accumUpdates":[[420,1],[424,0],[421,0],[422,344389],[423,1]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":6,"accumUpdates":[[429,50]]}
{"Event":"SparkListenerJobStart","Job ID":7,"Submission Time":1720042854051,"Stage Infos":[{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"71\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"72\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[7],"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"71\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"6","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.job.description":"Delta: Compute snapshot for version: 0","spark.eventLog.enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"71\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"72\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042854053,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"71\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"6","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.job.description":"Delta: Compute snapshot for version: 0","spark.eventLog.enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":7,"Stage Attempt ID":0,"Task Info":{"Task ID":10,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042854067,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":7,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":10,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042854067,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042855100,"Failed":false,"Killed":false,"Accumulables":[{"ID":419,"Name":"number of output rows","Update":"203","Value":"203","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":428,"Name":"data size","Update":"348096","Value":"348096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":447,"Name":"shuffle bytes written","Update":"88848","Value":"88848","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":448,"Name":"shuffle records written","Update":"203","Value":"203","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":449,"Name":"shuffle write time","Update":"13288217","Value":"13288217","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":450,"Name":"duration","Update":"731","Value":"731","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":451,"Name":"internal.metrics.executorDeserializeTime","Update":123,"Value":123,"Internal":true,"Count Failed Values":true},{"ID":452,"Name":"internal.metrics.executorDeserializeCpuTime","Update":109979198,"Value":109979198,"Internal":true,"Count Failed Values":true},{"ID":453,"Name":"internal.metrics.executorRunTime","Update":890,"Value":890,"Internal":true,"Count Failed Values":true},{"ID":454,"Name":"internal.metrics.executorCpuTime","Update":797422492,"Value":797422492,"Internal":true,"Count Failed Values":true},{"ID":455,"Name":"internal.metrics.resultSize","Update":1915,"Value":1915,"Internal":true,"Count Failed Values":true},{"ID":456,"Name":"internal.metrics.jvmGCTime","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":457,"Name":"internal.metrics.resultSerializationTime","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":479,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":88848,"Value":88848,"Internal":true,"Count Failed Values":true},{"ID":480,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":203,"Value":203,"Internal":true,"Count Failed Values":true},{"ID":481,"Name":"internal.metrics.shuffle.write.writeTime","Update":13288217,"Value":13288217,"Internal":true,"Count Failed Values":true},{"ID":482,"Name":"internal.metrics.input.bytesRead","Update":347093,"Value":347093,"Internal":true,"Count Failed Values":true},{"ID":483,"Name":"internal.metrics.input.recordsRead","Update":203,"Value":203,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":123,"Executor Deserialize CPU Time":109979198,"Executor Run Time":890,"Executor CPU Time":797422492,"Peak Execution Memory":0,"Result Size":1915,"JVM GC Time":5,"Result Serialization Time":5,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":88848,"Shuffle Write Time":13288217,"Shuffle Records Written":203},"Input Metrics":{"Bytes Read":347093,"Records Read":203},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"71\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"72\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042854053,"Completion Time":1720042855103,"Accumulables":[{"ID":419,"Name":"number of output rows","Value":"203","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":428,"Name":"data size","Value":"348096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":447,"Name":"shuffle bytes written","Value":"88848","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":448,"Name":"shuffle records written","Value":"203","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":449,"Name":"shuffle write time","Value":"13288217","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":450,"Name":"duration","Value":"731","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":451,"Name":"internal.metrics.executorDeserializeTime","Value":123,"Internal":true,"Count Failed Values":true},{"ID":452,"Name":"internal.metrics.executorDeserializeCpuTime","Value":109979198,"Internal":true,"Count Failed Values":true},{"ID":453,"Name":"internal.metrics.executorRunTime","Value":890,"Internal":true,"Count Failed Values":true},{"ID":454,"Name":"internal.metrics.executorCpuTime","Value":797422492,"Internal":true,"Count Failed Values":true},{"ID":455,"Name":"internal.metrics.resultSize","Value":1915,"Internal":true,"Count Failed Values":true},{"ID":456,"Name":"internal.metrics.jvmGCTime","Value":5,"Internal":true,"Count Failed Values":true},{"ID":457,"Name":"internal.metrics.resultSerializationTime","Value":5,"Internal":true,"Count Failed Values":true},{"ID":479,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":88848,"Internal":true,"Count Failed Values":true},{"ID":480,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":203,"Internal":true,"Count Failed Values":true},{"ID":481,"Name":"internal.metrics.shuffle.write.writeTime","Value":13288217,"Internal":true,"Count Failed Values":true},{"ID":482,"Name":"internal.metrics.input.bytesRead","Value":347093,"Internal":true,"Count Failed Values":true},{"ID":483,"Name":"internal.metrics.input.recordsRead","Value":203,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":7,"Completion Time":1720042855107,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":6,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (17)\n+- == Final Plan ==\n   * SerializeFromObject (9)\n   +- MapPartitions (8)\n      +- DeserializeToObject (7)\n         +- * Project (6)\n            +- * Sort (5)\n               +- ShuffleQueryStage (4), Statistics(sizeInBytes=339.9 KiB, rowCount=203)\n                  +- Exchange (3)\n                     +- * Project (2)\n                        +- Scan json  (1)\n+- == Initial Plan ==\n   SerializeFromObject (16)\n   +- MapPartitions (15)\n      +- DeserializeToObject (14)\n         +- Project (13)\n            +- Sort (12)\n               +- Exchange (11)\n                  +- Project (10)\n                     +- Scan json  (1)\n\n\n(1) Scan json \nOutput [11]: [txn#273, add#274, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L]\nBatched: false\nLocation: DeltaLogFileIndex [file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log/00000000000000000000.json]\nReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(2) Project [codegen id : 1]\nOutput [23]: [txn#273, add#274.path AS _extract_path#455, add#274.partitionValues AS _extract_partitionValues#456, add#274.size AS _extract_size#457L, add#274.modificationTime AS _extract_modificationTime#458L, add#274.dataChange AS _extract_dataChange#459, add#274.tags AS _extract_tags#460, add#274.deletionVector AS _extract_deletionVector#461, add#274.baseRowId AS _extract_baseRowId#462L, add#274.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#463L, add#274.clusteringProvider AS _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add#274.stats AS add_stats_to_use#295, CASE WHEN isnotnull(add#274.path) THEN UDF(add#274.path) END AS add_path_canonical#310, CASE WHEN isnotnull(remove#275.path) THEN UDF(remove#275.path) END AS remove_path_canonical#329]\nInput [11]: [txn#273, add#274, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L]\n\n(3) Exchange\nInput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\nArguments: hashpartitioning(coalesce(add_path_canonical#310, remove_path_canonical#329), 50), REPARTITION_BY_NUM, [plan_id=289]\n\n(4) ShuffleQueryStage\nOutput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\nArguments: 0\n\n(5) Sort [codegen id : 2]\nInput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\nArguments: [version#283L ASC NULLS FIRST], false, 0\n\n(6) Project [codegen id : 2]\nOutput [10]: [txn#273, CASE WHEN isnotnull(_extract_path#455) THEN struct(path, add_path_canonical#310, partitionValues, _extract_partitionValues#456, size, _extract_size#457L, modificationTime, _extract_modificationTime#458L, dataChange, _extract_dataChange#459, stats, add_stats_to_use#295, tags, _extract_tags#460, deletionVector, _extract_deletionVector#461, baseRowId, _extract_baseRowId#462L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#463L, clusteringProvider, _extract_clusteringProvider#464) END AS add#351, CASE WHEN isnotnull(remove#275.path) THEN if (isnull(remove#275)) null else named_struct(path, remove_path_canonical#329, deletionTimestamp, remove#275.deletionTimestamp, dataChange, remove#275.dataChange, extendedFileMetadata, remove#275.extendedFileMetadata, partitionValues, remove#275.partitionValues, size, remove#275.size, tags, remove#275.tags, deletionVector, remove#275.deletionVector, baseRowId, remove#275.baseRowId, defaultRowCommitVersion, remove#275.defaultRowCommitVersion, stats, remove#275.stats) END AS remove#376, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282]\nInput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\n\n(7) DeserializeToObject\nInput [10]: [txn#273, add#351, remove#376, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282]\nArguments: newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#433: org.apache.spark.sql.delta.actions.SingleAction\n\n(8) MapPartitions\nInput [1]: [obj#433]\nArguments: org.apache.spark.sql.delta.Snapshot$$Lambda$4135/0x000000e0020a5f88@4e595707, obj#434: org.apache.spark.sql.delta.actions.SingleAction\n\n(9) SerializeFromObject [codegen id : 3]\nInput [1]: [obj#434]\nArguments: [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#435, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#436, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#437, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#438, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#439, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#440, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#441, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#442, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#443, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#444]\n\n(10) Project\nOutput [23]: [txn#273, add#274.path AS _extract_path#455, add#274.partitionValues AS _extract_partitionValues#456, add#274.size AS _extract_size#457L, add#274.modificationTime AS _extract_modificationTime#458L, add#274.dataChange AS _extract_dataChange#459, add#274.tags AS _extract_tags#460, add#274.deletionVector AS _extract_deletionVector#461, add#274.baseRowId AS _extract_baseRowId#462L, add#274.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#463L, add#274.clusteringProvider AS _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add#274.stats AS add_stats_to_use#295, CASE WHEN isnotnull(add#274.path) THEN UDF(add#274.path) END AS add_path_canonical#310, CASE WHEN isnotnull(remove#275.path) THEN UDF(remove#275.path) END AS remove_path_canonical#329]\nInput [11]: [txn#273, add#274, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L]\n\n(11) Exchange\nInput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\nArguments: hashpartitioning(coalesce(add_path_canonical#310, remove_path_canonical#329), 50), REPARTITION_BY_NUM, [plan_id=274]\n\n(12) Sort\nInput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\nArguments: [version#283L ASC NULLS FIRST], false, 0\n\n(13) Project\nOutput [10]: [txn#273, CASE WHEN isnotnull(_extract_path#455) THEN struct(path, add_path_canonical#310, partitionValues, _extract_partitionValues#456, size, _extract_size#457L, modificationTime, _extract_modificationTime#458L, dataChange, _extract_dataChange#459, stats, add_stats_to_use#295, tags, _extract_tags#460, deletionVector, _extract_deletionVector#461, baseRowId, _extract_baseRowId#462L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#463L, clusteringProvider, _extract_clusteringProvider#464) END AS add#351, CASE WHEN isnotnull(remove#275.path) THEN if (isnull(remove#275)) null else named_struct(path, remove_path_canonical#329, deletionTimestamp, remove#275.deletionTimestamp, dataChange, remove#275.dataChange, extendedFileMetadata, remove#275.extendedFileMetadata, partitionValues, remove#275.partitionValues, size, remove#275.size, tags, remove#275.tags, deletionVector, remove#275.deletionVector, baseRowId, remove#275.baseRowId, defaultRowCommitVersion, remove#275.defaultRowCommitVersion, stats, remove#275.stats) END AS remove#376, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282]\nInput [23]: [txn#273, _extract_path#455, _extract_partitionValues#456, _extract_size#457L, _extract_modificationTime#458L, _extract_dataChange#459, _extract_tags#460, _extract_deletionVector#461, _extract_baseRowId#462L, _extract_defaultRowCommitVersion#463L, _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add_stats_to_use#295, add_path_canonical#310, remove_path_canonical#329]\n\n(14) DeserializeToObject\nInput [10]: [txn#273, add#351, remove#376, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282]\nArguments: newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#433: org.apache.spark.sql.delta.actions.SingleAction\n\n(15) MapPartitions\nInput [1]: [obj#433]\nArguments: org.apache.spark.sql.delta.Snapshot$$Lambda$4135/0x000000e0020a5f88@4e595707, obj#434: org.apache.spark.sql.delta.actions.SingleAction\n\n(16) SerializeFromObject\nInput [1]: [obj#434]\nArguments: [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#435, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#436, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#437, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#438, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#439, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#440, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#441, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#442, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#443, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#444]\n\n(17) AdaptiveSparkPlan\nOutput [10]: [txn#435, add#436, remove#437, metaData#438, protocol#439, cdc#440, checkpointMetadata#441, sidecar#442, domainMetadata#443, commitInfo#444]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (3)","simpleString":"WholeStageCodegen (3)","children":[{"nodeName":"SerializeFromObject","simpleString":"SerializeFromObject [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#435, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#436, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#437, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#438, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#439, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#440, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#441, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#442, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#443, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#444]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MapPartitions","simpleString":"MapPartitions org.apache.spark.sql.delta.Snapshot$$Lambda$4135/0x000000e0020a5f88@4e595707, obj#434: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"DeserializeToObject","simpleString":"DeserializeToObject newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#433: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Project","simpleString":"Project [txn#273, CASE WHEN isnotnull(_extract_path#455) THEN struct(path, add_path_canonical#310, partitionValues, _extract_partitionValues#456, size, _extract_size#457L, modificationTime, _extract_modificationTime#458L, dataChange, _extract_dataChange#459, stats, add_stats_to_use#295, tags, _extract_tags#460, deletionVector, _extract_deletionVector#461, baseRowId, _extract_baseRowId#462L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#463L, clusteringProvider, _extract_clusteringProvider#464) END AS add#351, CASE WHEN isnotnull(remove#275.path) THEN if (isnull(remove#275)) null else named_struct(path, remove_path_canonical#329, deletionTimestamp, remove#275.deletionTimestamp, dataChange, remove#275.dataChange, extendedFileMetadata, remove#275.extendedFileMetadata, partitionValues, remove#275.partitionValues, size, remove#275.size, tags, remove#275.tags, deletionVector, remove#275.deletionVector, baseRowId, remove#275.baseRowId, defaultRowCommitVersion, remove#275.defaultRowCommitVersion, stats, remove#275.stats) END AS remove#376, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282]","children":[{"nodeName":"Sort","simpleString":"Sort [version#283L ASC NULLS FIRST], false, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(coalesce(add_path_canonical#310, remove_path_canonical#329), 50), REPARTITION_BY_NUM, [plan_id=289]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [txn#273, add#274.path AS _extract_path#455, add#274.partitionValues AS _extract_partitionValues#456, add#274.size AS _extract_size#457L, add#274.modificationTime AS _extract_modificationTime#458L, add#274.dataChange AS _extract_dataChange#459, add#274.tags AS _extract_tags#460, add#274.deletionVector AS _extract_deletionVector#461, add#274.baseRowId AS _extract_baseRowId#462L, add#274.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#463L, add#274.clusteringProvider AS _extract_clusteringProvider#464, remove#275, metaData#276, protocol#277, cdc#278, checkpointMetadata#279, sidecar#280, domainMetadata#281, commitInfo#282, version#283L, add#274.stats AS add_stats_to_use#295, CASE WHEN isnotnull(add#274.path) THEN UDF(add#274.path) END AS add_path_canonical#310, CASE WHEN isnotnull(remove#275.path) THEN UDF(remove#275.path) END AS remove_path_canonical#329]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan json ","simpleString":"FileScan json [txn#273,add#274,remove#275,metaData#276,protocol#277,cdc#278,checkpointMetadata#279,sidecar#280,domainMetadata#281,commitInfo#282,version#283L] Batched: false, DataFilters: [], Format: JSON, Location: DeltaLogFileIndex(1 paths)[file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log/000000000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitio...","children":[],"metadata":{"Location":"DeltaLogFileIndex(1 paths)[file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log/00000000000000000000.json]","ReadSchema":"struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":420,"metricType":"sum"},{"name":"dynamic partition pruning time","accumulatorId":424,"metricType":"timing"},{"name":"metadata time","accumulatorId":421,"metricType":"timing"},{"name":"size of files read","accumulatorId":422,"metricType":"size"},{"name":"number of output rows","accumulatorId":419,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":423,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":450,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":448,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":442,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":449,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":443,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":440,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":437,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":446,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":439,"metricType":"sum"},{"name":"records read","accumulatorId":436,"metricType":"sum"},{"name":"local bytes read","accumulatorId":434,"metricType":"size"},{"name":"fetch wait time","accumulatorId":435,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":432,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":438,"metricType":"sum"},{"name":"local blocks read","accumulatorId":431,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":441,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":430,"metricType":"sum"},{"name":"data size","accumulatorId":428,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":444,"metricType":"size"},{"name":"number of partitions","accumulatorId":429,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":445,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":433,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":447,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":488,"metricType":"timing"},{"name":"peak memory","accumulatorId":489,"metricType":"size"},{"name":"spill size","accumulatorId":490,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":487,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":486,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":6,"time":1720042855337,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":7,"rootExecutionId":4,"description":"Delta: Compute snapshot for version: 0","details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (6)\n+- ObjectHashAggregate (5)\n   +- Exchange (4)\n      +- ObjectHashAggregate (3)\n         +- Project (2)\n            +- Scan ExistingRDD Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log (1)\n\n\n(1) Scan ExistingRDD Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log\nOutput [10]: [txn#435, add#436, remove#437, metaData#438, protocol#439, cdc#440, checkpointMetadata#441, sidecar#442, domainMetadata#443, commitInfo#444]\nArguments: [txn#435, add#436, remove#437, metaData#438, protocol#439, cdc#440, checkpointMetadata#441, sidecar#442, domainMetadata#443, commitInfo#444], Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log MapPartitionsRDD[38] at save at NativeMethodAccessorImpl.java:0, ExistingRDD, UnknownPartitioning(0)\n\n(2) Project\nOutput [6]: [txn#435, add#436, remove#437, metaData#438, protocol#439, domainMetadata#443]\nInput [10]: [txn#435, add#436, remove#437, metaData#438, protocol#439, cdc#440, checkpointMetadata#441, sidecar#442, domainMetadata#443, commitInfo#444]\n\n(3) ObjectHashAggregate\nInput [6]: [txn#435, add#436, remove#437, metaData#438, protocol#439, domainMetadata#443]\nKeys: []\nFunctions [10]: [partial_collect_set(domainMetadata#443, 0, 0), partial_collect_set(txn#435, 0, 0), partial_count(protocol#439), partial_sum(add#436.size), partial_last(metaData#438, true), partial_count(metaData#438), partial_last(protocol#439, true), partial_count(remove#437), partial_count(add#436), partial_count(txn#435)]\nAggregate Attributes [12]: [buf#568, buf#569, count#570L, sum#571L, last#572, valueSet#573, count#574L, last#575, valueSet#576, count#577L, count#578L, count#579L]\nResults [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\n\n(4) Exchange\nInput [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=342]\n\n(5) ObjectHashAggregate\nInput [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\nKeys: []\nFunctions [10]: [collect_set(domainMetadata#443, 0, 0), collect_set(txn#435, 0, 0), count(protocol#439), sum(add#436.size), last(metaData#438, true), count(metaData#438), last(protocol#439, true), count(remove#437), count(add#436), count(txn#435)]\nAggregate Attributes [10]: [collect_set(domainMetadata#443, 0, 0)#493, collect_set(txn#435, 0, 0)#492, count(protocol#439)#491L, sum(add#436.size)#486L, last(metaData#438) ignore nulls#494, count(metaData#438)#490L, last(protocol#439) ignore nulls#495, count(remove#437)#489L, count(add#436)#488L, count(txn#435)#487L]\nResults [11]: [collect_set(domainMetadata#443, 0, 0)#493 AS domainMetadata#499, null AS fileSizeHistogram#500, collect_set(txn#435, 0, 0)#492 AS setTransactions#501, count(protocol#439)#491L AS numOfProtocol#502L, coalesce(sum(add#436.size)#486L, 0) AS sizeInBytes#503L, last(metaData#438) ignore nulls#494 AS metadata#504, count(metaData#438)#490L AS numOfMetadata#505L, last(protocol#439) ignore nulls#495 AS protocol#506, count(remove#437)#489L AS numOfRemoves#507L, count(add#436)#488L AS numOfFiles#508L, count(txn#435)#487L AS numOfSetTransactions#509L]\n\n(6) AdaptiveSparkPlan\nOutput [11]: [domainMetadata#499, fileSizeHistogram#500, setTransactions#501, numOfProtocol#502L, sizeInBytes#503L, metadata#504, numOfMetadata#505L, protocol#506, numOfRemoves#507L, numOfFiles#508L, numOfSetTransactions#509L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"ObjectHashAggregate","simpleString":"ObjectHashAggregate(keys=[], functions=[collect_set(domainMetadata#443, 0, 0), collect_set(txn#435, 0, 0), count(protocol#439), sum(add#436.size), last(metaData#438, true), count(metaData#438), last(protocol#439, true), count(remove#437), count(add#436), count(txn#435)])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=342]","children":[{"nodeName":"ObjectHashAggregate","simpleString":"ObjectHashAggregate(keys=[], functions=[partial_collect_set(domainMetadata#443, 0, 0), partial_collect_set(txn#435, 0, 0), partial_count(protocol#439), partial_sum(add#436.size), partial_last(metaData#438, true), partial_count(metaData#438), partial_last(protocol#439, true), partial_count(remove#437), partial_count(add#436), partial_count(txn#435)])","children":[{"nodeName":"Project","simpleString":"Project [txn#435, add#436, remove#437, metaData#438, protocol#439, domainMetadata#443]","children":[{"nodeName":"Scan ExistingRDD Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log","simpleString":"Scan ExistingRDD Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log[txn#435,add#436,remove#437,metaData#438,protocol#439,cdc#440,checkpointMetadata#441,sidecar#442,domainMetadata#443,commitInfo#444]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":521,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":517,"metricType":"sum"},{"name":"time in aggregation build","accumulatorId":518,"metricType":"timing"},{"name":"spill size","accumulatorId":519,"metricType":"size"},{"name":"number of sort fallback tasks","accumulatorId":520,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":515,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":509,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":516,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":510,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":507,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":504,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":513,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":506,"metricType":"sum"},{"name":"records read","accumulatorId":503,"metricType":"sum"},{"name":"local bytes read","accumulatorId":501,"metricType":"size"},{"name":"fetch wait time","accumulatorId":502,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":499,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":505,"metricType":"sum"},{"name":"local blocks read","accumulatorId":498,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":508,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":497,"metricType":"sum"},{"name":"data size","accumulatorId":495,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":511,"metricType":"size"},{"name":"number of partitions","accumulatorId":496,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":512,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":500,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":514,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":491,"metricType":"sum"},{"name":"time in aggregation build","accumulatorId":492,"metricType":"timing"},{"name":"spill size","accumulatorId":493,"metricType":"size"},{"name":"number of sort fallback tasks","accumulatorId":494,"metricType":"sum"}]}],"metadata":{},"metrics":[]},"time":1720042855423,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":7,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Current Plan ==\n   ObjectHashAggregate (6)\n   +- ShuffleQueryStage (5)\n      +- Exchange (4)\n         +- ObjectHashAggregate (3)\n            +- * Project (2)\n               +- * Scan ExistingRDD Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log (1)\n+- == Initial Plan ==\n   ObjectHashAggregate (9)\n   +- Exchange (8)\n      +- ObjectHashAggregate (7)\n         +- Project (2)\n            +- Scan ExistingRDD Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log (1)\n\n\n(1) Scan ExistingRDD Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log [codegen id : 1]\nOutput [10]: [txn#435, add#436, remove#437, metaData#438, protocol#439, cdc#440, checkpointMetadata#441, sidecar#442, domainMetadata#443, commitInfo#444]\nArguments: [txn#435, add#436, remove#437, metaData#438, protocol#439, cdc#440, checkpointMetadata#441, sidecar#442, domainMetadata#443, commitInfo#444], Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log MapPartitionsRDD[38] at save at NativeMethodAccessorImpl.java:0, ExistingRDD, UnknownPartitioning(0)\n\n(2) Project [codegen id : 1]\nOutput [6]: [txn#435, add#436, remove#437, metaData#438, protocol#439, domainMetadata#443]\nInput [10]: [txn#435, add#436, remove#437, metaData#438, protocol#439, cdc#440, checkpointMetadata#441, sidecar#442, domainMetadata#443, commitInfo#444]\n\n(3) ObjectHashAggregate\nInput [6]: [txn#435, add#436, remove#437, metaData#438, protocol#439, domainMetadata#443]\nKeys: []\nFunctions [10]: [partial_collect_set(domainMetadata#443, 0, 0), partial_collect_set(txn#435, 0, 0), partial_count(protocol#439), partial_sum(add#436.size), partial_last(metaData#438, true), partial_count(metaData#438), partial_last(protocol#439, true), partial_count(remove#437), partial_count(add#436), partial_count(txn#435)]\nAggregate Attributes [12]: [buf#568, buf#569, count#570L, sum#571L, last#572, valueSet#573, count#574L, last#575, valueSet#576, count#577L, count#578L, count#579L]\nResults [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\n\n(4) Exchange\nInput [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=352]\n\n(5) ShuffleQueryStage\nOutput [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\nArguments: 0\n\n(6) ObjectHashAggregate\nInput [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\nKeys: []\nFunctions [10]: [collect_set(domainMetadata#443, 0, 0), collect_set(txn#435, 0, 0), count(protocol#439), sum(add#436.size), last(metaData#438, true), count(metaData#438), last(protocol#439, true), count(remove#437), count(add#436), count(txn#435)]\nAggregate Attributes [10]: [collect_set(domainMetadata#443, 0, 0)#493, collect_set(txn#435, 0, 0)#492, count(protocol#439)#491L, sum(add#436.size)#486L, last(metaData#438) ignore nulls#494, count(metaData#438)#490L, last(protocol#439) ignore nulls#495, count(remove#437)#489L, count(add#436)#488L, count(txn#435)#487L]\nResults [11]: [collect_set(domainMetadata#443, 0, 0)#493 AS domainMetadata#499, null AS fileSizeHistogram#500, collect_set(txn#435, 0, 0)#492 AS setTransactions#501, count(protocol#439)#491L AS numOfProtocol#502L, coalesce(sum(add#436.size)#486L, 0) AS sizeInBytes#503L, last(metaData#438) ignore nulls#494 AS metadata#504, count(metaData#438)#490L AS numOfMetadata#505L, last(protocol#439) ignore nulls#495 AS protocol#506, count(remove#437)#489L AS numOfRemoves#507L, count(add#436)#488L AS numOfFiles#508L, count(txn#435)#487L AS numOfSetTransactions#509L]\n\n(7) ObjectHashAggregate\nInput [6]: [txn#435, add#436, remove#437, metaData#438, protocol#439, domainMetadata#443]\nKeys: []\nFunctions [10]: [partial_collect_set(domainMetadata#443, 0, 0), partial_collect_set(txn#435, 0, 0), partial_count(protocol#439), partial_sum(add#436.size), partial_last(metaData#438, true), partial_count(metaData#438), partial_last(protocol#439, true), partial_count(remove#437), partial_count(add#436), partial_count(txn#435)]\nAggregate Attributes [12]: [buf#568, buf#569, count#570L, sum#571L, last#572, valueSet#573, count#574L, last#575, valueSet#576, count#577L, count#578L, count#579L]\nResults [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\n\n(8) Exchange\nInput [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=342]\n\n(9) ObjectHashAggregate\nInput [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\nKeys: []\nFunctions [10]: [collect_set(domainMetadata#443, 0, 0), collect_set(txn#435, 0, 0), count(protocol#439), sum(add#436.size), last(metaData#438, true), count(metaData#438), last(protocol#439, true), count(remove#437), count(add#436), count(txn#435)]\nAggregate Attributes [10]: [collect_set(domainMetadata#443, 0, 0)#493, collect_set(txn#435, 0, 0)#492, count(protocol#439)#491L, sum(add#436.size)#486L, last(metaData#438) ignore nulls#494, count(metaData#438)#490L, last(protocol#439) ignore nulls#495, count(remove#437)#489L, count(add#436)#488L, count(txn#435)#487L]\nResults [11]: [collect_set(domainMetadata#443, 0, 0)#493 AS domainMetadata#499, null AS fileSizeHistogram#500, collect_set(txn#435, 0, 0)#492 AS setTransactions#501, count(protocol#439)#491L AS numOfProtocol#502L, coalesce(sum(add#436.size)#486L, 0) AS sizeInBytes#503L, last(metaData#438) ignore nulls#494 AS metadata#504, count(metaData#438)#490L AS numOfMetadata#505L, last(protocol#439) ignore nulls#495 AS protocol#506, count(remove#437)#489L AS numOfRemoves#507L, count(add#436)#488L AS numOfFiles#508L, count(txn#435)#487L AS numOfSetTransactions#509L]\n\n(10) AdaptiveSparkPlan\nOutput [11]: [domainMetadata#499, fileSizeHistogram#500, setTransactions#501, numOfProtocol#502L, sizeInBytes#503L, metadata#504, numOfMetadata#505L, protocol#506, numOfRemoves#507L, numOfFiles#508L, numOfSetTransactions#509L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"ObjectHashAggregate","simpleString":"ObjectHashAggregate(keys=[], functions=[collect_set(domainMetadata#443, 0, 0), collect_set(txn#435, 0, 0), count(protocol#439), sum(add#436.size), last(metaData#438, true), count(metaData#438), last(protocol#439, true), count(remove#437), count(add#436), count(txn#435)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=352]","children":[{"nodeName":"ObjectHashAggregate","simpleString":"ObjectHashAggregate(keys=[], functions=[partial_collect_set(domainMetadata#443, 0, 0), partial_collect_set(txn#435, 0, 0), partial_count(protocol#439), partial_sum(add#436.size), partial_last(metaData#438, true), partial_count(metaData#438), partial_last(protocol#439, true), partial_count(remove#437), partial_count(add#436), partial_count(txn#435)])","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [txn#435, add#436, remove#437, metaData#438, protocol#439, domainMetadata#443]","children":[{"nodeName":"Scan ExistingRDD Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log","simpleString":"Scan ExistingRDD Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log[txn#435,add#436,remove#437,metaData#438,protocol#439,cdc#440,checkpointMetadata#441,sidecar#442,domainMetadata#443,commitInfo#444]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":521,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":552,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":548,"metricType":"sum"},{"name":"time in aggregation build","accumulatorId":549,"metricType":"timing"},{"name":"spill size","accumulatorId":550,"metricType":"size"},{"name":"number of sort fallback tasks","accumulatorId":551,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":546,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":540,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":547,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":541,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":538,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":535,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":544,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":537,"metricType":"sum"},{"name":"records read","accumulatorId":534,"metricType":"sum"},{"name":"local bytes read","accumulatorId":532,"metricType":"size"},{"name":"fetch wait time","accumulatorId":533,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":530,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":536,"metricType":"sum"},{"name":"local blocks read","accumulatorId":529,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":539,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":528,"metricType":"sum"},{"name":"data size","accumulatorId":526,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":542,"metricType":"size"},{"name":"number of partitions","accumulatorId":527,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":543,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":531,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":545,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":522,"metricType":"sum"},{"name":"time in aggregation build","accumulatorId":523,"metricType":"timing"},{"name":"spill size","accumulatorId":524,"metricType":"size"},{"name":"number of sort fallback tasks","accumulatorId":525,"metricType":"sum"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":7,"accumUpdates":[[527,1]]}
{"Event":"SparkListenerJobStart","Job ID":8,"Submission Time":1720042855465,"Stage Infos":[{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":50,"RDD Info":[{"RDD ID":41,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"ObjectHashAggregate\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"80\",\"name\":\"DeserializeToObject\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"79\",\"name\":\"MapPartitions\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"76\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"81\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log","Scope":"{\"id\":\"87\",\"name\":\"map\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[37],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"86\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"90\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"SQLExecutionRDD","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[8],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"71\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"72\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[9,8],"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"7","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.job.description":"Delta: Compute snapshot for version: 0","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":50,"RDD Info":[{"RDD ID":41,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"ObjectHashAggregate\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"80\",\"name\":\"DeserializeToObject\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"79\",\"name\":\"MapPartitions\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"76\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"81\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log","Scope":"{\"id\":\"87\",\"name\":\"map\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[37],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"86\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"90\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"SQLExecutionRDD","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[8],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042855473,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"7","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.job.description":"Delta: Compute snapshot for version: 0","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":11,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042855526,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":12,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720042855530,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":13,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720042856626,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":11,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042855526,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042856627,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1209","Value":"1209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"8","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"196","Value":"196","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"8454128","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"152","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"99","Value":"99","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"562209","Value":"562209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"293","Value":"293","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"289","Value":"289","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":167,"Value":167,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":107581214,"Value":107581214,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":915,"Value":915,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":415118132,"Value":415118132,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5339,"Value":5339,"Internal":true,"Count Failed Values":true},{"ID":558,"Name":"internal.metrics.jvmGCTime","Update":9,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":8454128,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1209,"Value":1209,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":99,"Value":99,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":562209,"Value":562209,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":167,"Executor Deserialize CPU Time":107581214,"Executor Run Time":915,"Executor CPU Time":415118132,"Peak Execution Memory":8454128,"Result Size":5339,"JVM GC Time":9,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1209,"Total Records Read":2,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":99,"Shuffle Write Time":562209,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":14,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720042856628,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":12,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720042855530,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042856629,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1458","Value":"2667","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"3","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"8","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"197","Value":"393","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"16908256","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"3","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"304","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"199","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"989542","Value":"1551751","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"293","Value":"586","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"289","Value":"578","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":166,"Value":333,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":90288580,"Value":197869794,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":917,"Value":1832,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":533405889,"Value":948524021,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5339,"Value":10678,"Internal":true,"Count Failed Values":true},{"ID":558,"Name":"internal.metrics.jvmGCTime","Update":9,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":16908256,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1458,"Value":2667,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":3,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":199,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":989542,"Value":1551751,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":166,"Executor Deserialize CPU Time":90288580,"Executor Run Time":917,"Executor CPU Time":533405889,"Peak Execution Memory":8454128,"Result Size":5339,"JVM GC Time":9,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1458,"Total Records Read":3,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":989542,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":15,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720042856709,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":13,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720042856626,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042856711,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2043","Value":"4710","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"5","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"34","Value":"427","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"25362384","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"5","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"456","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"299","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"340083","Value":"1891834","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"16","Value":"602","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"16","Value":"594","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":12,"Value":345,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":10968669,"Value":208838463,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":63,"Value":1895,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":55732502,"Value":1004256523,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":15974,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":25362384,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2043,"Value":4710,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":299,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":340083,"Value":1891834,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":12,"Executor Deserialize CPU Time":10968669,"Executor Run Time":63,"Executor CPU Time":55732502,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2043,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":340083,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":16,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720042856712,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":14,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720042856628,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042856712,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2078","Value":"6788","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"5","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"34","Value":"461","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"33816512","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"5","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"608","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"399","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"334794","Value":"2226628","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"17","Value":"619","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"17","Value":"611","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":11,"Value":356,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":10794542,"Value":219633005,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":63,"Value":1958,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":56131410,"Value":1060387933,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":21270,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":33816512,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2078,"Value":6788,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":399,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":334794,"Value":2226628,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":11,"Executor Deserialize CPU Time":10794542,"Executor Run Time":63,"Executor CPU Time":56131410,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2078,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":334794,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":17,"Index":6,"Attempt":0,"Partition ID":6,"Launch Time":1720042856774,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":16,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720042856712,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042856775,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2315","Value":"9103","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"6","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"25","Value":"486","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"42270640","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"6","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"760","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"99","Value":"498","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"197751","Value":"2424379","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"12","Value":"631","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"12","Value":"623","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":359,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3685958,"Value":223318963,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":50,"Value":2008,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":39309457,"Value":1099697390,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":26566,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":42270640,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2315,"Value":9103,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":6,"Value":21,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":99,"Value":498,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":197751,"Value":2424379,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3685958,"Executor Run Time":50,"Executor CPU Time":39309457,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2315,"Total Records Read":6,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":99,"Shuffle Write Time":197751,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":18,"Index":7,"Attempt":0,"Partition ID":7,"Launch Time":1720042856775,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":15,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720042856709,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042856776,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1191","Value":"10294","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"2","Value":"23","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"26","Value":"512","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"50724768","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"2","Value":"23","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"912","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"99","Value":"597","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"373541","Value":"2797920","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"12","Value":"643","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"12","Value":"635","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":5,"Value":364,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4886126,"Value":228205089,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":50,"Value":2058,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":39323416,"Value":1139020806,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":31862,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":50724768,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1191,"Value":10294,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":99,"Value":597,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":373541,"Value":2797920,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":5,"Executor Deserialize CPU Time":4886126,"Executor Run Time":50,"Executor CPU Time":39323416,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1191,"Total Records Read":2,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":99,"Shuffle Write Time":373541,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":19,"Index":8,"Attempt":0,"Partition ID":8,"Launch Time":1720042856813,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":20,"Index":9,"Attempt":0,"Partition ID":9,"Launch Time":1720042856814,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":17,"Index":6,"Attempt":0,"Partition ID":6,"Launch Time":1720042856774,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042856814,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1202","Value":"11496","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"2","Value":"25","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"14","Value":"526","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"59178896","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"2","Value":"25","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"1064","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"99","Value":"696","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"358791","Value":"3156711","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"8","Value":"651","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"8","Value":"643","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":4,"Value":368,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4382625,"Value":232587714,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":29,"Value":2087,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":26238833,"Value":1165259639,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":37158,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":59178896,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1202,"Value":11496,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2,"Value":25,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":99,"Value":696,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":358791,"Value":3156711,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":4,"Executor Deserialize CPU Time":4382625,"Executor Run Time":29,"Executor CPU Time":26238833,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1202,"Total Records Read":2,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":99,"Shuffle Write Time":358791,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":18,"Index":7,"Attempt":0,"Partition ID":7,"Launch Time":1720042856775,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042856814,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1761","Value":"13257","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"4","Value":"29","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"13","Value":"539","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"67633024","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"4","Value":"29","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"1216","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"796","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"208667","Value":"3365378","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"7","Value":"658","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"7","Value":"650","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":6,"Value":374,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3663543,"Value":236251257,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":27,"Value":2114,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":24799500,"Value":1190059139,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":42454,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":67633024,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1761,"Value":13257,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":4,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":796,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":208667,"Value":3365378,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":6,"Executor Deserialize CPU Time":3663543,"Executor Run Time":27,"Executor CPU Time":24799500,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1761,"Total Records Read":4,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":208667,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":21,"Index":10,"Attempt":0,"Partition ID":10,"Launch Time":1720042856853,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":22,"Index":11,"Attempt":0,"Partition ID":11,"Launch Time":1720042856854,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":19,"Index":8,"Attempt":0,"Partition ID":8,"Launch Time":1720042856813,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042856855,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1777","Value":"15034","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"4","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"11","Value":"550","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"76087152","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"4","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"1368","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"896","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"607042","Value":"3972420","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"9","Value":"667","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"9","Value":"659","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":5,"Value":379,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4908417,"Value":241159674,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":30,"Value":2144,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":25886624,"Value":1215945763,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":47750,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":76087152,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1777,"Value":15034,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":4,"Value":33,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":896,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":607042,"Value":3972420,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":5,"Executor Deserialize CPU Time":4908417,"Executor Run Time":30,"Executor CPU Time":25886624,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1777,"Total Records Read":4,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":607042,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":20,"Index":9,"Attempt":0,"Partition ID":9,"Launch Time":1720042856814,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042856855,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1994","Value":"17028","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"5","Value":"38","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"11","Value":"561","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"84541280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"5","Value":"38","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"1520","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"996","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"562751","Value":"4535171","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"10","Value":"677","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"10","Value":"669","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":5,"Value":384,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4069791,"Value":245229465,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":30,"Value":2174,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":26235541,"Value":1242181304,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":53046,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":84541280,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1994,"Value":17028,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":38,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":996,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":562751,"Value":4535171,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":5,"Executor Deserialize CPU Time":4069791,"Executor Run Time":30,"Executor CPU Time":26235541,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1994,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":562751,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":23,"Index":12,"Attempt":0,"Partition ID":12,"Launch Time":1720042856903,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":21,"Index":10,"Attempt":0,"Partition ID":10,"Launch Time":1720042856853,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042856906,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1481","Value":"18509","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"3","Value":"41","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"17","Value":"578","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"92995408","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"3","Value":"41","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"1672","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"1096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"403040","Value":"4938211","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"11","Value":"688","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"11","Value":"680","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":4,"Value":388,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4077376,"Value":249306841,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":40,"Value":2214,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":33997871,"Value":1276179175,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":58342,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":92995408,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1481,"Value":18509,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":3,"Value":41,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":1096,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":403040,"Value":4938211,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":4,"Executor Deserialize CPU Time":4077376,"Executor Run Time":40,"Executor CPU Time":33997871,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1481,"Total Records Read":3,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":403040,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":24,"Index":13,"Attempt":0,"Partition ID":13,"Launch Time":1720042856907,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":22,"Index":11,"Attempt":0,"Partition ID":11,"Launch Time":1720042856854,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042856908,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"12","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2040","Value":"20549","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"5","Value":"46","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"20","Value":"598","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"101449536","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"5","Value":"46","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"1824","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"1196","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"12","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"272751","Value":"5210962","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"12","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"9","Value":"697","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"9","Value":"689","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":7,"Value":395,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4288793,"Value":253595634,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":38,"Value":2252,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":32968043,"Value":1309147218,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":63638,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":101449536,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2040,"Value":20549,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":46,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":1196,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":272751,"Value":5210962,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":7,"Executor Deserialize CPU Time":4288793,"Executor Run Time":38,"Executor CPU Time":32968043,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2040,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":272751,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":25,"Index":14,"Attempt":0,"Partition ID":14,"Launch Time":1720042856955,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":24,"Index":13,"Attempt":0,"Partition ID":13,"Launch Time":1720042856907,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042856956,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2025","Value":"22574","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"5","Value":"51","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"16","Value":"614","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"109903664","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"5","Value":"51","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"1976","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"1296","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"355209","Value":"5566171","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"10","Value":"707","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"10","Value":"699","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":4,"Value":399,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4524208,"Value":258119842,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":38,"Value":2290,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":34865704,"Value":1344012922,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":68934,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":109903664,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2025,"Value":22574,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":51,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":1296,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":355209,"Value":5566171,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":4,"Executor Deserialize CPU Time":4524208,"Executor Run Time":38,"Executor CPU Time":34865704,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2025,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":355209,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":26,"Index":15,"Attempt":0,"Partition ID":15,"Launch Time":1720042856956,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":23,"Index":12,"Attempt":0,"Partition ID":12,"Launch Time":1720042856903,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042856957,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2882","Value":"25456","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"8","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"16","Value":"630","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"118357792","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"8","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"2128","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"99","Value":"1395","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"1023541","Value":"6589712","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"11","Value":"718","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"11","Value":"710","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":5,"Value":404,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5270708,"Value":263390550,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":38,"Value":2328,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":34734125,"Value":1378747047,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":74230,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":118357792,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2882,"Value":25456,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":8,"Value":59,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":99,"Value":1395,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":1023541,"Value":6589712,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":5,"Executor Deserialize CPU Time":5270708,"Executor Run Time":38,"Executor CPU Time":34734125,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2882,"Total Records Read":8,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":99,"Shuffle Write Time":1023541,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":27,"Index":16,"Attempt":0,"Partition ID":16,"Launch Time":1720042857000,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":28,"Index":17,"Attempt":0,"Partition ID":17,"Launch Time":1720042857002,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":25,"Index":14,"Attempt":0,"Partition ID":14,"Launch Time":1720042856955,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857002,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1809","Value":"27265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"4","Value":"63","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"1","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"13","Value":"643","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"126811920","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"4","Value":"63","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"2280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"1495","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"253499","Value":"6843211","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"6","Value":"724","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"6","Value":"716","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":7,"Value":411,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":6427251,"Value":269817801,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":32,"Value":2360,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":25775127,"Value":1404522174,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":79526,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":126811920,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1809,"Value":27265,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":4,"Value":63,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":1495,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":253499,"Value":6843211,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":7,"Executor Deserialize CPU Time":6427251,"Executor Run Time":32,"Executor CPU Time":25775127,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1809,"Total Records Read":4,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":253499,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":26,"Index":15,"Attempt":0,"Partition ID":15,"Launch Time":1720042856956,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857003,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2040","Value":"29305","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"5","Value":"68","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"15","Value":"658","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"135266048","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"5","Value":"68","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"2432","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"1595","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"258500","Value":"7101711","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"7","Value":"731","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"7","Value":"723","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":6,"Value":417,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":6440334,"Value":276258135,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":31,"Value":2391,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":24933789,"Value":1429455963,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":84822,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":135266048,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2040,"Value":29305,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":68,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":1595,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":258500,"Value":7101711,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":6,"Executor Deserialize CPU Time":6440334,"Executor Run Time":31,"Executor CPU Time":24933789,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2040,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":258500,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":29,"Index":18,"Attempt":0,"Partition ID":18,"Launch Time":1720042857046,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":28,"Index":17,"Attempt":0,"Partition ID":17,"Launch Time":1720042857002,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857047,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1754","Value":"31059","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"4","Value":"72","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"12","Value":"670","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"143720176","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"4","Value":"72","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"2584","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"1695","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"208958","Value":"7310669","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"8","Value":"739","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"8","Value":"731","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":4,"Value":421,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3697624,"Value":279955759,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":33,"Value":2424,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":25089790,"Value":1454545753,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":90118,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":143720176,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":17,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1754,"Value":31059,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":4,"Value":72,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":1695,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":17,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":208958,"Value":7310669,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":4,"Executor Deserialize CPU Time":3697624,"Executor Run Time":33,"Executor CPU Time":25089790,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1754,"Total Records Read":4,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":208958,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":30,"Index":19,"Attempt":0,"Partition ID":19,"Launch Time":1720042857047,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":27,"Index":16,"Attempt":0,"Partition ID":16,"Launch Time":1720042857000,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857048,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1195","Value":"32254","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"2","Value":"74","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"12","Value":"682","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"152174304","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"2","Value":"74","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"2736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"1795","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"719959","Value":"8030628","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"7","Value":"746","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"7","Value":"738","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":6,"Value":427,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4141709,"Value":284097468,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":34,"Value":2458,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":25846208,"Value":1480391961,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":95414,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":152174304,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1195,"Value":32254,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2,"Value":74,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":1795,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":719959,"Value":8030628,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":6,"Executor Deserialize CPU Time":4141709,"Executor Run Time":34,"Executor CPU Time":25846208,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1195,"Total Records Read":2,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":719959,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":31,"Index":20,"Attempt":0,"Partition ID":20,"Launch Time":1720042857083,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":30,"Index":19,"Attempt":0,"Partition ID":19,"Launch Time":1720042857047,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857084,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"19","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2042","Value":"34296","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"5","Value":"79","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"10","Value":"692","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"160628432","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"5","Value":"79","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"2888","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"1895","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"19","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"378375","Value":"8409003","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"19","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"7","Value":"753","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"7","Value":"745","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":4,"Value":431,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4107999,"Value":288205467,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":27,"Value":2485,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":22349044,"Value":1502741005,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":100710,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":160628432,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":19,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2042,"Value":34296,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":79,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":1895,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":19,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":378375,"Value":8409003,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":4,"Executor Deserialize CPU Time":4107999,"Executor Run Time":27,"Executor CPU Time":22349044,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2042,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":378375,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":32,"Index":21,"Attempt":0,"Partition ID":21,"Launch Time":1720042857085,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":29,"Index":18,"Attempt":0,"Partition ID":18,"Launch Time":1720042857046,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857086,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2035","Value":"36331","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"5","Value":"84","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"10","Value":"702","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"169082560","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"5","Value":"84","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"3040","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"1995","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"275667","Value":"8684670","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"7","Value":"760","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"7","Value":"752","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":4,"Value":435,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4281418,"Value":292486885,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":28,"Value":2513,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":22266833,"Value":1525007838,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":106006,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":169082560,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2035,"Value":36331,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":84,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":1995,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":275667,"Value":8684670,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":4,"Executor Deserialize CPU Time":4281418,"Executor Run Time":28,"Executor CPU Time":22266833,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2035,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":275667,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":33,"Index":22,"Attempt":0,"Partition ID":22,"Launch Time":1720042857120,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":34,"Index":23,"Attempt":0,"Partition ID":23,"Launch Time":1720042857121,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":31,"Index":20,"Attempt":0,"Partition ID":20,"Launch Time":1720042857083,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857122,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1778","Value":"38109","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"4","Value":"88","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"2","Value":"19","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"9","Value":"711","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"177536688","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"4","Value":"88","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"3192","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"2095","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"230418","Value":"8915088","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"6","Value":"766","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"6","Value":"758","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":4,"Value":439,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3456793,"Value":295943678,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":26,"Value":2539,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":19773833,"Value":1544781671,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5339,"Value":111345,"Internal":true,"Count Failed Values":true},{"ID":558,"Name":"internal.metrics.jvmGCTime","Update":2,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":177536688,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":21,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1778,"Value":38109,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":4,"Value":88,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":2095,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":21,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":230418,"Value":8915088,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":4,"Executor Deserialize CPU Time":3456793,"Executor Run Time":26,"Executor CPU Time":19773833,"Peak Execution Memory":8454128,"Result Size":5339,"JVM GC Time":2,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1778,"Total Records Read":4,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":230418,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":32,"Index":21,"Attempt":0,"Partition ID":21,"Launch Time":1720042857085,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857122,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"22","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1802","Value":"39911","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"4","Value":"92","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"2","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"8","Value":"719","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"185990816","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"4","Value":"92","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"3344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"2195","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"22","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"253544","Value":"9168632","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"22","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"6","Value":"772","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"6","Value":"764","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":442,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3887000,"Value":299830678,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":26,"Value":2565,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":19370125,"Value":1564151796,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5339,"Value":116684,"Internal":true,"Count Failed Values":true},{"ID":558,"Name":"internal.metrics.jvmGCTime","Update":2,"Value":22,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":185990816,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":22,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1802,"Value":39911,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":4,"Value":92,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":2195,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":22,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":253544,"Value":9168632,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3887000,"Executor Run Time":26,"Executor CPU Time":19370125,"Peak Execution Memory":8454128,"Result Size":5339,"JVM GC Time":2,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1802,"Total Records Read":4,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":253544,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":35,"Index":24,"Attempt":0,"Partition ID":24,"Launch Time":1720042857156,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":36,"Index":25,"Attempt":0,"Partition ID":25,"Launch Time":1720042857156,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":34,"Index":23,"Attempt":0,"Partition ID":23,"Launch Time":1720042857121,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857157,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"23","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1480","Value":"41391","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"3","Value":"95","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"12","Value":"731","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"194444944","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"3","Value":"95","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"3496","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"2295","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"23","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"245126","Value":"9413758","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"23","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"5","Value":"777","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"5","Value":"769","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":445,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2829751,"Value":302660429,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":25,"Value":2590,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":20696166,"Value":1584847962,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":121980,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":194444944,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1480,"Value":41391,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":3,"Value":95,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":2295,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":245126,"Value":9413758,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":2829751,"Executor Run Time":25,"Executor CPU Time":20696166,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1480,"Total Records Read":3,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":245126,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":33,"Index":22,"Attempt":0,"Partition ID":22,"Launch Time":1720042857120,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857158,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"24","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1447","Value":"42838","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"3","Value":"98","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"13","Value":"744","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"202899072","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"3","Value":"98","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"3648","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"2395","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"24","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"239792","Value":"9653550","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"24","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"5","Value":"782","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"5","Value":"774","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":4,"Value":449,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3610291,"Value":306270720,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":26,"Value":2616,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":21037621,"Value":1605885583,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":127276,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":202899072,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1447,"Value":42838,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":3,"Value":98,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":2395,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":239792,"Value":9653550,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":4,"Executor Deserialize CPU Time":3610291,"Executor Run Time":26,"Executor CPU Time":21037621,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1447,"Total Records Read":3,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":239792,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":37,"Index":26,"Attempt":0,"Partition ID":26,"Launch Time":1720042857188,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":35,"Index":24,"Attempt":0,"Partition ID":24,"Launch Time":1720042857156,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857188,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"25","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2054","Value":"44892","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"5","Value":"103","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"8","Value":"752","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"211353200","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"5","Value":"103","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"3800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"2495","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"25","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"629457","Value":"10283007","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"25","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"6","Value":"788","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"6","Value":"780","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":452,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3257374,"Value":309528094,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":24,"Value":2640,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":18829498,"Value":1624715081,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":132572,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":211353200,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":25,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2054,"Value":44892,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":103,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":2495,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":25,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":629457,"Value":10283007,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3257374,"Executor Run Time":24,"Executor CPU Time":18829498,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2054,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":629457,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":38,"Index":27,"Attempt":0,"Partition ID":27,"Launch Time":1720042857193,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":36,"Index":25,"Attempt":0,"Partition ID":25,"Launch Time":1720042857156,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857194,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"26","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2013","Value":"46905","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"5","Value":"108","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"8","Value":"760","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"219807328","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"5","Value":"108","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"3952","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"2595","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"26","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"799041","Value":"11082048","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"26","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"5","Value":"793","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"6","Value":"786","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":4,"Value":456,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3740750,"Value":313268844,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":25,"Value":2665,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":20297915,"Value":1645012996,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":137868,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":219807328,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":26,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2013,"Value":46905,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":108,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":2595,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":26,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":799041,"Value":11082048,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":4,"Executor Deserialize CPU Time":3740750,"Executor Run Time":25,"Executor CPU Time":20297915,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2013,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":799041,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":39,"Index":28,"Attempt":0,"Partition ID":28,"Launch Time":1720042857218,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":37,"Index":26,"Attempt":0,"Partition ID":26,"Launch Time":1720042857188,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857219,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"27","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1174","Value":"48079","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"2","Value":"110","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"7","Value":"767","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"228261456","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"2","Value":"110","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"4104","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"99","Value":"2694","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"27","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"232751","Value":"11314799","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"27","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"5","Value":"798","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"5","Value":"791","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":5,"Value":461,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4002500,"Value":317271344,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":21,"Value":2686,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":17215875,"Value":1662228871,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":143164,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":228261456,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":27,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1174,"Value":48079,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2,"Value":110,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":99,"Value":2694,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":27,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":232751,"Value":11314799,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":5,"Executor Deserialize CPU Time":4002500,"Executor Run Time":21,"Executor CPU Time":17215875,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1174,"Total Records Read":2,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":99,"Shuffle Write Time":232751,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":40,"Index":29,"Attempt":0,"Partition ID":29,"Launch Time":1720042857221,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":38,"Index":27,"Attempt":0,"Partition ID":27,"Launch Time":1720042857193,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857221,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"28","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2082","Value":"50161","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"5","Value":"115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"8","Value":"775","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"236715584","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"5","Value":"115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"4256","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"2794","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"28","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"588583","Value":"11903382","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"28","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"5","Value":"803","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"5","Value":"796","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":464,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3147376,"Value":320418720,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":20,"Value":2706,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":17016668,"Value":1679245539,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":148460,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":236715584,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":28,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2082,"Value":50161,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":115,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":2794,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":28,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":588583,"Value":11903382,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3147376,"Executor Run Time":20,"Executor CPU Time":17016668,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2082,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":588583,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":41,"Index":30,"Attempt":0,"Partition ID":30,"Launch Time":1720042857251,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":42,"Index":31,"Attempt":0,"Partition ID":31,"Launch Time":1720042857252,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":40,"Index":29,"Attempt":0,"Partition ID":29,"Launch Time":1720042857221,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857253,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"29","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2576","Value":"52737","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"7","Value":"122","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"8","Value":"783","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"245169712","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"7","Value":"122","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"4408","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"2894","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"29","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"716501","Value":"12619883","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"29","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"7","Value":"810","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"7","Value":"803","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":467,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3090709,"Value":323509429,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":23,"Value":2729,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":19982290,"Value":1699227829,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":153756,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":245169712,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2576,"Value":52737,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":7,"Value":122,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":2894,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":716501,"Value":12619883,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3090709,"Executor Run Time":23,"Executor CPU Time":19982290,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2576,"Total Records Read":7,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":716501,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":39,"Index":28,"Attempt":0,"Partition ID":28,"Launch Time":1720042857218,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857253,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"30","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1747","Value":"54484","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"4","Value":"126","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"8","Value":"791","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"253623840","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"4","Value":"126","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"4560","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"2994","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"30","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"301791","Value":"12921674","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"30","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"7","Value":"817","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"7","Value":"810","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":470,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3417500,"Value":326926929,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":25,"Value":2754,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":20648664,"Value":1719876493,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":159052,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":253623840,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":30,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1747,"Value":54484,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":4,"Value":126,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":2994,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":30,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":301791,"Value":12921674,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3417500,"Executor Run Time":25,"Executor CPU Time":20648664,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1747,"Total Records Read":4,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":301791,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":43,"Index":32,"Attempt":0,"Partition ID":32,"Launch Time":1720042857285,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":44,"Index":33,"Attempt":0,"Partition ID":33,"Launch Time":1720042857286,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":42,"Index":31,"Attempt":0,"Partition ID":31,"Launch Time":1720042857252,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857286,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"31","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"890","Value":"55374","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"1","Value":"127","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"8","Value":"799","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"262077968","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"1","Value":"127","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"4712","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"99","Value":"3093","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"31","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"224166","Value":"13145840","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"31","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"6","Value":"823","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"6","Value":"816","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":473,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3022293,"Value":329949222,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":24,"Value":2778,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":18139163,"Value":1738015656,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":164348,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":262077968,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":31,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":890,"Value":55374,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1,"Value":127,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":99,"Value":3093,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":31,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":224166,"Value":13145840,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3022293,"Executor Run Time":24,"Executor CPU Time":18139163,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":890,"Total Records Read":1,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":99,"Shuffle Write Time":224166,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":41,"Index":30,"Attempt":0,"Partition ID":30,"Launch Time":1720042857251,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857288,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1776","Value":"57150","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"4","Value":"131","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"8","Value":"807","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"270532096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"4","Value":"131","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"4864","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"3193","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"594417","Value":"13740257","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"5","Value":"828","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"5","Value":"821","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":4,"Value":477,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3487835,"Value":333437057,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":24,"Value":2802,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":20140876,"Value":1758156532,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":169644,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":270532096,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":32,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1776,"Value":57150,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":4,"Value":131,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":3193,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":32,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":594417,"Value":13740257,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":4,"Executor Deserialize CPU Time":3487835,"Executor Run Time":24,"Executor CPU Time":20140876,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1776,"Total Records Read":4,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":594417,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":45,"Index":34,"Attempt":0,"Partition ID":34,"Launch Time":1720042857320,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":44,"Index":33,"Attempt":0,"Partition ID":33,"Launch Time":1720042857286,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857322,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1486","Value":"58636","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"3","Value":"134","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"8","Value":"815","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"278986224","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"3","Value":"134","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"5016","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"3293","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"398501","Value":"14138758","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"6","Value":"834","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"6","Value":"827","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":480,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2878709,"Value":336315766,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":25,"Value":2827,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":19089498,"Value":1777246030,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":174940,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":278986224,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":33,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1486,"Value":58636,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":3,"Value":134,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":3293,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":33,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":398501,"Value":14138758,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":2878709,"Executor Run Time":25,"Executor CPU Time":19089498,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1486,"Total Records Read":3,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":398501,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":46,"Index":35,"Attempt":0,"Partition ID":35,"Launch Time":1720042857324,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":43,"Index":32,"Attempt":0,"Partition ID":32,"Launch Time":1720042857285,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857324,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"34","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2050","Value":"60686","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"5","Value":"139","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"8","Value":"823","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"287440352","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"5","Value":"139","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"5168","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"3393","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"34","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"216250","Value":"14355008","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"34","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"7","Value":"841","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"7","Value":"834","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":5,"Value":485,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3597291,"Value":339913057,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":25,"Value":2852,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":20040085,"Value":1797286115,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":180236,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":287440352,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":34,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2050,"Value":60686,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":139,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":3393,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":34,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":216250,"Value":14355008,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":5,"Executor Deserialize CPU Time":3597291,"Executor Run Time":25,"Executor CPU Time":20040085,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2050,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":216250,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":47,"Index":36,"Attempt":0,"Partition ID":36,"Launch Time":1720042857361,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":45,"Index":34,"Attempt":0,"Partition ID":34,"Launch Time":1720042857320,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857361,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"35","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1791","Value":"62477","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"4","Value":"143","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"7","Value":"830","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"295894480","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"4","Value":"143","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"5320","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"3493","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"35","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"307456","Value":"14662464","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"35","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"5","Value":"846","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"5","Value":"839","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":4,"Value":489,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4267375,"Value":344180432,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":23,"Value":2875,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":17608666,"Value":1814894781,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":185532,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":295894480,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":35,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1791,"Value":62477,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":4,"Value":143,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":3493,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":35,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":307456,"Value":14662464,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":4,"Executor Deserialize CPU Time":4267375,"Executor Run Time":23,"Executor CPU Time":17608666,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1791,"Total Records Read":4,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":307456,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":48,"Index":37,"Attempt":0,"Partition ID":37,"Launch Time":1720042857362,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":46,"Index":35,"Attempt":0,"Partition ID":35,"Launch Time":1720042857324,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857362,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"36","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1741","Value":"64218","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"4","Value":"147","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"8","Value":"838","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"304348608","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"4","Value":"147","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"5472","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"3593","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"36","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"220792","Value":"14883256","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"36","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"5","Value":"851","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"5","Value":"844","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":492,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3506624,"Value":347687056,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":31,"Value":2906,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":18239621,"Value":1833134402,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":190828,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":304348608,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":36,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1741,"Value":64218,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":4,"Value":147,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":3593,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":36,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":220792,"Value":14883256,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3506624,"Executor Run Time":31,"Executor CPU Time":18239621,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1741,"Total Records Read":4,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":220792,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":49,"Index":38,"Attempt":0,"Partition ID":38,"Launch Time":1720042857393,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":47,"Index":36,"Attempt":0,"Partition ID":36,"Launch Time":1720042857361,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857394,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"37","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1199","Value":"65417","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"2","Value":"149","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"8","Value":"846","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"312802736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"2","Value":"149","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"5624","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"99","Value":"3692","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"37","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"210209","Value":"15093465","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"37","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"6","Value":"857","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"6","Value":"850","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":495,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3581001,"Value":351268057,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":25,"Value":2931,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":19696542,"Value":1852830944,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":196124,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":312802736,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":37,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1199,"Value":65417,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2,"Value":149,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":99,"Value":3692,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":37,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":210209,"Value":15093465,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3581001,"Executor Run Time":25,"Executor CPU Time":19696542,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1199,"Total Records Read":2,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":99,"Shuffle Write Time":210209,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":50,"Index":39,"Attempt":0,"Partition ID":39,"Launch Time":1720042857394,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":48,"Index":37,"Attempt":0,"Partition ID":37,"Launch Time":1720042857362,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857396,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"38","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2057","Value":"67474","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"5","Value":"154","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"8","Value":"854","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"321256864","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"5","Value":"154","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"5776","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"3792","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"38","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"614582","Value":"15708047","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"38","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"5","Value":"862","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"5","Value":"855","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":498,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2936041,"Value":354204098,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":25,"Value":2956,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":19505375,"Value":1872336319,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":201420,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":321256864,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":38,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2057,"Value":67474,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":154,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":3792,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":38,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":614582,"Value":15708047,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":2936041,"Executor Run Time":25,"Executor CPU Time":19505375,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2057,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":614582,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":51,"Index":40,"Attempt":0,"Partition ID":40,"Launch Time":1720042857424,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":50,"Index":39,"Attempt":0,"Partition ID":39,"Launch Time":1720042857394,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857425,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"39","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1809","Value":"69283","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"4","Value":"158","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"9","Value":"863","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"329710992","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"4","Value":"158","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"5928","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"3892","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"39","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"524166","Value":"16232213","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"39","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"4","Value":"866","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"4","Value":"859","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":501,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3251500,"Value":357455598,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":21,"Value":2977,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":17626377,"Value":1889962696,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":206716,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":329710992,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":39,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1809,"Value":69283,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":4,"Value":158,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":3892,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":39,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":524166,"Value":16232213,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3251500,"Executor Run Time":21,"Executor CPU Time":17626377,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1809,"Total Records Read":4,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":524166,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":52,"Index":41,"Attempt":0,"Partition ID":41,"Launch Time":1720042857425,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":49,"Index":38,"Attempt":0,"Partition ID":38,"Launch Time":1720042857393,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857426,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1745","Value":"71028","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"4","Value":"162","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"9","Value":"872","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"338165120","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"4","Value":"162","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"6080","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"3992","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"556877","Value":"16789090","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"4","Value":"870","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"4","Value":"863","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":504,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3602959,"Value":361058557,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":22,"Value":2999,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":17059919,"Value":1907022615,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":212012,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":338165120,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":40,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1745,"Value":71028,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":4,"Value":162,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":3992,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":40,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":556877,"Value":16789090,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3602959,"Executor Run Time":22,"Executor CPU Time":17059919,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1745,"Total Records Read":4,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":556877,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":53,"Index":42,"Attempt":0,"Partition ID":42,"Launch Time":1720042857456,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":52,"Index":41,"Attempt":0,"Partition ID":41,"Launch Time":1720042857425,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857457,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"41","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1203","Value":"72231","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"2","Value":"164","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"9","Value":"881","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"346619248","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"2","Value":"164","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"6232","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"99","Value":"4091","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"41","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"281459","Value":"17070549","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"41","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"7","Value":"877","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"7","Value":"870","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":507,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2957501,"Value":364016058,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":24,"Value":3023,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":17604000,"Value":1924626615,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5339,"Value":217351,"Internal":true,"Count Failed Values":true},{"ID":558,"Name":"internal.metrics.jvmGCTime","Update":2,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":346619248,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":41,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1203,"Value":72231,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2,"Value":164,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":99,"Value":4091,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":41,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":281459,"Value":17070549,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":2957501,"Executor Run Time":24,"Executor CPU Time":17604000,"Peak Execution Memory":8454128,"Result Size":5339,"JVM GC Time":2,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1203,"Total Records Read":2,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":99,"Shuffle Write Time":281459,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":54,"Index":43,"Attempt":0,"Partition ID":43,"Launch Time":1720042857461,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":51,"Index":40,"Attempt":0,"Partition ID":40,"Launch Time":1720042857424,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857461,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"42","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1180","Value":"73411","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"2","Value":"166","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"9","Value":"890","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"355073376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"2","Value":"166","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"6384","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"4191","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"42","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"256790","Value":"17327339","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"42","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"7","Value":"884","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"7","Value":"877","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":510,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3267499,"Value":367283557,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":25,"Value":3048,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":19483580,"Value":1944110195,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5339,"Value":222690,"Internal":true,"Count Failed Values":true},{"ID":558,"Name":"internal.metrics.jvmGCTime","Update":2,"Value":26,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":355073376,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":42,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1180,"Value":73411,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2,"Value":166,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":4191,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":42,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":256790,"Value":17327339,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3267499,"Executor Run Time":25,"Executor CPU Time":19483580,"Peak Execution Memory":8454128,"Result Size":5339,"JVM GC Time":2,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1180,"Total Records Read":2,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":256790,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":55,"Index":44,"Attempt":0,"Partition ID":44,"Launch Time":1720042857487,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":54,"Index":43,"Attempt":0,"Partition ID":43,"Launch Time":1720042857461,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857490,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"43","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1179","Value":"74590","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"2","Value":"168","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"9","Value":"899","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"363527504","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"2","Value":"168","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"6536","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"99","Value":"4290","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"43","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"199375","Value":"17526714","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"43","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"4","Value":"888","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"4","Value":"881","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":2,"Value":512,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2452168,"Value":369735725,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":19,"Value":3067,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":17590082,"Value":1961700277,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":227986,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":363527504,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":43,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1179,"Value":74590,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2,"Value":168,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":99,"Value":4290,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":43,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":199375,"Value":17526714,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":2,"Executor Deserialize CPU Time":2452168,"Executor Run Time":19,"Executor CPU Time":17590082,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1179,"Total Records Read":2,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":99,"Shuffle Write Time":199375,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":56,"Index":45,"Attempt":0,"Partition ID":45,"Launch Time":1720042857515,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":55,"Index":44,"Attempt":0,"Partition ID":44,"Launch Time":1720042857487,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857515,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"44","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2306","Value":"76896","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"6","Value":"174","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"6","Value":"905","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"371981632","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"6","Value":"174","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"6688","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"99","Value":"4389","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"44","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"313335","Value":"17840049","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"44","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"4","Value":"892","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"4","Value":"885","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":515,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2908124,"Value":372643849,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":18,"Value":3085,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":16307376,"Value":1978007653,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":233282,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":371981632,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":44,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2306,"Value":76896,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":6,"Value":174,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":99,"Value":4389,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":44,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":313335,"Value":17840049,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":2908124,"Executor Run Time":18,"Executor CPU Time":16307376,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2306,"Total Records Read":6,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":99,"Shuffle Write Time":313335,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":57,"Index":46,"Attempt":0,"Partition ID":46,"Launch Time":1720042857540,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":56,"Index":45,"Attempt":0,"Partition ID":45,"Launch Time":1720042857515,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857541,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"45","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1457","Value":"78353","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"3","Value":"177","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"6","Value":"911","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"380435760","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"3","Value":"177","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"6840","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"4489","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"45","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"238250","Value":"18078299","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"45","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"5","Value":"897","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"5","Value":"890","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":518,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3061291,"Value":375705140,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":18,"Value":3103,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":15187212,"Value":1993194865,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":238578,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":380435760,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":45,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1457,"Value":78353,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":3,"Value":177,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":4489,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":45,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":238250,"Value":18078299,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3061291,"Executor Run Time":18,"Executor CPU Time":15187212,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1457,"Total Records Read":3,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":238250,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":58,"Index":47,"Attempt":0,"Partition ID":47,"Launch Time":1720042857565,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":57,"Index":46,"Attempt":0,"Partition ID":46,"Launch Time":1720042857540,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857566,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"46","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1746","Value":"80099","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"4","Value":"181","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"6","Value":"917","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"388889888","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"4","Value":"181","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"6992","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"4589","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"46","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"228290","Value":"18306589","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"46","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"4","Value":"901","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"4","Value":"894","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":521,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3341415,"Value":379046555,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":17,"Value":3120,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":14915291,"Value":2008110156,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":243874,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":388889888,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":46,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1746,"Value":80099,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":4,"Value":181,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":4589,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":46,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":228290,"Value":18306589,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3341415,"Executor Run Time":17,"Executor CPU Time":14915291,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1746,"Total Records Read":4,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":228290,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":59,"Index":48,"Attempt":0,"Partition ID":48,"Launch Time":1720042857588,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":53,"Index":42,"Attempt":0,"Partition ID":42,"Launch Time":1720042857456,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857593,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"47","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2601","Value":"82700","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"7","Value":"188","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"110","Value":"1027","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"397344016","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"6","Value":"187","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"1848","Value":"8840","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"662","Value":"5251","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"47","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"224917","Value":"18531506","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"47","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"4","Value":"905","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"4","Value":"898","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":524,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3394332,"Value":382440887,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":122,"Value":3242,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":113081208,"Value":2121191364,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":249170,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":397344016,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":47,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2601,"Value":82700,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":7,"Value":188,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":662,"Value":5251,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":47,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":224917,"Value":18531506,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3394332,"Executor Run Time":122,"Executor CPU Time":113081208,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2601,"Total Records Read":7,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":662,"Shuffle Write Time":224917,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":60,"Index":49,"Attempt":0,"Partition ID":49,"Launch Time":1720042857593,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":58,"Index":47,"Attempt":0,"Partition ID":47,"Launch Time":1720042857565,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857594,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"48","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2065","Value":"84765","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"5","Value":"193","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"7","Value":"1034","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"405798144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"5","Value":"192","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"8992","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"5351","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"48","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"1151958","Value":"19683464","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"48","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"4","Value":"909","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"4","Value":"902","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":527,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3090417,"Value":385531304,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":19,"Value":3261,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":17212085,"Value":2138403449,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":254466,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":405798144,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":48,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2065,"Value":84765,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":193,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":5351,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":48,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":1151958,"Value":19683464,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3090417,"Executor Run Time":19,"Executor CPU Time":17212085,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2065,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":1151958,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":59,"Index":48,"Attempt":0,"Partition ID":48,"Launch Time":1720042857588,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857620,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"49","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"2324","Value":"87089","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"6","Value":"199","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"8","Value":"1042","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"414252272","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"6","Value":"198","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"9144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"99","Value":"5450","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"49","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"276209","Value":"19959673","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"49","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"4","Value":"913","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"4","Value":"906","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":4,"Value":531,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3218125,"Value":388749429,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":20,"Value":3281,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":17646501,"Value":2156049950,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":259762,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":414252272,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":49,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":2324,"Value":87089,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":6,"Value":199,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":99,"Value":5450,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":49,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":276209,"Value":19959673,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":4,"Executor Deserialize CPU Time":3218125,"Executor Run Time":20,"Executor CPU Time":17646501,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":2324,"Total Records Read":6,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":99,"Shuffle Write Time":276209,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":60,"Index":49,"Attempt":0,"Partition ID":49,"Launch Time":1720042857593,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857620,"Failed":false,"Killed":false,"Accumulables":[{"ID":431,"Name":"local blocks read","Update":"1","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Update":"1759","Value":"88848","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Update":"4","Value":"203","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Update":"8","Value":"1050","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Update":"8454128","Value":"422706400","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Update":"4","Value":"202","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Update":"152","Value":"9296","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Update":"100","Value":"5550","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Update":"1","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Update":"861543","Value":"20821216","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Update":"1","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Update":"4","Value":"917","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Update":"4","Value":"910","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Update":2,"Value":533,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2490542,"Value":391239971,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Update":20,"Value":3301,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Update":17676416,"Value":2173726366,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Update":5296,"Value":265058,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Update":8454128,"Value":422706400,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":50,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1759,"Value":88848,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Update":4,"Value":203,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":100,"Value":5550,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":50,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Update":861543,"Value":20821216,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":2,"Executor Deserialize CPU Time":2490542,"Executor Run Time":20,"Executor CPU Time":17676416,"Peak Execution Memory":8454128,"Result Size":5296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1759,"Total Records Read":4,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":100,"Shuffle Write Time":861543,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":50,"RDD Info":[{"RDD ID":41,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"ObjectHashAggregate\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"80\",\"name\":\"DeserializeToObject\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"79\",\"name\":\"MapPartitions\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"76\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"81\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log","Scope":"{\"id\":\"87\",\"name\":\"map\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[37],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"86\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"90\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"SQLExecutionRDD","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[8],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042855473,"Completion Time":1720042857621,"Accumulables":[{"ID":431,"Name":"local blocks read","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":434,"Name":"local bytes read","Value":"88848","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":435,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":436,"Name":"records read","Value":"203","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"duration","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":487,"Name":"duration","Value":"1050","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":488,"Name":"sort time","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"peak memory","Value":"422706400","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":490,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":521,"Name":"number of output rows","Value":"202","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":526,"Name":"data size","Value":"9296","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":545,"Name":"shuffle bytes written","Value":"5550","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":546,"Name":"shuffle records written","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle write time","Value":"20821216","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"number of output rows","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"time in aggregation build","Value":"917","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"duration","Value":"910","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":553,"Name":"internal.metrics.executorDeserializeTime","Value":533,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.executorDeserializeCpuTime","Value":391239971,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.executorRunTime","Value":3301,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.executorCpuTime","Value":2173726366,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.resultSize","Value":265058,"Internal":true,"Count Failed Values":true},{"ID":558,"Name":"internal.metrics.jvmGCTime","Value":26,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.peakExecutionMemory","Value":422706400,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":50,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":567,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":568,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":88848,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":570,"Name":"internal.metrics.shuffle.read.recordsRead","Value":203,"Internal":true,"Count Failed Values":true},{"ID":571,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":572,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":573,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":574,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":575,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":576,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":577,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":578,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":579,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":580,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":5550,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":50,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.shuffle.write.writeTime","Value":20821216,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":8,"Completion Time":1720042857626,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":7,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Final Plan ==\n   ObjectHashAggregate (6)\n   +- ShuffleQueryStage (5), Statistics(sizeInBytes=9.1 KiB, rowCount=50)\n      +- Exchange (4)\n         +- ObjectHashAggregate (3)\n            +- * Project (2)\n               +- * Scan ExistingRDD Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log (1)\n+- == Initial Plan ==\n   ObjectHashAggregate (9)\n   +- Exchange (8)\n      +- ObjectHashAggregate (7)\n         +- Project (2)\n            +- Scan ExistingRDD Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log (1)\n\n\n(1) Scan ExistingRDD Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log [codegen id : 1]\nOutput [10]: [txn#435, add#436, remove#437, metaData#438, protocol#439, cdc#440, checkpointMetadata#441, sidecar#442, domainMetadata#443, commitInfo#444]\nArguments: [txn#435, add#436, remove#437, metaData#438, protocol#439, cdc#440, checkpointMetadata#441, sidecar#442, domainMetadata#443, commitInfo#444], Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log MapPartitionsRDD[38] at save at NativeMethodAccessorImpl.java:0, ExistingRDD, UnknownPartitioning(0)\n\n(2) Project [codegen id : 1]\nOutput [6]: [txn#435, add#436, remove#437, metaData#438, protocol#439, domainMetadata#443]\nInput [10]: [txn#435, add#436, remove#437, metaData#438, protocol#439, cdc#440, checkpointMetadata#441, sidecar#442, domainMetadata#443, commitInfo#444]\n\n(3) ObjectHashAggregate\nInput [6]: [txn#435, add#436, remove#437, metaData#438, protocol#439, domainMetadata#443]\nKeys: []\nFunctions [10]: [partial_collect_set(domainMetadata#443, 0, 0), partial_collect_set(txn#435, 0, 0), partial_count(protocol#439), partial_sum(add#436.size), partial_last(metaData#438, true), partial_count(metaData#438), partial_last(protocol#439, true), partial_count(remove#437), partial_count(add#436), partial_count(txn#435)]\nAggregate Attributes [12]: [buf#568, buf#569, count#570L, sum#571L, last#572, valueSet#573, count#574L, last#575, valueSet#576, count#577L, count#578L, count#579L]\nResults [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\n\n(4) Exchange\nInput [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=352]\n\n(5) ShuffleQueryStage\nOutput [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\nArguments: 0\n\n(6) ObjectHashAggregate\nInput [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\nKeys: []\nFunctions [10]: [collect_set(domainMetadata#443, 0, 0), collect_set(txn#435, 0, 0), count(protocol#439), sum(add#436.size), last(metaData#438, true), count(metaData#438), last(protocol#439, true), count(remove#437), count(add#436), count(txn#435)]\nAggregate Attributes [10]: [collect_set(domainMetadata#443, 0, 0)#493, collect_set(txn#435, 0, 0)#492, count(protocol#439)#491L, sum(add#436.size)#486L, last(metaData#438) ignore nulls#494, count(metaData#438)#490L, last(protocol#439) ignore nulls#495, count(remove#437)#489L, count(add#436)#488L, count(txn#435)#487L]\nResults [11]: [collect_set(domainMetadata#443, 0, 0)#493 AS domainMetadata#499, null AS fileSizeHistogram#500, collect_set(txn#435, 0, 0)#492 AS setTransactions#501, count(protocol#439)#491L AS numOfProtocol#502L, coalesce(sum(add#436.size)#486L, 0) AS sizeInBytes#503L, last(metaData#438) ignore nulls#494 AS metadata#504, count(metaData#438)#490L AS numOfMetadata#505L, last(protocol#439) ignore nulls#495 AS protocol#506, count(remove#437)#489L AS numOfRemoves#507L, count(add#436)#488L AS numOfFiles#508L, count(txn#435)#487L AS numOfSetTransactions#509L]\n\n(7) ObjectHashAggregate\nInput [6]: [txn#435, add#436, remove#437, metaData#438, protocol#439, domainMetadata#443]\nKeys: []\nFunctions [10]: [partial_collect_set(domainMetadata#443, 0, 0), partial_collect_set(txn#435, 0, 0), partial_count(protocol#439), partial_sum(add#436.size), partial_last(metaData#438, true), partial_count(metaData#438), partial_last(protocol#439, true), partial_count(remove#437), partial_count(add#436), partial_count(txn#435)]\nAggregate Attributes [12]: [buf#568, buf#569, count#570L, sum#571L, last#572, valueSet#573, count#574L, last#575, valueSet#576, count#577L, count#578L, count#579L]\nResults [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\n\n(8) Exchange\nInput [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=342]\n\n(9) ObjectHashAggregate\nInput [12]: [buf#580, buf#581, count#582L, sum#583L, last#584, valueSet#585, count#586L, last#587, valueSet#588, count#589L, count#590L, count#591L]\nKeys: []\nFunctions [10]: [collect_set(domainMetadata#443, 0, 0), collect_set(txn#435, 0, 0), count(protocol#439), sum(add#436.size), last(metaData#438, true), count(metaData#438), last(protocol#439, true), count(remove#437), count(add#436), count(txn#435)]\nAggregate Attributes [10]: [collect_set(domainMetadata#443, 0, 0)#493, collect_set(txn#435, 0, 0)#492, count(protocol#439)#491L, sum(add#436.size)#486L, last(metaData#438) ignore nulls#494, count(metaData#438)#490L, last(protocol#439) ignore nulls#495, count(remove#437)#489L, count(add#436)#488L, count(txn#435)#487L]\nResults [11]: [collect_set(domainMetadata#443, 0, 0)#493 AS domainMetadata#499, null AS fileSizeHistogram#500, collect_set(txn#435, 0, 0)#492 AS setTransactions#501, count(protocol#439)#491L AS numOfProtocol#502L, coalesce(sum(add#436.size)#486L, 0) AS sizeInBytes#503L, last(metaData#438) ignore nulls#494 AS metadata#504, count(metaData#438)#490L AS numOfMetadata#505L, last(protocol#439) ignore nulls#495 AS protocol#506, count(remove#437)#489L AS numOfRemoves#507L, count(add#436)#488L AS numOfFiles#508L, count(txn#435)#487L AS numOfSetTransactions#509L]\n\n(10) AdaptiveSparkPlan\nOutput [11]: [domainMetadata#499, fileSizeHistogram#500, setTransactions#501, numOfProtocol#502L, sizeInBytes#503L, metadata#504, numOfMetadata#505L, protocol#506, numOfRemoves#507L, numOfFiles#508L, numOfSetTransactions#509L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"ObjectHashAggregate","simpleString":"ObjectHashAggregate(keys=[], functions=[collect_set(domainMetadata#443, 0, 0), collect_set(txn#435, 0, 0), count(protocol#439), sum(add#436.size), last(metaData#438, true), count(metaData#438), last(protocol#439, true), count(remove#437), count(add#436), count(txn#435)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=352]","children":[{"nodeName":"ObjectHashAggregate","simpleString":"ObjectHashAggregate(keys=[], functions=[partial_collect_set(domainMetadata#443, 0, 0), partial_collect_set(txn#435, 0, 0), partial_count(protocol#439), partial_sum(add#436.size), partial_last(metaData#438, true), partial_count(metaData#438), partial_last(protocol#439, true), partial_count(remove#437), partial_count(add#436), partial_count(txn#435)])","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [txn#435, add#436, remove#437, metaData#438, protocol#439, domainMetadata#443]","children":[{"nodeName":"Scan ExistingRDD Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log","simpleString":"Scan ExistingRDD Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log[txn#435,add#436,remove#437,metaData#438,protocol#439,cdc#440,checkpointMetadata#441,sidecar#442,domainMetadata#443,commitInfo#444]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":521,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":552,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":548,"metricType":"sum"},{"name":"time in aggregation build","accumulatorId":549,"metricType":"timing"},{"name":"spill size","accumulatorId":550,"metricType":"size"},{"name":"number of sort fallback tasks","accumulatorId":551,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":546,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":540,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":547,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":541,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":538,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":535,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":544,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":537,"metricType":"sum"},{"name":"records read","accumulatorId":534,"metricType":"sum"},{"name":"local bytes read","accumulatorId":532,"metricType":"size"},{"name":"fetch wait time","accumulatorId":533,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":530,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":536,"metricType":"sum"},{"name":"local blocks read","accumulatorId":529,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":539,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":528,"metricType":"sum"},{"name":"data size","accumulatorId":526,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":542,"metricType":"size"},{"name":"number of partitions","accumulatorId":527,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":543,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":531,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":545,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":522,"metricType":"sum"},{"name":"time in aggregation build","accumulatorId":523,"metricType":"timing"},{"name":"spill size","accumulatorId":524,"metricType":"size"},{"name":"number of sort fallback tasks","accumulatorId":525,"metricType":"sum"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":9,"Submission Time":1720042857646,"Stage Infos":[{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"96\",\"name\":\"mapPartitionsInternal\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"95\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"93\",\"name\":\"ObjectHashAggregate\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[11],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"71\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"72\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"Scan json \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":50,"RDD Info":[{"RDD ID":41,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"ObjectHashAggregate\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"80\",\"name\":\"DeserializeToObject\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"79\",\"name\":\"MapPartitions\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"76\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"81\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"Delta Table State #0 - file:/opt/bitnami/spark/storage/rides/delta/rides/_delta_log","Scope":"{\"id\":\"87\",\"name\":\"map\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[37],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"86\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"90\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"SQLExecutionRDD","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[10],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[12,10,11],"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"97\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"7","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.job.description":"Delta: Compute snapshot for version: 0","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"96\",\"name\":\"mapPartitionsInternal\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"95\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"93\",\"name\":\"ObjectHashAggregate\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[11],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042857648,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"97\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"7","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.job.description":"Delta: Compute snapshot for version: 0","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":12,"Stage Attempt ID":0,"Task Info":{"Task ID":61,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042857655,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":12,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":61,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042857655,"Executor ID":"1","Host":"172.24.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857697,"Failed":false,"Killed":false,"Accumulables":[{"ID":522,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":523,"Name":"time in aggregation build","Update":"20","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":524,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":529,"Name":"local blocks read","Update":"50","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":532,"Name":"local bytes read","Update":"5550","Value":"5550","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":533,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":534,"Name":"records read","Update":"50","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":588,"Name":"internal.metrics.executorDeserializeTime","Update":10,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":589,"Name":"internal.metrics.executorDeserializeCpuTime","Update":6375290,"Value":6375290,"Internal":true,"Count Failed Values":true},{"ID":590,"Name":"internal.metrics.executorRunTime","Update":28,"Value":28,"Internal":true,"Count Failed Values":true},{"ID":591,"Name":"internal.metrics.executorCpuTime","Update":23322334,"Value":23322334,"Internal":true,"Count Failed Values":true},{"ID":592,"Name":"internal.metrics.resultSize","Update":7162,"Value":7162,"Internal":true,"Count Failed Values":true},{"ID":599,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":600,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":50,"Value":50,"Internal":true,"Count Failed Values":true},{"ID":601,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":602,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":603,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":5550,"Value":5550,"Internal":true,"Count Failed Values":true},{"ID":604,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":605,"Name":"internal.metrics.shuffle.read.recordsRead","Update":50,"Value":50,"Internal":true,"Count Failed Values":true},{"ID":606,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":607,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":608,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":609,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":610,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":611,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":612,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":613,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":614,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":615,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":10,"Executor Deserialize CPU Time":6375290,"Executor Run Time":28,"Executor CPU Time":23322334,"Peak Execution Memory":0,"Result Size":7162,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":50,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":5550,"Total Records Read":50,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"96\",\"name\":\"mapPartitionsInternal\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"95\",\"name\":\"Exchange\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"93\",\"name\":\"ObjectHashAggregate\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[11],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042857648,"Completion Time":1720042857699,"Accumulables":[{"ID":522,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":523,"Name":"time in aggregation build","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":524,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":529,"Name":"local blocks read","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":532,"Name":"local bytes read","Value":"5550","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":533,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":534,"Name":"records read","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":588,"Name":"internal.metrics.executorDeserializeTime","Value":10,"Internal":true,"Count Failed Values":true},{"ID":589,"Name":"internal.metrics.executorDeserializeCpuTime","Value":6375290,"Internal":true,"Count Failed Values":true},{"ID":590,"Name":"internal.metrics.executorRunTime","Value":28,"Internal":true,"Count Failed Values":true},{"ID":591,"Name":"internal.metrics.executorCpuTime","Value":23322334,"Internal":true,"Count Failed Values":true},{"ID":592,"Name":"internal.metrics.resultSize","Value":7162,"Internal":true,"Count Failed Values":true},{"ID":599,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":600,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":50,"Internal":true,"Count Failed Values":true},{"ID":601,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":602,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":603,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":5550,"Internal":true,"Count Failed Values":true},{"ID":604,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":605,"Name":"internal.metrics.shuffle.read.recordsRead","Value":50,"Internal":true,"Count Failed Values":true},{"ID":606,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":607,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":608,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":609,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":610,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":611,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":612,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":613,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":614,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":615,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":9,"Completion Time":1720042857702,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":7,"time":1720042857731,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":8,"rootExecutionId":4,"description":"save at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (13)\n+- Project (12)\n   +- BroadcastHashJoin Inner BuildRight (11)\n      :- Project (7)\n      :  +- BroadcastHashJoin Inner BuildRight (6)\n      :     :- Filter (2)\n      :     :  +- Scan parquet  (1)\n      :     +- BroadcastExchange (5)\n      :        +- Filter (4)\n      :           +- Scan csv  (3)\n      +- BroadcastExchange (10)\n         +- Filter (9)\n            +- Scan csv  (8)\n\n\n(1) Scan parquet \nOutput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nBatched: true\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01.parquet, ... 11 entries]\nPushedFilters: [IsNotNull(PULocationID), IsNotNull(DOLocationID)]\nReadSchema: struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,dropoff_datetime:timestamp_ntz,PULocationID:bigint,DOLocationID:bigint,trip_miles:double,trip_time:bigint,base_passenger_fare:double,tolls:double,bcf:double,sales_tax:double,congestion_surcharge:double,tips:double,driver_pay:double,shared_request_flag:string,shared_match_flag:string>\n\n(2) Filter\nInput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nCondition : (isnotnull(PULocationID#7L) AND isnotnull(DOLocationID#8L))\n\n(3) Scan csv \nOutput [3]: [LocationID#65, Borough#66, Zone#67]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/zones.csv]\nPushedFilters: [IsNotNull(LocationID)]\nReadSchema: struct<LocationID:string,Borough:string,Zone:string>\n\n(4) Filter\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nCondition : isnotnull(LocationID#65)\n\n(5) BroadcastExchange\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nArguments: HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=404]\n\n(6) BroadcastHashJoin\nLeft keys [1]: [cast(PULocationID#7L as int)]\nRight keys [1]: [cast(LocationID#65 as int)]\nJoin type: Inner\nJoin condition: None\n\n(7) Project\nOutput [18]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]\nInput [20]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, LocationID#65, Borough#66, Zone#67]\n\n(8) Scan csv \nOutput [3]: [LocationID#77, Borough#78, Zone#79]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/zones.csv]\nPushedFilters: [IsNotNull(LocationID)]\nReadSchema: struct<LocationID:string,Borough:string,Zone:string>\n\n(9) Filter\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nCondition : isnotnull(LocationID#77)\n\n(10) BroadcastExchange\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nArguments: HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=408]\n\n(11) BroadcastHashJoin\nLeft keys [1]: [DOLocationID#8L]\nRight keys [1]: [cast(LocationID#77 as bigint)]\nJoin type: Inner\nJoin condition: None\n\n(12) Project\nOutput [19]: [hvfhs_license_num#0, Borough#66 AS PU_Borough#73, Zone#67 AS PU_Zone#74, Borough#78 AS DO_Borough#75, Zone#79 AS DO_Zone#76, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nInput [21]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67, LocationID#77, Borough#78, Zone#79]\n\n(13) AdaptiveSparkPlan\nOutput [19]: [hvfhs_license_num#0, PU_Borough#73, PU_Zone#74, DO_Borough#75, DO_Zone#76, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Project","simpleString":"Project [hvfhs_license_num#0, Borough#66 AS PU_Borough#73, Zone#67 AS PU_Zone#74, Borough#78 AS DO_Borough#75, Zone#79 AS DO_Zone#76, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [DOLocationID#8L], [cast(LocationID#77 as bigint)], Inner, BuildRight, false","children":[{"nodeName":"Project","simpleString":"Project [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [cast(PULocationID#7L as int)], [cast(LocationID#65 as int)], Inner, BuildRight, false","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(PULocationID#7L) AND isnotnull(DOLocationID#8L))","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [hvfhs_license_num#0,request_datetime#3,pickup_datetime#5,dropoff_datetime#6,PULocationID#7L,DOLocationID#8L,trip_miles#9,trip_time#10L,base_passenger_fare#11,tolls#12,bcf#13,sales_tax#14,congestion_surcharge#15,tips#17,driver_pay#18,shared_request_flag#19,shared_match_flag#20] Batched: true, DataFilters: [isnotnull(PULocationID#7L), isnotnull(DOLocationID#8L)], Format: Parquet, Location: InMemoryFileIndex(12 paths)[file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01..., PartitionFilters: [], PushedFilters: [IsNotNull(PULocationID), IsNotNull(DOLocationID)], ReadSchema: struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,drop...","children":[],"metadata":{"Location":"InMemoryFileIndex(12 paths)[file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01.parquet, file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-02.parquet, ...]","ReadSchema":"struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,dropoff_datetime:timestamp_ntz,PULocationID:bigint,DOLocationID:bigint,trip_miles:double,trip_time:bigint,base_passenger_fare:double,tolls:double,bcf:double,sales_tax:double,congestion_surcharge:double,tips:double,driver_pay:double,shared_request_flag:string,shared_match_flag:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(PULocationID), IsNotNull(DOLocationID)]","DataFilters":"[isnotnull(PULocationID#7L), isnotnull(DOLocationID#8L)]"},"metrics":[{"name":"number of files read","accumulatorId":628,"metricType":"sum"},{"name":"scan time","accumulatorId":627,"metricType":"timing"},{"name":"metadata time","accumulatorId":629,"metricType":"timing"},{"name":"size of files read","accumulatorId":630,"metricType":"size"},{"name":"number of output rows","accumulatorId":626,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":625,"metricType":"sum"}]},{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=404]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(LocationID#65)","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [LocationID#65,Borough#66,Zone#67] Batched: false, DataFilters: [isnotnull(LocationID#65)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LocationID)], ReadSchema: struct<LocationID:string,Borough:string,Zone:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv]","ReadSchema":"struct<LocationID:string,Borough:string,Zone:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(LocationID)]","DataFilters":"[isnotnull(LocationID#65)]"},"metrics":[{"name":"number of output rows","accumulatorId":637,"metricType":"sum"},{"name":"number of files read","accumulatorId":638,"metricType":"sum"},{"name":"metadata time","accumulatorId":639,"metricType":"timing"},{"name":"size of files read","accumulatorId":640,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":636,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":635,"metricType":"timing"},{"name":"time to build","accumulatorId":634,"metricType":"timing"},{"name":"time to collect","accumulatorId":633,"metricType":"timing"},{"name":"number of output rows","accumulatorId":632,"metricType":"sum"},{"name":"data size","accumulatorId":631,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":624,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=408]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(LocationID#77)","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [LocationID#77,Borough#78,Zone#79] Batched: false, DataFilters: [isnotnull(LocationID#77)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LocationID)], ReadSchema: struct<LocationID:string,Borough:string,Zone:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv]","ReadSchema":"struct<LocationID:string,Borough:string,Zone:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(LocationID)]","DataFilters":"[isnotnull(LocationID#77)]"},"metrics":[{"name":"number of output rows","accumulatorId":647,"metricType":"sum"},{"name":"number of files read","accumulatorId":648,"metricType":"sum"},{"name":"metadata time","accumulatorId":649,"metricType":"timing"},{"name":"size of files read","accumulatorId":650,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":646,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":645,"metricType":"timing"},{"name":"time to build","accumulatorId":644,"metricType":"timing"},{"name":"time to collect","accumulatorId":643,"metricType":"timing"},{"name":"number of output rows","accumulatorId":642,"metricType":"sum"},{"name":"data size","accumulatorId":641,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":623,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]},"time":1720042857825,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":8,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (23)\n+- == Current Plan ==\n   Project (14)\n   +- BroadcastHashJoin Inner BuildRight (13)\n      :- Project (8)\n      :  +- BroadcastHashJoin Inner BuildRight (7)\n      :     :- Filter (2)\n      :     :  +- Scan parquet  (1)\n      :     +- BroadcastQueryStage (6)\n      :        +- BroadcastExchange (5)\n      :           +- * Filter (4)\n      :              +- Scan csv  (3)\n      +- BroadcastQueryStage (12)\n         +- BroadcastExchange (11)\n            +- * Filter (10)\n               +- Scan csv  (9)\n+- == Initial Plan ==\n   Project (22)\n   +- BroadcastHashJoin Inner BuildRight (21)\n      :- Project (18)\n      :  +- BroadcastHashJoin Inner BuildRight (17)\n      :     :- Filter (2)\n      :     :  +- Scan parquet  (1)\n      :     +- BroadcastExchange (16)\n      :        +- Filter (15)\n      :           +- Scan csv  (3)\n      +- BroadcastExchange (20)\n         +- Filter (19)\n            +- Scan csv  (9)\n\n\n(1) Scan parquet \nOutput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nBatched: true\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01.parquet, ... 11 entries]\nPushedFilters: [IsNotNull(PULocationID), IsNotNull(DOLocationID)]\nReadSchema: struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,dropoff_datetime:timestamp_ntz,PULocationID:bigint,DOLocationID:bigint,trip_miles:double,trip_time:bigint,base_passenger_fare:double,tolls:double,bcf:double,sales_tax:double,congestion_surcharge:double,tips:double,driver_pay:double,shared_request_flag:string,shared_match_flag:string>\n\n(2) Filter\nInput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nCondition : (isnotnull(PULocationID#7L) AND isnotnull(DOLocationID#8L))\n\n(3) Scan csv \nOutput [3]: [LocationID#65, Borough#66, Zone#67]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/zones.csv]\nPushedFilters: [IsNotNull(LocationID)]\nReadSchema: struct<LocationID:string,Borough:string,Zone:string>\n\n(4) Filter [codegen id : 1]\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nCondition : isnotnull(LocationID#65)\n\n(5) BroadcastExchange\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nArguments: HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=419]\n\n(6) BroadcastQueryStage\nOutput [3]: [LocationID#65, Borough#66, Zone#67]\nArguments: 0\n\n(7) BroadcastHashJoin\nLeft keys [1]: [cast(PULocationID#7L as int)]\nRight keys [1]: [cast(LocationID#65 as int)]\nJoin type: Inner\nJoin condition: None\n\n(8) Project\nOutput [18]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]\nInput [20]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, LocationID#65, Borough#66, Zone#67]\n\n(9) Scan csv \nOutput [3]: [LocationID#77, Borough#78, Zone#79]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/zones.csv]\nPushedFilters: [IsNotNull(LocationID)]\nReadSchema: struct<LocationID:string,Borough:string,Zone:string>\n\n(10) Filter [codegen id : 2]\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nCondition : isnotnull(LocationID#77)\n\n(11) BroadcastExchange\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nArguments: HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=435]\n\n(12) BroadcastQueryStage\nOutput [3]: [LocationID#77, Borough#78, Zone#79]\nArguments: 1\n\n(13) BroadcastHashJoin\nLeft keys [1]: [DOLocationID#8L]\nRight keys [1]: [cast(LocationID#77 as bigint)]\nJoin type: Inner\nJoin condition: None\n\n(14) Project\nOutput [19]: [hvfhs_license_num#0, Borough#66 AS PU_Borough#73, Zone#67 AS PU_Zone#74, Borough#78 AS DO_Borough#75, Zone#79 AS DO_Zone#76, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nInput [21]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67, LocationID#77, Borough#78, Zone#79]\n\n(15) Filter\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nCondition : isnotnull(LocationID#65)\n\n(16) BroadcastExchange\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nArguments: HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=404]\n\n(17) BroadcastHashJoin\nLeft keys [1]: [cast(PULocationID#7L as int)]\nRight keys [1]: [cast(LocationID#65 as int)]\nJoin type: Inner\nJoin condition: None\n\n(18) Project\nOutput [18]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]\nInput [20]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, LocationID#65, Borough#66, Zone#67]\n\n(19) Filter\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nCondition : isnotnull(LocationID#77)\n\n(20) BroadcastExchange\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nArguments: HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=408]\n\n(21) BroadcastHashJoin\nLeft keys [1]: [DOLocationID#8L]\nRight keys [1]: [cast(LocationID#77 as bigint)]\nJoin type: Inner\nJoin condition: None\n\n(22) Project\nOutput [19]: [hvfhs_license_num#0, Borough#66 AS PU_Borough#73, Zone#67 AS PU_Zone#74, Borough#78 AS DO_Borough#75, Zone#79 AS DO_Zone#76, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nInput [21]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67, LocationID#77, Borough#78, Zone#79]\n\n(23) AdaptiveSparkPlan\nOutput [19]: [hvfhs_license_num#0, PU_Borough#73, PU_Zone#74, DO_Borough#75, DO_Zone#76, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Project","simpleString":"Project [hvfhs_license_num#0, Borough#66 AS PU_Borough#73, Zone#67 AS PU_Zone#74, Borough#78 AS DO_Borough#75, Zone#79 AS DO_Zone#76, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [DOLocationID#8L], [cast(LocationID#77 as bigint)], Inner, BuildRight, false","children":[{"nodeName":"Project","simpleString":"Project [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [cast(PULocationID#7L as int)], [cast(LocationID#65 as int)], Inner, BuildRight, false","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(PULocationID#7L) AND isnotnull(DOLocationID#8L))","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [hvfhs_license_num#0,request_datetime#3,pickup_datetime#5,dropoff_datetime#6,PULocationID#7L,DOLocationID#8L,trip_miles#9,trip_time#10L,base_passenger_fare#11,tolls#12,bcf#13,sales_tax#14,congestion_surcharge#15,tips#17,driver_pay#18,shared_request_flag#19,shared_match_flag#20] Batched: true, DataFilters: [isnotnull(PULocationID#7L), isnotnull(DOLocationID#8L)], Format: Parquet, Location: InMemoryFileIndex(12 paths)[file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01..., PartitionFilters: [], PushedFilters: [IsNotNull(PULocationID), IsNotNull(DOLocationID)], ReadSchema: struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,drop...","children":[],"metadata":{"Location":"InMemoryFileIndex(12 paths)[file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01.parquet, file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-02.parquet, ...]","ReadSchema":"struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,dropoff_datetime:timestamp_ntz,PULocationID:bigint,DOLocationID:bigint,trip_miles:double,trip_time:bigint,base_passenger_fare:double,tolls:double,bcf:double,sales_tax:double,congestion_surcharge:double,tips:double,driver_pay:double,shared_request_flag:string,shared_match_flag:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(PULocationID), IsNotNull(DOLocationID)]","DataFilters":"[isnotnull(PULocationID#7L), isnotnull(DOLocationID#8L)]"},"metrics":[{"name":"number of files read","accumulatorId":628,"metricType":"sum"},{"name":"scan time","accumulatorId":627,"metricType":"timing"},{"name":"metadata time","accumulatorId":629,"metricType":"timing"},{"name":"size of files read","accumulatorId":630,"metricType":"size"},{"name":"number of output rows","accumulatorId":626,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":625,"metricType":"sum"}]},{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 0","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=419]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(LocationID#65)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [LocationID#65,Borough#66,Zone#67] Batched: false, DataFilters: [isnotnull(LocationID#65)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LocationID)], ReadSchema: struct<LocationID:string,Borough:string,Zone:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv]","ReadSchema":"struct<LocationID:string,Borough:string,Zone:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(LocationID)]","DataFilters":"[isnotnull(LocationID#65)]"},"metrics":[{"name":"number of output rows","accumulatorId":637,"metricType":"sum"},{"name":"number of files read","accumulatorId":638,"metricType":"sum"},{"name":"metadata time","accumulatorId":639,"metricType":"timing"},{"name":"size of files read","accumulatorId":640,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":665,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":664,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":663,"metricType":"timing"},{"name":"time to build","accumulatorId":662,"metricType":"timing"},{"name":"time to collect","accumulatorId":661,"metricType":"timing"},{"name":"number of output rows","accumulatorId":660,"metricType":"sum"},{"name":"data size","accumulatorId":659,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":658,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 1","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=435]","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(LocationID#77)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [LocationID#77,Borough#78,Zone#79] Batched: false, DataFilters: [isnotnull(LocationID#77)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LocationID)], ReadSchema: struct<LocationID:string,Borough:string,Zone:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv]","ReadSchema":"struct<LocationID:string,Borough:string,Zone:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(LocationID)]","DataFilters":"[isnotnull(LocationID#77)]"},"metrics":[{"name":"number of output rows","accumulatorId":647,"metricType":"sum"},{"name":"number of files read","accumulatorId":648,"metricType":"sum"},{"name":"metadata time","accumulatorId":649,"metricType":"timing"},{"name":"size of files read","accumulatorId":650,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":672,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":671,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":670,"metricType":"timing"},{"name":"time to build","accumulatorId":669,"metricType":"timing"},{"name":"time to collect","accumulatorId":668,"metricType":"timing"},{"name":"number of output rows","accumulatorId":667,"metricType":"sum"},{"name":"data size","accumulatorId":666,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":657,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":8,"accumUpdates":[[648,1],[649,0],[650,12331]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":8,"accumUpdates":[[638,1],[639,0],[640,12331]]}
{"Event":"SparkListenerJobStart","Job ID":10,"Submission Time":1720042857877,"Stage Infos":[{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"116\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"FileScanRDD","Scope":"{\"id\":\"124\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"120\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"124\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[13],"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"116\",\"name\":\"BroadcastExchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"8","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.job.interruptOnCancel":"true","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.job.tags":"broadcast exchange (runId 29394293-2d94-4a9e-b624-a005c37d5789)","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"116\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"FileScanRDD","Scope":"{\"id\":\"124\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"120\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"124\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042857877,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"116\",\"name\":\"BroadcastExchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"8","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.job.interruptOnCancel":"true","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.job.tags":"broadcast exchange (runId 29394293-2d94-4a9e-b624-a005c37d5789)","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerJobStart","Job ID":11,"Submission Time":1720042857889,"Stage Infos":[{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"115\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"FileScanRDD","Scope":"{\"id\":\"123\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"123\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"117\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[14],"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"115\",\"name\":\"BroadcastExchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"8","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.job.interruptOnCancel":"true","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.job.tags":"broadcast exchange (runId c450417b-417b-428d-82ad-ac1c6c5d0ca4)","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"115\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"FileScanRDD","Scope":"{\"id\":\"123\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"123\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"117\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042857890,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"115\",\"name\":\"BroadcastExchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"8","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.job.interruptOnCancel":"true","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.job.tags":"broadcast exchange (runId c450417b-417b-428d-82ad-ac1c6c5d0ca4)","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":13,"Stage Attempt ID":0,"Task Info":{"Task ID":62,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042857882,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":14,"Stage Attempt ID":0,"Task Info":{"Task ID":63,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042857898,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":14,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":63,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042857898,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042857965,"Failed":false,"Killed":false,"Accumulables":[{"ID":637,"Name":"number of output rows","Update":"265","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":664,"Name":"duration","Update":"36","Value":"36","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":665,"Name":"number of output rows","Update":"265","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":708,"Name":"internal.metrics.executorDeserializeTime","Update":19,"Value":19,"Internal":true,"Count Failed Values":true},{"ID":709,"Name":"internal.metrics.executorDeserializeCpuTime","Update":10538461,"Value":10538461,"Internal":true,"Count Failed Values":true},{"ID":710,"Name":"internal.metrics.executorRunTime","Update":38,"Value":38,"Internal":true,"Count Failed Values":true},{"ID":711,"Name":"internal.metrics.executorCpuTime","Update":27114292,"Value":27114292,"Internal":true,"Count Failed Values":true},{"ID":712,"Name":"internal.metrics.resultSize","Update":9337,"Value":9337,"Internal":true,"Count Failed Values":true},{"ID":739,"Name":"internal.metrics.input.bytesRead","Update":12331,"Value":12331,"Internal":true,"Count Failed Values":true},{"ID":740,"Name":"internal.metrics.input.recordsRead","Update":265,"Value":265,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":19,"Executor Deserialize CPU Time":10538461,"Executor Run Time":38,"Executor CPU Time":27114292,"Peak Execution Memory":0,"Result Size":9337,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":12331,"Records Read":265},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"115\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"FileScanRDD","Scope":"{\"id\":\"123\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"123\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"117\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042857890,"Completion Time":1720042857966,"Accumulables":[{"ID":637,"Name":"number of output rows","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":664,"Name":"duration","Value":"36","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":665,"Name":"number of output rows","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":708,"Name":"internal.metrics.executorDeserializeTime","Value":19,"Internal":true,"Count Failed Values":true},{"ID":709,"Name":"internal.metrics.executorDeserializeCpuTime","Value":10538461,"Internal":true,"Count Failed Values":true},{"ID":710,"Name":"internal.metrics.executorRunTime","Value":38,"Internal":true,"Count Failed Values":true},{"ID":711,"Name":"internal.metrics.executorCpuTime","Value":27114292,"Internal":true,"Count Failed Values":true},{"ID":712,"Name":"internal.metrics.resultSize","Value":9337,"Internal":true,"Count Failed Values":true},{"ID":739,"Name":"internal.metrics.input.bytesRead","Value":12331,"Internal":true,"Count Failed Values":true},{"ID":740,"Name":"internal.metrics.input.recordsRead","Value":265,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":11,"Completion Time":1720042857966,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":8,"accumUpdates":[[663,2],[662,2],[661,116],[660,265],[659,1050696]]}
{"Event":"SparkListenerTaskEnd","Stage ID":13,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":62,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042857882,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042858010,"Failed":false,"Killed":false,"Accumulables":[{"ID":647,"Name":"number of output rows","Update":"265","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":671,"Name":"duration","Update":"76","Value":"76","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":672,"Name":"number of output rows","Update":"265","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":673,"Name":"internal.metrics.executorDeserializeTime","Update":30,"Value":30,"Internal":true,"Count Failed Values":true},{"ID":674,"Name":"internal.metrics.executorDeserializeCpuTime","Update":19605668,"Value":19605668,"Internal":true,"Count Failed Values":true},{"ID":675,"Name":"internal.metrics.executorRunTime","Update":83,"Value":83,"Internal":true,"Count Failed Values":true},{"ID":676,"Name":"internal.metrics.executorCpuTime","Update":64962506,"Value":64962506,"Internal":true,"Count Failed Values":true},{"ID":677,"Name":"internal.metrics.resultSize","Update":9380,"Value":9380,"Internal":true,"Count Failed Values":true},{"ID":678,"Name":"internal.metrics.jvmGCTime","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":704,"Name":"internal.metrics.input.bytesRead","Update":12331,"Value":12331,"Internal":true,"Count Failed Values":true},{"ID":705,"Name":"internal.metrics.input.recordsRead","Update":265,"Value":265,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":30,"Executor Deserialize CPU Time":19605668,"Executor Run Time":83,"Executor CPU Time":64962506,"Peak Execution Memory":0,"Result Size":9380,"JVM GC Time":3,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":12331,"Records Read":265},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"116\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"FileScanRDD","Scope":"{\"id\":\"124\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"120\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"124\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042857877,"Completion Time":1720042858011,"Accumulables":[{"ID":647,"Name":"number of output rows","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":671,"Name":"duration","Value":"76","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":672,"Name":"number of output rows","Value":"265","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":673,"Name":"internal.metrics.executorDeserializeTime","Value":30,"Internal":true,"Count Failed Values":true},{"ID":674,"Name":"internal.metrics.executorDeserializeCpuTime","Value":19605668,"Internal":true,"Count Failed Values":true},{"ID":675,"Name":"internal.metrics.executorRunTime","Value":83,"Internal":true,"Count Failed Values":true},{"ID":676,"Name":"internal.metrics.executorCpuTime","Value":64962506,"Internal":true,"Count Failed Values":true},{"ID":677,"Name":"internal.metrics.resultSize","Value":9380,"Internal":true,"Count Failed Values":true},{"ID":678,"Name":"internal.metrics.jvmGCTime","Value":3,"Internal":true,"Count Failed Values":true},{"ID":704,"Name":"internal.metrics.input.bytesRead","Value":12331,"Internal":true,"Count Failed Values":true},{"ID":705,"Name":"internal.metrics.input.recordsRead","Value":265,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":10,"Completion Time":1720042858011,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":8,"accumUpdates":[[670,2],[669,1],[668,161],[667,265],[666,1050696]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":8,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (25)\n+- == Final Plan ==\n   * Project (15)\n   +- * BroadcastHashJoin Inner BuildRight (14)\n      :- * Project (9)\n      :  +- * BroadcastHashJoin Inner BuildRight (8)\n      :     :- * Filter (3)\n      :     :  +- * ColumnarToRow (2)\n      :     :     +- Scan parquet  (1)\n      :     +- BroadcastQueryStage (7), Statistics(sizeInBytes=1026.1 KiB, rowCount=265)\n      :        +- BroadcastExchange (6)\n      :           +- * Filter (5)\n      :              +- Scan csv  (4)\n      +- BroadcastQueryStage (13), Statistics(sizeInBytes=1026.1 KiB, rowCount=265)\n         +- BroadcastExchange (12)\n            +- * Filter (11)\n               +- Scan csv  (10)\n+- == Initial Plan ==\n   Project (24)\n   +- BroadcastHashJoin Inner BuildRight (23)\n      :- Project (20)\n      :  +- BroadcastHashJoin Inner BuildRight (19)\n      :     :- Filter (16)\n      :     :  +- Scan parquet  (1)\n      :     +- BroadcastExchange (18)\n      :        +- Filter (17)\n      :           +- Scan csv  (4)\n      +- BroadcastExchange (22)\n         +- Filter (21)\n            +- Scan csv  (10)\n\n\n(1) Scan parquet \nOutput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nBatched: true\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01.parquet, ... 11 entries]\nPushedFilters: [IsNotNull(PULocationID), IsNotNull(DOLocationID)]\nReadSchema: struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,dropoff_datetime:timestamp_ntz,PULocationID:bigint,DOLocationID:bigint,trip_miles:double,trip_time:bigint,base_passenger_fare:double,tolls:double,bcf:double,sales_tax:double,congestion_surcharge:double,tips:double,driver_pay:double,shared_request_flag:string,shared_match_flag:string>\n\n(2) ColumnarToRow [codegen id : 3]\nInput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\n\n(3) Filter [codegen id : 3]\nInput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nCondition : (isnotnull(PULocationID#7L) AND isnotnull(DOLocationID#8L))\n\n(4) Scan csv \nOutput [3]: [LocationID#65, Borough#66, Zone#67]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/zones.csv]\nPushedFilters: [IsNotNull(LocationID)]\nReadSchema: struct<LocationID:string,Borough:string,Zone:string>\n\n(5) Filter [codegen id : 1]\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nCondition : isnotnull(LocationID#65)\n\n(6) BroadcastExchange\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nArguments: HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=419]\n\n(7) BroadcastQueryStage\nOutput [3]: [LocationID#65, Borough#66, Zone#67]\nArguments: 0\n\n(8) BroadcastHashJoin [codegen id : 3]\nLeft keys [1]: [cast(PULocationID#7L as int)]\nRight keys [1]: [cast(LocationID#65 as int)]\nJoin type: Inner\nJoin condition: None\n\n(9) Project [codegen id : 3]\nOutput [18]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]\nInput [20]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, LocationID#65, Borough#66, Zone#67]\n\n(10) Scan csv \nOutput [3]: [LocationID#77, Borough#78, Zone#79]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/bitnami/spark/storage/tlc/zones.csv]\nPushedFilters: [IsNotNull(LocationID)]\nReadSchema: struct<LocationID:string,Borough:string,Zone:string>\n\n(11) Filter [codegen id : 2]\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nCondition : isnotnull(LocationID#77)\n\n(12) BroadcastExchange\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nArguments: HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=435]\n\n(13) BroadcastQueryStage\nOutput [3]: [LocationID#77, Borough#78, Zone#79]\nArguments: 1\n\n(14) BroadcastHashJoin [codegen id : 3]\nLeft keys [1]: [DOLocationID#8L]\nRight keys [1]: [cast(LocationID#77 as bigint)]\nJoin type: Inner\nJoin condition: None\n\n(15) Project [codegen id : 3]\nOutput [19]: [hvfhs_license_num#0, Borough#66 AS PU_Borough#73, Zone#67 AS PU_Zone#74, Borough#78 AS DO_Borough#75, Zone#79 AS DO_Zone#76, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nInput [21]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67, LocationID#77, Borough#78, Zone#79]\n\n(16) Filter\nInput [17]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nCondition : (isnotnull(PULocationID#7L) AND isnotnull(DOLocationID#8L))\n\n(17) Filter\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nCondition : isnotnull(LocationID#65)\n\n(18) BroadcastExchange\nInput [3]: [LocationID#65, Borough#66, Zone#67]\nArguments: HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=404]\n\n(19) BroadcastHashJoin\nLeft keys [1]: [cast(PULocationID#7L as int)]\nRight keys [1]: [cast(LocationID#65 as int)]\nJoin type: Inner\nJoin condition: None\n\n(20) Project\nOutput [18]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]\nInput [20]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, PULocationID#7L, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, LocationID#65, Borough#66, Zone#67]\n\n(21) Filter\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nCondition : isnotnull(LocationID#77)\n\n(22) BroadcastExchange\nInput [3]: [LocationID#77, Borough#78, Zone#79]\nArguments: HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=408]\n\n(23) BroadcastHashJoin\nLeft keys [1]: [DOLocationID#8L]\nRight keys [1]: [cast(LocationID#77 as bigint)]\nJoin type: Inner\nJoin condition: None\n\n(24) Project\nOutput [19]: [hvfhs_license_num#0, Borough#66 AS PU_Borough#73, Zone#67 AS PU_Zone#74, Borough#78 AS DO_Borough#75, Zone#79 AS DO_Zone#76, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nInput [21]: [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67, LocationID#77, Borough#78, Zone#79]\n\n(25) AdaptiveSparkPlan\nOutput [19]: [hvfhs_license_num#0, PU_Borough#73, PU_Zone#74, DO_Borough#75, DO_Zone#76, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (3)","simpleString":"WholeStageCodegen (3)","children":[{"nodeName":"Project","simpleString":"Project [hvfhs_license_num#0, Borough#66 AS PU_Borough#73, Zone#67 AS PU_Zone#74, Borough#78 AS DO_Borough#75, Zone#79 AS DO_Zone#76, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [DOLocationID#8L], [cast(LocationID#77 as bigint)], Inner, BuildRight, false","children":[{"nodeName":"Project","simpleString":"Project [hvfhs_license_num#0, request_datetime#3, pickup_datetime#5, dropoff_datetime#6, DOLocationID#8L, trip_miles#9, trip_time#10L, base_passenger_fare#11, tolls#12, bcf#13, sales_tax#14, congestion_surcharge#15, tips#17, driver_pay#18, shared_request_flag#19, shared_match_flag#20, Borough#66, Zone#67]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [cast(PULocationID#7L as int)], [cast(LocationID#65 as int)], Inner, BuildRight, false","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(PULocationID#7L) AND isnotnull(DOLocationID#8L))","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [hvfhs_license_num#0,request_datetime#3,pickup_datetime#5,dropoff_datetime#6,PULocationID#7L,DOLocationID#8L,trip_miles#9,trip_time#10L,base_passenger_fare#11,tolls#12,bcf#13,sales_tax#14,congestion_surcharge#15,tips#17,driver_pay#18,shared_request_flag#19,shared_match_flag#20] Batched: true, DataFilters: [isnotnull(PULocationID#7L), isnotnull(DOLocationID#8L)], Format: Parquet, Location: InMemoryFileIndex(12 paths)[file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01..., PartitionFilters: [], PushedFilters: [IsNotNull(PULocationID), IsNotNull(DOLocationID)], ReadSchema: struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,drop...","children":[],"metadata":{"Location":"InMemoryFileIndex(12 paths)[file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-01.parquet, file:/opt/bitnami/spark/storage/tlc/fhvhv/2022/fhvhv_tripdata_2022-02.parquet, ...]","ReadSchema":"struct<hvfhs_license_num:string,request_datetime:timestamp_ntz,pickup_datetime:timestamp_ntz,dropoff_datetime:timestamp_ntz,PULocationID:bigint,DOLocationID:bigint,trip_miles:double,trip_time:bigint,base_passenger_fare:double,tolls:double,bcf:double,sales_tax:double,congestion_surcharge:double,tips:double,driver_pay:double,shared_request_flag:string,shared_match_flag:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(PULocationID), IsNotNull(DOLocationID)]","DataFilters":"[isnotnull(PULocationID#7L), isnotnull(DOLocationID#8L)]"},"metrics":[{"name":"number of files read","accumulatorId":628,"metricType":"sum"},{"name":"scan time","accumulatorId":627,"metricType":"timing"},{"name":"metadata time","accumulatorId":629,"metricType":"timing"},{"name":"size of files read","accumulatorId":630,"metricType":"size"},{"name":"number of output rows","accumulatorId":626,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":747,"metricType":"sum"},{"name":"number of input batches","accumulatorId":748,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":746,"metricType":"sum"}]},{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 0","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(cast(cast(input[0, string, false] as int) as bigint)),false), [plan_id=419]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(LocationID#65)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [LocationID#65,Borough#66,Zone#67] Batched: false, DataFilters: [isnotnull(LocationID#65)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LocationID)], ReadSchema: struct<LocationID:string,Borough:string,Zone:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv]","ReadSchema":"struct<LocationID:string,Borough:string,Zone:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(LocationID)]","DataFilters":"[isnotnull(LocationID#65)]"},"metrics":[{"name":"number of output rows","accumulatorId":637,"metricType":"sum"},{"name":"number of files read","accumulatorId":638,"metricType":"sum"},{"name":"metadata time","accumulatorId":639,"metricType":"timing"},{"name":"size of files read","accumulatorId":640,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":665,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":664,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":663,"metricType":"timing"},{"name":"time to build","accumulatorId":662,"metricType":"timing"},{"name":"time to collect","accumulatorId":661,"metricType":"timing"},{"name":"number of output rows","accumulatorId":660,"metricType":"sum"},{"name":"data size","accumulatorId":659,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":745,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 1","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, string, false] as bigint)),false), [plan_id=435]","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(LocationID#77)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [LocationID#77,Borough#78,Zone#79] Batched: false, DataFilters: [isnotnull(LocationID#77)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LocationID)], ReadSchema: struct<LocationID:string,Borough:string,Zone:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/opt/bitnami/spark/storage/tlc/zones.csv]","ReadSchema":"struct<LocationID:string,Borough:string,Zone:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(LocationID)]","DataFilters":"[isnotnull(LocationID#77)]"},"metrics":[{"name":"number of output rows","accumulatorId":647,"metricType":"sum"},{"name":"number of files read","accumulatorId":648,"metricType":"sum"},{"name":"metadata time","accumulatorId":649,"metricType":"timing"},{"name":"size of files read","accumulatorId":650,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":672,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":671,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":670,"metricType":"timing"},{"name":"time to build","accumulatorId":669,"metricType":"timing"},{"name":"time to collect","accumulatorId":668,"metricType":"timing"},{"name":"number of output rows","accumulatorId":667,"metricType":"sum"},{"name":"data size","accumulatorId":666,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":744,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":743,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":8,"accumUpdates":[[628,12],[629,0],[630,5436647219]]}
{"Event":"SparkListenerJobStart","Job ID":12,"Submission Time":1720042858063,"Stage Infos":[{"Stage ID":15,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":43,"RDD Info":[{"RDD ID":55,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"135\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"151\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"FileScanRDD","Scope":"{\"id\":\"151\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[15],"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"8","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":15,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":43,"RDD Info":[{"RDD ID":55,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"135\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"151\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"FileScanRDD","Scope":"{\"id\":\"151\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042858066,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"40137","spark.submit.pyFiles":"","spark.app.startTime":"1720042844635","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.sql.shuffle.partitions":"200","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720042844157","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"8","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.executor.memory":"1g","spark.driver.memory":"1g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.memory.storageFraction":"0.2","spark.app.name":"elt-rides-fhvhv-spill","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"add9f8b3a401","spark.app.id":"app-20240703214045-0014","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.memory.fraction":"0.4","spark.executor.extraJavaOptions":"-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=35","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":64,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042858086,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":65,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720042858086,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":66,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720042858086,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":67,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720042858087,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":68,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720042858087,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":69,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720042858087,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":70,"Index":6,"Attempt":0,"Partition ID":6,"Launch Time":1720042858400,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":68,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720042858087,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042858408,"Failed":false,"Killed":false,"Accumulables":[{"ID":627,"Name":"scan time","Update":"63","Value":"63","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"task commit time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":743,"Name":"duration","Update":"317","Value":"317","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"internal.metrics.executorDeserializeTime","Update":63,"Value":63,"Internal":true,"Count Failed Values":true},{"ID":750,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16646248,"Value":16646248,"Internal":true,"Count Failed Values":true},{"ID":751,"Name":"internal.metrics.executorRunTime","Update":241,"Value":241,"Internal":true,"Count Failed Values":true},{"ID":752,"Name":"internal.metrics.executorCpuTime","Update":124306504,"Value":124306504,"Internal":true,"Count Failed Values":true},{"ID":753,"Name":"internal.metrics.resultSize","Update":2930,"Value":2930,"Internal":true,"Count Failed Values":true},{"ID":755,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":45536,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":13001,"Value":13001,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":63,"Executor Deserialize CPU Time":16646248,"Executor Run Time":241,"Executor CPU Time":124306504,"Peak Execution Memory":45536,"Result Size":2930,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":13001,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":71,"Index":7,"Attempt":0,"Partition ID":7,"Launch Time":1720042859071,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":72,"Index":8,"Attempt":0,"Partition ID":8,"Launch Time":1720042859073,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":66,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720042858086,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042859075,"Failed":false,"Killed":false,"Accumulables":[{"ID":627,"Name":"scan time","Update":"82","Value":"145","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"task commit time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":743,"Name":"duration","Update":"866","Value":"1183","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"internal.metrics.executorDeserializeTime","Update":188,"Value":251,"Internal":true,"Count Failed Values":true},{"ID":750,"Name":"internal.metrics.executorDeserializeCpuTime","Update":64175842,"Value":80822090,"Internal":true,"Count Failed Values":true},{"ID":751,"Name":"internal.metrics.executorRunTime","Update":786,"Value":1027,"Internal":true,"Count Failed Values":true},{"ID":752,"Name":"internal.metrics.executorCpuTime","Update":446715126,"Value":571021630,"Internal":true,"Count Failed Values":true},{"ID":753,"Name":"internal.metrics.resultSize","Update":2973,"Value":5903,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":10,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":755,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":91072,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":13001,"Value":26002,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":188,"Executor Deserialize CPU Time":64175842,"Executor Run Time":786,"Executor CPU Time":446715126,"Peak Execution Memory":45536,"Result Size":2973,"JVM GC Time":10,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":13001,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":69,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720042858087,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042859076,"Failed":false,"Killed":false,"Accumulables":[{"ID":627,"Name":"scan time","Update":"109","Value":"254","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"task commit time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":743,"Name":"duration","Update":"890","Value":"2073","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"internal.metrics.executorDeserializeTime","Update":184,"Value":435,"Internal":true,"Count Failed Values":true},{"ID":750,"Name":"internal.metrics.executorDeserializeCpuTime","Update":81706205,"Value":162528295,"Internal":true,"Count Failed Values":true},{"ID":751,"Name":"internal.metrics.executorRunTime","Update":793,"Value":1820,"Internal":true,"Count Failed Values":true},{"ID":752,"Name":"internal.metrics.executorCpuTime","Update":303556121,"Value":874577751,"Internal":true,"Count Failed Values":true},{"ID":753,"Name":"internal.metrics.resultSize","Update":2930,"Value":8833,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":10,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":136608,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":13003,"Value":39005,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":184,"Executor Deserialize CPU Time":81706205,"Executor Run Time":793,"Executor CPU Time":303556121,"Peak Execution Memory":45536,"Result Size":2930,"JVM GC Time":10,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":13003,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":73,"Index":9,"Attempt":0,"Partition ID":9,"Launch Time":1720042859199,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":72,"Index":8,"Attempt":0,"Partition ID":8,"Launch Time":1720042859073,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042859202,"Failed":false,"Killed":false,"Accumulables":[{"ID":627,"Name":"scan time","Update":"31","Value":"285","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"task commit time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":743,"Name":"duration","Update":"121","Value":"2194","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"internal.metrics.executorDeserializeTime","Update":18,"Value":453,"Internal":true,"Count Failed Values":true},{"ID":750,"Name":"internal.metrics.executorDeserializeCpuTime","Update":17948042,"Value":180476337,"Internal":true,"Count Failed Values":true},{"ID":751,"Name":"internal.metrics.executorRunTime","Update":91,"Value":1911,"Internal":true,"Count Failed Values":true},{"ID":752,"Name":"internal.metrics.executorCpuTime","Update":63143129,"Value":937720880,"Internal":true,"Count Failed Values":true},{"ID":753,"Name":"internal.metrics.resultSize","Update":2930,"Value":11763,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":10,"Value":30,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":182144,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":13004,"Value":52009,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":18,"Executor Deserialize CPU Time":17948042,"Executor Run Time":91,"Executor CPU Time":63143129,"Peak Execution Memory":45536,"Result Size":2930,"JVM GC Time":10,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":13004,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":74,"Index":10,"Attempt":0,"Partition ID":10,"Launch Time":1720042859208,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":71,"Index":7,"Attempt":0,"Partition ID":7,"Launch Time":1720042859071,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042859212,"Failed":false,"Killed":false,"Accumulables":[{"ID":627,"Name":"scan time","Update":"34","Value":"319","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"task commit time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":743,"Name":"duration","Update":"137","Value":"2331","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"internal.metrics.executorDeserializeTime","Update":23,"Value":476,"Internal":true,"Count Failed Values":true},{"ID":750,"Name":"internal.metrics.executorDeserializeCpuTime","Update":17443292,"Value":197919629,"Internal":true,"Count Failed Values":true},{"ID":751,"Name":"internal.metrics.executorRunTime","Update":103,"Value":2014,"Internal":true,"Count Failed Values":true},{"ID":752,"Name":"internal.metrics.executorCpuTime","Update":57593458,"Value":995314338,"Internal":true,"Count Failed Values":true},{"ID":753,"Name":"internal.metrics.resultSize","Update":2930,"Value":14693,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":10,"Value":40,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":227680,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":13003,"Value":65012,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":23,"Executor Deserialize CPU Time":17443292,"Executor Run Time":103,"Executor CPU Time":57593458,"Peak Execution Memory":45536,"Result Size":2930,"JVM GC Time":10,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":13003,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":75,"Index":11,"Attempt":0,"Partition ID":11,"Launch Time":1720042859306,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":74,"Index":10,"Attempt":0,"Partition ID":10,"Launch Time":1720042859208,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042859307,"Failed":false,"Killed":false,"Accumulables":[{"ID":627,"Name":"scan time","Update":"14","Value":"333","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"task commit time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":743,"Name":"duration","Update":"70","Value":"2401","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"internal.metrics.executorDeserializeTime","Update":17,"Value":493,"Internal":true,"Count Failed Values":true},{"ID":750,"Name":"internal.metrics.executorDeserializeCpuTime","Update":6881333,"Value":204800962,"Internal":true,"Count Failed Values":true},{"ID":751,"Name":"internal.metrics.executorRunTime","Update":56,"Value":2070,"Internal":true,"Count Failed Values":true},{"ID":752,"Name":"internal.metrics.executorCpuTime","Update":34583665,"Value":1029898003,"Internal":true,"Count Failed Values":true},{"ID":753,"Name":"internal.metrics.resultSize","Update":2887,"Value":17580,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":273216,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":13004,"Value":78016,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":17,"Executor Deserialize CPU Time":6881333,"Executor Run Time":56,"Executor CPU Time":34583665,"Peak Execution Memory":45536,"Result Size":2887,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":13004,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":76,"Index":12,"Attempt":0,"Partition ID":12,"Launch Time":1720042859501,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":75,"Index":11,"Attempt":0,"Partition ID":11,"Launch Time":1720042859306,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042859503,"Failed":false,"Killed":false,"Accumulables":[{"ID":627,"Name":"scan time","Update":"87","Value":"420","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"task commit time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":743,"Name":"duration","Update":"223","Value":"2624","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"internal.metrics.executorDeserializeTime","Update":28,"Value":521,"Internal":true,"Count Failed Values":true},{"ID":750,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8089084,"Value":212890046,"Internal":true,"Count Failed Values":true},{"ID":751,"Name":"internal.metrics.executorRunTime","Update":138,"Value":2208,"Internal":true,"Count Failed Values":true},{"ID":752,"Name":"internal.metrics.executorCpuTime","Update":65481258,"Value":1095379261,"Internal":true,"Count Failed Values":true},{"ID":753,"Name":"internal.metrics.resultSize","Update":2973,"Value":20553,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":4,"Value":44,"Internal":true,"Count Failed Values":true},{"ID":755,"Name":"internal.metrics.resultSerializationTime","Update":4,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":318752,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":13004,"Value":91020,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":28,"Executor Deserialize CPU Time":8089084,"Executor Run Time":138,"Executor CPU Time":65481258,"Peak Execution Memory":45536,"Result Size":2973,"JVM GC Time":4,"Result Serialization Time":4,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":13004,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":77,"Index":13,"Attempt":0,"Partition ID":13,"Launch Time":1720042860106,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":64,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720042858086,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042860108,"Failed":false,"Killed":false,"Accumulables":[{"ID":627,"Name":"scan time","Update":"43","Value":"463","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"task commit time","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":743,"Name":"duration","Update":"779","Value":"3403","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"internal.metrics.executorDeserializeTime","Update":149,"Value":670,"Internal":true,"Count Failed Values":true},{"ID":750,"Name":"internal.metrics.executorDeserializeCpuTime","Update":88011792,"Value":300901838,"Internal":true,"Count Failed Values":true},{"ID":751,"Name":"internal.metrics.executorRunTime","Update":1851,"Value":4059,"Internal":true,"Count Failed Values":true},{"ID":752,"Name":"internal.metrics.executorCpuTime","Update":1191341541,"Value":2286720802,"Internal":true,"Count Failed Values":true},{"ID":753,"Name":"internal.metrics.resultSize","Update":3805,"Value":24358,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":67,"Value":111,"Internal":true,"Count Failed Values":true},{"ID":755,"Name":"internal.metrics.resultSerializationTime","Update":10,"Value":17,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":364288,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":12999,"Value":104019,"Internal":true,"Count Failed Values":true},{"ID":782,"Name":"internal.metrics.output.bytesWritten","Update":2061,"Value":2061,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":149,"Executor Deserialize CPU Time":88011792,"Executor Run Time":1851,"Executor CPU Time":1191341541,"Peak Execution Memory":45536,"Result Size":3805,"JVM GC Time":67,"Result Serialization Time":10,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":12999,"Records Read":0},"Output Metrics":{"Bytes Written":2061,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":78,"Index":14,"Attempt":0,"Partition ID":14,"Launch Time":1720042860248,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":77,"Index":13,"Attempt":0,"Partition ID":13,"Launch Time":1720042860106,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042860250,"Failed":false,"Killed":false,"Accumulables":[{"ID":627,"Name":"scan time","Update":"31","Value":"494","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"task commit time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":743,"Name":"duration","Update":"145","Value":"3548","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"internal.metrics.executorDeserializeTime","Update":17,"Value":687,"Internal":true,"Count Failed Values":true},{"ID":750,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16151165,"Value":317053003,"Internal":true,"Count Failed Values":true},{"ID":751,"Name":"internal.metrics.executorRunTime","Update":114,"Value":4173,"Internal":true,"Count Failed Values":true},{"ID":752,"Name":"internal.metrics.executorCpuTime","Update":71680742,"Value":2358401544,"Internal":true,"Count Failed Values":true},{"ID":753,"Name":"internal.metrics.resultSize","Update":2930,"Value":27288,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":123,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":409824,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":13004,"Value":117023,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":17,"Executor Deserialize CPU Time":16151165,"Executor Run Time":114,"Executor CPU Time":71680742,"Peak Execution Memory":45536,"Result Size":2930,"JVM GC Time":12,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":13004,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":79,"Index":15,"Attempt":0,"Partition ID":15,"Launch Time":1720042860385,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":78,"Index":14,"Attempt":0,"Partition ID":14,"Launch Time":1720042860248,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042860389,"Failed":false,"Killed":false,"Accumulables":[{"ID":627,"Name":"scan time","Update":"22","Value":"516","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"task commit time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":743,"Name":"duration","Update":"108","Value":"3656","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"internal.metrics.executorDeserializeTime","Update":34,"Value":721,"Internal":true,"Count Failed Values":true},{"ID":750,"Name":"internal.metrics.executorDeserializeCpuTime","Update":15783998,"Value":332837001,"Internal":true,"Count Failed Values":true},{"ID":751,"Name":"internal.metrics.executorRunTime","Update":83,"Value":4256,"Internal":true,"Count Failed Values":true},{"ID":752,"Name":"internal.metrics.executorCpuTime","Update":55724795,"Value":2414126339,"Internal":true,"Count Failed Values":true},{"ID":753,"Name":"internal.metrics.resultSize","Update":2973,"Value":30261,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":17,"Value":140,"Internal":true,"Count Failed Values":true},{"ID":755,"Name":"internal.metrics.resultSerializationTime","Update":4,"Value":21,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":455360,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":13006,"Value":130029,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":34,"Executor Deserialize CPU Time":15783998,"Executor Run Time":83,"Executor CPU Time":55724795,"Peak Execution Memory":45536,"Result Size":2973,"JVM GC Time":17,"Result Serialization Time":4,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":13006,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":80,"Index":16,"Attempt":0,"Partition ID":16,"Launch Time":1720042865273,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":81,"Index":17,"Attempt":0,"Partition ID":17,"Launch Time":1720042865274,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExceptionFailure","Class Name":"org.apache.spark.SparkException","Description":"[TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.","Stack Trace":[{"Declaring Class":"org.apache.spark.sql.errors.QueryExecutionErrors$","Method Name":"taskFailedWhileWritingRowsError","File Name":"QueryExecutionErrors.scala","Line Number":774},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"executeTask","File Name":"DeltaFileFormatWriter.scala","Line Number":447},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"$anonfun$executeWrite$2","File Name":"DeltaFileFormatWriter.scala","Line Number":274},{"Declaring Class":"org.apache.spark.scheduler.ResultTask","Method Name":"runTask","File Name":"ResultTask.scala","Line Number":93},{"Declaring Class":"org.apache.spark.TaskContext","Method Name":"runTaskWithListeners","File Name":"TaskContext.scala","Line Number":166},{"Declaring Class":"org.apache.spark.scheduler.Task","Method Name":"run","File Name":"Task.scala","Line Number":141},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"$anonfun$run$4","File Name":"Executor.scala","Line Number":620},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally","File Name":"SparkErrorUtils.scala","Line Number":64},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally$","File Name":"SparkErrorUtils.scala","Line Number":61},{"Declaring Class":"org.apache.spark.util.Utils$","Method Name":"tryWithSafeFinally","File Name":"Utils.scala","Line Number":94},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"run","File Name":"Executor.scala","Line Number":623},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor","Method Name":"runWorker","File Name":"ThreadPoolExecutor.java","Line Number":1136},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor$Worker","Method Name":"run","File Name":"ThreadPoolExecutor.java","Line Number":635},{"Declaring Class":"java.lang.Thread","Method Name":"run","File Name":"Thread.java","Line Number":840}],"Full Stack Trace":"org.apache.spark.SparkException: [TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.taskFailedWhileWritingRowsError(QueryExecutionErrors.scala:774)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:447)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)\n\tat org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:166)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:141)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: java.lang.OutOfMemoryError: Java heap space\n\tat shaded.parquet.it.unimi.dsi.fastutil.longs.Long2IntLinkedOpenHashMap.rehash(Long2IntLinkedOpenHashMap.java:1819)\n\tat shaded.parquet.it.unimi.dsi.fastutil.longs.Long2IntLinkedOpenHashMap.insert(Long2IntLinkedOpenHashMap.java:336)\n\tat shaded.parquet.it.unimi.dsi.fastutil.longs.Long2IntLinkedOpenHashMap.put(Long2IntLinkedOpenHashMap.java:344)\n\tat org.apache.parquet.column.values.dictionary.DictionaryValuesWriter$PlainLongDictionaryValuesWriter.writeLong(DictionaryValuesWriter.java:352)\n\tat org.apache.parquet.column.values.fallback.FallbackValuesWriter.writeLong(FallbackValuesWriter.java:186)\n\tat org.apache.parquet.column.impl.ColumnWriterBase.write(ColumnWriterBase.java:297)\n\tat org.apache.parquet.io.MessageColumnIO$MessageColumnIORecordConsumer.addLong(MessageColumnIO.java:456)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$makeWriter$13(ParquetWriteSupport.scala:232)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$makeWriter$13$adapted(ParquetWriteSupport.scala:232)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$$Lambda$1333/0x00000068019385c0.apply(Unknown Source)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$writeFields$1(ParquetWriteSupport.scala:161)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$$Lambda$1360/0x00000068019702f0.apply$mcV$sp(Unknown Source)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.consumeField(ParquetWriteSupport.scala:483)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.writeFields(ParquetWriteSupport.scala:161)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$write$1(ParquetWriteSupport.scala:151)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$$Lambda$1359/0x0000006801970000.apply$mcV$sp(Unknown Source)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.consumeMessage(ParquetWriteSupport.scala:471)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.write(ParquetWriteSupport.scala:151)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.write(ParquetWriteSupport.scala:53)\n\tat org.apache.parquet.hadoop.InternalParquetRecordWriter.write(InternalParquetRecordWriter.java:138)\n\tat org.apache.parquet.hadoop.ParquetRecordWriter.write(ParquetRecordWriter.java:181)\n\tat org.apache.parquet.hadoop.ParquetRecordWriter.write(ParquetRecordWriter.java:43)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetOutputWriter.write(ParquetOutputWriter.scala:39)\n\tat org.apache.spark.sql.execution.datasources.SingleDirectoryDataWriter.write(FileFormatDataWriter.scala:175)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithMetrics(FileFormatDataWriter.scala:85)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithIterator(FileFormatDataWriter.scala:92)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeTask$1(DeltaFileFormatWriter.scala:430)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$1284/0x00000068018d6000.apply(Unknown Source)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1397)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:437)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$1100/0x00000068017ca4d8.apply(Unknown Source)\n","Accumulator Updates":[{"ID":751,"Update":"5724","Internal":false,"Count Failed Values":true},{"ID":753,"Update":"0","Internal":false,"Count Failed Values":true},{"ID":754,"Update":"1760","Internal":false,"Count Failed Values":true},{"ID":758,"Update":"45536","Internal":false,"Count Failed Values":true},{"ID":780,"Update":"413135035","Internal":false,"Count Failed Values":true},{"ID":781,"Update":"270336","Internal":false,"Count Failed Values":true}]},"Task Info":{"Task ID":76,"Index":12,"Attempt":0,"Partition ID":12,"Launch Time":1720042859501,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042865277,"Failed":true,"Killed":false,"Accumulables":[{"ID":751,"Name":"internal.metrics.executorRunTime","Update":5724,"Value":9980,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":1760,"Value":1900,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":500896,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":413135035,"Value":413265064,"Internal":true,"Count Failed Values":true},{"ID":781,"Name":"internal.metrics.input.recordsRead","Update":270336,"Value":270336,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":1061196320,"JVMOffHeapMemory":111047096,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":1460882,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":1460882,"OffHeapUnifiedMemory":0,"DirectPoolMemory":21157673,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":77,"MinorGCTime":317,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":317},"Task Metrics":{"Executor Deserialize Time":0,"Executor Deserialize CPU Time":0,"Executor Run Time":5724,"Executor CPU Time":0,"Peak Execution Memory":45536,"Result Size":0,"JVM GC Time":1760,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":413135035,"Records Read":270336},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExceptionFailure","Class Name":"org.apache.spark.SparkException","Description":"[TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.","Stack Trace":[{"Declaring Class":"org.apache.spark.sql.errors.QueryExecutionErrors$","Method Name":"taskFailedWhileWritingRowsError","File Name":"QueryExecutionErrors.scala","Line Number":774},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"executeTask","File Name":"DeltaFileFormatWriter.scala","Line Number":447},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"$anonfun$executeWrite$2","File Name":"DeltaFileFormatWriter.scala","Line Number":274},{"Declaring Class":"org.apache.spark.scheduler.ResultTask","Method Name":"runTask","File Name":"ResultTask.scala","Line Number":93},{"Declaring Class":"org.apache.spark.TaskContext","Method Name":"runTaskWithListeners","File Name":"TaskContext.scala","Line Number":166},{"Declaring Class":"org.apache.spark.scheduler.Task","Method Name":"run","File Name":"Task.scala","Line Number":141},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"$anonfun$run$4","File Name":"Executor.scala","Line Number":620},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally","File Name":"SparkErrorUtils.scala","Line Number":64},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally$","File Name":"SparkErrorUtils.scala","Line Number":61},{"Declaring Class":"org.apache.spark.util.Utils$","Method Name":"tryWithSafeFinally","File Name":"Utils.scala","Line Number":94},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"run","File Name":"Executor.scala","Line Number":623},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor","Method Name":"runWorker","File Name":"ThreadPoolExecutor.java","Line Number":1136},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor$Worker","Method Name":"run","File Name":"ThreadPoolExecutor.java","Line Number":635},{"Declaring Class":"java.lang.Thread","Method Name":"run","File Name":"Thread.java","Line Number":840}],"Full Stack Trace":"org.apache.spark.SparkException: [TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.taskFailedWhileWritingRowsError(QueryExecutionErrors.scala:774)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:447)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)\n\tat org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:166)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:141)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: java.lang.OutOfMemoryError: Java heap space\n\tat shaded.parquet.it.unimi.dsi.fastutil.longs.Long2IntLinkedOpenHashMap.rehash(Long2IntLinkedOpenHashMap.java:1815)\n\tat shaded.parquet.it.unimi.dsi.fastutil.longs.Long2IntLinkedOpenHashMap.insert(Long2IntLinkedOpenHashMap.java:336)\n\tat shaded.parquet.it.unimi.dsi.fastutil.longs.Long2IntLinkedOpenHashMap.put(Long2IntLinkedOpenHashMap.java:344)\n\tat org.apache.parquet.column.values.dictionary.DictionaryValuesWriter$PlainLongDictionaryValuesWriter.writeLong(DictionaryValuesWriter.java:352)\n\tat org.apache.parquet.column.values.fallback.FallbackValuesWriter.writeLong(FallbackValuesWriter.java:186)\n\tat org.apache.parquet.column.impl.ColumnWriterBase.write(ColumnWriterBase.java:297)\n\tat org.apache.parquet.io.MessageColumnIO$MessageColumnIORecordConsumer.addLong(MessageColumnIO.java:456)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$makeWriter$13(ParquetWriteSupport.scala:232)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$makeWriter$13$adapted(ParquetWriteSupport.scala:232)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$$Lambda$1333/0x00000068019385c0.apply(Unknown Source)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$writeFields$1(ParquetWriteSupport.scala:161)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$$Lambda$1360/0x00000068019702f0.apply$mcV$sp(Unknown Source)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.consumeField(ParquetWriteSupport.scala:483)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.writeFields(ParquetWriteSupport.scala:161)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$write$1(ParquetWriteSupport.scala:151)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$$Lambda$1359/0x0000006801970000.apply$mcV$sp(Unknown Source)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.consumeMessage(ParquetWriteSupport.scala:471)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.write(ParquetWriteSupport.scala:151)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.write(ParquetWriteSupport.scala:53)\n\tat org.apache.parquet.hadoop.InternalParquetRecordWriter.write(InternalParquetRecordWriter.java:138)\n\tat org.apache.parquet.hadoop.ParquetRecordWriter.write(ParquetRecordWriter.java:181)\n\tat org.apache.parquet.hadoop.ParquetRecordWriter.write(ParquetRecordWriter.java:43)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetOutputWriter.write(ParquetOutputWriter.scala:39)\n\tat org.apache.spark.sql.execution.datasources.SingleDirectoryDataWriter.write(FileFormatDataWriter.scala:175)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithMetrics(FileFormatDataWriter.scala:85)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithIterator(FileFormatDataWriter.scala:92)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeTask$1(DeltaFileFormatWriter.scala:430)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$1284/0x00000068018d6000.apply(Unknown Source)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1397)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:437)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$1100/0x00000068017ca4d8.apply(Unknown Source)\n","Accumulator Updates":[{"ID":751,"Update":"6033","Internal":false,"Count Failed Values":true},{"ID":753,"Update":"0","Internal":false,"Count Failed Values":true},{"ID":754,"Update":"1776","Internal":false,"Count Failed Values":true},{"ID":758,"Update":"45536","Internal":false,"Count Failed Values":true},{"ID":780,"Update":"401756823","Internal":false,"Count Failed Values":true},{"ID":781,"Update":"278528","Internal":false,"Count Failed Values":true}]},"Task Info":{"Task ID":73,"Index":9,"Attempt":0,"Partition ID":9,"Launch Time":1720042859199,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042865279,"Failed":true,"Killed":false,"Accumulables":[{"ID":751,"Name":"internal.metrics.executorRunTime","Update":6033,"Value":16013,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":1776,"Value":3676,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":546432,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":401756823,"Value":815021887,"Internal":true,"Count Failed Values":true},{"ID":781,"Name":"internal.metrics.input.recordsRead","Update":278528,"Value":548864,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":1061196320,"JVMOffHeapMemory":111047096,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":1460882,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":1460882,"OffHeapUnifiedMemory":0,"DirectPoolMemory":21157673,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":77,"MinorGCTime":317,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":317},"Task Metrics":{"Executor Deserialize Time":0,"Executor Deserialize CPU Time":0,"Executor Run Time":6033,"Executor CPU Time":0,"Peak Execution Memory":45536,"Result Size":0,"JVM GC Time":1776,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":401756823,"Records Read":278528},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"2","Exit Caused By App":false,"Loss Reason":"Command exited with code 50"},"Task Info":{"Task ID":80,"Index":16,"Attempt":0,"Partition ID":16,"Launch Time":1720042865273,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042865350,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"2","Exit Caused By App":false,"Loss Reason":"Command exited with code 50"},"Task Info":{"Task ID":81,"Index":17,"Attempt":0,"Partition ID":17,"Launch Time":1720042865274,"Executor ID":"2","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042865351,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerExecutorRemoved","Timestamp":1720042865354,"Executor ID":"2","Removed Reason":"Command exited with code 50"}
{"Event":"SparkListenerBlockManagerRemoved","Block Manager ID":{"Executor ID":"2","Host":"172.24.0.4","Port":33755},"Timestamp":1720042865359}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":82,"Index":17,"Attempt":1,"Partition ID":17,"Launch Time":1720042866381,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExceptionFailure","Class Name":"org.apache.spark.SparkException","Description":"[TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.","Stack Trace":[{"Declaring Class":"org.apache.spark.sql.errors.QueryExecutionErrors$","Method Name":"taskFailedWhileWritingRowsError","File Name":"QueryExecutionErrors.scala","Line Number":774},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"executeTask","File Name":"DeltaFileFormatWriter.scala","Line Number":447},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"$anonfun$executeWrite$2","File Name":"DeltaFileFormatWriter.scala","Line Number":274},{"Declaring Class":"org.apache.spark.scheduler.ResultTask","Method Name":"runTask","File Name":"ResultTask.scala","Line Number":93},{"Declaring Class":"org.apache.spark.TaskContext","Method Name":"runTaskWithListeners","File Name":"TaskContext.scala","Line Number":166},{"Declaring Class":"org.apache.spark.scheduler.Task","Method Name":"run","File Name":"Task.scala","Line Number":141},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"$anonfun$run$4","File Name":"Executor.scala","Line Number":620},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally","File Name":"SparkErrorUtils.scala","Line Number":64},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally$","File Name":"SparkErrorUtils.scala","Line Number":61},{"Declaring Class":"org.apache.spark.util.Utils$","Method Name":"tryWithSafeFinally","File Name":"Utils.scala","Line Number":94},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"run","File Name":"Executor.scala","Line Number":623},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor","Method Name":"runWorker","File Name":"ThreadPoolExecutor.java","Line Number":1136},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor$Worker","Method Name":"run","File Name":"ThreadPoolExecutor.java","Line Number":635},{"Declaring Class":"java.lang.Thread","Method Name":"run","File Name":"Thread.java","Line Number":840}],"Full Stack Trace":"org.apache.spark.SparkException: [TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.taskFailedWhileWritingRowsError(QueryExecutionErrors.scala:774)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:447)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)\n\tat org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:166)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:141)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: java.lang.OutOfMemoryError: Java heap space\n\tat org.apache.parquet.bytes.BytesInput$StreamBytesInput.toByteArray(BytesInput.java:285)\n\tat org.apache.parquet.bytes.BytesInput.toByteBuffer(BytesInput.java:237)\n\tat org.apache.parquet.bytes.BytesInput.toInputStream(BytesInput.java:246)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.readPageV1(VectorizedColumnReader.java:367)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.access$000(VectorizedColumnReader.java:49)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader$1.visit(VectorizedColumnReader.java:272)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader$1.visit(VectorizedColumnReader.java:268)\n\tat org.apache.parquet.column.page.DataPageV1.accept(DataPageV1.java:120)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.readPage(VectorizedColumnReader.java:268)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.readBatch(VectorizedColumnReader.java:186)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedParquetRecordReader.nextBatch(VectorizedParquetRecordReader.java:342)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedParquetRecordReader.nextKeyValue(VectorizedParquetRecordReader.java:233)\n\tat org.apache.spark.sql.execution.datasources.RecordReaderIterator.hasNext(RecordReaderIterator.scala:39)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:129)\n\tat org.apache.spark.sql.execution.FileSourceScanExec$$anon$1.hasNext(DataSourceScanExec.scala:593)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage3.columnartorow_nextBatch_0$(Unknown Source)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage3.processNext(Unknown Source)\n\tat org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)\n\tat org.apache.spark.sql.execution.WholeStageCodegenEvaluatorFactory$WholeStageCodegenPartitionEvaluator$$anon$1.hasNext(WholeStageCodegenEvaluatorFactory.scala:43)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithIterator(FileFormatDataWriter.scala:91)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeTask$1(DeltaFileFormatWriter.scala:430)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$1982/0x0000000201c39688.apply(Unknown Source)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1397)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:437)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$1923/0x0000000201c26ab0.apply(Unknown Source)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)\n\tat org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:166)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:141)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)\n\tat org.apache.spark.executor.Executor$TaskRunner$$Lambda$547/0x00000002014a7230.apply(Unknown Source)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)\n","Accumulator Updates":[{"ID":751,"Update":"8272","Internal":false,"Count Failed Values":true},{"ID":753,"Update":"0","Internal":false,"Count Failed Values":true},{"ID":754,"Update":"3350","Internal":false,"Count Failed Values":true},{"ID":758,"Update":"45536","Internal":false,"Count Failed Values":true},{"ID":780,"Update":"329398373","Internal":false,"Count Failed Values":true},{"ID":781,"Update":"913408","Internal":false,"Count Failed Values":true}]},"Task Info":{"Task ID":65,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720042858086,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042866382,"Failed":true,"Killed":false,"Accumulables":[{"ID":751,"Name":"internal.metrics.executorRunTime","Update":8272,"Value":24285,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":3350,"Value":7026,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":591968,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":329398373,"Value":1144420260,"Internal":true,"Count Failed Values":true},{"ID":781,"Name":"internal.metrics.input.recordsRead","Update":913408,"Value":1462272,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":1064635632,"JVMOffHeapMemory":147244232,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":1527698,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":1527698,"OffHeapUnifiedMemory":0,"DirectPoolMemory":25670912,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":328,"MinorGCTime":896,"MajorGCCount":3,"MajorGCTime":90,"TotalGCTime":986},"Task Metrics":{"Executor Deserialize Time":0,"Executor Deserialize CPU Time":0,"Executor Run Time":8272,"Executor CPU Time":0,"Peak Execution Memory":45536,"Result Size":0,"JVM GC Time":3350,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":329398373,"Records Read":913408},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"1","Exit Caused By App":true,"Loss Reason":"Command exited with code 50"},"Task Info":{"Task ID":82,"Index":17,"Attempt":1,"Partition ID":17,"Launch Time":1720042866381,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042866476,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"1","Exit Caused By App":true,"Loss Reason":"Command exited with code 50"},"Task Info":{"Task ID":70,"Index":6,"Attempt":0,"Partition ID":6,"Launch Time":1720042858400,"Executor ID":"1","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042866478,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerExecutorRemoved","Timestamp":1720042866479,"Executor ID":"1","Removed Reason":"Command exited with code 50"}
{"Event":"SparkListenerBlockManagerRemoved","Block Manager ID":{"Executor ID":"1","Host":"172.24.0.3","Port":35545},"Timestamp":1720042866500}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720042866864,"Executor ID":"3","Executor Info":{"Host":"172.24.0.4","Total Cores":2,"Log Urls":{"stdout":"http://172.24.0.4:8081/logPage/?appId=app-20240703214045-0014&executorId=3&logType=stdout","stderr":"http://172.24.0.4:8081/logPage/?appId=app-20240703214045-0014&executorId=3&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720042866864}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"3","Host":"172.24.0.4","Port":43867},"Maximum Memory":303667609,"Timestamp":1720042866900,"Maximum Onheap Memory":303667609,"Maximum Offheap Memory":0}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":83,"Index":6,"Attempt":1,"Partition ID":6,"Launch Time":1720042866919,"Executor ID":"3","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":84,"Index":17,"Attempt":2,"Partition ID":17,"Launch Time":1720042866920,"Executor ID":"3","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720042867762,"Executor ID":"4","Executor Info":{"Host":"172.24.0.3","Total Cores":2,"Log Urls":{"stdout":"http://172.24.0.3:8081/logPage/?appId=app-20240703214045-0014&executorId=4&logType=stdout","stderr":"http://172.24.0.3:8081/logPage/?appId=app-20240703214045-0014&executorId=4&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720042867762}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"4","Host":"172.24.0.3","Port":35633},"Maximum Memory":303667609,"Timestamp":1720042867795,"Maximum Onheap Memory":303667609,"Maximum Offheap Memory":0}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":85,"Index":1,"Attempt":1,"Partition ID":1,"Launch Time":1720042867816,"Executor ID":"4","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":86,"Index":16,"Attempt":1,"Partition ID":16,"Launch Time":1720042867817,"Executor ID":"4","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":87,"Index":9,"Attempt":1,"Partition ID":9,"Launch Time":1720042867921,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExceptionFailure","Class Name":"java.lang.OutOfMemoryError","Description":"Java heap space","Stack Trace":[],"Full Stack Trace":"java.lang.OutOfMemoryError: Java heap space\n","Accumulator Updates":[{"ID":751,"Update":"9820","Internal":false,"Count Failed Values":true},{"ID":753,"Update":"0","Internal":false,"Count Failed Values":true},{"ID":754,"Update":"4295","Internal":false,"Count Failed Values":true},{"ID":758,"Update":"45536","Internal":false,"Count Failed Values":true},{"ID":780,"Update":"359311216","Internal":false,"Count Failed Values":true},{"ID":781,"Update":"974848","Internal":false,"Count Failed Values":true}]},"Task Info":{"Task ID":67,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720042858087,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042867922,"Failed":true,"Killed":false,"Accumulables":[{"ID":751,"Name":"internal.metrics.executorRunTime","Update":9820,"Value":34105,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":4295,"Value":11321,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":637504,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":359311216,"Value":1503731476,"Internal":true,"Count Failed Values":true},{"ID":781,"Name":"internal.metrics.input.recordsRead","Update":974848,"Value":2437120,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":1062853112,"JVMOffHeapMemory":131141144,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":1460881,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":1460881,"OffHeapUnifiedMemory":0,"DirectPoolMemory":21467407,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":418,"MinorGCTime":993,"MajorGCCount":10,"MajorGCTime":235,"TotalGCTime":1228},"Task Metrics":{"Executor Deserialize Time":0,"Executor Deserialize CPU Time":0,"Executor Run Time":9820,"Executor CPU Time":0,"Peak Execution Memory":45536,"Result Size":0,"JVM GC Time":4295,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":359311216,"Records Read":974848},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"0","Exit Caused By App":true,"Loss Reason":"Command exited with code 52"},"Task Info":{"Task ID":79,"Index":15,"Attempt":0,"Partition ID":15,"Launch Time":1720042860385,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042868010,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerExecutorRemoved","Timestamp":1720042868011,"Executor ID":"0","Removed Reason":"Command exited with code 52"}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"0","Exit Caused By App":true,"Loss Reason":"Command exited with code 52"},"Task Info":{"Task ID":87,"Index":9,"Attempt":1,"Partition ID":9,"Launch Time":1720042867921,"Executor ID":"0","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042868010,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerBlockManagerRemoved","Block Manager ID":{"Executor ID":"0","Host":"172.24.0.5","Port":42283},"Timestamp":1720042868012}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":88,"Index":9,"Attempt":2,"Partition ID":9,"Launch Time":1720042869127,"Executor ID":"3","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":84,"Index":17,"Attempt":2,"Partition ID":17,"Launch Time":1720042866920,"Executor ID":"3","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042869128,"Failed":false,"Killed":false,"Accumulables":[{"ID":627,"Name":"scan time","Update":"576","Value":"1092","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"task commit time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":743,"Name":"duration","Update":"2096","Value":"5752","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"internal.metrics.executorDeserializeTime","Update":400,"Value":1121,"Internal":true,"Count Failed Values":true},{"ID":750,"Name":"internal.metrics.executorDeserializeCpuTime","Update":146206492,"Value":479043493,"Internal":true,"Count Failed Values":true},{"ID":751,"Name":"internal.metrics.executorRunTime","Update":1761,"Value":35866,"Internal":true,"Count Failed Values":true},{"ID":752,"Name":"internal.metrics.executorCpuTime","Update":925237819,"Value":3339364158,"Internal":true,"Count Failed Values":true},{"ID":753,"Name":"internal.metrics.resultSize","Update":2973,"Value":33234,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":97,"Value":11418,"Internal":true,"Count Failed Values":true},{"ID":755,"Name":"internal.metrics.resultSerializationTime","Update":6,"Value":27,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":683040,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":13006,"Value":1503744482,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":400,"Executor Deserialize CPU Time":146206492,"Executor Run Time":1761,"Executor CPU Time":925237819,"Peak Execution Memory":45536,"Result Size":2973,"JVM GC Time":97,"Result Serialization Time":6,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":13006,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720042869532,"Executor ID":"5","Executor Info":{"Host":"172.24.0.5","Total Cores":2,"Log Urls":{"stdout":"http://172.24.0.5:8081/logPage/?appId=app-20240703214045-0014&executorId=5&logType=stdout","stderr":"http://172.24.0.5:8081/logPage/?appId=app-20240703214045-0014&executorId=5&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720042869532}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"5","Host":"172.24.0.5","Port":43471},"Maximum Memory":303667609,"Timestamp":1720042869630,"Maximum Onheap Memory":303667609,"Maximum Offheap Memory":0}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":89,"Index":15,"Attempt":1,"Partition ID":15,"Launch Time":1720042869680,"Executor ID":"5","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":90,"Index":3,"Attempt":1,"Partition ID":3,"Launch Time":1720042869681,"Executor ID":"5","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":91,"Index":12,"Attempt":1,"Partition ID":12,"Launch Time":1720042870038,"Executor ID":"4","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":86,"Index":16,"Attempt":1,"Partition ID":16,"Launch Time":1720042867817,"Executor ID":"4","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042870041,"Failed":false,"Killed":false,"Accumulables":[{"ID":627,"Name":"scan time","Update":"310","Value":"1402","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"task commit time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":743,"Name":"duration","Update":"1790","Value":"7542","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"internal.metrics.executorDeserializeTime","Update":413,"Value":1534,"Internal":true,"Count Failed Values":true},{"ID":750,"Name":"internal.metrics.executorDeserializeCpuTime","Update":212445543,"Value":691489036,"Internal":true,"Count Failed Values":true},{"ID":751,"Name":"internal.metrics.executorRunTime","Update":1738,"Value":37604,"Internal":true,"Count Failed Values":true},{"ID":752,"Name":"internal.metrics.executorCpuTime","Update":1055111042,"Value":4394475200,"Internal":true,"Count Failed Values":true},{"ID":753,"Name":"internal.metrics.resultSize","Update":2973,"Value":36207,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":122,"Value":11540,"Internal":true,"Count Failed Values":true},{"ID":755,"Name":"internal.metrics.resultSerializationTime","Update":11,"Value":38,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":728576,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":13006,"Value":1503757488,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":413,"Executor Deserialize CPU Time":212445543,"Executor Run Time":1738,"Executor CPU Time":1055111042,"Peak Execution Memory":45536,"Result Size":2973,"JVM GC Time":122,"Result Serialization Time":11,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":13006,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":92,"Index":18,"Attempt":0,"Partition ID":18,"Launch Time":1720042872641,"Executor ID":"3","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExceptionFailure","Class Name":"java.lang.OutOfMemoryError","Description":"Java heap space","Stack Trace":[],"Full Stack Trace":"java.lang.OutOfMemoryError: Java heap space\n","Accumulator Updates":[{"ID":751,"Update":"3482","Internal":false,"Count Failed Values":true},{"ID":753,"Update":"0","Internal":false,"Count Failed Values":true},{"ID":754,"Update":"1590","Internal":false,"Count Failed Values":true},{"ID":758,"Update":"45536","Internal":false,"Count Failed Values":true},{"ID":780,"Update":"401756823","Internal":false,"Count Failed Values":true},{"ID":781,"Update":"94208","Internal":false,"Count Failed Values":true}]},"Task Info":{"Task ID":88,"Index":9,"Attempt":2,"Partition ID":9,"Launch Time":1720042869127,"Executor ID":"3","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042872644,"Failed":true,"Killed":false,"Accumulables":[{"ID":751,"Name":"internal.metrics.executorRunTime","Update":3482,"Value":41086,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":1590,"Value":13130,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":774112,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":401756823,"Value":1905514311,"Internal":true,"Count Failed Values":true},{"ID":781,"Name":"internal.metrics.input.recordsRead","Update":94208,"Value":2531328,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":0,"Executor Deserialize CPU Time":0,"Executor Run Time":3482,"Executor CPU Time":0,"Peak Execution Memory":45536,"Result Size":0,"JVM GC Time":1590,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":401756823,"Records Read":94208},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerExecutorRemoved","Timestamp":1720042872720,"Executor ID":"3","Removed Reason":"Command exited with code 52"}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"3","Exit Caused By App":true,"Loss Reason":"Command exited with code 52"},"Task Info":{"Task ID":92,"Index":18,"Attempt":0,"Partition ID":18,"Launch Time":1720042872641,"Executor ID":"3","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042872719,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"3","Exit Caused By App":true,"Loss Reason":"Command exited with code 52"},"Task Info":{"Task ID":83,"Index":6,"Attempt":1,"Partition ID":6,"Launch Time":1720042866919,"Executor ID":"3","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042872719,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerBlockManagerRemoved","Block Manager ID":{"Executor ID":"3","Host":"172.24.0.4","Port":43867},"Timestamp":1720042872724}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720042873923,"Executor ID":"6","Executor Info":{"Host":"172.24.0.4","Total Cores":2,"Log Urls":{"stdout":"http://172.24.0.4:8081/logPage/?appId=app-20240703214045-0014&executorId=6&logType=stdout","stderr":"http://172.24.0.4:8081/logPage/?appId=app-20240703214045-0014&executorId=6&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720042873923}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"6","Host":"172.24.0.4","Port":45797},"Maximum Memory":303667609,"Timestamp":1720042873967,"Maximum Onheap Memory":303667609,"Maximum Offheap Memory":0}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":93,"Index":6,"Attempt":2,"Partition ID":6,"Launch Time":1720042874004,"Executor ID":"6","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":94,"Index":18,"Attempt":1,"Partition ID":18,"Launch Time":1720042874005,"Executor ID":"6","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":95,"Index":9,"Attempt":3,"Partition ID":9,"Launch Time":1720042878665,"Executor ID":"5","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExceptionFailure","Class Name":"org.apache.spark.SparkException","Description":"[TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.","Stack Trace":[{"Declaring Class":"org.apache.spark.sql.errors.QueryExecutionErrors$","Method Name":"taskFailedWhileWritingRowsError","File Name":"QueryExecutionErrors.scala","Line Number":774},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"executeTask","File Name":"DeltaFileFormatWriter.scala","Line Number":447},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"$anonfun$executeWrite$2","File Name":"DeltaFileFormatWriter.scala","Line Number":274},{"Declaring Class":"org.apache.spark.scheduler.ResultTask","Method Name":"runTask","File Name":"ResultTask.scala","Line Number":93},{"Declaring Class":"org.apache.spark.TaskContext","Method Name":"runTaskWithListeners","File Name":"TaskContext.scala","Line Number":166},{"Declaring Class":"org.apache.spark.scheduler.Task","Method Name":"run","File Name":"Task.scala","Line Number":141},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"$anonfun$run$4","File Name":"Executor.scala","Line Number":620},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally","File Name":"SparkErrorUtils.scala","Line Number":64},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally$","File Name":"SparkErrorUtils.scala","Line Number":61},{"Declaring Class":"org.apache.spark.util.Utils$","Method Name":"tryWithSafeFinally","File Name":"Utils.scala","Line Number":94},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"run","File Name":"Executor.scala","Line Number":623},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor","Method Name":"runWorker","File Name":"ThreadPoolExecutor.java","Line Number":1136},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor$Worker","Method Name":"run","File Name":"ThreadPoolExecutor.java","Line Number":635},{"Declaring Class":"java.lang.Thread","Method Name":"run","File Name":"Thread.java","Line Number":840}],"Full Stack Trace":"org.apache.spark.SparkException: [TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.taskFailedWhileWritingRowsError(QueryExecutionErrors.scala:774)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:447)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)\n\tat org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:166)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:141)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: java.lang.OutOfMemoryError: Java heap space\n\tat org.apache.parquet.bytes.BytesInput$StreamBytesInput.toByteArray(BytesInput.java:285)\n\tat org.apache.parquet.bytes.BytesInput.toByteBuffer(BytesInput.java:237)\n\tat org.apache.parquet.bytes.BytesInput.toInputStream(BytesInput.java:246)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.readPageV1(VectorizedColumnReader.java:367)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.access$000(VectorizedColumnReader.java:49)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader$1.visit(VectorizedColumnReader.java:272)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader$1.visit(VectorizedColumnReader.java:268)\n\tat org.apache.parquet.column.page.DataPageV1.accept(DataPageV1.java:120)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.readPage(VectorizedColumnReader.java:268)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.readBatch(VectorizedColumnReader.java:186)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedParquetRecordReader.nextBatch(VectorizedParquetRecordReader.java:342)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedParquetRecordReader.nextKeyValue(VectorizedParquetRecordReader.java:233)\n\tat org.apache.spark.sql.execution.datasources.RecordReaderIterator.hasNext(RecordReaderIterator.scala:39)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:129)\n\tat org.apache.spark.sql.execution.FileSourceScanExec$$anon$1.hasNext(DataSourceScanExec.scala:593)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage3.columnartorow_nextBatch_0$(Unknown Source)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage3.processNext(Unknown Source)\n\tat org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)\n\tat org.apache.spark.sql.execution.WholeStageCodegenEvaluatorFactory$WholeStageCodegenPartitionEvaluator$$anon$1.hasNext(WholeStageCodegenEvaluatorFactory.scala:43)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithIterator(FileFormatDataWriter.scala:91)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeTask$1(DeltaFileFormatWriter.scala:430)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$1303/0x000000400192a888.apply(Unknown Source)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1397)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:437)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$697/0x000000400160a980.apply(Unknown Source)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)\n\tat org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:166)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:141)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)\n\tat org.apache.spark.executor.Executor$TaskRunner$$Lambda$551/0x00000040014b4ce8.apply(Unknown Source)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)\n","Accumulator Updates":[{"ID":751,"Update":"8866","Internal":false,"Count Failed Values":true},{"ID":753,"Update":"0","Internal":false,"Count Failed Values":true},{"ID":754,"Update":"2553","Internal":false,"Count Failed Values":true},{"ID":758,"Update":"45536","Internal":false,"Count Failed Values":true},{"ID":780,"Update":"403941527","Internal":false,"Count Failed Values":true},{"ID":781,"Update":"806912","Internal":false,"Count Failed Values":true}]},"Task Info":{"Task ID":89,"Index":15,"Attempt":1,"Partition ID":15,"Launch Time":1720042869680,"Executor ID":"5","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042878669,"Failed":true,"Killed":false,"Accumulables":[{"ID":751,"Name":"internal.metrics.executorRunTime","Update":8866,"Value":49952,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":2553,"Value":15683,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":819648,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":403941527,"Value":2309455838,"Internal":true,"Count Failed Values":true},{"ID":781,"Name":"internal.metrics.input.recordsRead","Update":806912,"Value":3338240,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":0,"Executor Deserialize CPU Time":0,"Executor Run Time":8866,"Executor CPU Time":0,"Peak Execution Memory":45536,"Result Size":0,"JVM GC Time":2553,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":403941527,"Records Read":806912},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"5","Exit Caused By App":false,"Loss Reason":"Command exited with code 50"},"Task Info":{"Task ID":95,"Index":9,"Attempt":3,"Partition ID":9,"Launch Time":1720042878665,"Executor ID":"5","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042878751,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"5","Exit Caused By App":true,"Loss Reason":"Command exited with code 50"},"Task Info":{"Task ID":90,"Index":3,"Attempt":1,"Partition ID":3,"Launch Time":1720042869681,"Executor ID":"5","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042878752,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerExecutorRemoved","Timestamp":1720042878753,"Executor ID":"5","Removed Reason":"Command exited with code 50"}
{"Event":"SparkListenerBlockManagerRemoved","Block Manager ID":{"Executor ID":"5","Host":"172.24.0.5","Port":43471},"Timestamp":1720042878754}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":96,"Index":3,"Attempt":2,"Partition ID":3,"Launch Time":1720042878872,"Executor ID":"4","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExceptionFailure","Class Name":"org.apache.spark.SparkException","Description":"[TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.","Stack Trace":[{"Declaring Class":"org.apache.spark.sql.errors.QueryExecutionErrors$","Method Name":"taskFailedWhileWritingRowsError","File Name":"QueryExecutionErrors.scala","Line Number":774},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"executeTask","File Name":"DeltaFileFormatWriter.scala","Line Number":447},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"$anonfun$executeWrite$2","File Name":"DeltaFileFormatWriter.scala","Line Number":274},{"Declaring Class":"org.apache.spark.scheduler.ResultTask","Method Name":"runTask","File Name":"ResultTask.scala","Line Number":93},{"Declaring Class":"org.apache.spark.TaskContext","Method Name":"runTaskWithListeners","File Name":"TaskContext.scala","Line Number":166},{"Declaring Class":"org.apache.spark.scheduler.Task","Method Name":"run","File Name":"Task.scala","Line Number":141},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"$anonfun$run$4","File Name":"Executor.scala","Line Number":620},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally","File Name":"SparkErrorUtils.scala","Line Number":64},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally$","File Name":"SparkErrorUtils.scala","Line Number":61},{"Declaring Class":"org.apache.spark.util.Utils$","Method Name":"tryWithSafeFinally","File Name":"Utils.scala","Line Number":94},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"run","File Name":"Executor.scala","Line Number":623},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor","Method Name":"runWorker","File Name":"ThreadPoolExecutor.java","Line Number":1136},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor$Worker","Method Name":"run","File Name":"ThreadPoolExecutor.java","Line Number":635},{"Declaring Class":"java.lang.Thread","Method Name":"run","File Name":"Thread.java","Line Number":840}],"Full Stack Trace":"org.apache.spark.SparkException: [TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.taskFailedWhileWritingRowsError(QueryExecutionErrors.scala:774)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:447)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)\n\tat org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:166)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:141)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: java.lang.OutOfMemoryError: Java heap space\n\tat org.apache.parquet.bytes.BytesInput$StreamBytesInput.toByteArray(BytesInput.java:285)\n\tat org.apache.parquet.bytes.BytesInput.toByteBuffer(BytesInput.java:237)\n\tat org.apache.parquet.bytes.BytesInput.toInputStream(BytesInput.java:246)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.readPageV1(VectorizedColumnReader.java:367)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.access$000(VectorizedColumnReader.java:49)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader$1.visit(VectorizedColumnReader.java:272)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader$1.visit(VectorizedColumnReader.java:268)\n\tat org.apache.parquet.column.page.DataPageV1.accept(DataPageV1.java:120)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.readPage(VectorizedColumnReader.java:268)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.readBatch(VectorizedColumnReader.java:186)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedParquetRecordReader.nextBatch(VectorizedParquetRecordReader.java:342)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedParquetRecordReader.nextKeyValue(VectorizedParquetRecordReader.java:233)\n\tat org.apache.spark.sql.execution.datasources.RecordReaderIterator.hasNext(RecordReaderIterator.scala:39)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:129)\n\tat org.apache.spark.sql.execution.FileSourceScanExec$$anon$1.hasNext(DataSourceScanExec.scala:593)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage3.columnartorow_nextBatch_0$(Unknown Source)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage3.processNext(Unknown Source)\n\tat org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)\n\tat org.apache.spark.sql.execution.WholeStageCodegenEvaluatorFactory$WholeStageCodegenPartitionEvaluator$$anon$1.hasNext(WholeStageCodegenEvaluatorFactory.scala:43)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithIterator(FileFormatDataWriter.scala:91)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeTask$1(DeltaFileFormatWriter.scala:430)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$1183/0x00000002018c5678.apply(Unknown Source)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1397)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:437)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$722/0x0000000201618610.apply(Unknown Source)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)\n\tat org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:166)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:141)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)\n\tat org.apache.spark.executor.Executor$TaskRunner$$Lambda$554/0x00000002014b2e10.apply(Unknown Source)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)\n","Accumulator Updates":[{"ID":751,"Update":"8802","Internal":false,"Count Failed Values":true},{"ID":753,"Update":"0","Internal":false,"Count Failed Values":true},{"ID":754,"Update":"3831","Internal":false,"Count Failed Values":true},{"ID":758,"Update":"45536","Internal":false,"Count Failed Values":true},{"ID":780,"Update":"413135035","Internal":false,"Count Failed Values":true},{"ID":781,"Update":"1052672","Internal":false,"Count Failed Values":true}]},"Task Info":{"Task ID":91,"Index":12,"Attempt":1,"Partition ID":12,"Launch Time":1720042870038,"Executor ID":"4","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042878873,"Failed":true,"Killed":false,"Accumulables":[{"ID":751,"Name":"internal.metrics.executorRunTime","Update":8802,"Value":58754,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":3831,"Value":19514,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":865184,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":413135035,"Value":2722590873,"Internal":true,"Count Failed Values":true},{"ID":781,"Name":"internal.metrics.input.recordsRead","Update":1052672,"Value":4390912,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":0,"Executor Deserialize CPU Time":0,"Executor Run Time":8802,"Executor CPU Time":0,"Peak Execution Memory":45536,"Result Size":0,"JVM GC Time":3831,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":413135035,"Records Read":1052672},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":97,"Index":12,"Attempt":2,"Partition ID":12,"Launch Time":1720042878876,"Executor ID":"4","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExceptionFailure","Class Name":"org.apache.spark.SparkException","Description":"[TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.","Stack Trace":[{"Declaring Class":"org.apache.spark.sql.errors.QueryExecutionErrors$","Method Name":"taskFailedWhileWritingRowsError","File Name":"QueryExecutionErrors.scala","Line Number":774},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"executeTask","File Name":"DeltaFileFormatWriter.scala","Line Number":447},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"$anonfun$executeWrite$2","File Name":"DeltaFileFormatWriter.scala","Line Number":274},{"Declaring Class":"org.apache.spark.scheduler.ResultTask","Method Name":"runTask","File Name":"ResultTask.scala","Line Number":93},{"Declaring Class":"org.apache.spark.TaskContext","Method Name":"runTaskWithListeners","File Name":"TaskContext.scala","Line Number":166},{"Declaring Class":"org.apache.spark.scheduler.Task","Method Name":"run","File Name":"Task.scala","Line Number":141},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"$anonfun$run$4","File Name":"Executor.scala","Line Number":620},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally","File Name":"SparkErrorUtils.scala","Line Number":64},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally$","File Name":"SparkErrorUtils.scala","Line Number":61},{"Declaring Class":"org.apache.spark.util.Utils$","Method Name":"tryWithSafeFinally","File Name":"Utils.scala","Line Number":94},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"run","File Name":"Executor.scala","Line Number":623},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor","Method Name":"runWorker","File Name":"ThreadPoolExecutor.java","Line Number":1136},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor$Worker","Method Name":"run","File Name":"ThreadPoolExecutor.java","Line Number":635},{"Declaring Class":"java.lang.Thread","Method Name":"run","File Name":"Thread.java","Line Number":840}],"Full Stack Trace":"org.apache.spark.SparkException: [TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.taskFailedWhileWritingRowsError(QueryExecutionErrors.scala:774)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:447)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)\n\tat org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:166)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:141)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: java.lang.OutOfMemoryError: Java heap space\n\tat org.apache.parquet.bytes.BytesInput$StreamBytesInput.toByteArray(BytesInput.java:286)\n\tat org.apache.parquet.bytes.BytesInput.toByteBuffer(BytesInput.java:237)\n\tat org.apache.parquet.bytes.BytesInput.toInputStream(BytesInput.java:246)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.readPageV1(VectorizedColumnReader.java:367)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.access$000(VectorizedColumnReader.java:49)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader$1.visit(VectorizedColumnReader.java:272)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader$1.visit(VectorizedColumnReader.java:268)\n\tat org.apache.parquet.column.page.DataPageV1.accept(DataPageV1.java:120)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.readPage(VectorizedColumnReader.java:268)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.readBatch(VectorizedColumnReader.java:186)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedParquetRecordReader.nextBatch(VectorizedParquetRecordReader.java:342)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedParquetRecordReader.nextKeyValue(VectorizedParquetRecordReader.java:233)\n\tat org.apache.spark.sql.execution.datasources.RecordReaderIterator.hasNext(RecordReaderIterator.scala:39)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:129)\n\tat org.apache.spark.sql.execution.FileSourceScanExec$$anon$1.hasNext(DataSourceScanExec.scala:593)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage3.columnartorow_nextBatch_0$(Unknown Source)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage3.processNext(Unknown Source)\n\tat org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)\n\tat org.apache.spark.sql.execution.WholeStageCodegenEvaluatorFactory$WholeStageCodegenPartitionEvaluator$$anon$1.hasNext(WholeStageCodegenEvaluatorFactory.scala:43)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithIterator(FileFormatDataWriter.scala:91)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeTask$1(DeltaFileFormatWriter.scala:430)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$1183/0x00000002018c5678.apply(Unknown Source)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1397)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:437)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$722/0x0000000201618610.apply(Unknown Source)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)\n\tat org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:166)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:141)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)\n\tat org.apache.spark.executor.Executor$TaskRunner$$Lambda$554/0x00000002014b2e10.apply(Unknown Source)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)\n","Accumulator Updates":[{"ID":751,"Update":"10991","Internal":false,"Count Failed Values":true},{"ID":753,"Update":"0","Internal":false,"Count Failed Values":true},{"ID":754,"Update":"3953","Internal":false,"Count Failed Values":true},{"ID":758,"Update":"45536","Internal":false,"Count Failed Values":true},{"ID":780,"Update":"329398373","Internal":false,"Count Failed Values":true},{"ID":781,"Update":"1290240","Internal":false,"Count Failed Values":true}]},"Task Info":{"Task ID":85,"Index":1,"Attempt":1,"Partition ID":1,"Launch Time":1720042867816,"Executor ID":"4","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042878878,"Failed":true,"Killed":false,"Accumulables":[{"ID":751,"Name":"internal.metrics.executorRunTime","Update":10991,"Value":69745,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":3953,"Value":23467,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":910720,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":329398373,"Value":3051989246,"Internal":true,"Count Failed Values":true},{"ID":781,"Name":"internal.metrics.input.recordsRead","Update":1290240,"Value":5681152,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":0,"Executor Deserialize CPU Time":0,"Executor Run Time":10991,"Executor CPU Time":0,"Peak Execution Memory":45536,"Result Size":0,"JVM GC Time":3953,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":329398373,"Records Read":1290240},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"4","Exit Caused By App":false,"Loss Reason":"Command exited with code 50"},"Task Info":{"Task ID":97,"Index":12,"Attempt":2,"Partition ID":12,"Launch Time":1720042878876,"Executor ID":"4","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042878957,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"4","Exit Caused By App":false,"Loss Reason":"Command exited with code 50"},"Task Info":{"Task ID":96,"Index":3,"Attempt":2,"Partition ID":3,"Launch Time":1720042878872,"Executor ID":"4","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042878960,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerExecutorRemoved","Timestamp":1720042878961,"Executor ID":"4","Removed Reason":"Command exited with code 50"}
{"Event":"SparkListenerBlockManagerRemoved","Block Manager ID":{"Executor ID":"4","Host":"172.24.0.3","Port":35633},"Timestamp":1720042878963}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720042880099,"Executor ID":"7","Executor Info":{"Host":"172.24.0.5","Total Cores":2,"Log Urls":{"stdout":"http://172.24.0.5:8081/logPage/?appId=app-20240703214045-0014&executorId=7&logType=stdout","stderr":"http://172.24.0.5:8081/logPage/?appId=app-20240703214045-0014&executorId=7&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720042880099}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"7","Host":"172.24.0.5","Port":39619},"Maximum Memory":303667609,"Timestamp":1720042880137,"Maximum Onheap Memory":303667609,"Maximum Offheap Memory":0}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":98,"Index":3,"Attempt":3,"Partition ID":3,"Launch Time":1720042880161,"Executor ID":"7","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":99,"Index":12,"Attempt":3,"Partition ID":12,"Launch Time":1720042880162,"Executor ID":"7","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720042880277,"Executor ID":"8","Executor Info":{"Host":"172.24.0.3","Total Cores":2,"Log Urls":{"stdout":"http://172.24.0.3:8081/logPage/?appId=app-20240703214045-0014&executorId=8&logType=stdout","stderr":"http://172.24.0.3:8081/logPage/?appId=app-20240703214045-0014&executorId=8&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720042880277}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"8","Host":"172.24.0.3","Port":43509},"Maximum Memory":303667609,"Timestamp":1720042880313,"Maximum Onheap Memory":303667609,"Maximum Offheap Memory":0}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":100,"Index":1,"Attempt":2,"Partition ID":1,"Launch Time":1720042880332,"Executor ID":"8","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":101,"Index":9,"Attempt":4,"Partition ID":9,"Launch Time":1720042880334,"Executor ID":"8","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":102,"Index":15,"Attempt":2,"Partition ID":15,"Launch Time":1720042881000,"Executor ID":"6","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":103,"Index":19,"Attempt":0,"Partition ID":19,"Launch Time":1720042881004,"Executor ID":"6","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExceptionFailure","Class Name":"org.apache.spark.SparkException","Description":"[TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.","Stack Trace":[{"Declaring Class":"org.apache.spark.sql.errors.QueryExecutionErrors$","Method Name":"taskFailedWhileWritingRowsError","File Name":"QueryExecutionErrors.scala","Line Number":774},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"executeTask","File Name":"DeltaFileFormatWriter.scala","Line Number":447},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"$anonfun$executeWrite$2","File Name":"DeltaFileFormatWriter.scala","Line Number":274},{"Declaring Class":"org.apache.spark.scheduler.ResultTask","Method Name":"runTask","File Name":"ResultTask.scala","Line Number":93},{"Declaring Class":"org.apache.spark.TaskContext","Method Name":"runTaskWithListeners","File Name":"TaskContext.scala","Line Number":166},{"Declaring Class":"org.apache.spark.scheduler.Task","Method Name":"run","File Name":"Task.scala","Line Number":141},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"$anonfun$run$4","File Name":"Executor.scala","Line Number":620},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally","File Name":"SparkErrorUtils.scala","Line Number":64},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally$","File Name":"SparkErrorUtils.scala","Line Number":61},{"Declaring Class":"org.apache.spark.util.Utils$","Method Name":"tryWithSafeFinally","File Name":"Utils.scala","Line Number":94},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"run","File Name":"Executor.scala","Line Number":623},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor","Method Name":"runWorker","File Name":"ThreadPoolExecutor.java","Line Number":1136},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor$Worker","Method Name":"run","File Name":"ThreadPoolExecutor.java","Line Number":635},{"Declaring Class":"java.lang.Thread","Method Name":"run","File Name":"Thread.java","Line Number":840}],"Full Stack Trace":"org.apache.spark.SparkException: [TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.taskFailedWhileWritingRowsError(QueryExecutionErrors.scala:774)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:447)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)\n\tat org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:166)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:141)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: java.lang.OutOfMemoryError: Java heap space\n\tat shaded.parquet.it.unimi.dsi.fastutil.longs.Long2IntLinkedOpenHashMap.rehash(Long2IntLinkedOpenHashMap.java:1815)\n\tat shaded.parquet.it.unimi.dsi.fastutil.longs.Long2IntLinkedOpenHashMap.insert(Long2IntLinkedOpenHashMap.java:336)\n\tat shaded.parquet.it.unimi.dsi.fastutil.longs.Long2IntLinkedOpenHashMap.put(Long2IntLinkedOpenHashMap.java:344)\n\tat org.apache.parquet.column.values.dictionary.DictionaryValuesWriter$PlainLongDictionaryValuesWriter.writeLong(DictionaryValuesWriter.java:352)\n\tat org.apache.parquet.column.values.fallback.FallbackValuesWriter.writeLong(FallbackValuesWriter.java:186)\n\tat org.apache.parquet.column.impl.ColumnWriterBase.write(ColumnWriterBase.java:297)\n\tat org.apache.parquet.io.MessageColumnIO$MessageColumnIORecordConsumer.addLong(MessageColumnIO.java:456)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$makeWriter$13(ParquetWriteSupport.scala:232)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$makeWriter$13$adapted(ParquetWriteSupport.scala:232)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$$Lambda$1282/0x00000080018f8000.apply(Unknown Source)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$writeFields$1(ParquetWriteSupport.scala:161)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$$Lambda$1321/0x00000080019340e0.apply$mcV$sp(Unknown Source)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.consumeField(ParquetWriteSupport.scala:483)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.writeFields(ParquetWriteSupport.scala:161)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$write$1(ParquetWriteSupport.scala:151)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$$Lambda$1320/0x0000008001933df0.apply$mcV$sp(Unknown Source)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.consumeMessage(ParquetWriteSupport.scala:471)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.write(ParquetWriteSupport.scala:151)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.write(ParquetWriteSupport.scala:53)\n\tat org.apache.parquet.hadoop.InternalParquetRecordWriter.write(InternalParquetRecordWriter.java:138)\n\tat org.apache.parquet.hadoop.ParquetRecordWriter.write(ParquetRecordWriter.java:181)\n\tat org.apache.parquet.hadoop.ParquetRecordWriter.write(ParquetRecordWriter.java:43)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetOutputWriter.write(ParquetOutputWriter.scala:39)\n\tat org.apache.spark.sql.execution.datasources.SingleDirectoryDataWriter.write(FileFormatDataWriter.scala:175)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithMetrics(FileFormatDataWriter.scala:85)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithIterator(FileFormatDataWriter.scala:92)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeTask$1(DeltaFileFormatWriter.scala:430)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$1316/0x0000008001932b58.apply(Unknown Source)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1397)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:437)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$707/0x0000008001612578.apply(Unknown Source)\n","Accumulator Updates":[{"ID":751,"Update":"6918","Internal":false,"Count Failed Values":true},{"ID":753,"Update":"0","Internal":false,"Count Failed Values":true},{"ID":754,"Update":"976","Internal":false,"Count Failed Values":true},{"ID":758,"Update":"45536","Internal":false,"Count Failed Values":true},{"ID":780,"Update":"391282511","Internal":false,"Count Failed Values":true},{"ID":781,"Update":"266240","Internal":false,"Count Failed Values":true}]},"Task Info":{"Task ID":94,"Index":18,"Attempt":1,"Partition ID":18,"Launch Time":1720042874005,"Executor ID":"6","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042881004,"Failed":true,"Killed":false,"Accumulables":[{"ID":751,"Name":"internal.metrics.executorRunTime","Update":6918,"Value":76663,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":976,"Value":24443,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":956256,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":391282511,"Value":3443271757,"Internal":true,"Count Failed Values":true},{"ID":781,"Name":"internal.metrics.input.recordsRead","Update":266240,"Value":5947392,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":0,"Executor Deserialize CPU Time":0,"Executor Run Time":6918,"Executor CPU Time":0,"Peak Execution Memory":45536,"Result Size":0,"JVM GC Time":976,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":391282511,"Records Read":266240},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExceptionFailure","Class Name":"org.apache.spark.SparkException","Description":"[TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.","Stack Trace":[{"Declaring Class":"org.apache.spark.sql.errors.QueryExecutionErrors$","Method Name":"taskFailedWhileWritingRowsError","File Name":"QueryExecutionErrors.scala","Line Number":774},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"executeTask","File Name":"DeltaFileFormatWriter.scala","Line Number":447},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"$anonfun$executeWrite$2","File Name":"DeltaFileFormatWriter.scala","Line Number":274},{"Declaring Class":"org.apache.spark.scheduler.ResultTask","Method Name":"runTask","File Name":"ResultTask.scala","Line Number":93},{"Declaring Class":"org.apache.spark.TaskContext","Method Name":"runTaskWithListeners","File Name":"TaskContext.scala","Line Number":166},{"Declaring Class":"org.apache.spark.scheduler.Task","Method Name":"run","File Name":"Task.scala","Line Number":141},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"$anonfun$run$4","File Name":"Executor.scala","Line Number":620},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally","File Name":"SparkErrorUtils.scala","Line Number":64},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally$","File Name":"SparkErrorUtils.scala","Line Number":61},{"Declaring Class":"org.apache.spark.util.Utils$","Method Name":"tryWithSafeFinally","File Name":"Utils.scala","Line Number":94},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"run","File Name":"Executor.scala","Line Number":623},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor","Method Name":"runWorker","File Name":"ThreadPoolExecutor.java","Line Number":1136},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor$Worker","Method Name":"run","File Name":"ThreadPoolExecutor.java","Line Number":635},{"Declaring Class":"java.lang.Thread","Method Name":"run","File Name":"Thread.java","Line Number":840}],"Full Stack Trace":"org.apache.spark.SparkException: [TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.taskFailedWhileWritingRowsError(QueryExecutionErrors.scala:774)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:447)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)\n\tat org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:166)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:141)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: java.lang.OutOfMemoryError: Java heap space\n\tat shaded.parquet.it.unimi.dsi.fastutil.longs.Long2IntLinkedOpenHashMap.rehash(Long2IntLinkedOpenHashMap.java:1819)\n\tat shaded.parquet.it.unimi.dsi.fastutil.longs.Long2IntLinkedOpenHashMap.insert(Long2IntLinkedOpenHashMap.java:336)\n\tat shaded.parquet.it.unimi.dsi.fastutil.longs.Long2IntLinkedOpenHashMap.put(Long2IntLinkedOpenHashMap.java:344)\n\tat org.apache.parquet.column.values.dictionary.DictionaryValuesWriter$PlainLongDictionaryValuesWriter.writeLong(DictionaryValuesWriter.java:352)\n\tat org.apache.parquet.column.values.fallback.FallbackValuesWriter.writeLong(FallbackValuesWriter.java:186)\n\tat org.apache.parquet.column.impl.ColumnWriterBase.write(ColumnWriterBase.java:297)\n\tat org.apache.parquet.io.MessageColumnIO$MessageColumnIORecordConsumer.addLong(MessageColumnIO.java:456)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$makeWriter$13(ParquetWriteSupport.scala:232)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$makeWriter$13$adapted(ParquetWriteSupport.scala:232)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$$Lambda$1282/0x00000080018f8000.apply(Unknown Source)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$writeFields$1(ParquetWriteSupport.scala:161)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$$Lambda$1321/0x00000080019340e0.apply$mcV$sp(Unknown Source)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.consumeField(ParquetWriteSupport.scala:483)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.writeFields(ParquetWriteSupport.scala:161)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$write$1(ParquetWriteSupport.scala:151)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$$Lambda$1320/0x0000008001933df0.apply$mcV$sp(Unknown Source)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.consumeMessage(ParquetWriteSupport.scala:471)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.write(ParquetWriteSupport.scala:151)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.write(ParquetWriteSupport.scala:53)\n\tat org.apache.parquet.hadoop.InternalParquetRecordWriter.write(InternalParquetRecordWriter.java:138)\n\tat org.apache.parquet.hadoop.ParquetRecordWriter.write(ParquetRecordWriter.java:181)\n\tat org.apache.parquet.hadoop.ParquetRecordWriter.write(ParquetRecordWriter.java:43)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetOutputWriter.write(ParquetOutputWriter.scala:39)\n\tat org.apache.spark.sql.execution.datasources.SingleDirectoryDataWriter.write(FileFormatDataWriter.scala:175)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithMetrics(FileFormatDataWriter.scala:85)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithIterator(FileFormatDataWriter.scala:92)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeTask$1(DeltaFileFormatWriter.scala:430)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$1316/0x0000008001932b58.apply(Unknown Source)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1397)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:437)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$707/0x0000008001612578.apply(Unknown Source)\n","Accumulator Updates":[{"ID":751,"Update":"6918","Internal":false,"Count Failed Values":true},{"ID":753,"Update":"0","Internal":false,"Count Failed Values":true},{"ID":754,"Update":"976","Internal":false,"Count Failed Values":true},{"ID":758,"Update":"45536","Internal":false,"Count Failed Values":true},{"ID":780,"Update":"416187554","Internal":false,"Count Failed Values":true},{"ID":781,"Update":"249856","Internal":false,"Count Failed Values":true}]},"Task Info":{"Task ID":93,"Index":6,"Attempt":2,"Partition ID":6,"Launch Time":1720042874004,"Executor ID":"6","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042881005,"Failed":true,"Killed":false,"Accumulables":[{"ID":751,"Name":"internal.metrics.executorRunTime","Update":6918,"Value":83581,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":976,"Value":25419,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":1001792,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":416187554,"Value":3859459311,"Internal":true,"Count Failed Values":true},{"ID":781,"Name":"internal.metrics.input.recordsRead","Update":249856,"Value":6197248,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":0,"Executor Deserialize CPU Time":0,"Executor Run Time":6918,"Executor CPU Time":0,"Peak Execution Memory":45536,"Result Size":0,"JVM GC Time":976,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":416187554,"Records Read":249856},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"6","Exit Caused By App":false,"Loss Reason":"Command exited with code 50"},"Task Info":{"Task ID":103,"Index":19,"Attempt":0,"Partition ID":19,"Launch Time":1720042881004,"Executor ID":"6","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042881132,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"6","Exit Caused By App":false,"Loss Reason":"Command exited with code 50"},"Task Info":{"Task ID":102,"Index":15,"Attempt":2,"Partition ID":15,"Launch Time":1720042881000,"Executor ID":"6","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042881134,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerExecutorRemoved","Timestamp":1720042881136,"Executor ID":"6","Removed Reason":"Command exited with code 50"}
{"Event":"SparkListenerBlockManagerRemoved","Block Manager ID":{"Executor ID":"6","Host":"172.24.0.4","Port":45797},"Timestamp":1720042881141}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720042882457,"Executor ID":"9","Executor Info":{"Host":"172.24.0.4","Total Cores":2,"Log Urls":{"stdout":"http://172.24.0.4:8081/logPage/?appId=app-20240703214045-0014&executorId=9&logType=stdout","stderr":"http://172.24.0.4:8081/logPage/?appId=app-20240703214045-0014&executorId=9&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720042882457}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"9","Host":"172.24.0.4","Port":42953},"Maximum Memory":303667609,"Timestamp":1720042882488,"Maximum Onheap Memory":303667609,"Maximum Offheap Memory":0}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":104,"Index":15,"Attempt":3,"Partition ID":15,"Launch Time":1720042882509,"Executor ID":"9","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":105,"Index":19,"Attempt":1,"Partition ID":19,"Launch Time":1720042882511,"Executor ID":"9","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":106,"Index":6,"Attempt":3,"Partition ID":6,"Launch Time":1720042884389,"Executor ID":"9","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":105,"Index":19,"Attempt":1,"Partition ID":19,"Launch Time":1720042882511,"Executor ID":"9","Host":"172.24.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042884391,"Failed":false,"Killed":false,"Accumulables":[{"ID":627,"Name":"scan time","Update":"277","Value":"1679","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"task commit time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":743,"Name":"duration","Update":"1466","Value":"9008","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"internal.metrics.executorDeserializeTime","Update":434,"Value":1968,"Internal":true,"Count Failed Values":true},{"ID":750,"Name":"internal.metrics.executorDeserializeCpuTime","Update":311117916,"Value":1002606952,"Internal":true,"Count Failed Values":true},{"ID":751,"Name":"internal.metrics.executorRunTime","Update":1405,"Value":84986,"Internal":true,"Count Failed Values":true},{"ID":752,"Name":"internal.metrics.executorCpuTime","Update":995786680,"Value":5390261880,"Internal":true,"Count Failed Values":true},{"ID":753,"Name":"internal.metrics.resultSize","Update":2973,"Value":39180,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":80,"Value":25499,"Internal":true,"Count Failed Values":true},{"ID":755,"Name":"internal.metrics.resultSerializationTime","Update":8,"Value":46,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":1047328,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":13006,"Value":3859472317,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":434,"Executor Deserialize CPU Time":311117916,"Executor Run Time":1405,"Executor CPU Time":995786680,"Peak Execution Memory":45536,"Result Size":2973,"JVM GC Time":80,"Result Serialization Time":8,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":13006,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":107,"Index":18,"Attempt":2,"Partition ID":18,"Launch Time":1720042886906,"Executor ID":"7","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExceptionFailure","Class Name":"org.apache.spark.SparkException","Description":"[TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.","Stack Trace":[{"Declaring Class":"org.apache.spark.sql.errors.QueryExecutionErrors$","Method Name":"taskFailedWhileWritingRowsError","File Name":"QueryExecutionErrors.scala","Line Number":774},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"executeTask","File Name":"DeltaFileFormatWriter.scala","Line Number":447},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"$anonfun$executeWrite$2","File Name":"DeltaFileFormatWriter.scala","Line Number":274},{"Declaring Class":"org.apache.spark.scheduler.ResultTask","Method Name":"runTask","File Name":"ResultTask.scala","Line Number":93},{"Declaring Class":"org.apache.spark.TaskContext","Method Name":"runTaskWithListeners","File Name":"TaskContext.scala","Line Number":166},{"Declaring Class":"org.apache.spark.scheduler.Task","Method Name":"run","File Name":"Task.scala","Line Number":141},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"$anonfun$run$4","File Name":"Executor.scala","Line Number":620},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally","File Name":"SparkErrorUtils.scala","Line Number":64},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally$","File Name":"SparkErrorUtils.scala","Line Number":61},{"Declaring Class":"org.apache.spark.util.Utils$","Method Name":"tryWithSafeFinally","File Name":"Utils.scala","Line Number":94},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"run","File Name":"Executor.scala","Line Number":623},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor","Method Name":"runWorker","File Name":"ThreadPoolExecutor.java","Line Number":1136},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor$Worker","Method Name":"run","File Name":"ThreadPoolExecutor.java","Line Number":635},{"Declaring Class":"java.lang.Thread","Method Name":"run","File Name":"Thread.java","Line Number":840}],"Full Stack Trace":"org.apache.spark.SparkException: [TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.taskFailedWhileWritingRowsError(QueryExecutionErrors.scala:774)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:447)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)\n\tat org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:166)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:141)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: java.lang.OutOfMemoryError: Java heap space\n\tat org.apache.parquet.column.values.dictionary.DictionaryValuesWriter$PlainLongDictionaryValuesWriter.fallBackDictionaryEncodedData(DictionaryValuesWriter.java:386)\n\tat org.apache.parquet.column.values.dictionary.DictionaryValuesWriter.fallBackAllValuesTo(DictionaryValuesWriter.java:130)\n\tat org.apache.parquet.column.values.fallback.FallbackValuesWriter.fallBack(FallbackValuesWriter.java:155)\n\tat org.apache.parquet.column.values.fallback.FallbackValuesWriter.checkFallback(FallbackValuesWriter.java:149)\n\tat org.apache.parquet.column.values.fallback.FallbackValuesWriter.writeLong(FallbackValuesWriter.java:187)\n\tat org.apache.parquet.column.impl.ColumnWriterBase.write(ColumnWriterBase.java:297)\n\tat org.apache.parquet.io.MessageColumnIO$MessageColumnIORecordConsumer.addLong(MessageColumnIO.java:456)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$makeWriter$13(ParquetWriteSupport.scala:232)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$makeWriter$13$adapted(ParquetWriteSupport.scala:232)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$$Lambda$1413/0x000000780191ef60.apply(Unknown Source)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$writeFields$1(ParquetWriteSupport.scala:161)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$$Lambda$1464/0x00000078019589c0.apply$mcV$sp(Unknown Source)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.consumeField(ParquetWriteSupport.scala:483)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.writeFields(ParquetWriteSupport.scala:161)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.$anonfun$write$1(ParquetWriteSupport.scala:151)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$$Lambda$1461/0x00000078019583e0.apply$mcV$sp(Unknown Source)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.consumeMessage(ParquetWriteSupport.scala:471)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.write(ParquetWriteSupport.scala:151)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport.write(ParquetWriteSupport.scala:53)\n\tat org.apache.parquet.hadoop.InternalParquetRecordWriter.write(InternalParquetRecordWriter.java:138)\n\tat org.apache.parquet.hadoop.ParquetRecordWriter.write(ParquetRecordWriter.java:181)\n\tat org.apache.parquet.hadoop.ParquetRecordWriter.write(ParquetRecordWriter.java:43)\n\tat org.apache.spark.sql.execution.datasources.parquet.ParquetOutputWriter.write(ParquetOutputWriter.scala:39)\n\tat org.apache.spark.sql.execution.datasources.SingleDirectoryDataWriter.write(FileFormatDataWriter.scala:175)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithMetrics(FileFormatDataWriter.scala:85)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithIterator(FileFormatDataWriter.scala:92)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeTask$1(DeltaFileFormatWriter.scala:430)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$1453/0x00000078017d8400.apply(Unknown Source)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1397)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:437)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$712/0x000000780161a770.apply(Unknown Source)\n","Accumulator Updates":[{"ID":751,"Update":"6668","Internal":false,"Count Failed Values":true},{"ID":753,"Update":"0","Internal":false,"Count Failed Values":true},{"ID":754,"Update":"988","Internal":false,"Count Failed Values":true},{"ID":758,"Update":"45536","Internal":false,"Count Failed Values":true},{"ID":780,"Update":"359311216","Internal":false,"Count Failed Values":true},{"ID":781,"Update":"720896","Internal":false,"Count Failed Values":true}]},"Task Info":{"Task ID":98,"Index":3,"Attempt":3,"Partition ID":3,"Launch Time":1720042880161,"Executor ID":"7","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042886911,"Failed":true,"Killed":false,"Accumulables":[{"ID":751,"Name":"internal.metrics.executorRunTime","Update":6668,"Value":91654,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":988,"Value":26487,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":1092864,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":359311216,"Value":4218783533,"Internal":true,"Count Failed Values":true},{"ID":781,"Name":"internal.metrics.input.recordsRead","Update":720896,"Value":6918144,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":0,"Executor Deserialize CPU Time":0,"Executor Run Time":6668,"Executor CPU Time":0,"Peak Execution Memory":45536,"Result Size":0,"JVM GC Time":988,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":359311216,"Records Read":720896},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"7","Exit Caused By App":false,"Loss Reason":"Command exited with code 50"},"Task Info":{"Task ID":107,"Index":18,"Attempt":2,"Partition ID":18,"Launch Time":1720042886906,"Executor ID":"7","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042887071,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"7","Exit Caused By App":true,"Loss Reason":"Command exited with code 50"},"Task Info":{"Task ID":99,"Index":12,"Attempt":3,"Partition ID":12,"Launch Time":1720042880162,"Executor ID":"7","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042887072,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerExecutorRemoved","Timestamp":1720042887073,"Executor ID":"7","Removed Reason":"Command exited with code 50"}
{"Event":"SparkListenerBlockManagerRemoved","Block Manager ID":{"Executor ID":"7","Host":"172.24.0.5","Port":39619},"Timestamp":1720042887076}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720042889091,"Executor ID":"10","Executor Info":{"Host":"172.24.0.5","Total Cores":2,"Log Urls":{"stdout":"http://172.24.0.5:8081/logPage/?appId=app-20240703214045-0014&executorId=10&logType=stdout","stderr":"http://172.24.0.5:8081/logPage/?appId=app-20240703214045-0014&executorId=10&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720042889091}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"10","Host":"172.24.0.5","Port":37989},"Maximum Memory":303667609,"Timestamp":1720042889142,"Maximum Onheap Memory":303667609,"Maximum Offheap Memory":0}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":108,"Index":12,"Attempt":4,"Partition ID":12,"Launch Time":1720042889192,"Executor ID":"10","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":109,"Index":18,"Attempt":3,"Partition ID":18,"Launch Time":1720042889195,"Executor ID":"10","Host":"172.24.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":110,"Index":3,"Attempt":4,"Partition ID":3,"Launch Time":1720042897840,"Executor ID":"8","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExceptionFailure","Class Name":"org.apache.spark.SparkException","Description":"[TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.","Stack Trace":[{"Declaring Class":"org.apache.spark.sql.errors.QueryExecutionErrors$","Method Name":"taskFailedWhileWritingRowsError","File Name":"QueryExecutionErrors.scala","Line Number":774},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"executeTask","File Name":"DeltaFileFormatWriter.scala","Line Number":447},{"Declaring Class":"org.apache.spark.sql.delta.files.DeltaFileFormatWriter$","Method Name":"$anonfun$executeWrite$2","File Name":"DeltaFileFormatWriter.scala","Line Number":274},{"Declaring Class":"org.apache.spark.scheduler.ResultTask","Method Name":"runTask","File Name":"ResultTask.scala","Line Number":93},{"Declaring Class":"org.apache.spark.TaskContext","Method Name":"runTaskWithListeners","File Name":"TaskContext.scala","Line Number":166},{"Declaring Class":"org.apache.spark.scheduler.Task","Method Name":"run","File Name":"Task.scala","Line Number":141},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"$anonfun$run$4","File Name":"Executor.scala","Line Number":620},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally","File Name":"SparkErrorUtils.scala","Line Number":64},{"Declaring Class":"org.apache.spark.util.SparkErrorUtils","Method Name":"tryWithSafeFinally$","File Name":"SparkErrorUtils.scala","Line Number":61},{"Declaring Class":"org.apache.spark.util.Utils$","Method Name":"tryWithSafeFinally","File Name":"Utils.scala","Line Number":94},{"Declaring Class":"org.apache.spark.executor.Executor$TaskRunner","Method Name":"run","File Name":"Executor.scala","Line Number":623},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor","Method Name":"runWorker","File Name":"ThreadPoolExecutor.java","Line Number":1136},{"Declaring Class":"java.util.concurrent.ThreadPoolExecutor$Worker","Method Name":"run","File Name":"ThreadPoolExecutor.java","Line Number":635},{"Declaring Class":"java.lang.Thread","Method Name":"run","File Name":"Thread.java","Line Number":840}],"Full Stack Trace":"org.apache.spark.SparkException: [TASK_WRITE_FAILED] Task failed while writing rows to file:/opt/bitnami/spark/storage/rides/delta/rides.\n\tat org.apache.spark.sql.errors.QueryExecutionErrors$.taskFailedWhileWritingRowsError(QueryExecutionErrors.scala:774)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:447)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)\n\tat org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:166)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:141)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: java.lang.OutOfMemoryError: Java heap space\n\tat org.apache.parquet.bytes.BytesInput$StreamBytesInput.toByteArray(BytesInput.java:285)\n\tat org.apache.parquet.bytes.BytesInput.toByteBuffer(BytesInput.java:237)\n\tat org.apache.parquet.bytes.BytesInput.toInputStream(BytesInput.java:246)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.readPageV1(VectorizedColumnReader.java:367)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.access$000(VectorizedColumnReader.java:49)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader$1.visit(VectorizedColumnReader.java:272)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader$1.visit(VectorizedColumnReader.java:268)\n\tat org.apache.parquet.column.page.DataPageV1.accept(DataPageV1.java:120)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.readPage(VectorizedColumnReader.java:268)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedColumnReader.readBatch(VectorizedColumnReader.java:186)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedParquetRecordReader.nextBatch(VectorizedParquetRecordReader.java:342)\n\tat org.apache.spark.sql.execution.datasources.parquet.VectorizedParquetRecordReader.nextKeyValue(VectorizedParquetRecordReader.java:233)\n\tat org.apache.spark.sql.execution.datasources.RecordReaderIterator.hasNext(RecordReaderIterator.scala:39)\n\tat org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:129)\n\tat org.apache.spark.sql.execution.FileSourceScanExec$$anon$1.hasNext(DataSourceScanExec.scala:593)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage3.columnartorow_nextBatch_0$(Unknown Source)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage3.processNext(Unknown Source)\n\tat org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)\n\tat org.apache.spark.sql.execution.WholeStageCodegenEvaluatorFactory$WholeStageCodegenPartitionEvaluator$$anon$1.hasNext(WholeStageCodegenEvaluatorFactory.scala:43)\n\tat org.apache.spark.sql.execution.datasources.FileFormatDataWriter.writeWithIterator(FileFormatDataWriter.scala:91)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeTask$1(DeltaFileFormatWriter.scala:430)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$1464/0x00000018019b6a28.apply(Unknown Source)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1397)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.executeTask(DeltaFileFormatWriter.scala:437)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$.$anonfun$executeWrite$2(DeltaFileFormatWriter.scala:274)\n\tat org.apache.spark.sql.delta.files.DeltaFileFormatWriter$$$Lambda$715/0x000000180160c000.apply(Unknown Source)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)\n\tat org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:166)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:141)\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)\n\tat org.apache.spark.executor.Executor$TaskRunner$$Lambda$552/0x00000018014b45a0.apply(Unknown Source)\n\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)\n","Accumulator Updates":[{"ID":751,"Update":"17441","Internal":false,"Count Failed Values":true},{"ID":753,"Update":"0","Internal":false,"Count Failed Values":true},{"ID":754,"Update":"2638","Internal":false,"Count Failed Values":true},{"ID":758,"Update":"45536","Internal":false,"Count Failed Values":true},{"ID":780,"Update":"329398373","Internal":false,"Count Failed Values":true},{"ID":781,"Update":"1306624","Internal":false,"Count Failed Values":true}]},"Task Info":{"Task ID":100,"Index":1,"Attempt":2,"Partition ID":1,"Launch Time":1720042880332,"Executor ID":"8","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042897843,"Failed":true,"Killed":false,"Accumulables":[{"ID":751,"Name":"internal.metrics.executorRunTime","Update":17441,"Value":109095,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Update":2638,"Value":29125,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Update":45536,"Value":1138400,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Update":329398373,"Value":4548181906,"Internal":true,"Count Failed Values":true},{"ID":781,"Name":"internal.metrics.input.recordsRead","Update":1306624,"Value":8224768,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":1058685128,"JVMOffHeapMemory":110169936,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":1006403,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":1006403,"OffHeapUnifiedMemory":0,"DirectPoolMemory":21420581,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":157,"MinorGCTime":375,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":375},"Task Metrics":{"Executor Deserialize Time":0,"Executor Deserialize CPU Time":0,"Executor Run Time":17441,"Executor CPU Time":0,"Peak Execution Memory":45536,"Result Size":0,"JVM GC Time":2638,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":329398373,"Records Read":1306624},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"8","Exit Caused By App":true,"Loss Reason":"Command exited with code 50"},"Task Info":{"Task ID":101,"Index":9,"Attempt":4,"Partition ID":9,"Launch Time":1720042880334,"Executor ID":"8","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042897983,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerExecutorRemoved","Timestamp":1720042897997,"Executor ID":"8","Removed Reason":"Command exited with code 50"}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":15,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":43,"RDD Info":[{"RDD ID":55,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"135\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"151\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"FileScanRDD","Scope":"{\"id\":\"151\",\"name\":\"Scan parquet \"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":43,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:240)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720042858066,"Completion Time":1720042898007,"Failure Reason":"Job aborted due to stage failure: Task 9 in stage 15.0 failed 4 times, most recent failure: Lost task 9.4 in stage 15.0 (TID 101) (172.24.0.3 executor 8): ExecutorLostFailure (executor 8 exited caused by one of the running tasks) Reason: Command exited with code 50\nDriver stacktrace:","Accumulables":[{"ID":627,"Name":"scan time","Value":"1679","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":655,"Name":"task commit time","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":743,"Name":"duration","Value":"9008","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":749,"Name":"internal.metrics.executorDeserializeTime","Value":1968,"Internal":true,"Count Failed Values":true},{"ID":750,"Name":"internal.metrics.executorDeserializeCpuTime","Value":1002606952,"Internal":true,"Count Failed Values":true},{"ID":751,"Name":"internal.metrics.executorRunTime","Value":109095,"Internal":true,"Count Failed Values":true},{"ID":752,"Name":"internal.metrics.executorCpuTime","Value":5390261880,"Internal":true,"Count Failed Values":true},{"ID":753,"Name":"internal.metrics.resultSize","Value":39180,"Internal":true,"Count Failed Values":true},{"ID":754,"Name":"internal.metrics.jvmGCTime","Value":29125,"Internal":true,"Count Failed Values":true},{"ID":755,"Name":"internal.metrics.resultSerializationTime","Value":46,"Internal":true,"Count Failed Values":true},{"ID":758,"Name":"internal.metrics.peakExecutionMemory","Value":1138400,"Internal":true,"Count Failed Values":true},{"ID":780,"Name":"internal.metrics.input.bytesRead","Value":4548181906,"Internal":true,"Count Failed Values":true},{"ID":781,"Name":"internal.metrics.input.recordsRead","Value":8224768,"Internal":true,"Count Failed Values":true},{"ID":782,"Name":"internal.metrics.output.bytesWritten","Value":2061,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":12,"Completion Time":1720042898011,"Job Result":{"Result":"JobFailed","Exception":{"Message":"Job aborted due to stage failure: Task 9 in stage 15.0 failed 4 times, most recent failure: Lost task 9.4 in stage 15.0 (TID 101) (172.24.0.3 executor 8): ExecutorLostFailure (executor 8 exited caused by one of the running tasks) Reason: Command exited with code 50\nDriver stacktrace:","Stack Trace":[{"Declaring Class":"org.apache.spark.scheduler.DAGScheduler","Method Name":"failJobAndIndependentStages","File Name":"DAGScheduler.scala","Line Number":2856},{"Declaring Class":"org.apache.spark.scheduler.DAGScheduler","Method Name":"$anonfun$abortStage$2","File Name":"DAGScheduler.scala","Line Number":2792},{"Declaring Class":"org.apache.spark.scheduler.DAGScheduler","Method Name":"$anonfun$abortStage$2$adapted","File Name":"DAGScheduler.scala","Line Number":2791},{"Declaring Class":"scala.collection.mutable.ResizableArray","Method Name":"foreach","File Name":"ResizableArray.scala","Line Number":62},{"Declaring Class":"scala.collection.mutable.ResizableArray","Method Name":"foreach$","File Name":"ResizableArray.scala","Line Number":55},{"Declaring Class":"scala.collection.mutable.ArrayBuffer","Method Name":"foreach","File Name":"ArrayBuffer.scala","Line Number":49},{"Declaring Class":"org.apache.spark.scheduler.DAGScheduler","Method Name":"abortStage","File Name":"DAGScheduler.scala","Line Number":2791},{"Declaring Class":"org.apache.spark.scheduler.DAGScheduler","Method Name":"$anonfun$handleTaskSetFailed$1","File Name":"DAGScheduler.scala","Line Number":1247},{"Declaring Class":"org.apache.spark.scheduler.DAGScheduler","Method Name":"$anonfun$handleTaskSetFailed$1$adapted","File Name":"DAGScheduler.scala","Line Number":1247},{"Declaring Class":"scala.Option","Method Name":"foreach","File Name":"Option.scala","Line Number":407},{"Declaring Class":"org.apache.spark.scheduler.DAGScheduler","Method Name":"handleTaskSetFailed","File Name":"DAGScheduler.scala","Line Number":1247},{"Declaring Class":"org.apache.spark.scheduler.DAGSchedulerEventProcessLoop","Method Name":"doOnReceive","File Name":"DAGScheduler.scala","Line Number":3060},{"Declaring Class":"org.apache.spark.scheduler.DAGSchedulerEventProcessLoop","Method Name":"onReceive","File Name":"DAGScheduler.scala","Line Number":2994},{"Declaring Class":"org.apache.spark.scheduler.DAGSchedulerEventProcessLoop","Method Name":"onReceive","File Name":"DAGScheduler.scala","Line Number":2983},{"Declaring Class":"org.apache.spark.util.EventLoop$$anon$1","Method Name":"run","File Name":"EventLoop.scala","Line Number":49}]}}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"ExecutorLostFailure","Executor ID":"8","Exit Caused By App":false,"Loss Reason":"Command exited with code 50"},"Task Info":{"Task ID":110,"Index":3,"Attempt":4,"Partition ID":3,"Launch Time":1720042897840,"Executor ID":"8","Host":"172.24.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720042897994,"Failed":true,"Killed":false,"Accumulables":[]},"Task Executor Metrics":{"JVMHeapMemory":-1,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0}}
{"Event":"SparkListenerBlockManagerRemoved","Block Manager ID":{"Executor ID":"8","Host":"172.24.0.3","Port":43509},"Timestamp":1720042898036}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":8,"time":1720042898148,"errorMessage":"Job aborted due to stage failure: Task 9 in stage 15.0 failed 4 times, most recent failure: Lost task 9.4 in stage 15.0 (TID 101) (172.24.0.3 executor 8): ExecutorLostFailure (executor 8 exited caused by one of the running tasks) Reason: Command exited with code 50\nDriver stacktrace:"}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":4,"time":1720042898148,"errorMessage":"Job aborted due to stage failure: Task 9 in stage 15.0 failed 4 times, most recent failure: Lost task 9.4 in stage 15.0 (TID 101) (172.24.0.3 executor 8): ExecutorLostFailure (executor 8 exited caused by one of the running tasks) Reason: Command exited with code 50\nDriver stacktrace:"}
{"Event":"SparkListenerApplicationEnd","Timestamp":1720042898239}
