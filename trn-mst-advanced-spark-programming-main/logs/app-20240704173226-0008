{"Event":"SparkListenerLogStart","Spark Version":"3.5.1"}
{"Event":"SparkListenerResourceProfileAdded","Resource Profile Id":0,"Executor Resource Requests":{"memory":{"Resource Name":"memory","Amount":3072,"Discovery Script":"","Vendor":""},"offHeap":{"Resource Name":"offHeap","Amount":0,"Discovery Script":"","Vendor":""}},"Task Resource Requests":{"cpus":{"Resource Name":"cpus","Amount":1.0}}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"driver","Host":"c05db890fad2","Port":42723},"Maximum Memory":455501414,"Timestamp":1720114346463,"Maximum Onheap Memory":455501414,"Maximum Offheap Memory":0}
{"Event":"SparkListenerEnvironmentUpdate","JVM Information":{"Java Home":"/opt/bitnami/java","Java Version":"17.0.11 (BellSoft)","Scala Version":"version 2.12.18"},"Spark Properties":{"fs.s3a.connection.maximum":"100","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.driver.host":"c05db890fad2","spark.serializer.objectStreamReset":"100","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.eventLog.enabled":"true","spark.driver.port":"35733","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.hadoop.fs.s3a.path.style.access":"true","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.scheduler.mode":"FIFO","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.submit.pyFiles":"","spark.app.submitTime":"1720114345467","spark.app.startTime":"1720114346012","spark.executor.id":"driver","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED","spark.submit.deployMode":"client","spark.master":"spark://spark-master:7077","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.executor.memory":"3g","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.app.id":"app-20240704173226-0008","spark.hadoop.fs.s3a.fast.upload":"true"},"Hadoop Properties":{"hadoop.service.shutdown.timeout":"30s","yarn.resourcemanager.amlauncher.thread-count":"50","yarn.sharedcache.enabled":"false","fs.s3a.connection.maximum":"96","yarn.nodemanager.numa-awareness.numactl.cmd":"/usr/bin/numactl","fs.viewfs.overload.scheme.target.o3fs.impl":"org.apache.hadoop.fs.ozone.OzoneFileSystem","fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.app.mapreduce.am.scheduler.heartbeat.interval-ms":"1000","yarn.timeline-service.timeline-client.number-of-async-entities-to-merge":"10","hadoop.security.kms.client.timeout":"60","hadoop.http.authentication.kerberos.principal":"HTTP/_HOST@LOCALHOST","mapreduce.jobhistory.loadedjob.tasks.max":"-1","yarn.resourcemanager.application-tag-based-placement.enable":"false","mapreduce.framework.name":"local","yarn.sharedcache.uploader.server.thread-count":"50","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds.min":"3600","yarn.nodemanager.linux-container-executor.nonsecure-mode.user-pattern":"^[_.A-Za-z0-9][-@_.A-Za-z0-9]{0,255}?[$]?$","tfile.fs.output.buffer.size":"262144","yarn.app.mapreduce.am.job.task.listener.thread-count":"30","yarn.nodemanager.node-attributes.resync-interval-ms":"120000","fs.s3a.secret.key":"*********(redacted)","yarn.nodemanager.container-log-monitor.interval-ms":"60000","hadoop.security.groups.cache.background.reload.threads":"3","yarn.resourcemanager.webapp.cross-origin.enabled":"false","fs.AbstractFileSystem.ftp.impl":"org.apache.hadoop.fs.ftp.FtpFs","fs.viewfs.overload.scheme.target.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","hadoop.registry.secure":"false","hadoop.shell.safely.delete.limit.num.files":"100","mapreduce.job.acl-view-job":" ","fs.s3a.s3guard.ddb.background.sleep":"25ms","fs.s3a.retry.limit":"7","mapreduce.jobhistory.loadedjobs.cache.size":"5","fs.s3a.s3guard.ddb.table.create":"false","fs.viewfs.overload.scheme.target.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.nodemanager.amrmproxy.enabled":"false","yarn.timeline-service.entity-group-fs-store.with-user-dir":"false","mapreduce.shuffle.pathcache.expire-after-access-minutes":"5","mapreduce.input.fileinputformat.split.minsize":"0","yarn.resourcemanager.container.liveness-monitor.interval-ms":"600000","yarn.resourcemanager.client.thread-count":"50","io.seqfile.compress.blocksize":"1000000","yarn.nodemanager.runtime.linux.docker.allowed-container-runtimes":"runc","fs.viewfs.overload.scheme.target.http.impl":"org.apache.hadoop.fs.http.HttpFileSystem","yarn.resourcemanager.nodemanagers.heartbeat-interval-slowdown-factor":"1.0","yarn.sharedcache.checksum.algo.impl":"org.apache.hadoop.yarn.sharedcache.ChecksumSHA256Impl","yarn.nodemanager.amrmproxy.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor","yarn.timeline-service.entity-group-fs-store.leveldb-cache-read-cache-size":"10485760","mapreduce.reduce.shuffle.fetch.retry.interval-ms":"1000","mapreduce.task.profile.maps":"0-2","yarn.scheduler.include-port-in-node-name":"false","yarn.nodemanager.admin-env":"MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX","yarn.resourcemanager.node-removal-untracked.timeout-ms":"60000","mapreduce.am.max-attempts":"2","hadoop.security.kms.client.failover.sleep.base.millis":"100","mapreduce.jobhistory.webapp.https.address":"0.0.0.0:19890","yarn.node-labels.fs-store.impl.class":"org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore","yarn.nodemanager.collector-service.address":"${yarn.nodemanager.hostname}:8048","fs.trash.checkpoint.interval":"0","mapreduce.job.map.output.collector.class":"org.apache.hadoop.mapred.MapTask$MapOutputBuffer","yarn.resourcemanager.node-ip-cache.expiry-interval-secs":"-1","hadoop.http.authentication.signature.secret.file":"*********(redacted)","hadoop.jetty.logs.serve.aliases":"true","yarn.resourcemanager.placement-constraints.handler":"disabled","yarn.timeline-service.handler-thread-count":"10","yarn.resourcemanager.max-completed-applications":"1000","yarn.nodemanager.aux-services.manifest.enabled":"false","yarn.resourcemanager.system-metrics-publisher.enabled":"false","yarn.resourcemanager.placement-constraints.algorithm.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.constraint.algorithm.DefaultPlacementAlgorithm","yarn.sharedcache.webapp.address":"0.0.0.0:8788","fs.s3a.select.input.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.renew-interval":"*********(redacted)","yarn.sharedcache.nm.uploader.replication.factor":"10","hadoop.security.groups.negative-cache.secs":"30","yarn.app.mapreduce.task.container.log.backups":"0","mapreduce.reduce.skip.proc-count.auto-incr":"true","fs.viewfs.overload.scheme.target.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","hadoop.security.group.mapping.ldap.posix.attr.gid.name":"gidNumber","ipc.client.fallback-to-simple-auth-allowed":"false","yarn.nodemanager.resource.memory.enforced":"true","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.enable-batch":"false","yarn.client.failover-proxy-provider":"org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider","yarn.timeline-service.http-authentication.simple.anonymous.allowed":"true","ha.health-monitor.check-interval.ms":"1000","yarn.nodemanager.runtime.linux.runc.host-pid-namespace.allowed":"false","hadoop.metrics.jvm.use-thread-mxbean":"false","ipc.[port_number].faircallqueue.multiplexer.weights":"8,4,2,1","yarn.acl.reservation-enable":"false","yarn.resourcemanager.store.class":"org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore","yarn.app.mapreduce.am.hard-kill-timeout-ms":"10000","fs.s3a.etag.checksum.enabled":"false","yarn.nodemanager.container-metrics.enable":"true","ha.health-monitor.rpc.connect.max.retries":"1","yarn.timeline-service.client.fd-clean-interval-secs":"60","yarn.resourcemanager.nodemanagers.heartbeat-interval-scaling-enable":"false","yarn.resourcemanager.nodemanagers.heartbeat-interval-ms":"1000","hadoop.common.configuration.version":"3.0.0","fs.s3a.s3guard.ddb.table.capacity.read":"0","yarn.nodemanager.remote-app-log-dir-suffix":"logs","yarn.nodemanager.container-log-monitor.dir-size-limit-bytes":"1000000000","yarn.nodemanager.windows-container.cpu-limit.enabled":"false","yarn.nodemanager.runtime.linux.docker.privileged-containers.allowed":"false","file.blocksize":"67108864","hadoop.http.idle_timeout.ms":"60000","hadoop.registry.zk.retry.ceiling.ms":"60000","yarn.scheduler.configuration.leveldb-store.path":"${hadoop.tmp.dir}/yarn/system/confstore","yarn.sharedcache.store.in-memory.initial-delay-mins":"10","mapreduce.jobhistory.principal":"jhs/_HOST@REALM.TLD","mapreduce.map.skip.proc-count.auto-incr":"true","fs.s3a.committer.name":"file","mapreduce.task.profile.reduces":"0-2","hadoop.zk.num-retries":"1000","yarn.webapp.xfs-filter.enabled":"true","fs.viewfs.overload.scheme.target.hdfs.impl":"org.apache.hadoop.hdfs.DistributedFileSystem","seq.io.sort.mb":"100","yarn.scheduler.configuration.max.version":"100","yarn.timeline-service.webapp.https.address":"${yarn.timeline-service.hostname}:8190","yarn.resourcemanager.scheduler.address":"${yarn.resourcemanager.hostname}:8030","yarn.node-labels.enabled":"false","yarn.resourcemanager.webapp.ui-actions.enabled":"true","mapreduce.task.timeout":"600000","yarn.sharedcache.client-server.thread-count":"50","hadoop.security.groups.shell.command.timeout":"0s","hadoop.security.crypto.cipher.suite":"AES/CTR/NoPadding","yarn.nodemanager.elastic-memory-control.oom-handler":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.DefaultOOMHandler","yarn.resourcemanager.connect.max-wait.ms":"900000","fs.defaultFS":"file:///","yarn.minicluster.use-rpc":"false","ipc.[port_number].decay-scheduler.decay-factor":"0.5","fs.har.impl.disable.cache":"true","yarn.webapp.ui2.enable":"false","io.compression.codec.bzip2.library":"system-native","yarn.webapp.filter-invalid-xml-chars":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-interval-secs":"600","fs.s3a.select.input.csv.record.delimiter":"\\n","fs.s3a.change.detection.source":"etag","ipc.[port_number].backoff.enable":"false","yarn.nodemanager.distributed-scheduling.enabled":"false","mapreduce.shuffle.connection-keep-alive.timeout":"5","yarn.resourcemanager.webapp.https.address":"${yarn.resourcemanager.hostname}:8090","yarn.webapp.enable-rest-app-submissions":"true","mapreduce.jobhistory.address":"0.0.0.0:10020","yarn.resourcemanager.nm-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.is.minicluster":"false","yarn.nodemanager.address":"${yarn.nodemanager.hostname}:0","fs.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","fs.AbstractFileSystem.s3a.impl":"org.apache.hadoop.fs.s3a.S3A","mapreduce.task.combine.progress.records":"10000","yarn.resourcemanager.epoch.range":"0","yarn.resourcemanager.am.max-attempts":"2","yarn.nodemanager.runtime.linux.runc.image-toplevel-dir":"/runc-root","yarn.nodemanager.linux-container-executor.cgroups.hierarchy":"/hadoop-yarn","fs.AbstractFileSystem.wasbs.impl":"org.apache.hadoop.fs.azure.Wasbs","yarn.timeline-service.entity-group-fs-store.cache-store-class":"org.apache.hadoop.yarn.server.timeline.MemoryTimelineStore","yarn.nodemanager.runtime.linux.runc.allowed-container-networks":"host,none,bridge","fs.ftp.transfer.mode":"BLOCK_TRANSFER_MODE","ipc.server.log.slow.rpc":"false","ipc.server.reuseaddr":"true","fs.ftp.timeout":"0","yarn.resourcemanager.node-labels.provider.fetch-interval-ms":"1800000","yarn.router.webapp.https.address":"0.0.0.0:8091","yarn.nodemanager.webapp.cross-origin.enabled":"false","fs.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","yarn.resourcemanager.auto-update.containers":"false","yarn.app.mapreduce.am.job.committer.cancel-timeout":"60000","yarn.scheduler.configuration.zk-store.parent-path":"/confstore","yarn.nodemanager.default-container-executor.log-dirs.permissions":"710","yarn.app.attempt.diagnostics.limit.kc":"64","fs.viewfs.overload.scheme.target.swebhdfs.impl":"org.apache.hadoop.hdfs.web.SWebHdfsFileSystem","yarn.client.failover-no-ha-proxy-provider":"org.apache.hadoop.yarn.client.DefaultNoHARMFailoverProxyProvider","fs.s3a.change.detection.mode":"server","ftp.bytes-per-checksum":"512","yarn.nodemanager.resource.memory-mb":"-1","fs.AbstractFileSystem.abfs.impl":"org.apache.hadoop.fs.azurebfs.Abfs","yarn.timeline-service.writer.flush-interval-seconds":"60","fs.s3a.fast.upload.active.blocks":"4","yarn.resourcemanager.submission-preprocessor.enabled":"false","hadoop.security.credential.clear-text-fallback":"true","yarn.nodemanager.collector-service.thread-count":"5","ipc.[port_number].scheduler.impl":"org.apache.hadoop.ipc.DefaultRpcScheduler","fs.azure.secure.mode":"false","mapreduce.jobhistory.joblist.cache.size":"20000","fs.ftp.host":"0.0.0.0","yarn.timeline-service.writer.async.queue.capacity":"100","yarn.resourcemanager.fs.state-store.num-retries":"0","yarn.resourcemanager.nodemanager-connect-retries":"10","yarn.nodemanager.log-aggregation.num-log-files-per-app":"30","hadoop.security.kms.client.encrypted.key.cache.low-watermark":"0.3f","fs.s3a.committer.magic.enabled":"true","yarn.timeline-service.client.max-retries":"30","dfs.ha.fencing.ssh.connect-timeout":"30000","yarn.log-aggregation-enable":"false","yarn.system-metrics-publisher.enabled":"false","mapreduce.reduce.markreset.buffer.percent":"0.0","fs.AbstractFileSystem.viewfs.impl":"org.apache.hadoop.fs.viewfs.ViewFs","yarn.resourcemanager.nodemanagers.heartbeat-interval-speedup-factor":"1.0","mapreduce.task.io.sort.factor":"10","yarn.nodemanager.amrmproxy.client.thread-count":"25","ha.failover-controller.new-active.rpc-timeout.ms":"60000","yarn.nodemanager.container-localizer.java.opts":"-Xmx256m","mapreduce.jobhistory.datestring.cache.size":"200000","mapreduce.job.acl-modify-job":" ","yarn.nodemanager.windows-container.memory-limit.enabled":"false","yarn.timeline-service.webapp.address":"${yarn.timeline-service.hostname}:8188","yarn.app.mapreduce.am.job.committer.commit-window":"10000","yarn.nodemanager.container-manager.thread-count":"20","yarn.minicluster.fixed.ports":"false","hadoop.tags.system":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.cluster.max-application-priority":"0","yarn.timeline-service.ttl-enable":"true","mapreduce.jobhistory.recovery.store.fs.uri":"${hadoop.tmp.dir}/mapred/history/recoverystore","hadoop.caller.context.signature.max.size":"40","ipc.[port_number].decay-scheduler.backoff.responsetime.enable":"false","yarn.client.load.resource-types.from-server":"false","ha.zookeeper.session-timeout.ms":"10000","ipc.[port_number].decay-scheduler.metrics.top.user.count":"10","tfile.io.chunk.size":"1048576","fs.s3a.s3guard.ddb.table.capacity.write":"0","yarn.dispatcher.print-events-info.threshold":"5000","mapreduce.job.speculative.slowtaskthreshold":"1.0","io.serializations":"org.apache.hadoop.io.serializer.WritableSerialization, org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization, org.apache.hadoop.io.serializer.avro.AvroReflectSerialization","hadoop.security.kms.client.failover.sleep.max.millis":"2000","hadoop.security.group.mapping.ldap.directory.search.timeout":"10000","yarn.scheduler.configuration.store.max-logs":"1000","yarn.nodemanager.node-attributes.provider.fetch-interval-ms":"600000","fs.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","yarn.nodemanager.local-cache.max-files-per-directory":"8192","hadoop.http.cross-origin.enabled":"false","hadoop.zk.acl":"world:anyone:rwcda","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.num-manifests-to-cache":"10","mapreduce.map.sort.spill.percent":"0.80","yarn.timeline-service.entity-group-fs-store.scan-interval-seconds":"60","yarn.node-attribute.fs-store.impl.class":"org.apache.hadoop.yarn.server.resourcemanager.nodelabels.FileSystemNodeAttributeStore","fs.s3a.retry.interval":"500ms","yarn.timeline-service.client.best-effort":"false","yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled":"*********(redacted)","hadoop.security.group.mapping.ldap.posix.attr.uid.name":"uidNumber","fs.AbstractFileSystem.swebhdfs.impl":"org.apache.hadoop.fs.SWebHdfs","yarn.nodemanager.elastic-memory-control.timeout-sec":"5","fs.s3a.select.enabled":"true","mapreduce.ifile.readahead":"true","yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms":"300000","yarn.timeline-service.reader.webapp.address":"${yarn.timeline-service.webapp.address}","yarn.resourcemanager.placement-constraints.algorithm.pool-size":"1","yarn.timeline-service.hbase.coprocessor.jar.hdfs.location":"/hbase/coprocessor/hadoop-yarn-server-timelineservice.jar","hadoop.security.kms.client.encrypted.key.cache.num.refill.threads":"2","yarn.resourcemanager.scheduler.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler","yarn.app.mapreduce.am.command-opts":"-Xmx1024m","fs.s3a.metadatastore.fail.on.write.error":"true","hadoop.http.sni.host.check.enabled":"false","mapreduce.cluster.local.dir":"${hadoop.tmp.dir}/mapred/local","io.mapfile.bloom.error.rate":"0.005","fs.client.resolve.topology.enabled":"false","yarn.nodemanager.runtime.linux.allowed-runtimes":"default","yarn.sharedcache.store.class":"org.apache.hadoop.yarn.server.sharedcachemanager.store.InMemorySCMStore","ha.failover-controller.graceful-fence.rpc-timeout.ms":"5000","ftp.replication":"3","fs.getspaceused.jitterMillis":"60000","hadoop.security.uid.cache.secs":"14400","mapreduce.job.maxtaskfailures.per.tracker":"3","fs.s3a.metadatastore.impl":"org.apache.hadoop.fs.s3a.s3guard.NullMetadataStore","io.skip.checksum.errors":"false","yarn.app.mapreduce.client-am.ipc.max-retries-on-timeouts":"3","yarn.timeline-service.webapp.xfs-filter.xframe-options":"SAMEORIGIN","fs.s3a.connection.timeout":"200000","yarn.app.mapreduce.am.webapp.https.enabled":"false","mapreduce.job.max.split.locations":"15","yarn.resourcemanager.nm-container-queuing.max-queue-length":"15","yarn.resourcemanager.delegation-token.always-cancel":"*********(redacted)","hadoop.registry.zk.session.timeout.ms":"60000","yarn.federation.cache-ttl.secs":"300","mapreduce.jvm.system-properties-to-log":"os.name,os.version,java.home,java.runtime.version,java.vendor,java.version,java.vm.name,java.class.path,java.io.tmpdir,user.dir,user.name","yarn.resourcemanager.opportunistic-container-allocation.nodes-used":"10","yarn.timeline-service.entity-group-fs-store.active-dir":"/tmp/entity-file-history/active","mapreduce.shuffle.transfer.buffer.size":"131072","yarn.timeline-service.client.retry-interval-ms":"1000","yarn.timeline-service.flowname.max-size":"0","yarn.http.policy":"HTTP_ONLY","fs.s3a.socket.send.buffer":"8192","fs.AbstractFileSystem.abfss.impl":"org.apache.hadoop.fs.azurebfs.Abfss","yarn.sharedcache.uploader.server.address":"0.0.0.0:8046","yarn.resourcemanager.delegation-token.max-conf-size-bytes":"*********(redacted)","hadoop.http.authentication.token.validity":"*********(redacted)","mapreduce.shuffle.max.connections":"0","yarn.minicluster.yarn.nodemanager.resource.memory-mb":"4096","mapreduce.job.emit-timeline-data":"false","yarn.nodemanager.resource.system-reserved-memory-mb":"-1","hadoop.kerberos.min.seconds.before.relogin":"60","mapreduce.jobhistory.move.thread-count":"3","yarn.resourcemanager.admin.client.thread-count":"1","yarn.dispatcher.drain-events.timeout":"300000","ipc.[port_number].decay-scheduler.backoff.responsetime.thresholds":"10s,20s,30s,40s","fs.s3a.buffer.dir":"${hadoop.tmp.dir}/s3a","hadoop.ssl.enabled.protocols":"TLSv1.2","mapreduce.jobhistory.admin.address":"0.0.0.0:10033","yarn.log-aggregation-status.time-out.ms":"600000","fs.s3a.accesspoint.required":"false","mapreduce.shuffle.port":"13562","yarn.resourcemanager.max-log-aggregation-diagnostics-in-memory":"10","yarn.nodemanager.health-checker.interval-ms":"600000","yarn.resourcemanager.proxy.connection.timeout":"60000","yarn.router.clientrm.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.clientrm.DefaultClientRequestInterceptor","yarn.resourcemanager.zk-appid-node.split-index":"0","ftp.blocksize":"67108864","yarn.nodemanager.runtime.linux.sandbox-mode.local-dirs.permissions":"read","yarn.router.rmadmin.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.rmadmin.DefaultRMAdminRequestInterceptor","yarn.nodemanager.log-container-debug-info.enabled":"true","yarn.resourcemanager.activities-manager.app-activities.max-queue-length":"100","yarn.resourcemanager.application-https.policy":"NONE","yarn.client.max-cached-nodemanagers-proxies":"0","yarn.nodemanager.linux-container-executor.cgroups.delete-delay-ms":"20","yarn.nodemanager.delete.debug-delay-sec":"0","yarn.nodemanager.pmem-check-enabled":"true","yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage":"90.0","mapreduce.app-submission.cross-platform":"false","yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms":"10000","yarn.nodemanager.container-retry-minimum-interval-ms":"1000","hadoop.security.groups.cache.secs":"300","yarn.federation.enabled":"false","yarn.workflow-id.tag-prefix":"workflowid:","fs.azure.local.sas.key.mode":"false","ipc.maximum.data.length":"134217728","fs.s3a.endpoint":"http://138.197.224.4","mapreduce.shuffle.max.threads":"0","yarn.router.pipeline.cache-max-size":"25","yarn.resourcemanager.nm-container-queuing.load-comparator":"QUEUE_LENGTH","yarn.resourcemanager.resource-tracker.nm.ip-hostname-check":"false","hadoop.security.authorization":"false","mapreduce.job.complete.cancel.delegation.tokens":"*********(redacted)","fs.s3a.paging.maximum":"5000","nfs.exports.allowed.hosts":"* rw","yarn.nodemanager.amrmproxy.ha.enable":"false","fs.AbstractFileSystem.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","mapreduce.jobhistory.http.policy":"HTTP_ONLY","yarn.sharedcache.store.in-memory.check-period-mins":"720","hadoop.security.group.mapping.ldap.ssl":"false","fs.s3a.downgrade.syncable.exceptions":"true","yarn.client.application-client-protocol.poll-interval-ms":"200","yarn.scheduler.configuration.leveldb-store.compaction-interval-secs":"86400","yarn.timeline-service.writer.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineWriterImpl","ha.zookeeper.parent-znode":"/hadoop-ha","yarn.resourcemanager.submission-preprocessor.file-refresh-interval-ms":"60000","yarn.nodemanager.log-aggregation.policy.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AllContainerLogAggregationPolicy","mapreduce.reduce.shuffle.merge.percent":"0.66","hadoop.security.group.mapping.ldap.search.filter.group":"(objectClass=group)","yarn.resourcemanager.placement-constraints.scheduler.pool-size":"1","yarn.resourcemanager.activities-manager.cleanup-interval-ms":"5000","yarn.nodemanager.resourcemanager.minimum.version":"NONE","mapreduce.job.speculative.speculative-cap-running-tasks":"0.1","yarn.admin.acl":"*","ipc.[port_number].identity-provider.impl":"org.apache.hadoop.ipc.UserIdentityProvider","yarn.nodemanager.recovery.supervised":"false","yarn.sharedcache.admin.thread-count":"1","yarn.resourcemanager.ha.automatic-failover.enabled":"true","yarn.nodemanager.container-log-monitor.total-size-limit-bytes":"10000000000","mapreduce.reduce.skip.maxgroups":"0","mapreduce.reduce.shuffle.connect.timeout":"180000","yarn.nodemanager.health-checker.scripts":"script","yarn.resourcemanager.address":"${yarn.resourcemanager.hostname}:8032","ipc.client.ping":"true","mapreduce.task.local-fs.write-limit.bytes":"-1","fs.adl.oauth2.access.token.provider.type":"*********(redacted)","mapreduce.shuffle.ssl.file.buffer.size":"65536","yarn.resourcemanager.ha.automatic-failover.embedded":"true","yarn.nodemanager.resource-plugins.gpu.docker-plugin":"nvidia-docker-v1","fs.s3a.s3guard.consistency.retry.interval":"2s","fs.s3a.multipart.purge":"false","yarn.scheduler.configuration.store.class":"file","yarn.resourcemanager.nm-container-queuing.queue-limit-stdev":"1.0f","mapreduce.job.end-notification.max.attempts":"5","mapreduce.output.fileoutputformat.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","yarn.nodemanager.container-monitor.procfs-tree.smaps-based-rss.enabled":"false","ipc.client.bind.wildcard.addr":"false","yarn.resourcemanager.webapp.rest-csrf.enabled":"false","ha.health-monitor.connect-retry-interval.ms":"1000","yarn.nodemanager.keytab":"/etc/krb5.keytab","mapreduce.jobhistory.keytab":"/etc/security/keytab/jhs.service.keytab","fs.s3a.threads.max":"64","yarn.nodemanager.runtime.linux.docker.image-update":"false","mapreduce.reduce.shuffle.input.buffer.percent":"0.70","fs.viewfs.overload.scheme.target.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","yarn.dispatcher.cpu-monitor.samples-per-min":"60","hadoop.security.token.service.use_ip":"*********(redacted)","yarn.nodemanager.runtime.linux.docker.allowed-container-networks":"host,none,bridge","yarn.nodemanager.node-labels.resync-interval-ms":"120000","hadoop.tmp.dir":"/tmp/hadoop-${user.name}","mapreduce.job.maps":"2","mapreduce.jobhistory.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.job.end-notification.max.retry.interval":"5000","yarn.log-aggregation.retain-check-interval-seconds":"-1","yarn.resourcemanager.resource-tracker.client.thread-count":"50","yarn.nodemanager.containers-launcher.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainersLauncher","yarn.rm.system-metrics-publisher.emit-container-events":"false","yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size":"10000","yarn.resourcemanager.ha.automatic-failover.zk-base-path":"/yarn-leader-election","io.seqfile.local.dir":"${hadoop.tmp.dir}/io/local","fs.s3a.s3guard.ddb.throttle.retry.interval":"100ms","fs.AbstractFileSystem.wasb.impl":"org.apache.hadoop.fs.azure.Wasb","mapreduce.client.submit.file.replication":"10","mapreduce.jobhistory.minicluster.fixed.ports":"false","fs.s3a.multipart.threshold":"128M","yarn.resourcemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","mapreduce.jobhistory.done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done","ipc.server.purge.interval":"15","ipc.client.idlethreshold":"4000","yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage":"false","mapreduce.reduce.input.buffer.percent":"0.0","yarn.nodemanager.runtime.linux.docker.userremapping-gid-threshold":"1","yarn.nodemanager.webapp.rest-csrf.enabled":"false","fs.ftp.host.port":"21","ipc.ping.interval":"60000","yarn.resourcemanager.history-writer.multi-threaded-dispatcher.pool-size":"10","yarn.resourcemanager.admin.address":"${yarn.resourcemanager.hostname}:8033","file.client-write-packet-size":"65536","ipc.client.kill.max":"10","mapreduce.reduce.speculative":"true","hadoop.security.key.default.bitlength":"128","mapreduce.job.reducer.unconditional-preempt.delay.sec":"300","yarn.nodemanager.disk-health-checker.interval-ms":"120000","yarn.nodemanager.log.deletion-threads-count":"4","fs.s3a.committer.abort.pending.uploads":"true","yarn.webapp.filter-entity-list-by-user":"false","yarn.resourcemanager.activities-manager.app-activities.ttl-ms":"600000","ipc.client.connection.maxidletime":"10000","mapreduce.task.io.sort.mb":"100","yarn.nodemanager.localizer.client.thread-count":"5","io.erasurecode.codec.rs.rawcoders":"rs_native,rs_java","io.erasurecode.codec.rs-legacy.rawcoders":"rs-legacy_java","yarn.sharedcache.admin.address":"0.0.0.0:8047","yarn.resourcemanager.placement-constraints.algorithm.iterator":"SERIAL","yarn.nodemanager.localizer.cache.cleanup.interval-ms":"600000","hadoop.security.crypto.codec.classes.aes.ctr.nopadding":"org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec, org.apache.hadoop.crypto.JceAesCtrCryptoCodec","mapreduce.job.cache.limit.max-resources-mb":"0","fs.s3a.connection.ssl.enabled":"true","yarn.nodemanager.process-kill-wait.ms":"5000","mapreduce.job.hdfs-servers":"${fs.defaultFS}","yarn.app.mapreduce.am.webapp.https.client.auth":"false","hadoop.workaround.non.threadsafe.getpwuid":"true","fs.df.interval":"60000","ipc.[port_number].decay-scheduler.thresholds":"13,25,50","fs.s3a.multiobjectdelete.enable":"true","yarn.sharedcache.cleaner.resource-sleep-ms":"0","yarn.nodemanager.disk-health-checker.min-healthy-disks":"0.25","hadoop.shell.missing.defaultFs.warning":"false","io.file.buffer.size":"65536","fs.viewfs.overload.scheme.target.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","hadoop.security.group.mapping.ldap.search.attr.member":"member","hadoop.security.random.device.file.path":"/dev/urandom","hadoop.security.sensitive-config-keys":"*********(redacted)","fs.s3a.s3guard.ddb.max.retries":"9","fs.viewfs.overload.scheme.target.file.impl":"org.apache.hadoop.fs.LocalFileSystem","hadoop.rpc.socket.factory.class.default":"org.apache.hadoop.net.StandardSocketFactory","yarn.intermediate-data-encryption.enable":"false","yarn.resourcemanager.connect.retry-interval.ms":"30000","yarn.nodemanager.container.stderr.pattern":"{*stderr*,*STDERR*}","yarn.scheduler.minimum-allocation-mb":"1024","yarn.app.mapreduce.am.staging-dir":"/tmp/hadoop-yarn/staging","mapreduce.reduce.shuffle.read.timeout":"180000","hadoop.http.cross-origin.max-age":"1800","io.erasurecode.codec.xor.rawcoders":"xor_native,xor_java","fs.s3a.s3guard.consistency.retry.limit":"7","fs.s3a.connection.establish.timeout":"5000","mapreduce.job.running.map.limit":"0","yarn.minicluster.control-resource-monitoring":"false","hadoop.ssl.require.client.cert":"false","hadoop.kerberos.kinit.command":"kinit","yarn.federation.state-store.class":"org.apache.hadoop.yarn.server.federation.store.impl.MemoryFederationStateStore","mapreduce.reduce.log.level":"INFO","hadoop.security.dns.log-slow-lookups.threshold.ms":"1000","mapreduce.job.ubertask.enable":"false","adl.http.timeout":"-1","yarn.resourcemanager.placement-constraints.retry-attempts":"3","hadoop.caller.context.enabled":"false","hadoop.security.group.mapping.ldap.num.attempts":"3","yarn.nodemanager.vmem-pmem-ratio":"2.1","hadoop.rpc.protection":"authentication","ha.health-monitor.rpc-timeout.ms":"45000","yarn.nodemanager.remote-app-log-dir":"/tmp/logs","hadoop.zk.timeout-ms":"10000","fs.s3a.s3guard.cli.prune.age":"86400000","yarn.nodemanager.resource.pcores-vcores-multiplier":"1.0","yarn.nodemanager.runtime.linux.sandbox-mode":"disabled","yarn.app.mapreduce.am.containerlauncher.threadpool-initial-size":"10","fs.viewfs.overload.scheme.target.webhdfs.impl":"org.apache.hadoop.hdfs.web.WebHdfsFileSystem","fs.s3a.committer.threads":"8","hadoop.zk.retry-interval-ms":"1000","hadoop.security.crypto.buffer.size":"8192","yarn.nodemanager.node-labels.provider.fetch-interval-ms":"600000","mapreduce.jobhistory.recovery.store.leveldb.path":"${hadoop.tmp.dir}/mapred/history/recoverystore","yarn.client.failover-retries-on-socket-timeouts":"0","fs.s3a.ssl.channel.mode":"default_jsse","yarn.nodemanager.resource.memory.enabled":"false","fs.azure.authorization.caching.enable":"true","fs.s3a.access.key":"*********(redacted)","hadoop.security.instrumentation.requires.admin":"false","yarn.nodemanager.delete.thread-count":"4","mapreduce.job.finish-when-all-reducers-done":"true","hadoop.registry.jaas.context":"Client","yarn.timeline-service.leveldb-timeline-store.path":"${hadoop.tmp.dir}/yarn/timeline","io.map.index.interval":"128","yarn.resourcemanager.nm-container-queuing.max-queue-wait-time-ms":"100","fs.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","mapreduce.job.counters.max":"120","mapreduce.jobhistory.webapp.rest-csrf.enabled":"false","yarn.timeline-service.store-class":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.jobhistory.move.interval-ms":"180000","fs.s3a.change.detection.version.required":"true","yarn.nodemanager.localizer.fetch.thread-count":"4","yarn.resourcemanager.scheduler.client.thread-count":"50","hadoop.ssl.hostname.verifier":"DEFAULT","yarn.timeline-service.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/timeline","mapreduce.job.classloader":"false","mapreduce.task.profile.map.params":"${mapreduce.task.profile.params}","ipc.client.connect.timeout":"20000","hadoop.security.auth_to_local.mechanism":"hadoop","yarn.timeline-service.app-collector.linger-period.ms":"60000","yarn.nm.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.reservation-system.planfollower.time-step":"1000","yarn.resourcemanager.proxy.timeout.enabled":"true","yarn.resourcemanager.activities-manager.scheduler-activities.ttl-ms":"600000","yarn.nodemanager.runtime.linux.docker.enable-userremapping.allowed":"true","yarn.webapp.api-service.enable":"false","yarn.nodemanager.recovery.enabled":"false","mapreduce.job.end-notification.retry.interval":"1000","fs.du.interval":"600000","fs.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","yarn.nodemanager.container.stderr.tail.bytes":"4096","yarn.nodemanager.disk-health-checker.disk-free-space-threshold.enabled":"true","hadoop.security.group.mapping.ldap.read.timeout.ms":"60000","hadoop.security.groups.cache.warn.after.ms":"5000","file.bytes-per-checksum":"512","mapreduce.outputcommitter.factory.scheme.s3a":"org.apache.hadoop.fs.s3a.commit.S3ACommitterFactory","hadoop.security.groups.cache.background.reload":"false","yarn.nodemanager.container-monitor.enabled":"true","yarn.nodemanager.elastic-memory-control.enabled":"false","net.topology.script.number.args":"100","mapreduce.task.merge.progress.records":"10000","yarn.nodemanager.localizer.address":"${yarn.nodemanager.hostname}:8040","yarn.timeline-service.keytab":"/etc/krb5.keytab","mapreduce.reduce.shuffle.fetch.retry.timeout-ms":"30000","yarn.resourcemanager.rm.container-allocation.expiry-interval-ms":"600000","yarn.nodemanager.container-executor.exit-code-file.timeout-ms":"2000","mapreduce.fileoutputcommitter.algorithm.version":"1","yarn.resourcemanager.work-preserving-recovery.enabled":"true","mapreduce.map.skip.maxrecords":"0","yarn.sharedcache.root-dir":"/sharedcache","fs.s3a.retry.throttle.limit":"20","hadoop.http.authentication.type":"simple","fs.viewfs.overload.scheme.target.oss.impl":"org.apache.hadoop.fs.aliyun.oss.AliyunOSSFileSystem","mapreduce.job.cache.limit.max-resources":"0","mapreduce.task.userlog.limit.kb":"0","ipc.[port_number].weighted-cost.handler":"1","yarn.resourcemanager.scheduler.monitor.enable":"false","ipc.client.connect.max.retries":"10","hadoop.registry.zk.retry.times":"5","yarn.nodemanager.resource-monitor.interval-ms":"3000","yarn.nodemanager.resource-plugins.gpu.allowed-gpu-devices":"auto","mapreduce.job.sharedcache.mode":"disabled","yarn.nodemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.shuffle.listen.queue.size":"128","yarn.scheduler.configuration.mutation.acl-policy.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.DefaultConfigurationMutationACLPolicy","mapreduce.map.cpu.vcores":"1","yarn.log-aggregation.file-formats":"TFile","yarn.timeline-service.client.fd-retain-secs":"300","fs.s3a.select.output.csv.field.delimiter":",","yarn.nodemanager.health-checker.timeout-ms":"1200000","hadoop.user.group.static.mapping.overrides":"dr.who=;","fs.azure.sas.expiry.period":"90d","fs.s3a.select.output.csv.record.delimiter":"\\n","mapreduce.jobhistory.recovery.store.class":"org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService","fs.viewfs.overload.scheme.target.https.impl":"org.apache.hadoop.fs.http.HttpsFileSystem","fs.s3a.s3guard.ddb.table.sse.enabled":"false","yarn.resourcemanager.fail-fast":"${yarn.fail-fast}","yarn.resourcemanager.proxy-user-privileges.enabled":"false","yarn.router.webapp.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.webapp.DefaultRequestInterceptorREST","yarn.nodemanager.resource.memory.cgroups.soft-limit-percentage":"90.0","mapreduce.job.reducer.preempt.delay.sec":"0","hadoop.util.hash.type":"murmur","yarn.nodemanager.disk-validator":"basic","yarn.app.mapreduce.client.job.max-retries":"3","fs.viewfs.overload.scheme.target.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","mapreduce.reduce.shuffle.retry-delay.max.ms":"60000","hadoop.security.group.mapping.ldap.connection.timeout.ms":"60000","mapreduce.task.profile.params":"-agentlib:hprof=cpu=samples,heap=sites,force=n,thread=y,verbose=n,file=%s","yarn.app.mapreduce.shuffle.log.backups":"0","yarn.nodemanager.container-diagnostics-maximum-size":"10000","hadoop.registry.zk.retry.interval.ms":"1000","yarn.nodemanager.linux-container-executor.cgroups.delete-timeout-ms":"1000","fs.AbstractFileSystem.file.impl":"org.apache.hadoop.fs.local.LocalFs","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds":"-1","mapreduce.jobhistory.cleaner.interval-ms":"86400000","hadoop.registry.zk.quorum":"localhost:2181","yarn.nodemanager.runtime.linux.runc.allowed-container-runtimes":"runc","mapreduce.output.fileoutputformat.compress":"false","yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs":"*********(redacted)","fs.s3a.assumed.role.session.duration":"30m","hadoop.security.group.mapping.ldap.conversion.rule":"none","hadoop.ssl.server.conf":"ssl-server.xml","fs.s3a.retry.throttle.interval":"100ms","seq.io.sort.factor":"100","fs.viewfs.overload.scheme.target.ofs.impl":"org.apache.hadoop.fs.ozone.RootedOzoneFileSystem","yarn.sharedcache.cleaner.initial-delay-mins":"10","mapreduce.client.completion.pollinterval":"5000","hadoop.ssl.keystores.factory.class":"org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory","yarn.app.mapreduce.am.resource.cpu-vcores":"1","yarn.timeline-service.enabled":"false","yarn.nodemanager.runtime.linux.docker.capabilities":"CHOWN,DAC_OVERRIDE,FSETID,FOWNER,MKNOD,NET_RAW,SETGID,SETUID,SETFCAP,SETPCAP,NET_BIND_SERVICE,SYS_CHROOT,KILL,AUDIT_WRITE","yarn.acl.enable":"false","yarn.timeline-service.entity-group-fs-store.done-dir":"/tmp/entity-file-history/done/","hadoop.security.group.mapping.ldap.num.attempts.before.failover":"3","mapreduce.task.profile":"false","hadoop.prometheus.endpoint.enabled":"false","yarn.resourcemanager.fs.state-store.uri":"${hadoop.tmp.dir}/yarn/system/rmstore","mapreduce.jobhistory.always-scan-user-dir":"false","fs.s3a.metadatastore.metadata.ttl":"15m","yarn.nodemanager.opportunistic-containers-use-pause-for-preemption":"false","yarn.nodemanager.linux-container-executor.nonsecure-mode.local-user":"nobody","yarn.timeline-service.reader.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineReaderImpl","yarn.resourcemanager.configuration.provider-class":"org.apache.hadoop.yarn.LocalConfigurationProvider","yarn.nodemanager.runtime.linux.docker.userremapping-uid-threshold":"1","yarn.resourcemanager.configuration.file-system-based-store":"/yarn/conf","mapreduce.job.cache.limit.max-single-resource-mb":"0","yarn.nodemanager.runtime.linux.docker.stop.grace-period":"10","yarn.resourcemanager.resource-profiles.source-file":"resource-profiles.json","mapreduce.job.dfs.storage.capacity.kill-limit-exceed":"false","yarn.nodemanager.resource.percentage-physical-cpu-limit":"100","mapreduce.jobhistory.client.thread-count":"10","tfile.fs.input.buffer.size":"262144","mapreduce.client.progressmonitor.pollinterval":"1000","yarn.nodemanager.log-dirs":"${yarn.log.dir}/userlogs","yarn.resourcemanager.opportunistic.max.container-allocation.per.am.heartbeat":"-1","fs.automatic.close":"true","yarn.resourcemanager.delegation-token-renewer.thread-retry-interval":"*********(redacted)","fs.s3a.select.input.csv.quote.character":"\"","yarn.nodemanager.hostname":"0.0.0.0","ipc.[port_number].cost-provider.impl":"org.apache.hadoop.ipc.DefaultCostProvider","yarn.nodemanager.runtime.linux.runc.manifest-to-resources-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.HdfsManifestToResourcesPlugin","yarn.nodemanager.remote-app-log-dir-include-older":"true","yarn.nodemanager.resource.memory.cgroups.swappiness":"0","ftp.stream-buffer-size":"4096","yarn.fail-fast":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-to-keep":"100","yarn.timeline-service.app-aggregation-interval-secs":"15","hadoop.security.group.mapping.ldap.search.filter.user":"(&(objectClass=user)(sAMAccountName={0}))","ipc.[port_number].weighted-cost.lockshared":"10","yarn.nodemanager.container-localizer.log.level":"INFO","yarn.timeline-service.address":"${yarn.timeline-service.hostname}:10200","mapreduce.job.ubertask.maxmaps":"9","fs.s3a.threads.keepalivetime":"60","mapreduce.jobhistory.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.task.files.preserve.failedtasks":"false","yarn.app.mapreduce.client.job.retry-interval":"2000","ha.failover-controller.graceful-fence.connection.retries":"1","fs.s3a.select.output.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.max-lifetime":"*********(redacted)","hadoop.kerberos.keytab.login.autorenewal.enabled":"false","yarn.timeline-service.client.drain-entities.timeout.ms":"2000","yarn.nodemanager.resource-plugins.fpga.vendor-plugin.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin","yarn.resourcemanager.nodemanagers.heartbeat-interval-min-ms":"1000","yarn.timeline-service.entity-group-fs-store.summary-store":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.reduce.cpu.vcores":"1","mapreduce.job.encrypted-intermediate-data.buffer.kb":"128","fs.client.resolve.remote.symlinks":"true","yarn.nodemanager.webapp.https.address":"0.0.0.0:8044","hadoop.http.cross-origin.allowed-origins":"*","mapreduce.job.encrypted-intermediate-data":"false","yarn.nodemanager.disk-health-checker.disk-utilization-threshold.enabled":"true","fs.s3a.executor.capacity":"16","yarn.timeline-service.entity-group-fs-store.retain-seconds":"604800","yarn.resourcemanager.metrics.runtime.buckets":"60,300,1440","yarn.timeline-service.generic-application-history.max-applications":"10000","yarn.nodemanager.local-dirs":"${hadoop.tmp.dir}/nm-local-dir","mapreduce.shuffle.connection-keep-alive.enable":"false","yarn.node-labels.configuration-type":"centralized","fs.s3a.path.style.access":"true","yarn.nodemanager.aux-services.mapreduce_shuffle.class":"org.apache.hadoop.mapred.ShuffleHandler","yarn.sharedcache.store.in-memory.staleness-period-mins":"10080","fs.adl.impl":"org.apache.hadoop.fs.adl.AdlFileSystem","yarn.resourcemanager.application.max-tags":"10","hadoop.domainname.resolver.impl":"org.apache.hadoop.net.DNSDomainNameResolver","yarn.resourcemanager.nodemanager.minimum.version":"NONE","mapreduce.jobhistory.webapp.xfs-filter.xframe-options":"SAMEORIGIN","yarn.app.mapreduce.am.staging-dir.erasurecoding.enabled":"false","net.topology.impl":"org.apache.hadoop.net.NetworkTopology","io.map.index.skip":"0","yarn.timeline-service.reader.webapp.https.address":"${yarn.timeline-service.webapp.https.address}","fs.ftp.data.connection.mode":"ACTIVE_LOCAL_DATA_CONNECTION_MODE","mapreduce.job.local-fs.single-disk-limit.check.kill-limit-exceed":"true","fs.azure.buffer.dir":"${hadoop.tmp.dir}/abfs","yarn.scheduler.maximum-allocation-vcores":"4","hadoop.http.cross-origin.allowed-headers":"X-Requested-With,Content-Type,Accept,Origin","yarn.nodemanager.log-aggregation.compression-type":"none","yarn.timeline-service.version":"1.0f","yarn.ipc.rpc.class":"org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC","mapreduce.reduce.maxattempts":"4","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.batch-size":"1000","hadoop.security.dns.log-slow-lookups.enabled":"false","mapreduce.job.committer.setup.cleanup.needed":"true","hadoop.security.secure.random.impl":"org.apache.hadoop.crypto.random.OpensslSecureRandom","mapreduce.job.running.reduce.limit":"0","fs.s3a.select.errors.include.sql":"false","fs.s3a.connection.request.timeout":"0","ipc.maximum.response.length":"134217728","yarn.resourcemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.job.token.tracking.ids.enabled":"*********(redacted)","hadoop.caller.context.max.size":"128","yarn.nodemanager.runtime.linux.docker.host-pid-namespace.allowed":"false","yarn.nodemanager.runtime.linux.docker.delayed-removal.allowed":"false","hadoop.registry.system.acls":"sasl:yarn@, sasl:mapred@, sasl:hdfs@","yarn.nodemanager.recovery.dir":"${hadoop.tmp.dir}/yarn-nm-recovery","fs.s3a.fast.upload.buffer":"disk","mapreduce.jobhistory.intermediate-done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done_intermediate","yarn.app.mapreduce.shuffle.log.separate":"true","yarn.log-aggregation.debug.filesize":"104857600","fs.s3a.max.total.tasks":"32","fs.s3a.readahead.range":"64K","hadoop.http.authentication.simple.anonymous.allowed":"true","fs.s3a.fast.upload":"true","fs.s3a.attempts.maximum":"20","hadoop.registry.zk.connection.timeout.ms":"15000","yarn.resourcemanager.delegation-token-renewer.thread-count":"*********(redacted)","yarn.resourcemanager.delegation-token-renewer.thread-timeout":"*********(redacted)","yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size":"10000","yarn.nodemanager.aux-services.manifest.reload-ms":"0","yarn.nodemanager.emit-container-events":"true","yarn.resourcemanager.resource-profiles.enabled":"false","yarn.timeline-service.hbase-schema.prefix":"prod.","fs.azure.authorization":"false","mapreduce.map.log.level":"INFO","ha.failover-controller.active-standby-elector.zk.op.retries":"3","yarn.resourcemanager.decommissioning-nodes-watcher.poll-interval-secs":"20","mapreduce.output.fileoutputformat.compress.type":"RECORD","yarn.resourcemanager.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/system/rmstore","yarn.timeline-service.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.ifile.readahead.bytes":"4194304","yarn.sharedcache.app-checker.class":"org.apache.hadoop.yarn.server.sharedcachemanager.RemoteAppChecker","yarn.nodemanager.linux-container-executor.nonsecure-mode.limit-users":"true","yarn.nodemanager.resource.detect-hardware-capabilities":"false","mapreduce.cluster.acls.enabled":"false","mapreduce.job.speculative.retry-after-no-speculate":"1000","fs.viewfs.overload.scheme.target.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","hadoop.security.group.mapping.ldap.search.group.hierarchy.levels":"0","yarn.resourcemanager.fs.state-store.retry-interval-ms":"1000","file.stream-buffer-size":"4096","yarn.resourcemanager.application-timeouts.monitor.interval-ms":"3000","mapreduce.map.output.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","mapreduce.map.speculative":"true","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.hdfs-hash-file":"/runc-root/image-tag-to-hash","mapreduce.job.speculative.retry-after-speculate":"15000","yarn.nodemanager.linux-container-executor.cgroups.mount":"false","yarn.app.mapreduce.am.container.log.backups":"0","yarn.app.mapreduce.am.log.level":"INFO","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.ImageTagToManifestPlugin","io.bytes.per.checksum":"512","mapreduce.job.reduce.slowstart.completedmaps":"0.05","yarn.timeline-service.http-authentication.type":"simple","hadoop.security.group.mapping.ldap.search.attr.group.name":"cn","yarn.nodemanager.resource-plugins.fpga.allowed-fpga-devices":"auto","yarn.timeline-service.client.internal-timers-ttl-secs":"420","fs.s3a.select.output.csv.quote.character":"\"","hadoop.http.logs.enabled":"true","fs.s3a.block.size":"32M","yarn.sharedcache.client-server.address":"0.0.0.0:8045","yarn.nodemanager.logaggregation.threadpool-size-max":"100","yarn.resourcemanager.hostname":"0.0.0.0","yarn.resourcemanager.delegation.key.update-interval":"86400000","mapreduce.reduce.shuffle.fetch.retry.enabled":"${yarn.nodemanager.recovery.enabled}","mapreduce.map.memory.mb":"-1","mapreduce.task.skip.start.attempts":"2","fs.AbstractFileSystem.hdfs.impl":"org.apache.hadoop.fs.Hdfs","yarn.nodemanager.disk-health-checker.enable":"true","fs.s3a.select.output.csv.quote.fields":"always","ipc.client.tcpnodelay":"true","ipc.client.rpc-timeout.ms":"0","yarn.nodemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","yarn.resourcemanager.delegation-token-renewer.thread-retry-max-attempts":"*********(redacted)","ipc.client.low-latency":"false","mapreduce.input.lineinputformat.linespermap":"1","yarn.router.interceptor.user.threadpool-size":"5","ipc.client.connect.max.retries.on.timeouts":"45","yarn.timeline-service.leveldb-timeline-store.read-cache-size":"104857600","fs.AbstractFileSystem.har.impl":"org.apache.hadoop.fs.HarFs","mapreduce.job.split.metainfo.maxsize":"10000000","yarn.am.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.timeline-service.entity-group-fs-store.app-cache-size":"10","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-timeout-interval-secs":"360","fs.s3a.socket.recv.buffer":"8192","rpc.metrics.timeunit":"MILLISECONDS","yarn.resourcemanager.resource-tracker.address":"${yarn.resourcemanager.hostname}:8031","yarn.nodemanager.node-labels.provider.fetch-timeout-ms":"1200000","mapreduce.job.heap.memory-mb.ratio":"0.8","yarn.resourcemanager.leveldb-state-store.compaction-interval-secs":"3600","yarn.resourcemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","yarn.nodemanager.pluggable-device-framework.enabled":"false","yarn.scheduler.configuration.fs.path":"file://${hadoop.tmp.dir}/yarn/system/schedconf","mapreduce.client.output.filter":"FAILED","hadoop.http.filter.initializers":"org.apache.hadoop.http.lib.StaticUserWebFilter","mapreduce.reduce.memory.mb":"-1","yarn.timeline-service.hostname":"0.0.0.0","file.replication":"1","yarn.nodemanager.container-metrics.unregister-delay-ms":"10000","yarn.nodemanager.container-metrics.period-ms":"-1","mapreduce.fileoutputcommitter.task.cleanup.enabled":"false","yarn.nodemanager.log.retain-seconds":"10800","yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds":"3600","ipc.[port_number].callqueue.impl":"java.util.concurrent.LinkedBlockingQueue","yarn.resourcemanager.keytab":"/etc/krb5.keytab","hadoop.security.group.mapping.providers.combined":"true","mapreduce.reduce.merge.inmem.threshold":"1000","yarn.timeline-service.recovery.enabled":"false","fs.azure.saskey.usecontainersaskeyforallaccess":"true","yarn.sharedcache.nm.uploader.thread-count":"20","yarn.resourcemanager.nodemanager-graceful-decommission-timeout-secs":"3600","ipc.[port_number].weighted-cost.lockfree":"1","mapreduce.shuffle.ssl.enabled":"false","yarn.timeline-service.hbase.coprocessor.app-final-value-retention-milliseconds":"259200000","yarn.nodemanager.opportunistic-containers-max-queue-length":"0","yarn.resourcemanager.state-store.max-completed-applications":"${yarn.resourcemanager.max-completed-applications}","mapreduce.job.speculative.minimum-allowed-tasks":"10","fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","yarn.log-aggregation.retain-seconds":"-1","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb":"0","mapreduce.jobhistory.max-age-ms":"604800000","hadoop.http.cross-origin.allowed-methods":"GET,POST,HEAD","yarn.resourcemanager.opportunistic-container-allocation.enabled":"false","mapreduce.jobhistory.webapp.address":"0.0.0.0:19888","hadoop.system.tags":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.log-aggregation.file-controller.TFile.class":"org.apache.hadoop.yarn.logaggregation.filecontroller.tfile.LogAggregationTFileController","yarn.client.nodemanager-connect.max-wait-ms":"180000","yarn.resourcemanager.webapp.address":"${yarn.resourcemanager.hostname}:8088","mapreduce.jobhistory.recovery.enable":"false","mapreduce.reduce.shuffle.parallelcopies":"5","fs.AbstractFileSystem.webhdfs.impl":"org.apache.hadoop.fs.WebHdfs","fs.trash.interval":"0","yarn.app.mapreduce.client.max-retries":"3","hadoop.security.authentication":"simple","mapreduce.task.profile.reduce.params":"${mapreduce.task.profile.params}","yarn.app.mapreduce.am.resource.mb":"1536","mapreduce.input.fileinputformat.list-status.num-threads":"1","yarn.nodemanager.container-executor.class":"org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor","io.mapfile.bloom.size":"1048576","yarn.timeline-service.ttl-ms":"604800000","yarn.resourcemanager.nm-container-queuing.min-queue-length":"5","yarn.nodemanager.resource.cpu-vcores":"-1","mapreduce.job.reduces":"1","fs.s3a.multipart.size":"104857600","fs.s3a.select.input.csv.comment.marker":"#","yarn.scheduler.minimum-allocation-vcores":"1","mapreduce.job.speculative.speculative-cap-total-tasks":"0.01","hadoop.ssl.client.conf":"ssl-client.xml","mapreduce.job.queuename":"default","mapreduce.job.encrypted-intermediate-data-key-size-bits":"128","fs.s3a.metadatastore.authoritative":"false","ipc.[port_number].weighted-cost.response":"1","yarn.nodemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","ha.health-monitor.sleep-after-disconnect.ms":"1000","yarn.app.mapreduce.shuffle.log.limit.kb":"0","hadoop.security.group.mapping":"org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback","yarn.client.application-client-protocol.poll-timeout-ms":"-1","mapreduce.jobhistory.jhist.format":"binary","mapreduce.task.stuck.timeout-ms":"600000","yarn.resourcemanager.application.max-tag.length":"100","yarn.resourcemanager.ha.enabled":"false","dfs.client.ignore.namenode.default.kms.uri":"false","hadoop.http.staticuser.user":"dr.who","mapreduce.task.exit.timeout.check-interval-ms":"20000","mapreduce.jobhistory.intermediate-user-done-dir.permissions":"770","mapreduce.task.exit.timeout":"60000","yarn.nodemanager.linux-container-executor.resources-handler.class":"org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler","mapreduce.reduce.shuffle.memory.limit.percent":"0.25","yarn.resourcemanager.reservation-system.enable":"false","mapreduce.map.output.compress":"false","ha.zookeeper.acl":"world:anyone:rwcda","ipc.server.max.connections":"0","yarn.nodemanager.runtime.linux.docker.default-container-network":"host","yarn.router.webapp.address":"0.0.0.0:8089","yarn.scheduler.maximum-allocation-mb":"8192","yarn.resourcemanager.scheduler.monitor.policies":"org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy","yarn.sharedcache.cleaner.period-mins":"1440","yarn.nodemanager.resource-plugins.gpu.docker-plugin.nvidia-docker-v1.endpoint":"http://localhost:3476/v1.0/docker/cli","yarn.app.mapreduce.am.container.log.limit.kb":"0","ipc.client.connect.retry.interval":"1000","yarn.timeline-service.http-cross-origin.enabled":"false","fs.wasbs.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem$Secure","yarn.resourcemanager.nodemanagers.heartbeat-interval-max-ms":"1000","yarn.federation.subcluster-resolver.class":"org.apache.hadoop.yarn.server.federation.resolver.DefaultSubClusterResolverImpl","yarn.resourcemanager.zk-state-store.parent-path":"/rmstore","fs.s3a.select.input.csv.field.delimiter":",","mapreduce.jobhistory.cleaner.enable":"true","yarn.timeline-service.client.fd-flush-interval-secs":"10","hadoop.security.kms.client.encrypted.key.cache.expiry":"43200000","yarn.client.nodemanager-client-async.thread-pool-max-size":"500","mapreduce.map.maxattempts":"4","yarn.resourcemanager.nm-container-queuing.sorting-nodes-interval-ms":"1000","fs.s3a.committer.staging.tmp.path":"tmp/staging","yarn.nodemanager.sleep-delay-before-sigkill.ms":"250","yarn.resourcemanager.nm-container-queuing.min-queue-wait-time-ms":"10","mapreduce.job.end-notification.retry.attempts":"0","yarn.nodemanager.resource.count-logical-processors-as-cores":"false","hadoop.registry.zk.root":"/registry","adl.feature.ownerandgroup.enableupn":"false","yarn.resourcemanager.zk-max-znode-size.bytes":"1048576","mapreduce.job.reduce.shuffle.consumer.plugin.class":"org.apache.hadoop.mapreduce.task.reduce.Shuffle","yarn.resourcemanager.delayed.delegation-token.removal-interval-ms":"*********(redacted)","yarn.nodemanager.localizer.cache.target-size-mb":"10240","fs.s3a.committer.staging.conflict-mode":"append","mapreduce.client.libjars.wildcard":"true","fs.s3a.committer.staging.unique-filenames":"true","yarn.nodemanager.node-attributes.provider.fetch-timeout-ms":"1200000","fs.s3a.list.version":"2","ftp.client-write-packet-size":"65536","ipc.[port_number].weighted-cost.lockexclusive":"100","fs.AbstractFileSystem.adl.impl":"org.apache.hadoop.fs.adl.Adl","yarn.nodemanager.container-log-monitor.enable":"false","hadoop.security.key.default.cipher":"AES/CTR/NoPadding","yarn.client.failover-retries":"0","fs.s3a.multipart.purge.age":"86400","mapreduce.job.local-fs.single-disk-limit.check.interval-ms":"5000","net.topology.node.switch.mapping.impl":"org.apache.hadoop.net.ScriptBasedMapping","yarn.nodemanager.amrmproxy.address":"0.0.0.0:8049","ipc.server.listen.queue.size":"256","ipc.[port_number].decay-scheduler.period-ms":"5000","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.cache-refresh-interval-secs":"60","map.sort.class":"org.apache.hadoop.util.QuickSort","fs.viewfs.rename.strategy":"SAME_MOUNTPOINT","hadoop.security.kms.client.authentication.retry-count":"1","fs.permissions.umask-mode":"022","fs.s3a.assumed.role.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","yarn.nodemanager.runtime.linux.runc.privileged-containers.allowed":"false","yarn.nodemanager.vmem-check-enabled":"true","yarn.nodemanager.numa-awareness.enabled":"false","yarn.nodemanager.recovery.compaction-interval-secs":"3600","yarn.app.mapreduce.client-am.ipc.max-retries":"3","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.interval-seconds":"60","yarn.federation.registry.base-dir":"yarnfederation/","yarn.nodemanager.health-checker.run-before-startup":"false","mapreduce.job.max.map":"-1","mapreduce.job.local-fs.single-disk-limit.bytes":"-1","mapreduce.shuffle.pathcache.concurrency-level":"16","mapreduce.job.ubertask.maxreduces":"1","mapreduce.shuffle.pathcache.max-weight":"10485760","hadoop.security.kms.client.encrypted.key.cache.size":"500","hadoop.security.java.secure.random.algorithm":"SHA1PRNG","ha.failover-controller.cli-check.rpc-timeout.ms":"20000","mapreduce.jobhistory.jobname.limit":"50","fs.s3a.select.input.compression":"none","yarn.client.nodemanager-connect.retry-interval-ms":"10000","ipc.[port_number].scheduler.priority.levels":"4","yarn.timeline-service.state-store-class":"org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore","yarn.nodemanager.env-whitelist":"JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_HOME,PATH,LANG,TZ","yarn.sharedcache.nested-level":"3","yarn.timeline-service.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","fs.azure.user.agent.prefix":"unknown","yarn.resourcemanager.zk-delegation-token-node.split-index":"*********(redacted)","yarn.nodemanager.numa-awareness.read-topology":"false","yarn.nodemanager.webapp.address":"${yarn.nodemanager.hostname}:8042","rpc.metrics.quantile.enable":"false","yarn.registry.class":"org.apache.hadoop.registry.client.impl.FSRegistryOperationsService","mapreduce.jobhistory.admin.acl":"*","yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size":"10","yarn.scheduler.queue-placement-rules":"user-group","hadoop.http.authentication.kerberos.keytab":"${user.home}/hadoop.keytab","yarn.resourcemanager.recovery.enabled":"false","fs.s3a.select.input.csv.header":"none","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-size":"500","yarn.timeline-service.webapp.rest-csrf.enabled":"false","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-watermark-high-mb":"0"},"System Properties":{"java.io.tmpdir":"/tmp","line.separator":"\n","path.separator":":","sun.management.compiler":"HotSpot 64-Bit Tiered Compilers","SPARK_SUBMIT":"true","sun.cpu.endian":"little","java.specification.version":"17","java.vm.specification.name":"Java Virtual Machine Specification","java.vendor":"BellSoft","java.vm.specification.version":"17","user.home":"/root","sun.arch.data.model":"64","sun.boot.library.path":"/opt/bitnami/java/lib","user.dir":"/opt/bitnami/spark","java.library.path":"/opt/bitnami/python/lib:/opt/bitnami/spark/venv/lib/python3.8/site-packages/numpy.libs::/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib","os.arch":"aarch64","java.vm.version":"17.0.11+12-LTS","jetty.git.hash":"abdcda73818a1a2c705da276edb0bf6581e7997e","java.runtime.version":"17.0.11+12-LTS","java.vm.info":"mixed mode, sharing","java.runtime.name":"OpenJDK Runtime Environment","java.version.date":"2024-04-16","file.separator":"/","java.class.version":"61.0","java.specification.name":"Java Platform API Specification","file.encoding":"ANSI_X3.4-1968","jdk.reflect.useDirectMethodHandle":"false","user.timezone":"Etc/UTC","java.specification.vendor":"Oracle Corporation","sun.java.launcher":"SUN_STANDARD","java.vm.compressedOopsMode":"32-bit","os.version":"6.6.26-linuxkit","native.encoding":"ANSI_X3.4-1968","java.vm.specification.vendor":"Oracle Corporation","sun.stderr.encoding":"ANSI_X3.4-1968","user.country":"US","sun.jnu.encoding":"ANSI_X3.4-1968","user.language":"en","sun.stdout.encoding":"ANSI_X3.4-1968","java.vendor.url":"https://bell-sw.com/","os.name":"Linux","java.vm.vendor":"BellSoft","jdk.debug":"release","java.vendor.url.bug":"https://bell-sw.com/support","user.name":"root","java.vm.name":"OpenJDK 64-Bit Server VM","sun.java.command":"org.apache.spark.deploy.SparkSubmit --master spark://spark-master:7077 --deploy-mode client --conf spark.driver.extraJavaOptions=--add-exports java.base/sun.nio.ch=ALL-UNNAMED /opt/bitnami/spark/jobs/app/src/yelp-dataset-python-deequ.py","java.home":"/opt/bitnami/java","java.version":"17.0.11","sun.io.unicode.encoding":"UnicodeLittle"},"Metrics Properties":{"*.sink.servlet.class":"org.apache.spark.metrics.sink.MetricsServlet","*.sink.servlet.path":"/metrics/json","applications.sink.servlet.path":"/metrics/applications/json","master.sink.servlet.path":"/metrics/master/json"},"Classpath Entries":{"/opt/bitnami/spark/jars/jsr305-3.0.0.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-classes-kqueue-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/javolution-5.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/audience-annotations-0.5.0.jar":"System Classpath","/opt/bitnami/spark/jars/spark-mllib_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/hk2-api-2.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/osgi-resource-locator-1.0.3.jar":"System Classpath","/opt/bitnami/spark/jars/javax.jdo-3.2.0-m3.jar":"System Classpath","/opt/bitnami/spark/jars/spark-hive_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/arrow-vector-12.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-container-servlet-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/jdo-api-3.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/javassist-3.29.2-GA.jar":"System Classpath","/opt/bitnami/spark/jars/netty-buffer-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/slf4j-api-2.0.7.jar":"System Classpath","/opt/bitnami/spark/jars/xbean-asm9-shaded-4.23.jar":"System Classpath","/opt/bitnami/spark/jars/spark-sketch_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/commons-compiler-3.1.9.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-discovery-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/json4s-scalap_2.12-3.7.0-M11.jar":"System Classpath","/opt/bitnami/spark/jars/jaxb-runtime-2.3.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-sql-api_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-core-asl-1.9.13.jar":"System Classpath","/opt/bitnami/spark/jars/httpclient-4.5.14.jar":"System Classpath","/opt/bitnami/spark/jars/chill_2.12-0.10.0.jar":"System Classpath","/opt/bitnami/spark/jars/aws-java-sdk-bundle-1.12.262.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-common-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/metrics-jvm-4.2.19.jar":"System Classpath","/opt/bitnami/spark/jars/netty-handler-proxy-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-x86_64.jar":"System Classpath","/opt/bitnami/spark/jars/aopalliance-repackaged-2.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/avro-mapred-1.11.2.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-coordination-6.7.2.jar":"System Classpath","/opt/bitnami/spark/conf/":"System Classpath","/opt/bitnami/spark/jars/arrow-format-12.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/arrow-memory-netty-12.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/snappy-java-1.1.10.3.jar":"System Classpath","/opt/bitnami/spark/jars/okio-1.15.0.jar":"System Classpath","/opt/bitnami/spark/jars/hive-shims-scheduler-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/tink-1.9.0.jar":"System Classpath","/opt/bitnami/spark/jars/spark-network-common_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/paranamer-2.8.jar":"System Classpath","/opt/bitnami/spark/jars/oro-2.0.8.jar":"System Classpath","/opt/bitnami/spark/jars/scala-reflect-2.12.18.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.annotation-api-1.3.5.jar":"System Classpath","/opt/bitnami/spark/jars/commons-lang-2.6.jar":"System Classpath","/opt/bitnami/spark/jars/spark-streaming_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/ivy-2.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/datanucleus-api-jdo-4.2.4.jar":"System Classpath","/opt/bitnami/spark/jars/antlr-runtime-3.5.2.jar":"System Classpath","/opt/bitnami/spark/jars/datasketches-java-3.3.0.jar":"System Classpath","/opt/bitnami/spark/jars/zookeeper-3.6.3.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-dataformat-yaml-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/janino-3.1.9.jar":"System Classpath","/opt/bitnami/spark/jars/orc-core-1.9.2-shaded-protobuf.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-extensions-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/scala-xml_2.12-2.1.0.jar":"System Classpath","/opt/bitnami/spark/jars/spark-measure_2.12-0.24.jar":"System Classpath","/opt/bitnami/spark/jars/spark-common-utils_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-core-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/flatbuffers-java-1.12.0.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-events-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-tags_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/metrics-jmx-4.2.19.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-client-api-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-catalyst_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/py4j-0.10.9.7.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-resource-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.inject-2.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/logging-interceptor-3.12.12.jar":"System Classpath","/opt/bitnami/spark/jars/commons-logging-1.1.3.jar":"System Classpath","/opt/bitnami/spark/jars/hadoop-client-runtime-3.3.4.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.validation-api-2.0.2.jar":"System Classpath","/opt/bitnami/spark/jars/curator-client-2.13.0.jar":"System Classpath","/opt/bitnami/spark/jars/datasketches-memory-2.1.0.jar":"System Classpath","/opt/bitnami/spark/jars/jline-2.14.6.jar":"System Classpath","/opt/bitnami/spark/jars/RoaringBitmap-0.9.45.jar":"System Classpath","/opt/bitnami/spark/jars/zookeeper-jute-3.6.3.jar":"System Classpath","/opt/bitnami/spark/jars/hive-serde-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/netty-common-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/spark-network-shuffle_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/log4j-api-2.20.0.jar":"System Classpath","/opt/bitnami/spark/jars/spark-core_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-httpclient-okhttp-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/hadoop-shaded-guava-1.1.1.jar":"System Classpath","/opt/bitnami/spark/jars/activation-1.1.1.jar":"System Classpath","/opt/bitnami/spark/jars/json4s-jackson_2.12-3.7.0-M11.jar":"System Classpath","/opt/bitnami/spark/jars/commons-crypto-1.1.0.jar":"System Classpath","/opt/bitnami/spark/jars/HikariCP-2.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/istack-commons-runtime-3.0.8.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-storageclass-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/lz4-java-1.8.0.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.xml.bind-api-2.3.2.jar":"System Classpath","/opt/bitnami/spark/jars/metrics-core-4.2.19.jar":"System Classpath","/opt/bitnami/spark/jars/spark-graphx_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-rbac-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/jodd-core-3.5.2.jar":"System Classpath","/opt/bitnami/spark/jars/log4j-core-2.20.0.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-datatype-jsr310-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/log4j-slf4j2-impl-2.20.0.jar":"System Classpath","/opt/bitnami/spark/jars/dropwizard-metrics-hadoop-metrics2-reporter-0.1.2.jar":"System Classpath","/opt/bitnami/spark/jars/breeze_2.12-2.1.0.jar":"System Classpath","/opt/bitnami/spark/jars/spark-unsafe_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/spark-yarn_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-format-structures-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-scheduling-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/snakeyaml-engine-2.6.jar":"System Classpath","/opt/bitnami/spark/jars/hive-shims-0.23-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-aarch_64.jar":"System Classpath","/opt/bitnami/spark/jars/jcl-over-slf4j-2.0.7.jar":"System Classpath","/opt/bitnami/spark/jars/json4s-core_2.12-3.7.0-M11.jar":"System Classpath","/opt/bitnami/spark/jars/aircompressor-0.26.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-annotations-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/xz-1.9.jar":"System Classpath","/opt/bitnami/spark/jars/commons-collections4-4.4.jar":"System Classpath","/opt/bitnami/spark/jars/avro-ipc-1.11.2.jar":"System Classpath","/opt/bitnami/spark/jars/hive-metastore-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/spire-macros_2.12-0.17.0.jar":"System Classpath","/opt/bitnami/spark/jars/stax-api-1.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/libthrift-0.12.0.jar":"System Classpath","/opt/bitnami/spark/jars/okhttp-3.12.12.jar":"System Classpath","/opt/bitnami/spark/jars/netty-handler-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/stream-2.9.6.jar":"System Classpath","/opt/bitnami/spark/jars/scala-compiler-2.12.18.jar":"System Classpath","/opt/bitnami/spark/jars/scala-parser-combinators_2.12-2.3.0.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-native-epoll-4.1.96.Final-linux-aarch_64.jar":"System Classpath","/opt/bitnami/spark/jars/hive-exec-2.3.9-core.jar":"System Classpath","/opt/bitnami/spark/jars/blas-3.0.3.jar":"System Classpath","/opt/bitnami/spark/jars/ST4-4.0.4.jar":"System Classpath","/opt/bitnami/spark/jars/datanucleus-rdbms-4.1.19.jar":"System Classpath","/opt/bitnami/spark/jars/spire_2.12-0.17.0.jar":"System Classpath","/opt/bitnami/spark/jars/jpam-1.1.jar":"System Classpath","/opt/bitnami/spark/jars/annotations-17.0.0.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-container-servlet-core-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/delta-storage-3.2.0.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-common-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/scala-collection-compat_2.12-2.7.0.jar":"System Classpath","/opt/bitnami/spark/jars/json4s-ast_2.12-3.7.0-M11.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-module-scala_2.12-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-launcher_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/compress-lzf-1.1.2.jar":"System Classpath","/opt/bitnami/spark/jars/hive-shims-common-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/commons-lang3-3.12.0.jar":"System Classpath","/opt/bitnami/spark/jars/transaction-api-1.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-autoscaling-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/chill-java-0.10.0.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-flowcontrol-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/hive-beeline-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-client-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-hadoop-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/netty-codec-http-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-column-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/univocity-parsers-2.9.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-metrics-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/objenesis-3.3.jar":"System Classpath","/opt/bitnami/spark/jars/hive-llap-common-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/arrow-memory-core-12.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/orc-mapreduce-1.9.2-shaded-protobuf.jar":"System Classpath","/opt/bitnami/spark/jars/curator-recipes-2.13.0.jar":"System Classpath","/opt/bitnami/spark/jars/hive-shims-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/snakeyaml-2.0.jar":"System Classpath","/opt/bitnami/spark/jars/log4j-1.2-api-2.20.0.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-common-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/netty-resolver-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-encoding-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-native-unix-common-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/commons-codec-1.16.0.jar":"System Classpath","/opt/bitnami/spark/jars/hk2-utils-2.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-classes-epoll-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-mapper-asl-1.9.13.jar":"System Classpath","/opt/bitnami/spark/jars/spark-mesos_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/bonecp-0.8.0.RELEASE.jar":"System Classpath","/opt/bitnami/spark/jars/scala-library-2.12.18.jar":"System Classpath","/opt/bitnami/spark/jars/JTransforms-3.1.jar":"System Classpath","/opt/bitnami/spark/jars/spark-kubernetes_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/netty-codec-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/commons-text-1.10.0.jar":"System Classpath","/opt/bitnami/spark/jars/mesos-1.4.3-shaded-protobuf.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-server-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/spark-repl_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/kryo-shaded-4.0.2.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-policy-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/commons-dbcp-1.4.jar":"System Classpath","/opt/bitnami/spark/jars/leveldbjni-all-1.8.jar":"System Classpath","/opt/bitnami/spark/jars/metrics-json-4.2.19.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-batch-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-admissionregistration-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/parquet-jackson-1.13.1.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/libfb303-0.9.3.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.ws.rs-api-2.1.6.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-networking-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/datanucleus-core-4.1.17.jar":"System Classpath","/opt/bitnami/spark/jars/JLargeArrays-1.5.jar":"System Classpath","/opt/bitnami/spark/jars/hadoop-yarn-server-web-proxy-3.3.4.jar":"System Classpath","/opt/bitnami/spark/jars/json-1.8.jar":"System Classpath","/opt/bitnami/spark/jars/commons-collections-3.2.2.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-gatewayapi-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-kvstore_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/spark-sql_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/jul-to-slf4j-2.0.7.jar":"System Classpath","/opt/bitnami/spark/jars/hadoop-client-api-3.3.4.jar":"System Classpath","/opt/bitnami/spark/jars/jta-1.1.jar":"System Classpath","/opt/bitnami/spark/jars/rocksdbjni-8.3.2.jar":"System Classpath","/opt/bitnami/spark/jars/metrics-graphite-4.2.19.jar":"System Classpath","/opt/bitnami/spark/jars/netty-transport-native-epoll-4.1.96.Final-linux-x86_64.jar":"System Classpath","/opt/bitnami/spark/jars/hive-cli-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/commons-io-2.13.0.jar":"System Classpath","/opt/bitnami/spark/jars/algebra_2.12-2.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/breeze-macros_2.12-2.1.0.jar":"System Classpath","/opt/bitnami/spark/jars/jakarta.servlet-api-4.0.3.jar":"System Classpath","/opt/bitnami/spark/jars/commons-pool-1.5.4.jar":"System Classpath","/opt/bitnami/spark/jars/commons-compress-1.23.0.jar":"System Classpath","/opt/bitnami/spark/jars/netty-all-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/joda-time-2.12.5.jar":"System Classpath","/opt/bitnami/spark/jars/arpack-3.0.3.jar":"System Classpath","/opt/bitnami/spark/jars/httpcore-4.4.16.jar":"System Classpath","/opt/bitnami/spark/jars/deequ-2.0.7-spark-3.5.jar":"System Classpath","/opt/bitnami/spark/jars/hive-jdbc-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/netty-codec-http2-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/netty-codec-socks-4.1.96.Final.jar":"System Classpath","/opt/bitnami/spark/jars/orc-shims-1.9.2.jar":"System Classpath","/opt/bitnami/spark/jars/opencsv-2.3.jar":"System Classpath","/opt/bitnami/spark/jars/shims-0.9.45.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-apiextensions-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/hadoop-aws-3.3.4.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-node-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/zjsonpatch-0.3.0.jar":"System Classpath","/opt/bitnami/spark/jars/avro-1.11.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-mllib-local_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/arpack_combined_all-0.1.jar":"System Classpath","/opt/bitnami/spark/jars/hive-common-2.3.9.jar":"System Classpath","/opt/bitnami/spark/jars/guava-14.0.1.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-hk2-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/hive-storage-api-2.8.1.jar":"System Classpath","/opt/bitnami/spark/jars/spire-util_2.12-0.17.0.jar":"System Classpath","/opt/bitnami/spark/jars/lapack-3.0.3.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-certificates-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/pickle-1.3.jar":"System Classpath","/opt/bitnami/spark/jars/jersey-client-2.40.jar":"System Classpath","/opt/bitnami/spark/jars/commons-cli-1.5.0.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-databind-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/curator-framework-2.13.0.jar":"System Classpath","/opt/bitnami/spark/jars/minlog-1.3.0.jar":"System Classpath","/opt/bitnami/spark/jars/jackson-core-2.15.2.jar":"System Classpath","/opt/bitnami/spark/jars/hk2-locator-2.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/kubernetes-model-apps-6.7.2.jar":"System Classpath","/opt/bitnami/spark/jars/spark-hive-thriftserver_2.12-3.5.1.jar":"System Classpath","/opt/bitnami/spark/jars/threeten-extra-1.7.1.jar":"System Classpath","/opt/bitnami/spark/jars/hive-service-rpc-3.1.3.jar":"System Classpath","/opt/bitnami/spark/jars/gson-2.2.4.jar":"System Classpath","/opt/bitnami/spark/jars/commons-math3-3.6.1.jar":"System Classpath","/opt/bitnami/spark/jars/derby-10.14.2.0.jar":"System Classpath","/opt/bitnami/spark/jars/spire-platform_2.12-0.17.0.jar":"System Classpath","/opt/bitnami/spark/jars/super-csv-2.2.0.jar":"System Classpath","/opt/bitnami/spark/jars/antlr4-runtime-4.9.3.jar":"System Classpath","/opt/bitnami/spark/jars/cats-kernel_2.12-2.1.1.jar":"System Classpath","/opt/bitnami/spark/jars/zstd-jni-1.5.5-4.jar":"System Classpath"}}
{"Event":"SparkListenerApplicationStart","App Name":"yelp-dataset-deequ","App ID":"app-20240704173226-0008","Timestamp":1720114346012,"User":"spark"}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720114347951,"Executor ID":"2","Executor Info":{"Host":"172.29.0.4","Total Cores":2,"Log Urls":{"stdout":"http://172.29.0.4:8081/logPage/?appId=app-20240704173226-0008&executorId=2&logType=stdout","stderr":"http://172.29.0.4:8081/logPage/?appId=app-20240704173226-0008&executorId=2&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720114347951}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720114347955,"Executor ID":"1","Executor Info":{"Host":"172.29.0.5","Total Cores":2,"Log Urls":{"stdout":"http://172.29.0.5:8081/logPage/?appId=app-20240704173226-0008&executorId=1&logType=stdout","stderr":"http://172.29.0.5:8081/logPage/?appId=app-20240704173226-0008&executorId=1&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720114347955}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1720114347958,"Executor ID":"0","Executor Info":{"Host":"172.29.0.3","Total Cores":2,"Log Urls":{"stdout":"http://172.29.0.3:8081/logPage/?appId=app-20240704173226-0008&executorId=0&logType=stdout","stderr":"http://172.29.0.3:8081/logPage/?appId=app-20240704173226-0008&executorId=0&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1720114347958}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"1","Host":"172.29.0.5","Port":33637},"Maximum Memory":1743991603,"Timestamp":1720114348007,"Maximum Onheap Memory":1743991603,"Maximum Offheap Memory":0}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"2","Host":"172.29.0.4","Port":46541},"Maximum Memory":1743991603,"Timestamp":1720114348008,"Maximum Onheap Memory":1743991603,"Maximum Offheap Memory":0}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"0","Host":"172.29.0.3","Port":37487},"Maximum Memory":1743991603,"Timestamp":1720114348013,"Maximum Onheap Memory":1743991603,"Maximum Offheap Memory":0}
{"Event":"SparkListenerJobStart","Job ID":0,"Submission Time":1720114348931,"Stage Infos":[{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"0\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[0],"Properties":{"spark.rdd.scope":"{\"id\":\"2\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"0\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114348940,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.rdd.scope":"{\"id\":\"2\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":0,"Stage Attempt ID":0,"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114348997,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":0,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114348997,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114350527,"Failed":false,"Killed":false,"Accumulables":[{"ID":1,"Name":"internal.metrics.executorDeserializeTime","Update":228,"Value":228,"Internal":true,"Count Failed Values":true},{"ID":2,"Name":"internal.metrics.executorDeserializeCpuTime","Update":162883002,"Value":162883002,"Internal":true,"Count Failed Values":true},{"ID":3,"Name":"internal.metrics.executorRunTime","Update":1242,"Value":1242,"Internal":true,"Count Failed Values":true},{"ID":4,"Name":"internal.metrics.executorCpuTime","Update":67453959,"Value":67453959,"Internal":true,"Count Failed Values":true},{"ID":5,"Name":"internal.metrics.resultSize","Update":2080,"Value":2080,"Internal":true,"Count Failed Values":true},{"ID":6,"Name":"internal.metrics.jvmGCTime","Update":16,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":7,"Name":"internal.metrics.resultSerializationTime","Update":3,"Value":3,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":228,"Executor Deserialize CPU Time":162883002,"Executor Run Time":1242,"Executor CPU Time":67453959,"Peak Execution Memory":0,"Result Size":2080,"JVM GC Time":16,"Result Serialization Time":3,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"0\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114348940,"Completion Time":1720114350531,"Accumulables":[{"ID":1,"Name":"internal.metrics.executorDeserializeTime","Value":228,"Internal":true,"Count Failed Values":true},{"ID":2,"Name":"internal.metrics.executorDeserializeCpuTime","Value":162883002,"Internal":true,"Count Failed Values":true},{"ID":3,"Name":"internal.metrics.executorRunTime","Value":1242,"Internal":true,"Count Failed Values":true},{"ID":4,"Name":"internal.metrics.executorCpuTime","Value":67453959,"Internal":true,"Count Failed Values":true},{"ID":5,"Name":"internal.metrics.resultSize","Value":2080,"Internal":true,"Count Failed Values":true},{"ID":6,"Name":"internal.metrics.jvmGCTime","Value":16,"Internal":true,"Count Failed Values":true},{"ID":7,"Name":"internal.metrics.resultSerializationTime","Value":3,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":0,"Completion Time":1720114350532,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"SparkListenerJobStart","Job ID":1,"Submission Time":1720114356421,"Stage Infos":[{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"6\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"5\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[1],"Properties":{"spark.rdd.scope":"{\"id\":\"7\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"6\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"5\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114356422,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.rdd.scope":"{\"id\":\"7\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":1,"Stage Attempt ID":0,"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114356434,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":1,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114356434,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114357811,"Failed":false,"Killed":false,"Accumulables":[{"ID":36,"Name":"internal.metrics.executorDeserializeTime","Update":145,"Value":145,"Internal":true,"Count Failed Values":true},{"ID":37,"Name":"internal.metrics.executorDeserializeCpuTime","Update":119299582,"Value":119299582,"Internal":true,"Count Failed Values":true},{"ID":38,"Name":"internal.metrics.executorRunTime","Update":1205,"Value":1205,"Internal":true,"Count Failed Values":true},{"ID":39,"Name":"internal.metrics.executorCpuTime","Update":52146578,"Value":52146578,"Internal":true,"Count Failed Values":true},{"ID":40,"Name":"internal.metrics.resultSize","Update":2019,"Value":2019,"Internal":true,"Count Failed Values":true},{"ID":41,"Name":"internal.metrics.jvmGCTime","Update":18,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":42,"Name":"internal.metrics.resultSerializationTime","Update":5,"Value":5,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":145,"Executor Deserialize CPU Time":119299582,"Executor Run Time":1205,"Executor CPU Time":52146578,"Peak Execution Memory":0,"Result Size":2019,"JVM GC Time":18,"Result Serialization Time":5,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"6\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"5\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114356422,"Completion Time":1720114357812,"Accumulables":[{"ID":36,"Name":"internal.metrics.executorDeserializeTime","Value":145,"Internal":true,"Count Failed Values":true},{"ID":37,"Name":"internal.metrics.executorDeserializeCpuTime","Value":119299582,"Internal":true,"Count Failed Values":true},{"ID":38,"Name":"internal.metrics.executorRunTime","Value":1205,"Internal":true,"Count Failed Values":true},{"ID":39,"Name":"internal.metrics.executorCpuTime","Value":52146578,"Internal":true,"Count Failed Values":true},{"ID":40,"Name":"internal.metrics.resultSize","Value":2019,"Internal":true,"Count Failed Values":true},{"ID":41,"Name":"internal.metrics.jvmGCTime","Value":18,"Internal":true,"Count Failed Values":true},{"ID":42,"Name":"internal.metrics.resultSerializationTime","Value":5,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":1,"Completion Time":1720114357812,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"SparkListenerJobStart","Job ID":2,"Submission Time":1720114366011,"Stage Infos":[{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"10\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[2],"Properties":{"spark.rdd.scope":"{\"id\":\"12\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"10\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114366012,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.rdd.scope":"{\"id\":\"12\",\"name\":\"collect\"}","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":2,"Stage Attempt ID":0,"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114366025,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114366025,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114367557,"Failed":false,"Killed":false,"Accumulables":[{"ID":71,"Name":"internal.metrics.executorDeserializeTime","Update":237,"Value":237,"Internal":true,"Count Failed Values":true},{"ID":72,"Name":"internal.metrics.executorDeserializeCpuTime","Update":208526292,"Value":208526292,"Internal":true,"Count Failed Values":true},{"ID":73,"Name":"internal.metrics.executorRunTime","Update":1251,"Value":1251,"Internal":true,"Count Failed Values":true},{"ID":74,"Name":"internal.metrics.executorCpuTime","Update":88102918,"Value":88102918,"Internal":true,"Count Failed Values":true},{"ID":75,"Name":"internal.metrics.resultSize","Update":2087,"Value":2087,"Internal":true,"Count Failed Values":true},{"ID":76,"Name":"internal.metrics.jvmGCTime","Update":21,"Value":21,"Internal":true,"Count Failed Values":true},{"ID":77,"Name":"internal.metrics.resultSerializationTime","Update":3,"Value":3,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":237,"Executor Deserialize CPU Time":208526292,"Executor Run Time":1251,"Executor CPU Time":88102918,"Peak Execution Memory":0,"Result Size":2087,"JVM GC Time":21,"Result Serialization Time":3,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"mapPartitions\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"10\",\"name\":\"parallelize\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:563)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114366012,"Completion Time":1720114367558,"Accumulables":[{"ID":71,"Name":"internal.metrics.executorDeserializeTime","Value":237,"Internal":true,"Count Failed Values":true},{"ID":72,"Name":"internal.metrics.executorDeserializeCpuTime","Value":208526292,"Internal":true,"Count Failed Values":true},{"ID":73,"Name":"internal.metrics.executorRunTime","Value":1251,"Internal":true,"Count Failed Values":true},{"ID":74,"Name":"internal.metrics.executorCpuTime","Value":88102918,"Internal":true,"Count Failed Values":true},{"ID":75,"Name":"internal.metrics.resultSize","Value":2087,"Internal":true,"Count Failed Values":true},{"ID":76,"Name":"internal.metrics.jvmGCTime","Value":21,"Internal":true,"Count Failed Values":true},{"ID":77,"Name":"internal.metrics.resultSerializationTime","Value":3,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":2,"Completion Time":1720114367558,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":0,"rootExecutionId":0,"description":"collect at AnalysisRunner.scala:327","details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (5)\n+- HashAggregate (4)\n   +- Exchange (3)\n      +- HashAggregate (2)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [3]: [business_id#0, review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,review_count:bigint,stars:double>\n\n(2) HashAggregate\nInput [3]: [business_id#0, review_count#6L, stars#7]\nKeys: []\nFunctions [4]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum#87L, count#88L, sum#89L, sum#90L]\nResults [4]: [sum#91L, count#92L, sum#93L, sum#94L]\n\n(3) Exchange\nInput [4]: [sum#91L, count#92L, sum#93L, sum#94L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=11]\n\n(4) HashAggregate\nInput [4]: [sum#91L, count#92L, sum#93L, sum#94L]\nKeys: []\nFunctions [4]: [sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum(cast(isnotnull(business_id#0) as int))#48L, count(1)#49L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#51L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#54L]\nResults [6]: [sum(cast(isnotnull(business_id#0) as int))#48L AS sum(CAST((business_id IS NOT NULL) AS INT))#74L, count(1)#49L AS count(1)#75L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#51L AS sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#76L, count(1)#49L AS count(1)#77L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#54L AS sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#78L, count(1)#49L AS count(1)#79L]\n\n(5) AdaptiveSparkPlan\nOutput [6]: [sum(CAST((business_id IS NOT NULL) AS INT))#74L, count(1)#75L, sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#76L, count(1)#77L, sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#78L, count(1)#79L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=11]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))])","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,review_count:bigint,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":142,"metricType":"sum"},{"name":"scan time","accumulatorId":141,"metricType":"timing"},{"name":"metadata time","accumulatorId":143,"metricType":"timing"},{"name":"size of files read","accumulatorId":144,"metricType":"size"},{"name":"number of output rows","accumulatorId":140,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":136,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":137,"metricType":"timing"},{"name":"peak memory","accumulatorId":135,"metricType":"size"},{"name":"number of output rows","accumulatorId":134,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":139,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":138,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":132,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":126,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":133,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":127,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":124,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":121,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":130,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":123,"metricType":"sum"},{"name":"records read","accumulatorId":120,"metricType":"sum"},{"name":"local bytes read","accumulatorId":118,"metricType":"size"},{"name":"fetch wait time","accumulatorId":119,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":116,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":122,"metricType":"sum"},{"name":"local blocks read","accumulatorId":115,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":125,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":114,"metricType":"sum"},{"name":"data size","accumulatorId":112,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":128,"metricType":"size"},{"name":"number of partitions","accumulatorId":113,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":129,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":117,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":131,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":108,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":109,"metricType":"timing"},{"name":"peak memory","accumulatorId":107,"metricType":"size"},{"name":"number of output rows","accumulatorId":106,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":111,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":110,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1720114368486,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":0,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Current Plan ==\n   HashAggregate (6)\n   +- ShuffleQueryStage (5)\n      +- Exchange (4)\n         +- * HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [3]: [business_id#0, review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,review_count:bigint,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [3]: [business_id#0, review_count#6L, stars#7]\n\n(3) HashAggregate [codegen id : 1]\nInput [3]: [business_id#0, review_count#6L, stars#7]\nKeys: []\nFunctions [4]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum#87L, count#88L, sum#89L, sum#90L]\nResults [4]: [sum#91L, count#92L, sum#93L, sum#94L]\n\n(4) Exchange\nInput [4]: [sum#91L, count#92L, sum#93L, sum#94L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=24]\n\n(5) ShuffleQueryStage\nOutput [4]: [sum#91L, count#92L, sum#93L, sum#94L]\nArguments: 0\n\n(6) HashAggregate\nInput [4]: [sum#91L, count#92L, sum#93L, sum#94L]\nKeys: []\nFunctions [4]: [sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum(cast(isnotnull(business_id#0) as int))#48L, count(1)#49L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#51L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#54L]\nResults [6]: [sum(cast(isnotnull(business_id#0) as int))#48L AS sum(CAST((business_id IS NOT NULL) AS INT))#74L, count(1)#49L AS count(1)#75L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#51L AS sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#76L, count(1)#49L AS count(1)#77L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#54L AS sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#78L, count(1)#49L AS count(1)#79L]\n\n(7) HashAggregate\nInput [3]: [business_id#0, review_count#6L, stars#7]\nKeys: []\nFunctions [4]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum#87L, count#88L, sum#89L, sum#90L]\nResults [4]: [sum#91L, count#92L, sum#93L, sum#94L]\n\n(8) Exchange\nInput [4]: [sum#91L, count#92L, sum#93L, sum#94L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=11]\n\n(9) HashAggregate\nInput [4]: [sum#91L, count#92L, sum#93L, sum#94L]\nKeys: []\nFunctions [4]: [sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum(cast(isnotnull(business_id#0) as int))#48L, count(1)#49L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#51L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#54L]\nResults [6]: [sum(cast(isnotnull(business_id#0) as int))#48L AS sum(CAST((business_id IS NOT NULL) AS INT))#74L, count(1)#49L AS count(1)#75L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#51L AS sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#76L, count(1)#49L AS count(1)#77L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#54L AS sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#78L, count(1)#49L AS count(1)#79L]\n\n(10) AdaptiveSparkPlan\nOutput [6]: [sum(CAST((business_id IS NOT NULL) AS INT))#74L, count(1)#75L, sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#76L, count(1)#77L, sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#78L, count(1)#79L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=24]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))])","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,review_count:bigint,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":142,"metricType":"sum"},{"name":"scan time","accumulatorId":141,"metricType":"timing"},{"name":"metadata time","accumulatorId":143,"metricType":"timing"},{"name":"size of files read","accumulatorId":144,"metricType":"size"},{"name":"number of output rows","accumulatorId":140,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":180,"metricType":"sum"},{"name":"number of input batches","accumulatorId":181,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":176,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":177,"metricType":"timing"},{"name":"peak memory","accumulatorId":175,"metricType":"size"},{"name":"number of output rows","accumulatorId":174,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":179,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":178,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":173,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":171,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":165,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":172,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":166,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":163,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":160,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":169,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":162,"metricType":"sum"},{"name":"records read","accumulatorId":159,"metricType":"sum"},{"name":"local bytes read","accumulatorId":157,"metricType":"size"},{"name":"fetch wait time","accumulatorId":158,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":155,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":161,"metricType":"sum"},{"name":"local blocks read","accumulatorId":154,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":164,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":153,"metricType":"sum"},{"name":"data size","accumulatorId":151,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":167,"metricType":"size"},{"name":"number of partitions","accumulatorId":152,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":168,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":156,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":170,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":147,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":148,"metricType":"timing"},{"name":"peak memory","accumulatorId":146,"metricType":"size"},{"name":"number of output rows","accumulatorId":145,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":150,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":149,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":0,"accumUpdates":[[142,1],[143,2],[144,37975350]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":0,"accumUpdates":[[152,1]]}
{"Event":"SparkListenerJobStart","Job ID":3,"Submission Time":1720114368743,"Stage Infos":[{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"15\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"16\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"FileScanRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[3],"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"15\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"0","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"0","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"15\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"16\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"FileScanRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114368746,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"15\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"0","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"0","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":3,"Stage Attempt ID":0,"Task Info":{"Task ID":3,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114368762,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":3,"Stage Attempt ID":0,"Task Info":{"Task ID":4,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114368764,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":3,"Stage Attempt ID":0,"Task Info":{"Task ID":5,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114368764,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":3,"Stage Attempt ID":0,"Task Info":{"Task ID":6,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114368764,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":3,"Stage Attempt ID":0,"Task Info":{"Task ID":7,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114368764,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":3,"Stage Attempt ID":0,"Task Info":{"Task ID":8,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114368764,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":3,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":7,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114368764,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114370155,"Failed":false,"Killed":false,"Accumulables":[{"ID":141,"Name":"scan time","Update":"1036","Value":"1036","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":151,"Name":"data size","Update":"40","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":170,"Name":"shuffle bytes written","Update":"58","Value":"58","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":171,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":172,"Name":"shuffle write time","Update":"5413375","Value":"5413375","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":173,"Name":"duration","Update":"1049","Value":"1049","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":174,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":177,"Name":"time in aggregation build","Update":"1036","Value":"1036","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":182,"Name":"internal.metrics.executorDeserializeTime","Update":108,"Value":108,"Internal":true,"Count Failed Values":true},{"ID":183,"Name":"internal.metrics.executorDeserializeCpuTime","Update":49111173,"Value":49111173,"Internal":true,"Count Failed Values":true},{"ID":184,"Name":"internal.metrics.executorRunTime","Update":1268,"Value":1268,"Internal":true,"Count Failed Values":true},{"ID":185,"Name":"internal.metrics.executorCpuTime","Update":305325318,"Value":305325318,"Internal":true,"Count Failed Values":true},{"ID":186,"Name":"internal.metrics.resultSize","Update":2129,"Value":2129,"Internal":true,"Count Failed Values":true},{"ID":188,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":210,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":58,"Internal":true,"Count Failed Values":true},{"ID":211,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":212,"Name":"internal.metrics.shuffle.write.writeTime","Update":5413375,"Value":5413375,"Internal":true,"Count Failed Values":true},{"ID":213,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":1799,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":112434944,"JVMOffHeapMemory":90628680,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":467924,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":467924,"OffHeapUnifiedMemory":0,"DirectPoolMemory":12611456,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":7,"MinorGCTime":45,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":45},"Task Metrics":{"Executor Deserialize Time":108,"Executor Deserialize CPU Time":49111173,"Executor Run Time":1268,"Executor CPU Time":305325318,"Peak Execution Memory":0,"Result Size":2129,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":5413375,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":3,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":6,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114368764,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114370155,"Failed":false,"Killed":false,"Accumulables":[{"ID":141,"Name":"scan time","Update":"1036","Value":"2072","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":151,"Name":"data size","Update":"40","Value":"80","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":170,"Name":"shuffle bytes written","Update":"58","Value":"116","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":171,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":172,"Name":"shuffle write time","Update":"5214333","Value":"10627708","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":173,"Name":"duration","Update":"1048","Value":"2097","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":174,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":177,"Name":"time in aggregation build","Update":"1036","Value":"2072","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":182,"Name":"internal.metrics.executorDeserializeTime","Update":113,"Value":221,"Internal":true,"Count Failed Values":true},{"ID":183,"Name":"internal.metrics.executorDeserializeCpuTime","Update":59726626,"Value":108837799,"Internal":true,"Count Failed Values":true},{"ID":184,"Name":"internal.metrics.executorRunTime","Update":1266,"Value":2534,"Internal":true,"Count Failed Values":true},{"ID":185,"Name":"internal.metrics.executorCpuTime","Update":311925752,"Value":617251070,"Internal":true,"Count Failed Values":true},{"ID":186,"Name":"internal.metrics.resultSize","Update":2129,"Value":4258,"Internal":true,"Count Failed Values":true},{"ID":188,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":210,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":116,"Internal":true,"Count Failed Values":true},{"ID":211,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":212,"Name":"internal.metrics.shuffle.write.writeTime","Update":5214333,"Value":10627708,"Internal":true,"Count Failed Values":true},{"ID":213,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":3598,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":112008000,"JVMOffHeapMemory":90283616,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":467924,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":467924,"OffHeapUnifiedMemory":0,"DirectPoolMemory":16805753,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":7,"MinorGCTime":37,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":37},"Task Metrics":{"Executor Deserialize Time":113,"Executor Deserialize CPU Time":59726626,"Executor Run Time":1266,"Executor CPU Time":311925752,"Peak Execution Memory":0,"Result Size":2129,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":5214333,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":3,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":8,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114368764,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114370155,"Failed":false,"Killed":false,"Accumulables":[{"ID":141,"Name":"scan time","Update":"996","Value":"3068","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":151,"Name":"data size","Update":"40","Value":"120","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":170,"Name":"shuffle bytes written","Update":"58","Value":"174","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":171,"Name":"shuffle records written","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":172,"Name":"shuffle write time","Update":"5044378","Value":"15672086","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":173,"Name":"duration","Update":"1007","Value":"3104","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":174,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":177,"Name":"time in aggregation build","Update":"997","Value":"3069","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":182,"Name":"internal.metrics.executorDeserializeTime","Update":125,"Value":346,"Internal":true,"Count Failed Values":true},{"ID":183,"Name":"internal.metrics.executorDeserializeCpuTime","Update":63071792,"Value":171909591,"Internal":true,"Count Failed Values":true},{"ID":184,"Name":"internal.metrics.executorRunTime","Update":1252,"Value":3786,"Internal":true,"Count Failed Values":true},{"ID":185,"Name":"internal.metrics.executorCpuTime","Update":295908544,"Value":913159614,"Internal":true,"Count Failed Values":true},{"ID":186,"Name":"internal.metrics.resultSize","Update":2129,"Value":6387,"Internal":true,"Count Failed Values":true},{"ID":188,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":210,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":174,"Internal":true,"Count Failed Values":true},{"ID":211,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":212,"Name":"internal.metrics.shuffle.write.writeTime","Update":5044378,"Value":15672086,"Internal":true,"Count Failed Values":true},{"ID":213,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":5397,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":90805136,"JVMOffHeapMemory":87296928,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":40623,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":40623,"OffHeapUnifiedMemory":0,"DirectPoolMemory":12595002,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":7,"MinorGCTime":45,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":45},"Task Metrics":{"Executor Deserialize Time":125,"Executor Deserialize CPU Time":63071792,"Executor Run Time":1252,"Executor CPU Time":295908544,"Peak Execution Memory":0,"Result Size":2129,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":5044378,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":3,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":3,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114368762,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114370214,"Failed":false,"Killed":false,"Accumulables":[{"ID":141,"Name":"scan time","Update":"1108","Value":"4176","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":151,"Name":"data size","Update":"40","Value":"160","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":170,"Name":"shuffle bytes written","Update":"58","Value":"232","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":171,"Name":"shuffle records written","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":172,"Name":"shuffle write time","Update":"569251","Value":"16241337","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":173,"Name":"duration","Update":"1116","Value":"4220","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":174,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":177,"Name":"time in aggregation build","Update":"1108","Value":"4177","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":182,"Name":"internal.metrics.executorDeserializeTime","Update":115,"Value":461,"Internal":true,"Count Failed Values":true},{"ID":183,"Name":"internal.metrics.executorDeserializeCpuTime","Update":62443665,"Value":234353256,"Internal":true,"Count Failed Values":true},{"ID":184,"Name":"internal.metrics.executorRunTime","Update":1326,"Value":5112,"Internal":true,"Count Failed Values":true},{"ID":185,"Name":"internal.metrics.executorCpuTime","Update":78838119,"Value":991997733,"Internal":true,"Count Failed Values":true},{"ID":186,"Name":"internal.metrics.resultSize","Update":2086,"Value":8473,"Internal":true,"Count Failed Values":true},{"ID":210,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":232,"Internal":true,"Count Failed Values":true},{"ID":211,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":212,"Name":"internal.metrics.shuffle.write.writeTime","Update":569251,"Value":16241337,"Internal":true,"Count Failed Values":true},{"ID":213,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":7196,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":112008000,"JVMOffHeapMemory":90283616,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":467924,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":467924,"OffHeapUnifiedMemory":0,"DirectPoolMemory":16805753,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":7,"MinorGCTime":37,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":37},"Task Metrics":{"Executor Deserialize Time":115,"Executor Deserialize CPU Time":62443665,"Executor Run Time":1326,"Executor CPU Time":78838119,"Peak Execution Memory":0,"Result Size":2086,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":569251,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":3,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":4,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114368764,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114370214,"Failed":false,"Killed":false,"Accumulables":[{"ID":141,"Name":"scan time","Update":"1110","Value":"5286","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":151,"Name":"data size","Update":"40","Value":"200","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":170,"Name":"shuffle bytes written","Update":"58","Value":"290","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":171,"Name":"shuffle records written","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":172,"Name":"shuffle write time","Update":"584250","Value":"16825587","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":173,"Name":"duration","Update":"1119","Value":"5339","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":174,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":177,"Name":"time in aggregation build","Update":"1110","Value":"5287","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":182,"Name":"internal.metrics.executorDeserializeTime","Update":109,"Value":570,"Internal":true,"Count Failed Values":true},{"ID":183,"Name":"internal.metrics.executorDeserializeCpuTime","Update":72738878,"Value":307092134,"Internal":true,"Count Failed Values":true},{"ID":184,"Name":"internal.metrics.executorRunTime","Update":1330,"Value":6442,"Internal":true,"Count Failed Values":true},{"ID":185,"Name":"internal.metrics.executorCpuTime","Update":94250004,"Value":1086247737,"Internal":true,"Count Failed Values":true},{"ID":186,"Name":"internal.metrics.resultSize","Update":2086,"Value":10559,"Internal":true,"Count Failed Values":true},{"ID":210,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":290,"Internal":true,"Count Failed Values":true},{"ID":211,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":212,"Name":"internal.metrics.shuffle.write.writeTime","Update":584250,"Value":16825587,"Internal":true,"Count Failed Values":true},{"ID":213,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":8995,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":112434944,"JVMOffHeapMemory":90628680,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":467924,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":467924,"OffHeapUnifiedMemory":0,"DirectPoolMemory":12611456,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":7,"MinorGCTime":45,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":45},"Task Metrics":{"Executor Deserialize Time":109,"Executor Deserialize CPU Time":72738878,"Executor Run Time":1330,"Executor CPU Time":94250004,"Peak Execution Memory":0,"Result Size":2086,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":584250,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":3,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":5,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114368764,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114374169,"Failed":false,"Killed":false,"Accumulables":[{"ID":140,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":141,"Name":"scan time","Update":"4896","Value":"10182","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":151,"Name":"data size","Update":"40","Value":"240","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":170,"Name":"shuffle bytes written","Update":"66","Value":"356","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":171,"Name":"shuffle records written","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":172,"Name":"shuffle write time","Update":"755086","Value":"17580673","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":173,"Name":"duration","Update":"5030","Value":"10369","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":174,"Name":"number of output rows","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":177,"Name":"time in aggregation build","Update":"5023","Value":"10310","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":180,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":181,"Name":"number of input batches","Update":"144","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":182,"Name":"internal.metrics.executorDeserializeTime","Update":126,"Value":696,"Internal":true,"Count Failed Values":true},{"ID":183,"Name":"internal.metrics.executorDeserializeCpuTime","Update":72631151,"Value":379723285,"Internal":true,"Count Failed Values":true},{"ID":184,"Name":"internal.metrics.executorRunTime","Update":5267,"Value":11709,"Internal":true,"Count Failed Values":true},{"ID":185,"Name":"internal.metrics.executorCpuTime","Update":521311069,"Value":1607558806,"Internal":true,"Count Failed Values":true},{"ID":186,"Name":"internal.metrics.resultSize","Update":2172,"Value":12731,"Internal":true,"Count Failed Values":true},{"ID":187,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":210,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":66,"Value":356,"Internal":true,"Count Failed Values":true},{"ID":211,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":212,"Name":"internal.metrics.shuffle.write.writeTime","Update":755086,"Value":17580673,"Internal":true,"Count Failed Values":true},{"ID":213,"Name":"internal.metrics.input.bytesRead","Update":15031046,"Value":15040041,"Internal":true,"Count Failed Values":true},{"ID":214,"Name":"internal.metrics.input.recordsRead","Update":586579,"Value":586579,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":90805136,"JVMOffHeapMemory":87296928,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":40623,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":40623,"OffHeapUnifiedMemory":0,"DirectPoolMemory":12595002,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":7,"MinorGCTime":45,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":45},"Task Metrics":{"Executor Deserialize Time":126,"Executor Deserialize CPU Time":72631151,"Executor Run Time":5267,"Executor CPU Time":521311069,"Peak Execution Memory":0,"Result Size":2172,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":66,"Shuffle Write Time":755086,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":15031046,"Records Read":586579},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"15\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"16\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"FileScanRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114368746,"Completion Time":1720114374170,"Accumulables":[{"ID":140,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":141,"Name":"scan time","Value":"10182","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":151,"Name":"data size","Value":"240","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":170,"Name":"shuffle bytes written","Value":"356","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":171,"Name":"shuffle records written","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":172,"Name":"shuffle write time","Value":"17580673","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":173,"Name":"duration","Value":"10369","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":174,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":177,"Name":"time in aggregation build","Value":"10310","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":180,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":181,"Name":"number of input batches","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":182,"Name":"internal.metrics.executorDeserializeTime","Value":696,"Internal":true,"Count Failed Values":true},{"ID":183,"Name":"internal.metrics.executorDeserializeCpuTime","Value":379723285,"Internal":true,"Count Failed Values":true},{"ID":184,"Name":"internal.metrics.executorRunTime","Value":11709,"Internal":true,"Count Failed Values":true},{"ID":185,"Name":"internal.metrics.executorCpuTime","Value":1607558806,"Internal":true,"Count Failed Values":true},{"ID":186,"Name":"internal.metrics.resultSize","Value":12731,"Internal":true,"Count Failed Values":true},{"ID":187,"Name":"internal.metrics.jvmGCTime","Value":15,"Internal":true,"Count Failed Values":true},{"ID":188,"Name":"internal.metrics.resultSerializationTime","Value":3,"Internal":true,"Count Failed Values":true},{"ID":210,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":356,"Internal":true,"Count Failed Values":true},{"ID":211,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":6,"Internal":true,"Count Failed Values":true},{"ID":212,"Name":"internal.metrics.shuffle.write.writeTime","Value":17580673,"Internal":true,"Count Failed Values":true},{"ID":213,"Name":"internal.metrics.input.bytesRead","Value":15040041,"Internal":true,"Count Failed Values":true},{"ID":214,"Name":"internal.metrics.input.recordsRead","Value":586579,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":3,"Completion Time":1720114374175,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":0,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Final Plan ==\n   * HashAggregate (6)\n   +- ShuffleQueryStage (5), Statistics(sizeInBytes=240.0 B, rowCount=6)\n      +- Exchange (4)\n         +- * HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [3]: [business_id#0, review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,review_count:bigint,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [3]: [business_id#0, review_count#6L, stars#7]\n\n(3) HashAggregate [codegen id : 1]\nInput [3]: [business_id#0, review_count#6L, stars#7]\nKeys: []\nFunctions [4]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum#87L, count#88L, sum#89L, sum#90L]\nResults [4]: [sum#91L, count#92L, sum#93L, sum#94L]\n\n(4) Exchange\nInput [4]: [sum#91L, count#92L, sum#93L, sum#94L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=24]\n\n(5) ShuffleQueryStage\nOutput [4]: [sum#91L, count#92L, sum#93L, sum#94L]\nArguments: 0\n\n(6) HashAggregate [codegen id : 2]\nInput [4]: [sum#91L, count#92L, sum#93L, sum#94L]\nKeys: []\nFunctions [4]: [sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum(cast(isnotnull(business_id#0) as int))#48L, count(1)#49L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#51L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#54L]\nResults [6]: [sum(cast(isnotnull(business_id#0) as int))#48L AS sum(CAST((business_id IS NOT NULL) AS INT))#74L, count(1)#49L AS count(1)#75L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#51L AS sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#76L, count(1)#49L AS count(1)#77L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#54L AS sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#78L, count(1)#49L AS count(1)#79L]\n\n(7) HashAggregate\nInput [3]: [business_id#0, review_count#6L, stars#7]\nKeys: []\nFunctions [4]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum#87L, count#88L, sum#89L, sum#90L]\nResults [4]: [sum#91L, count#92L, sum#93L, sum#94L]\n\n(8) Exchange\nInput [4]: [sum#91L, count#92L, sum#93L, sum#94L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=11]\n\n(9) HashAggregate\nInput [4]: [sum#91L, count#92L, sum#93L, sum#94L]\nKeys: []\nFunctions [4]: [sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))]\nAggregate Attributes [4]: [sum(cast(isnotnull(business_id#0) as int))#48L, count(1)#49L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#51L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#54L]\nResults [6]: [sum(cast(isnotnull(business_id#0) as int))#48L AS sum(CAST((business_id IS NOT NULL) AS INT))#74L, count(1)#49L AS count(1)#75L, sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int))#51L AS sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#76L, count(1)#49L AS count(1)#77L, sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))#54L AS sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#78L, count(1)#49L AS count(1)#79L]\n\n(10) AdaptiveSparkPlan\nOutput [6]: [sum(CAST((business_id IS NOT NULL) AS INT))#74L, count(1)#75L, sum(CAST(((stars IS NULL) OR (stars IN (0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0))) AS INT))#76L, count(1)#77L, sum(CAST((COALESCE(CAST(review_count AS DECIMAL(20,10)), 0.0) >= 0) AS INT))#78L, count(1)#79L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast(isnotnull(business_id#0) as int)), count(1), sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=24]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_sum(cast((isnull(stars#7) OR cast(stars#7 as string) IN (0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0)) as int)), partial_sum(cast((coalesce(cast(review_count#6L as decimal(20,10)), 0E-10) >= 0E-10) as int))])","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,review_count:bigint,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":142,"metricType":"sum"},{"name":"scan time","accumulatorId":141,"metricType":"timing"},{"name":"metadata time","accumulatorId":143,"metricType":"timing"},{"name":"size of files read","accumulatorId":144,"metricType":"size"},{"name":"number of output rows","accumulatorId":140,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":180,"metricType":"sum"},{"name":"number of input batches","accumulatorId":181,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":176,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":177,"metricType":"timing"},{"name":"peak memory","accumulatorId":175,"metricType":"size"},{"name":"number of output rows","accumulatorId":174,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":179,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":178,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":173,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":171,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":165,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":172,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":166,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":163,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":160,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":169,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":162,"metricType":"sum"},{"name":"records read","accumulatorId":159,"metricType":"sum"},{"name":"local bytes read","accumulatorId":157,"metricType":"size"},{"name":"fetch wait time","accumulatorId":158,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":155,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":161,"metricType":"sum"},{"name":"local blocks read","accumulatorId":154,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":164,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":153,"metricType":"sum"},{"name":"data size","accumulatorId":151,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":167,"metricType":"size"},{"name":"number of partitions","accumulatorId":152,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":168,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":156,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":170,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":220,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":221,"metricType":"timing"},{"name":"peak memory","accumulatorId":219,"metricType":"size"},{"name":"number of output rows","accumulatorId":218,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":223,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":222,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":217,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":4,"Submission Time":1720114374228,"Stage Infos":[{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"26\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"25\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"21\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[4],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"15\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"16\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"FileScanRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[5,4],"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"27\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"0","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"0","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"26\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"25\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"21\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[4],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114374231,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"27\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"0","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"0","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":5,"Stage Attempt ID":0,"Task Info":{"Task ID":9,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114374236,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":5,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":9,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114374236,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114374338,"Failed":false,"Killed":false,"Accumulables":[{"ID":153,"Name":"remote blocks read","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":154,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":155,"Name":"remote bytes read","Update":"232","Value":"232","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":157,"Name":"local bytes read","Update":"124","Value":"124","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":158,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":159,"Name":"records read","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":168,"Name":"remote reqs duration","Update":"33","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":217,"Name":"duration","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":221,"Name":"time in aggregation build","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":224,"Name":"internal.metrics.executorDeserializeTime","Update":16,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":225,"Name":"internal.metrics.executorDeserializeCpuTime","Update":11605166,"Value":11605166,"Internal":true,"Count Failed Values":true},{"ID":226,"Name":"internal.metrics.executorRunTime","Update":78,"Value":78,"Internal":true,"Count Failed Values":true},{"ID":227,"Name":"internal.metrics.executorCpuTime","Update":51735871,"Value":51735871,"Internal":true,"Count Failed Values":true},{"ID":228,"Name":"internal.metrics.resultSize","Update":3998,"Value":3998,"Internal":true,"Count Failed Values":true},{"ID":235,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":236,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":237,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":232,"Value":232,"Internal":true,"Count Failed Values":true},{"ID":238,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":239,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":124,"Value":124,"Internal":true,"Count Failed Values":true},{"ID":240,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":241,"Name":"internal.metrics.shuffle.read.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":242,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":243,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":244,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":245,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":246,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":247,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":248,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":249,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":250,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":33,"Value":33,"Internal":true,"Count Failed Values":true},{"ID":251,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":16,"Executor Deserialize CPU Time":11605166,"Executor Run Time":78,"Executor CPU Time":51735871,"Peak Execution Memory":0,"Result Size":3998,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":4,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":232,"Remote Bytes Read To Disk":0,"Local Bytes Read":124,"Total Records Read":6,"Remote Requests Duration":33,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"26\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"25\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"21\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[4],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114374231,"Completion Time":1720114374339,"Accumulables":[{"ID":153,"Name":"remote blocks read","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":154,"Name":"local blocks read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":155,"Name":"remote bytes read","Value":"232","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":157,"Name":"local bytes read","Value":"124","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":158,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":159,"Name":"records read","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":168,"Name":"remote reqs duration","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":217,"Name":"duration","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":218,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":221,"Name":"time in aggregation build","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":224,"Name":"internal.metrics.executorDeserializeTime","Value":16,"Internal":true,"Count Failed Values":true},{"ID":225,"Name":"internal.metrics.executorDeserializeCpuTime","Value":11605166,"Internal":true,"Count Failed Values":true},{"ID":226,"Name":"internal.metrics.executorRunTime","Value":78,"Internal":true,"Count Failed Values":true},{"ID":227,"Name":"internal.metrics.executorCpuTime","Value":51735871,"Internal":true,"Count Failed Values":true},{"ID":228,"Name":"internal.metrics.resultSize","Value":3998,"Internal":true,"Count Failed Values":true},{"ID":235,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":4,"Internal":true,"Count Failed Values":true},{"ID":236,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":2,"Internal":true,"Count Failed Values":true},{"ID":237,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":232,"Internal":true,"Count Failed Values":true},{"ID":238,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":239,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":124,"Internal":true,"Count Failed Values":true},{"ID":240,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":241,"Name":"internal.metrics.shuffle.read.recordsRead","Value":6,"Internal":true,"Count Failed Values":true},{"ID":242,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":243,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":244,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":245,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":246,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":247,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":248,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":249,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":250,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":33,"Internal":true,"Count Failed Values":true},{"ID":251,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":4,"Completion Time":1720114374339,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":0,"time":1720114374363,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":1,"rootExecutionId":1,"description":"count at GroupingAnalyzers.scala:89","details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (7)\n+- HashAggregate (6)\n   +- Exchange (5)\n      +- HashAggregate (4)\n         +- Project (3)\n            +- Filter (2)\n               +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [1]: [business_id#0]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nPushedFilters: [IsNotNull(business_id)]\nReadSchema: struct<business_id:string>\n\n(2) Filter\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(3) Project\nOutput: []\nInput [1]: [business_id#0]\n\n(4) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#120L]\nResults [1]: [count#121L]\n\n(5) Exchange\nInput [1]: [count#121L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=52]\n\n(6) HashAggregate\nInput [1]: [count#121L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#117L]\nResults [1]: [count(1)#117L AS count#118L]\n\n(7) AdaptiveSparkPlan\nOutput [1]: [count#118L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=52]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(business_id#0)","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0] Batched: true, DataFilters: [isnotnull(business_id#0)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [IsNotNull(business_id)], ReadSchema: struct<business_id:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(business_id)]","DataFilters":"[isnotnull(business_id#0)]"},"metrics":[{"name":"number of files read","accumulatorId":296,"metricType":"sum"},{"name":"scan time","accumulatorId":295,"metricType":"timing"},{"name":"metadata time","accumulatorId":297,"metricType":"timing"},{"name":"size of files read","accumulatorId":298,"metricType":"size"},{"name":"number of output rows","accumulatorId":294,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":293,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":289,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":290,"metricType":"timing"},{"name":"peak memory","accumulatorId":288,"metricType":"size"},{"name":"number of output rows","accumulatorId":287,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":292,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":291,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":285,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":279,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":286,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":280,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":277,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":274,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":283,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":276,"metricType":"sum"},{"name":"records read","accumulatorId":273,"metricType":"sum"},{"name":"local bytes read","accumulatorId":271,"metricType":"size"},{"name":"fetch wait time","accumulatorId":272,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":269,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":275,"metricType":"sum"},{"name":"local blocks read","accumulatorId":268,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":278,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":267,"metricType":"sum"},{"name":"data size","accumulatorId":265,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":281,"metricType":"size"},{"name":"number of partitions","accumulatorId":266,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":282,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":270,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":284,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":261,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":262,"metricType":"timing"},{"name":"peak memory","accumulatorId":260,"metricType":"size"},{"name":"number of output rows","accumulatorId":259,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":264,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":263,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1720114374434,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":1,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (14)\n+- == Current Plan ==\n   HashAggregate (8)\n   +- ShuffleQueryStage (7)\n      +- Exchange (6)\n         +- * HashAggregate (5)\n            +- * Project (4)\n               +- * Filter (3)\n                  +- * ColumnarToRow (2)\n                     +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (13)\n   +- Exchange (12)\n      +- HashAggregate (11)\n         +- Project (10)\n            +- Filter (9)\n               +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [1]: [business_id#0]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nPushedFilters: [IsNotNull(business_id)]\nReadSchema: struct<business_id:string>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [1]: [business_id#0]\n\n(3) Filter [codegen id : 1]\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(4) Project [codegen id : 1]\nOutput: []\nInput [1]: [business_id#0]\n\n(5) HashAggregate [codegen id : 1]\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#120L]\nResults [1]: [count#121L]\n\n(6) Exchange\nInput [1]: [count#121L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=72]\n\n(7) ShuffleQueryStage\nOutput [1]: [count#121L]\nArguments: 0\n\n(8) HashAggregate\nInput [1]: [count#121L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#117L]\nResults [1]: [count(1)#117L AS count#118L]\n\n(9) Filter\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(10) Project\nOutput: []\nInput [1]: [business_id#0]\n\n(11) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#120L]\nResults [1]: [count#121L]\n\n(12) Exchange\nInput [1]: [count#121L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=52]\n\n(13) HashAggregate\nInput [1]: [count#121L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#117L]\nResults [1]: [count(1)#117L AS count#118L]\n\n(14) AdaptiveSparkPlan\nOutput [1]: [count#118L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=72]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(business_id#0)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0] Batched: true, DataFilters: [isnotnull(business_id#0)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [IsNotNull(business_id)], ReadSchema: struct<business_id:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(business_id)]","DataFilters":"[isnotnull(business_id#0)]"},"metrics":[{"name":"number of files read","accumulatorId":296,"metricType":"sum"},{"name":"scan time","accumulatorId":295,"metricType":"timing"},{"name":"metadata time","accumulatorId":297,"metricType":"timing"},{"name":"size of files read","accumulatorId":298,"metricType":"size"},{"name":"number of output rows","accumulatorId":294,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":335,"metricType":"sum"},{"name":"number of input batches","accumulatorId":336,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":334,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":330,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":331,"metricType":"timing"},{"name":"peak memory","accumulatorId":329,"metricType":"size"},{"name":"number of output rows","accumulatorId":328,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":333,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":332,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":327,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":325,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":319,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":326,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":320,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":317,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":314,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":323,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":316,"metricType":"sum"},{"name":"records read","accumulatorId":313,"metricType":"sum"},{"name":"local bytes read","accumulatorId":311,"metricType":"size"},{"name":"fetch wait time","accumulatorId":312,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":309,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":315,"metricType":"sum"},{"name":"local blocks read","accumulatorId":308,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":318,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":307,"metricType":"sum"},{"name":"data size","accumulatorId":305,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":321,"metricType":"size"},{"name":"number of partitions","accumulatorId":306,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":322,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":310,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":324,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":301,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":302,"metricType":"timing"},{"name":"peak memory","accumulatorId":300,"metricType":"size"},{"name":"number of output rows","accumulatorId":299,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":304,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":303,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[[296,1],[297,0],[298,37975350]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[[306,1]]}
{"Event":"SparkListenerJobStart","Job ID":5,"Submission Time":1720114374461,"Stage Infos":[{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"count at GroupingAnalyzers.scala:89","Number of Tasks":6,"RDD Info":[{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"35\",\"name\":\"Exchange\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"36\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"FileScanRDD","Scope":"{\"id\":\"42\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"42\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[6],"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"35\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"1","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"1","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"count at GroupingAnalyzers.scala:89","Number of Tasks":6,"RDD Info":[{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"35\",\"name\":\"Exchange\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"36\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"FileScanRDD","Scope":"{\"id\":\"42\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"42\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720114374462,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"35\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"1","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"1","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":10,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114374465,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":11,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114374466,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":12,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114374466,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":13,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114374466,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":14,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114374466,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":15,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114374466,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":14,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114374466,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114375499,"Failed":false,"Killed":false,"Accumulables":[{"ID":295,"Name":"scan time","Update":"981","Value":"981","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":305,"Name":"data size","Update":"16","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":324,"Name":"shuffle bytes written","Update":"56","Value":"56","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":325,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":326,"Name":"shuffle write time","Update":"1716249","Value":"1716249","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":327,"Name":"duration","Update":"983","Value":"983","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":328,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":331,"Name":"time in aggregation build","Update":"981","Value":"981","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"internal.metrics.executorDeserializeTime","Update":20,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":338,"Name":"internal.metrics.executorDeserializeCpuTime","Update":6614166,"Value":6614166,"Internal":true,"Count Failed Values":true},{"ID":339,"Name":"internal.metrics.executorRunTime","Update":1001,"Value":1001,"Internal":true,"Count Failed Values":true},{"ID":340,"Name":"internal.metrics.executorCpuTime","Update":70783128,"Value":70783128,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.resultSize","Update":2185,"Value":2185,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":56,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.write.writeTime","Update":1716249,"Value":1716249,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":1799,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":20,"Executor Deserialize CPU Time":6614166,"Executor Run Time":1001,"Executor CPU Time":70783128,"Peak Execution Memory":0,"Result Size":2185,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":1716249,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":11,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114374466,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114375499,"Failed":false,"Killed":false,"Accumulables":[{"ID":295,"Name":"scan time","Update":"983","Value":"1964","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":305,"Name":"data size","Update":"16","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":324,"Name":"shuffle bytes written","Update":"56","Value":"112","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":325,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":326,"Name":"shuffle write time","Update":"617624","Value":"2333873","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":327,"Name":"duration","Update":"984","Value":"1967","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":328,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":331,"Name":"time in aggregation build","Update":"983","Value":"1964","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"internal.metrics.executorDeserializeTime","Update":20,"Value":40,"Internal":true,"Count Failed Values":true},{"ID":338,"Name":"internal.metrics.executorDeserializeCpuTime","Update":12656747,"Value":19270913,"Internal":true,"Count Failed Values":true},{"ID":339,"Name":"internal.metrics.executorRunTime","Update":1001,"Value":2002,"Internal":true,"Count Failed Values":true},{"ID":340,"Name":"internal.metrics.executorCpuTime","Update":106886752,"Value":177669880,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.resultSize","Update":2185,"Value":4370,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":112,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.write.writeTime","Update":617624,"Value":2333873,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":3598,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":20,"Executor Deserialize CPU Time":12656747,"Executor Run Time":1001,"Executor CPU Time":106886752,"Peak Execution Memory":0,"Result Size":2185,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":617624,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":10,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114374465,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114375502,"Failed":false,"Killed":false,"Accumulables":[{"ID":295,"Name":"scan time","Update":"986","Value":"2950","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":305,"Name":"data size","Update":"16","Value":"48","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":324,"Name":"shuffle bytes written","Update":"56","Value":"168","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":325,"Name":"shuffle records written","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":326,"Name":"shuffle write time","Update":"461457","Value":"2795330","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":327,"Name":"duration","Update":"987","Value":"2954","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":328,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":331,"Name":"time in aggregation build","Update":"986","Value":"2950","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"internal.metrics.executorDeserializeTime","Update":19,"Value":59,"Internal":true,"Count Failed Values":true},{"ID":338,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8258917,"Value":27529830,"Internal":true,"Count Failed Values":true},{"ID":339,"Name":"internal.metrics.executorRunTime","Update":1008,"Value":3010,"Internal":true,"Count Failed Values":true},{"ID":340,"Name":"internal.metrics.executorCpuTime","Update":56742579,"Value":234412459,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.resultSize","Update":2142,"Value":6512,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":168,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.write.writeTime","Update":461457,"Value":2795330,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":5397,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":19,"Executor Deserialize CPU Time":8258917,"Executor Run Time":1008,"Executor CPU Time":56742579,"Peak Execution Memory":0,"Result Size":2142,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":461457,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":15,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114374466,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114375504,"Failed":false,"Killed":false,"Accumulables":[{"ID":295,"Name":"scan time","Update":"990","Value":"3940","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":305,"Name":"data size","Update":"16","Value":"64","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":324,"Name":"shuffle bytes written","Update":"56","Value":"224","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":325,"Name":"shuffle records written","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":326,"Name":"shuffle write time","Update":"760501","Value":"3555831","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":327,"Name":"duration","Update":"991","Value":"3945","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":328,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":331,"Name":"time in aggregation build","Update":"990","Value":"3940","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"internal.metrics.executorDeserializeTime","Update":18,"Value":77,"Internal":true,"Count Failed Values":true},{"ID":338,"Name":"internal.metrics.executorDeserializeCpuTime","Update":6245625,"Value":33775455,"Internal":true,"Count Failed Values":true},{"ID":339,"Name":"internal.metrics.executorRunTime","Update":1008,"Value":4018,"Internal":true,"Count Failed Values":true},{"ID":340,"Name":"internal.metrics.executorCpuTime","Update":68207249,"Value":302619708,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.resultSize","Update":2142,"Value":8654,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":224,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.write.writeTime","Update":760501,"Value":3555831,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":7196,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":18,"Executor Deserialize CPU Time":6245625,"Executor Run Time":1008,"Executor CPU Time":68207249,"Peak Execution Memory":0,"Result Size":2142,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":760501,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":13,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114374466,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114375653,"Failed":false,"Killed":false,"Accumulables":[{"ID":295,"Name":"scan time","Update":"1136","Value":"5076","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":305,"Name":"data size","Update":"16","Value":"80","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":324,"Name":"shuffle bytes written","Update":"56","Value":"280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":325,"Name":"shuffle records written","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":326,"Name":"shuffle write time","Update":"950625","Value":"4506456","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":327,"Name":"duration","Update":"1138","Value":"5083","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":328,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":331,"Name":"time in aggregation build","Update":"1136","Value":"5076","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"internal.metrics.executorDeserializeTime","Update":17,"Value":94,"Internal":true,"Count Failed Values":true},{"ID":338,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3675206,"Value":37450661,"Internal":true,"Count Failed Values":true},{"ID":339,"Name":"internal.metrics.executorRunTime","Update":1158,"Value":5176,"Internal":true,"Count Failed Values":true},{"ID":340,"Name":"internal.metrics.executorCpuTime","Update":61397418,"Value":364017126,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.resultSize","Update":2142,"Value":10796,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":280,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.write.writeTime","Update":950625,"Value":4506456,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":8995,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":17,"Executor Deserialize CPU Time":3675206,"Executor Run Time":1158,"Executor CPU Time":61397418,"Peak Execution Memory":0,"Result Size":2142,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":950625,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":12,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114374466,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114378174,"Failed":false,"Killed":false,"Accumulables":[{"ID":294,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":295,"Name":"scan time","Update":"3622","Value":"8698","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":305,"Name":"data size","Update":"16","Value":"96","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":324,"Name":"shuffle bytes written","Update":"59","Value":"339","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":325,"Name":"shuffle records written","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":326,"Name":"shuffle write time","Update":"324331","Value":"4830787","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":327,"Name":"duration","Update":"3663","Value":"8746","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":328,"Name":"number of output rows","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":331,"Name":"time in aggregation build","Update":"3663","Value":"8739","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"number of input batches","Update":"144","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"internal.metrics.executorDeserializeTime","Update":19,"Value":113,"Internal":true,"Count Failed Values":true},{"ID":338,"Name":"internal.metrics.executorDeserializeCpuTime","Update":10029376,"Value":47480037,"Internal":true,"Count Failed Values":true},{"ID":339,"Name":"internal.metrics.executorRunTime","Update":3680,"Value":8856,"Internal":true,"Count Failed Values":true},{"ID":340,"Name":"internal.metrics.executorCpuTime","Update":377151350,"Value":741168476,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.resultSize","Update":2228,"Value":13024,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.jvmGCTime","Update":8,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":339,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.write.writeTime","Update":324331,"Value":4830787,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.input.bytesRead","Update":13921662,"Value":13930657,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.input.recordsRead","Update":586579,"Value":586579,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":19,"Executor Deserialize CPU Time":10029376,"Executor Run Time":3680,"Executor CPU Time":377151350,"Peak Execution Memory":0,"Result Size":2228,"JVM GC Time":8,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":324331,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":13921662,"Records Read":586579},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"count at GroupingAnalyzers.scala:89","Number of Tasks":6,"RDD Info":[{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"35\",\"name\":\"Exchange\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"36\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"FileScanRDD","Scope":"{\"id\":\"42\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"42\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720114374462,"Completion Time":1720114378174,"Accumulables":[{"ID":294,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":295,"Name":"scan time","Value":"8698","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":305,"Name":"data size","Value":"96","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":324,"Name":"shuffle bytes written","Value":"339","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":325,"Name":"shuffle records written","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":326,"Name":"shuffle write time","Value":"4830787","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":327,"Name":"duration","Value":"8746","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":328,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":331,"Name":"time in aggregation build","Value":"8739","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":334,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":335,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":336,"Name":"number of input batches","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":337,"Name":"internal.metrics.executorDeserializeTime","Value":113,"Internal":true,"Count Failed Values":true},{"ID":338,"Name":"internal.metrics.executorDeserializeCpuTime","Value":47480037,"Internal":true,"Count Failed Values":true},{"ID":339,"Name":"internal.metrics.executorRunTime","Value":8856,"Internal":true,"Count Failed Values":true},{"ID":340,"Name":"internal.metrics.executorCpuTime","Value":741168476,"Internal":true,"Count Failed Values":true},{"ID":341,"Name":"internal.metrics.resultSize","Value":13024,"Internal":true,"Count Failed Values":true},{"ID":342,"Name":"internal.metrics.jvmGCTime","Value":8,"Internal":true,"Count Failed Values":true},{"ID":343,"Name":"internal.metrics.resultSerializationTime","Value":2,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":339,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":6,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.shuffle.write.writeTime","Value":4830787,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.input.bytesRead","Value":13930657,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.input.recordsRead","Value":586579,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":5,"Completion Time":1720114378175,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":1,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (14)\n+- == Final Plan ==\n   * HashAggregate (8)\n   +- ShuffleQueryStage (7), Statistics(sizeInBytes=96.0 B, rowCount=6)\n      +- Exchange (6)\n         +- * HashAggregate (5)\n            +- * Project (4)\n               +- * Filter (3)\n                  +- * ColumnarToRow (2)\n                     +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (13)\n   +- Exchange (12)\n      +- HashAggregate (11)\n         +- Project (10)\n            +- Filter (9)\n               +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [1]: [business_id#0]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nPushedFilters: [IsNotNull(business_id)]\nReadSchema: struct<business_id:string>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [1]: [business_id#0]\n\n(3) Filter [codegen id : 1]\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(4) Project [codegen id : 1]\nOutput: []\nInput [1]: [business_id#0]\n\n(5) HashAggregate [codegen id : 1]\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#120L]\nResults [1]: [count#121L]\n\n(6) Exchange\nInput [1]: [count#121L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=72]\n\n(7) ShuffleQueryStage\nOutput [1]: [count#121L]\nArguments: 0\n\n(8) HashAggregate [codegen id : 2]\nInput [1]: [count#121L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#117L]\nResults [1]: [count(1)#117L AS count#118L]\n\n(9) Filter\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(10) Project\nOutput: []\nInput [1]: [business_id#0]\n\n(11) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#120L]\nResults [1]: [count#121L]\n\n(12) Exchange\nInput [1]: [count#121L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=52]\n\n(13) HashAggregate\nInput [1]: [count#121L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#117L]\nResults [1]: [count(1)#117L AS count#118L]\n\n(14) AdaptiveSparkPlan\nOutput [1]: [count#118L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=72]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(business_id#0)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0] Batched: true, DataFilters: [isnotnull(business_id#0)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [IsNotNull(business_id)], ReadSchema: struct<business_id:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(business_id)]","DataFilters":"[isnotnull(business_id#0)]"},"metrics":[{"name":"number of files read","accumulatorId":296,"metricType":"sum"},{"name":"scan time","accumulatorId":295,"metricType":"timing"},{"name":"metadata time","accumulatorId":297,"metricType":"timing"},{"name":"size of files read","accumulatorId":298,"metricType":"size"},{"name":"number of output rows","accumulatorId":294,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":335,"metricType":"sum"},{"name":"number of input batches","accumulatorId":336,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":334,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":330,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":331,"metricType":"timing"},{"name":"peak memory","accumulatorId":329,"metricType":"size"},{"name":"number of output rows","accumulatorId":328,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":333,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":332,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":327,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":325,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":319,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":326,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":320,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":317,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":314,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":323,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":316,"metricType":"sum"},{"name":"records read","accumulatorId":313,"metricType":"sum"},{"name":"local bytes read","accumulatorId":311,"metricType":"size"},{"name":"fetch wait time","accumulatorId":312,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":309,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":315,"metricType":"sum"},{"name":"local blocks read","accumulatorId":308,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":318,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":307,"metricType":"sum"},{"name":"data size","accumulatorId":305,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":321,"metricType":"size"},{"name":"number of partitions","accumulatorId":306,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":322,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":310,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":324,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":375,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":376,"metricType":"timing"},{"name":"peak memory","accumulatorId":374,"metricType":"size"},{"name":"number of output rows","accumulatorId":373,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":378,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":377,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":372,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":6,"Submission Time":1720114378191,"Stage Infos":[{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"count at GroupingAnalyzers.scala:89","Number of Tasks":6,"RDD Info":[{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"35\",\"name\":\"Exchange\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"36\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"FileScanRDD","Scope":"{\"id\":\"42\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"42\",\"name\":\"Scan parquet \"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"count at GroupingAnalyzers.scala:89","Number of Tasks":1,"RDD Info":[{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"48\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"47\",\"name\":\"Exchange\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"43\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[7],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[7,8],"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"49\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"1","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"1","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"count at GroupingAnalyzers.scala:89","Number of Tasks":1,"RDD Info":[{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"48\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"47\",\"name\":\"Exchange\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"43\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[7],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720114378191,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"49\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"1","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"1","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":8,"Stage Attempt ID":0,"Task Info":{"Task ID":16,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114378193,"Executor ID":"1","Host":"172.29.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":8,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":16,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114378193,"Executor ID":"1","Host":"172.29.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114378261,"Failed":false,"Killed":false,"Accumulables":[{"ID":307,"Name":"remote blocks read","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":309,"Name":"remote bytes read","Update":"224","Value":"224","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":311,"Name":"local bytes read","Update":"115","Value":"115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":312,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"records read","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":322,"Name":"remote reqs duration","Update":"16","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":372,"Name":"duration","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":373,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":376,"Name":"time in aggregation build","Update":"3","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":379,"Name":"internal.metrics.executorDeserializeTime","Update":13,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":380,"Name":"internal.metrics.executorDeserializeCpuTime","Update":10231002,"Value":10231002,"Internal":true,"Count Failed Values":true},{"ID":381,"Name":"internal.metrics.executorRunTime","Update":48,"Value":48,"Internal":true,"Count Failed Values":true},{"ID":382,"Name":"internal.metrics.executorCpuTime","Update":40304668,"Value":40304668,"Internal":true,"Count Failed Values":true},{"ID":383,"Name":"internal.metrics.resultSize","Update":3995,"Value":3995,"Internal":true,"Count Failed Values":true},{"ID":390,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":391,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":392,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":224,"Value":224,"Internal":true,"Count Failed Values":true},{"ID":393,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":394,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":115,"Value":115,"Internal":true,"Count Failed Values":true},{"ID":395,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":396,"Name":"internal.metrics.shuffle.read.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":397,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":398,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":399,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":400,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":401,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":402,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":403,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":404,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":405,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":16,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":406,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":13,"Executor Deserialize CPU Time":10231002,"Executor Run Time":48,"Executor CPU Time":40304668,"Peak Execution Memory":0,"Result Size":3995,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":4,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":224,"Remote Bytes Read To Disk":0,"Local Bytes Read":115,"Total Records Read":6,"Remote Requests Duration":16,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"count at GroupingAnalyzers.scala:89","Number of Tasks":1,"RDD Info":[{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"48\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"47\",\"name\":\"Exchange\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"43\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at GroupingAnalyzers.scala:89","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[7],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3613)\ncom.amazon.deequ.analyzers.FrequencyBasedAnalyzer$.computeFrequencies(GroupingAnalyzers.scala:89)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:285)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720114378191,"Completion Time":1720114378261,"Accumulables":[{"ID":307,"Name":"remote blocks read","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"local blocks read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":309,"Name":"remote bytes read","Value":"224","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":311,"Name":"local bytes read","Value":"115","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":312,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"records read","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":322,"Name":"remote reqs duration","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":372,"Name":"duration","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":373,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":376,"Name":"time in aggregation build","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":379,"Name":"internal.metrics.executorDeserializeTime","Value":13,"Internal":true,"Count Failed Values":true},{"ID":380,"Name":"internal.metrics.executorDeserializeCpuTime","Value":10231002,"Internal":true,"Count Failed Values":true},{"ID":381,"Name":"internal.metrics.executorRunTime","Value":48,"Internal":true,"Count Failed Values":true},{"ID":382,"Name":"internal.metrics.executorCpuTime","Value":40304668,"Internal":true,"Count Failed Values":true},{"ID":383,"Name":"internal.metrics.resultSize","Value":3995,"Internal":true,"Count Failed Values":true},{"ID":390,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":4,"Internal":true,"Count Failed Values":true},{"ID":391,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":2,"Internal":true,"Count Failed Values":true},{"ID":392,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":224,"Internal":true,"Count Failed Values":true},{"ID":393,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":394,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":115,"Internal":true,"Count Failed Values":true},{"ID":395,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":396,"Name":"internal.metrics.shuffle.read.recordsRead","Value":6,"Internal":true,"Count Failed Values":true},{"ID":397,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":398,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":399,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":400,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":401,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":402,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":403,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":404,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":405,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":16,"Internal":true,"Count Failed Values":true},{"ID":406,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":6,"Completion Time":1720114378262,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":1,"time":1720114378262,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":2,"rootExecutionId":2,"description":"collect at AnalysisRunner.scala:524","details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (9)\n+- HashAggregate (8)\n   +- Exchange (7)\n      +- HashAggregate (6)\n         +- HashAggregate (5)\n            +- Exchange (4)\n               +- HashAggregate (3)\n                  +- Filter (2)\n                     +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [1]: [business_id#0]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nPushedFilters: [IsNotNull(business_id)]\nReadSchema: struct<business_id:string>\n\n(2) Filter\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(3) HashAggregate\nInput [1]: [business_id#0]\nKeys [1]: [business_id#0]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#132L]\nResults [2]: [business_id#0, count#133L]\n\n(4) Exchange\nInput [2]: [business_id#0, count#133L]\nArguments: hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=114]\n\n(5) HashAggregate\nInput [2]: [business_id#0, count#133L]\nKeys [1]: [business_id#0]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#109L]\nResults [1]: [count(1)#109L AS com_amazon_deequ_dq_metrics_count#110L]\n\n(6) HashAggregate\nInput [1]: [com_amazon_deequ_dq_metrics_count#110L]\nKeys: []\nFunctions [1]: [partial_sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))]\nAggregate Attributes [1]: [sum#130]\nResults [1]: [sum#131]\n\n(7) Exchange\nInput [1]: [sum#131]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=118]\n\n(8) HashAggregate\nInput [1]: [sum#131]\nKeys: []\nFunctions [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))]\nAggregate Attributes [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))#124]\nResults [1]: [(sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))#124 / 586579.0) AS (sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#128]\n\n(9) AdaptiveSparkPlan\nOutput [1]: [(sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#128]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=118]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[count(1)])","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=114]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(business_id#0)","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0] Batched: true, DataFilters: [isnotnull(business_id#0)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [IsNotNull(business_id)], ReadSchema: struct<business_id:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(business_id)]","DataFilters":"[isnotnull(business_id#0)]"},"metrics":[{"name":"number of files read","accumulatorId":485,"metricType":"sum"},{"name":"scan time","accumulatorId":484,"metricType":"timing"},{"name":"metadata time","accumulatorId":486,"metricType":"timing"},{"name":"size of files read","accumulatorId":487,"metricType":"size"},{"name":"number of output rows","accumulatorId":483,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":482,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":478,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":479,"metricType":"timing"},{"name":"peak memory","accumulatorId":477,"metricType":"size"},{"name":"number of output rows","accumulatorId":476,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":481,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":480,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":474,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":468,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":475,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":469,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":466,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":463,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":472,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":465,"metricType":"sum"},{"name":"records read","accumulatorId":462,"metricType":"sum"},{"name":"local bytes read","accumulatorId":460,"metricType":"size"},{"name":"fetch wait time","accumulatorId":461,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":458,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":464,"metricType":"sum"},{"name":"local blocks read","accumulatorId":457,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":467,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":456,"metricType":"sum"},{"name":"data size","accumulatorId":454,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":470,"metricType":"size"},{"name":"number of partitions","accumulatorId":455,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":471,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":459,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":473,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":450,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":451,"metricType":"timing"},{"name":"peak memory","accumulatorId":449,"metricType":"size"},{"name":"number of output rows","accumulatorId":448,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":453,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":452,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":444,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":445,"metricType":"timing"},{"name":"peak memory","accumulatorId":443,"metricType":"size"},{"name":"number of output rows","accumulatorId":442,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":447,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":446,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":440,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":434,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":441,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":435,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":432,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":429,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":438,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":431,"metricType":"sum"},{"name":"records read","accumulatorId":428,"metricType":"sum"},{"name":"local bytes read","accumulatorId":426,"metricType":"size"},{"name":"fetch wait time","accumulatorId":427,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":424,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":430,"metricType":"sum"},{"name":"local blocks read","accumulatorId":423,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":433,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":422,"metricType":"sum"},{"name":"data size","accumulatorId":420,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":436,"metricType":"size"},{"name":"number of partitions","accumulatorId":421,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":437,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":425,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":439,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":416,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":417,"metricType":"timing"},{"name":"peak memory","accumulatorId":415,"metricType":"size"},{"name":"number of output rows","accumulatorId":414,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":419,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":418,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1720114378299,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":2,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (18)\n+- == Current Plan ==\n   HashAggregate (10)\n   +- Exchange (9)\n      +- HashAggregate (8)\n         +- HashAggregate (7)\n            +- ShuffleQueryStage (6)\n               +- Exchange (5)\n                  +- * HashAggregate (4)\n                     +- * Filter (3)\n                        +- * ColumnarToRow (2)\n                           +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (17)\n   +- Exchange (16)\n      +- HashAggregate (15)\n         +- HashAggregate (14)\n            +- Exchange (13)\n               +- HashAggregate (12)\n                  +- Filter (11)\n                     +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [1]: [business_id#0]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nPushedFilters: [IsNotNull(business_id)]\nReadSchema: struct<business_id:string>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [1]: [business_id#0]\n\n(3) Filter [codegen id : 1]\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(4) HashAggregate [codegen id : 1]\nInput [1]: [business_id#0]\nKeys [1]: [business_id#0]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#132L]\nResults [2]: [business_id#0, count#133L]\n\n(5) Exchange\nInput [2]: [business_id#0, count#133L]\nArguments: hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=141]\n\n(6) ShuffleQueryStage\nOutput [2]: [business_id#0, count#133L]\nArguments: 0\n\n(7) HashAggregate\nInput [2]: [business_id#0, count#133L]\nKeys [1]: [business_id#0]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#109L]\nResults [1]: [count(1)#109L AS com_amazon_deequ_dq_metrics_count#110L]\n\n(8) HashAggregate\nInput [1]: [com_amazon_deequ_dq_metrics_count#110L]\nKeys: []\nFunctions [1]: [partial_sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))]\nAggregate Attributes [1]: [sum#130]\nResults [1]: [sum#131]\n\n(9) Exchange\nInput [1]: [sum#131]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=154]\n\n(10) HashAggregate\nInput [1]: [sum#131]\nKeys: []\nFunctions [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))]\nAggregate Attributes [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))#124]\nResults [1]: [(sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))#124 / 586579.0) AS (sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#128]\n\n(11) Filter\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(12) HashAggregate\nInput [1]: [business_id#0]\nKeys [1]: [business_id#0]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#132L]\nResults [2]: [business_id#0, count#133L]\n\n(13) Exchange\nInput [2]: [business_id#0, count#133L]\nArguments: hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=114]\n\n(14) HashAggregate\nInput [2]: [business_id#0, count#133L]\nKeys [1]: [business_id#0]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#109L]\nResults [1]: [count(1)#109L AS com_amazon_deequ_dq_metrics_count#110L]\n\n(15) HashAggregate\nInput [1]: [com_amazon_deequ_dq_metrics_count#110L]\nKeys: []\nFunctions [1]: [partial_sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))]\nAggregate Attributes [1]: [sum#130]\nResults [1]: [sum#131]\n\n(16) Exchange\nInput [1]: [sum#131]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=118]\n\n(17) HashAggregate\nInput [1]: [sum#131]\nKeys: []\nFunctions [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))]\nAggregate Attributes [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))#124]\nResults [1]: [(sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))#124 / 586579.0) AS (sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#128]\n\n(18) AdaptiveSparkPlan\nOutput [1]: [(sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#128]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=154]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[count(1)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=141]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(business_id#0)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0] Batched: true, DataFilters: [isnotnull(business_id#0)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [IsNotNull(business_id)], ReadSchema: struct<business_id:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(business_id)]","DataFilters":"[isnotnull(business_id#0)]"},"metrics":[{"name":"number of files read","accumulatorId":485,"metricType":"sum"},{"name":"scan time","accumulatorId":484,"metricType":"timing"},{"name":"metadata time","accumulatorId":486,"metricType":"timing"},{"name":"size of files read","accumulatorId":487,"metricType":"size"},{"name":"number of output rows","accumulatorId":483,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":558,"metricType":"sum"},{"name":"number of input batches","accumulatorId":559,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":557,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":553,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":554,"metricType":"timing"},{"name":"peak memory","accumulatorId":552,"metricType":"size"},{"name":"number of output rows","accumulatorId":551,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":556,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":555,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":550,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":548,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":542,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":549,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":543,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":540,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":537,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":546,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":539,"metricType":"sum"},{"name":"records read","accumulatorId":536,"metricType":"sum"},{"name":"local bytes read","accumulatorId":534,"metricType":"size"},{"name":"fetch wait time","accumulatorId":535,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":532,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":538,"metricType":"sum"},{"name":"local blocks read","accumulatorId":531,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":541,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":530,"metricType":"sum"},{"name":"data size","accumulatorId":528,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":544,"metricType":"size"},{"name":"number of partitions","accumulatorId":529,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":545,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":533,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":547,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":524,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":525,"metricType":"timing"},{"name":"peak memory","accumulatorId":523,"metricType":"size"},{"name":"number of output rows","accumulatorId":522,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":527,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":526,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":518,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":519,"metricType":"timing"},{"name":"peak memory","accumulatorId":517,"metricType":"size"},{"name":"number of output rows","accumulatorId":516,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":521,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":520,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":514,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":508,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":515,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":509,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":506,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":503,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":512,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":505,"metricType":"sum"},{"name":"records read","accumulatorId":502,"metricType":"sum"},{"name":"local bytes read","accumulatorId":500,"metricType":"size"},{"name":"fetch wait time","accumulatorId":501,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":498,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":504,"metricType":"sum"},{"name":"local blocks read","accumulatorId":497,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":507,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":496,"metricType":"sum"},{"name":"data size","accumulatorId":494,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":510,"metricType":"size"},{"name":"number of partitions","accumulatorId":495,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":511,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":499,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":513,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":490,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":491,"metricType":"timing"},{"name":"peak memory","accumulatorId":489,"metricType":"size"},{"name":"number of output rows","accumulatorId":488,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":493,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":492,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[485,1],[486,0],[487,37975350]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[529,200]]}
{"Event":"SparkListenerJobStart","Job ID":7,"Submission Time":1720114378364,"Stage Infos":[{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":6,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"57\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"FileScanRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"58\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[9],"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"57\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"2","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"2","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":6,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"57\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"FileScanRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"58\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720114378367,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"57\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"2","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"2","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":17,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114378371,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":18,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114378371,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":19,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114378371,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":20,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114378371,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":21,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114378371,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":9,"Stage Attempt ID":0,"Task Info":{"Task ID":22,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114378371,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":21,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114378371,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114379583,"Failed":false,"Killed":false,"Accumulables":[{"ID":484,"Name":"scan time","Update":"965","Value":"965","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"duration","Update":"1099","Value":"1099","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"peak memory","Update":"262144","Value":"262144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":554,"Name":"time in aggregation build","Update":"970","Value":"970","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":560,"Name":"internal.metrics.executorDeserializeTime","Update":51,"Value":51,"Internal":true,"Count Failed Values":true},{"ID":561,"Name":"internal.metrics.executorDeserializeCpuTime","Update":28934879,"Value":28934879,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.executorRunTime","Update":1140,"Value":1140,"Internal":true,"Count Failed Values":true},{"ID":563,"Name":"internal.metrics.executorCpuTime","Update":158641705,"Value":158641705,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.resultSize","Update":2893,"Value":2893,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.jvmGCTime","Update":18,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.resultSerializationTime","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":262144,"Internal":true,"Count Failed Values":true},{"ID":591,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":1799,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":143812064,"JVMOffHeapMemory":100378864,"OnHeapExecutionMemory":67633120,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":486036,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":68119156,"OffHeapUnifiedMemory":0,"DirectPoolMemory":25194493,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":9,"MinorGCTime":49,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":49},"Task Metrics":{"Executor Deserialize Time":51,"Executor Deserialize CPU Time":28934879,"Executor Run Time":1140,"Executor CPU Time":158641705,"Peak Execution Memory":262144,"Result Size":2893,"JVM GC Time":18,"Result Serialization Time":6,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":17,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114378371,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114379587,"Failed":false,"Killed":false,"Accumulables":[{"ID":484,"Name":"scan time","Update":"969","Value":"1934","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"duration","Update":"1097","Value":"2196","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"peak memory","Update":"262144","Value":"524288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":554,"Name":"time in aggregation build","Update":"973","Value":"1943","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":560,"Name":"internal.metrics.executorDeserializeTime","Update":47,"Value":98,"Internal":true,"Count Failed Values":true},{"ID":561,"Name":"internal.metrics.executorDeserializeCpuTime","Update":25137670,"Value":54072549,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.executorRunTime","Update":1151,"Value":2291,"Internal":true,"Count Failed Values":true},{"ID":563,"Name":"internal.metrics.executorCpuTime","Update":120459247,"Value":279100952,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.resultSize","Update":2893,"Value":5786,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":33,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.resultSerializationTime","Update":8,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":524288,"Internal":true,"Count Failed Values":true},{"ID":591,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":3598,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":47,"Executor Deserialize CPU Time":25137670,"Executor Run Time":1151,"Executor CPU Time":120459247,"Peak Execution Memory":262144,"Result Size":2893,"JVM GC Time":15,"Result Serialization Time":8,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":22,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114378371,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114379621,"Failed":false,"Killed":false,"Accumulables":[{"ID":484,"Name":"scan time","Update":"1040","Value":"2974","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"duration","Update":"1158","Value":"3354","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"peak memory","Update":"262144","Value":"786432","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":554,"Name":"time in aggregation build","Update":"1042","Value":"2985","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":560,"Name":"internal.metrics.executorDeserializeTime","Update":47,"Value":145,"Internal":true,"Count Failed Values":true},{"ID":561,"Name":"internal.metrics.executorDeserializeCpuTime","Update":31548869,"Value":85621418,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.executorRunTime","Update":1190,"Value":3481,"Internal":true,"Count Failed Values":true},{"ID":563,"Name":"internal.metrics.executorCpuTime","Update":117316456,"Value":396417408,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.resultSize","Update":2893,"Value":8679,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.jvmGCTime","Update":18,"Value":51,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":786432,"Internal":true,"Count Failed Values":true},{"ID":591,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":5397,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":140183192,"JVMOffHeapMemory":107199256,"OnHeapExecutionMemory":67633120,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":486036,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":68119156,"OffHeapUnifiedMemory":0,"DirectPoolMemory":23134227,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":11,"MinorGCTime":69,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":69},"Task Metrics":{"Executor Deserialize Time":47,"Executor Deserialize CPU Time":31548869,"Executor Run Time":1190,"Executor CPU Time":117316456,"Peak Execution Memory":262144,"Result Size":2893,"JVM GC Time":18,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":18,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114378371,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114379704,"Failed":false,"Killed":false,"Accumulables":[{"ID":484,"Name":"scan time","Update":"1100","Value":"4074","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"duration","Update":"1232","Value":"4586","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"peak memory","Update":"262144","Value":"1048576","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":554,"Name":"time in aggregation build","Update":"1100","Value":"4085","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":560,"Name":"internal.metrics.executorDeserializeTime","Update":51,"Value":196,"Internal":true,"Count Failed Values":true},{"ID":561,"Name":"internal.metrics.executorDeserializeCpuTime","Update":21521921,"Value":107143339,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.executorRunTime","Update":1270,"Value":4751,"Internal":true,"Count Failed Values":true},{"ID":563,"Name":"internal.metrics.executorCpuTime","Update":77447084,"Value":473864492,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.resultSize","Update":2893,"Value":11572,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.jvmGCTime","Update":21,"Value":72,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.resultSerializationTime","Update":3,"Value":19,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":1048576,"Internal":true,"Count Failed Values":true},{"ID":591,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":7196,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":143812064,"JVMOffHeapMemory":100378864,"OnHeapExecutionMemory":67633120,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":486036,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":68119156,"OffHeapUnifiedMemory":0,"DirectPoolMemory":25194493,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":9,"MinorGCTime":49,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":49},"Task Metrics":{"Executor Deserialize Time":51,"Executor Deserialize CPU Time":21521921,"Executor Run Time":1270,"Executor CPU Time":77447084,"Peak Execution Memory":262144,"Result Size":2893,"JVM GC Time":21,"Result Serialization Time":3,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":20,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114378371,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114379704,"Failed":false,"Killed":false,"Accumulables":[{"ID":484,"Name":"scan time","Update":"1101","Value":"5175","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"duration","Update":"1226","Value":"5812","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"peak memory","Update":"262144","Value":"1310720","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":554,"Name":"time in aggregation build","Update":"1101","Value":"5186","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":560,"Name":"internal.metrics.executorDeserializeTime","Update":49,"Value":245,"Internal":true,"Count Failed Values":true},{"ID":561,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14338210,"Value":121481549,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.executorRunTime","Update":1274,"Value":6025,"Internal":true,"Count Failed Values":true},{"ID":563,"Name":"internal.metrics.executorCpuTime","Update":93835457,"Value":567699949,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.resultSize","Update":2850,"Value":14422,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.jvmGCTime","Update":15,"Value":87,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":1310720,"Internal":true,"Count Failed Values":true},{"ID":591,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":8995,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":49,"Executor Deserialize CPU Time":14338210,"Executor Run Time":1274,"Executor CPU Time":93835457,"Peak Execution Memory":262144,"Result Size":2850,"JVM GC Time":15,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":9,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":19,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114378371,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114382564,"Failed":false,"Killed":false,"Accumulables":[{"ID":483,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":484,"Name":"scan time","Update":"3623","Value":"8798","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":528,"Name":"data size","Update":"10692960","Value":"10692960","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle bytes written","Update":"5916183","Value":"5916183","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"shuffle records written","Update":"222770","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"shuffle write time","Update":"26841657","Value":"26841657","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"duration","Update":"4079","Value":"9891","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":551,"Name":"number of output rows","Update":"222770","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"peak memory","Update":"41943024","Value":"43253744","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":554,"Name":"time in aggregation build","Update":"3881","Value":"9067","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":555,"Name":"avg hash probes per key","Update":"13","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":557,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":558,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":559,"Name":"number of input batches","Update":"144","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":560,"Name":"internal.metrics.executorDeserializeTime","Update":52,"Value":297,"Internal":true,"Count Failed Values":true},{"ID":561,"Name":"internal.metrics.executorDeserializeCpuTime","Update":10871254,"Value":132352803,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.executorRunTime","Update":4134,"Value":10159,"Internal":true,"Count Failed Values":true},{"ID":563,"Name":"internal.metrics.executorCpuTime","Update":535587275,"Value":1103287224,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.resultSize","Update":3022,"Value":17444,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.jvmGCTime","Update":31,"Value":118,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.peakExecutionMemory","Update":41943024,"Value":43253744,"Internal":true,"Count Failed Values":true},{"ID":588,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":5916183,"Value":5916183,"Internal":true,"Count Failed Values":true},{"ID":589,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":222770,"Value":222770,"Internal":true,"Count Failed Values":true},{"ID":590,"Name":"internal.metrics.shuffle.write.writeTime","Update":26841657,"Value":26841657,"Internal":true,"Count Failed Values":true},{"ID":591,"Name":"internal.metrics.input.bytesRead","Update":13921662,"Value":13930657,"Internal":true,"Count Failed Values":true},{"ID":592,"Name":"internal.metrics.input.recordsRead","Update":586579,"Value":586579,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":140183192,"JVMOffHeapMemory":107199256,"OnHeapExecutionMemory":67633120,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":486036,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":68119156,"OffHeapUnifiedMemory":0,"DirectPoolMemory":23134227,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":11,"MinorGCTime":69,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":69},"Task Metrics":{"Executor Deserialize Time":52,"Executor Deserialize CPU Time":10871254,"Executor Run Time":4134,"Executor CPU Time":535587275,"Peak Execution Memory":41943024,"Result Size":3022,"JVM GC Time":31,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":5916183,"Shuffle Write Time":26841657,"Shuffle Records Written":222770},"Input Metrics":{"Bytes Read":13921662,"Records Read":586579},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":6,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"57\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"FileScanRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"58\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720114378367,"Completion Time":1720114382565,"Accumulables":[{"ID":483,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":484,"Name":"scan time","Value":"8798","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":528,"Name":"data size","Value":"10692960","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":547,"Name":"shuffle bytes written","Value":"5916183","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":548,"Name":"shuffle records written","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":549,"Name":"shuffle write time","Value":"26841657","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":550,"Name":"duration","Value":"9891","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":551,"Name":"number of output rows","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":552,"Name":"peak memory","Value":"43253744","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":554,"Name":"time in aggregation build","Value":"9067","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":555,"Name":"avg hash probes per key","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":557,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":558,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":559,"Name":"number of input batches","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":560,"Name":"internal.metrics.executorDeserializeTime","Value":297,"Internal":true,"Count Failed Values":true},{"ID":561,"Name":"internal.metrics.executorDeserializeCpuTime","Value":132352803,"Internal":true,"Count Failed Values":true},{"ID":562,"Name":"internal.metrics.executorRunTime","Value":10159,"Internal":true,"Count Failed Values":true},{"ID":563,"Name":"internal.metrics.executorCpuTime","Value":1103287224,"Internal":true,"Count Failed Values":true},{"ID":564,"Name":"internal.metrics.resultSize","Value":17444,"Internal":true,"Count Failed Values":true},{"ID":565,"Name":"internal.metrics.jvmGCTime","Value":118,"Internal":true,"Count Failed Values":true},{"ID":566,"Name":"internal.metrics.resultSerializationTime","Value":19,"Internal":true,"Count Failed Values":true},{"ID":569,"Name":"internal.metrics.peakExecutionMemory","Value":43253744,"Internal":true,"Count Failed Values":true},{"ID":588,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":5916183,"Internal":true,"Count Failed Values":true},{"ID":589,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":222770,"Internal":true,"Count Failed Values":true},{"ID":590,"Name":"internal.metrics.shuffle.write.writeTime","Value":26841657,"Internal":true,"Count Failed Values":true},{"ID":591,"Name":"internal.metrics.input.bytesRead","Value":13930657,"Internal":true,"Count Failed Values":true},{"ID":592,"Name":"internal.metrics.input.recordsRead","Value":586579,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":7,"Completion Time":1720114382565,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":2,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (20)\n+- == Current Plan ==\n   HashAggregate (12)\n   +- ShuffleQueryStage (11)\n      +- Exchange (10)\n         +- * HashAggregate (9)\n            +- * HashAggregate (8)\n               +- AQEShuffleRead (7)\n                  +- ShuffleQueryStage (6), Statistics(sizeInBytes=10.2 MiB, rowCount=2.23E+5)\n                     +- Exchange (5)\n                        +- * HashAggregate (4)\n                           +- * Filter (3)\n                              +- * ColumnarToRow (2)\n                                 +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (19)\n   +- Exchange (18)\n      +- HashAggregate (17)\n         +- HashAggregate (16)\n            +- Exchange (15)\n               +- HashAggregate (14)\n                  +- Filter (13)\n                     +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [1]: [business_id#0]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nPushedFilters: [IsNotNull(business_id)]\nReadSchema: struct<business_id:string>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [1]: [business_id#0]\n\n(3) Filter [codegen id : 1]\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(4) HashAggregate [codegen id : 1]\nInput [1]: [business_id#0]\nKeys [1]: [business_id#0]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#132L]\nResults [2]: [business_id#0, count#133L]\n\n(5) Exchange\nInput [2]: [business_id#0, count#133L]\nArguments: hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=141]\n\n(6) ShuffleQueryStage\nOutput [2]: [business_id#0, count#133L]\nArguments: 0\n\n(7) AQEShuffleRead\nInput [2]: [business_id#0, count#133L]\nArguments: coalesced\n\n(8) HashAggregate [codegen id : 2]\nInput [2]: [business_id#0, count#133L]\nKeys [1]: [business_id#0]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#109L]\nResults [1]: [count(1)#109L AS com_amazon_deequ_dq_metrics_count#110L]\n\n(9) HashAggregate [codegen id : 2]\nInput [1]: [com_amazon_deequ_dq_metrics_count#110L]\nKeys: []\nFunctions [1]: [partial_sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))]\nAggregate Attributes [1]: [sum#130]\nResults [1]: [sum#131]\n\n(10) Exchange\nInput [1]: [sum#131]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=177]\n\n(11) ShuffleQueryStage\nOutput [1]: [sum#131]\nArguments: 1\n\n(12) HashAggregate\nInput [1]: [sum#131]\nKeys: []\nFunctions [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))]\nAggregate Attributes [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))#124]\nResults [1]: [(sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))#124 / 586579.0) AS (sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#128]\n\n(13) Filter\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(14) HashAggregate\nInput [1]: [business_id#0]\nKeys [1]: [business_id#0]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#132L]\nResults [2]: [business_id#0, count#133L]\n\n(15) Exchange\nInput [2]: [business_id#0, count#133L]\nArguments: hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=114]\n\n(16) HashAggregate\nInput [2]: [business_id#0, count#133L]\nKeys [1]: [business_id#0]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#109L]\nResults [1]: [count(1)#109L AS com_amazon_deequ_dq_metrics_count#110L]\n\n(17) HashAggregate\nInput [1]: [com_amazon_deequ_dq_metrics_count#110L]\nKeys: []\nFunctions [1]: [partial_sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))]\nAggregate Attributes [1]: [sum#130]\nResults [1]: [sum#131]\n\n(18) Exchange\nInput [1]: [sum#131]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=118]\n\n(19) HashAggregate\nInput [1]: [sum#131]\nKeys: []\nFunctions [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))]\nAggregate Attributes [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))#124]\nResults [1]: [(sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))#124 / 586579.0) AS (sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#128]\n\n(20) AdaptiveSparkPlan\nOutput [1]: [(sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#128]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 1","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=177]","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=141]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(business_id#0)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0] Batched: true, DataFilters: [isnotnull(business_id#0)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [IsNotNull(business_id)], ReadSchema: struct<business_id:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(business_id)]","DataFilters":"[isnotnull(business_id#0)]"},"metrics":[{"name":"number of files read","accumulatorId":485,"metricType":"sum"},{"name":"scan time","accumulatorId":484,"metricType":"timing"},{"name":"metadata time","accumulatorId":486,"metricType":"timing"},{"name":"size of files read","accumulatorId":487,"metricType":"size"},{"name":"number of output rows","accumulatorId":483,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":558,"metricType":"sum"},{"name":"number of input batches","accumulatorId":559,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":557,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":553,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":554,"metricType":"timing"},{"name":"peak memory","accumulatorId":552,"metricType":"size"},{"name":"number of output rows","accumulatorId":551,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":556,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":555,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":550,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":548,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":542,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":549,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":543,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":540,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":537,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":546,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":539,"metricType":"sum"},{"name":"records read","accumulatorId":536,"metricType":"sum"},{"name":"local bytes read","accumulatorId":534,"metricType":"size"},{"name":"fetch wait time","accumulatorId":535,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":532,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":538,"metricType":"sum"},{"name":"local blocks read","accumulatorId":531,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":541,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":530,"metricType":"sum"},{"name":"data size","accumulatorId":528,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":544,"metricType":"size"},{"name":"number of partitions","accumulatorId":529,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":545,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":533,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":547,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":636,"metricType":"sum"},{"name":"partition data size","accumulatorId":637,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":638,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":632,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":633,"metricType":"timing"},{"name":"peak memory","accumulatorId":631,"metricType":"size"},{"name":"number of output rows","accumulatorId":630,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":635,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":634,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":626,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":627,"metricType":"timing"},{"name":"peak memory","accumulatorId":625,"metricType":"size"},{"name":"number of output rows","accumulatorId":624,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":629,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":628,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":623,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":621,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":615,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":622,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":616,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":613,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":610,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":619,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":612,"metricType":"sum"},{"name":"records read","accumulatorId":609,"metricType":"sum"},{"name":"local bytes read","accumulatorId":607,"metricType":"size"},{"name":"fetch wait time","accumulatorId":608,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":605,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":611,"metricType":"sum"},{"name":"local blocks read","accumulatorId":604,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":614,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":603,"metricType":"sum"},{"name":"data size","accumulatorId":601,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":617,"metricType":"size"},{"name":"number of partitions","accumulatorId":602,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":618,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":606,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":620,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":597,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":598,"metricType":"timing"},{"name":"peak memory","accumulatorId":596,"metricType":"size"},{"name":"number of output rows","accumulatorId":595,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":600,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":599,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[636,5],[638,5],[637,1072267],[637,1048932],[637,1048636],[637,1057498],[637,1964347]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[602,1]]}
{"Event":"SparkListenerJobStart","Job ID":8,"Submission Time":1720114382610,"Stage Infos":[{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":6,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"57\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"FileScanRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"58\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":5,"RDD Info":[{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"64\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"69\",\"name\":\"AQEShuffleRead\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"65\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[10],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[10,11],"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"64\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"2","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"2","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":5,"RDD Info":[{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"64\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"69\",\"name\":\"AQEShuffleRead\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"65\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[10],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720114382615,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"64\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"2","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"2","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":11,"Stage Attempt ID":0,"Task Info":{"Task ID":23,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114382621,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":11,"Stage Attempt ID":0,"Task Info":{"Task ID":24,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114382621,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":11,"Stage Attempt ID":0,"Task Info":{"Task ID":25,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114382829,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":11,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":23,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114382621,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114382830,"Failed":false,"Killed":false,"Accumulables":[{"ID":531,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":534,"Name":"local bytes read","Update":"1031257","Value":"1031257","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":535,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":536,"Name":"records read","Update":"38816","Value":"38816","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":601,"Name":"data size","Update":"16","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":620,"Name":"shuffle bytes written","Update":"56","Value":"56","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":621,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":622,"Name":"shuffle write time","Update":"291585","Value":"291585","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":623,"Name":"duration","Update":"126","Value":"126","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":624,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":627,"Name":"time in aggregation build","Update":"125","Value":"125","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":630,"Name":"number of output rows","Update":"38816","Value":"38816","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":631,"Name":"peak memory","Update":"35651568","Value":"35651568","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":633,"Name":"time in aggregation build","Update":"103","Value":"103","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":634,"Name":"avg hash probes per key","Update":"16","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":639,"Name":"internal.metrics.executorDeserializeTime","Update":56,"Value":56,"Internal":true,"Count Failed Values":true},{"ID":640,"Name":"internal.metrics.executorDeserializeCpuTime","Update":24437959,"Value":24437959,"Internal":true,"Count Failed Values":true},{"ID":641,"Name":"internal.metrics.executorRunTime","Update":147,"Value":147,"Internal":true,"Count Failed Values":true},{"ID":642,"Name":"internal.metrics.executorCpuTime","Update":138619789,"Value":138619789,"Internal":true,"Count Failed Values":true},{"ID":643,"Name":"internal.metrics.resultSize","Update":5852,"Value":5852,"Internal":true,"Count Failed Values":true},{"ID":648,"Name":"internal.metrics.peakExecutionMemory","Update":35651568,"Value":35651568,"Internal":true,"Count Failed Values":true},{"ID":650,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":651,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":652,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":653,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":654,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1031257,"Value":1031257,"Internal":true,"Count Failed Values":true},{"ID":655,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":656,"Name":"internal.metrics.shuffle.read.recordsRead","Update":38816,"Value":38816,"Internal":true,"Count Failed Values":true},{"ID":657,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":658,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":659,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":660,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":661,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":662,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":663,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":664,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":665,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":666,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":667,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":56,"Internal":true,"Count Failed Values":true},{"ID":668,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":669,"Name":"internal.metrics.shuffle.write.writeTime","Update":291585,"Value":291585,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":56,"Executor Deserialize CPU Time":24437959,"Executor Run Time":147,"Executor CPU Time":138619789,"Peak Execution Memory":35651568,"Result Size":5852,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1031257,"Total Records Read":38816,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":291585,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":11,"Stage Attempt ID":0,"Task Info":{"Task ID":26,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114382830,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":11,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":24,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114382621,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114382831,"Failed":false,"Killed":false,"Accumulables":[{"ID":531,"Name":"local blocks read","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":534,"Name":"local bytes read","Update":"1004411","Value":"2035668","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":535,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":536,"Name":"records read","Update":"37813","Value":"76629","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":601,"Name":"data size","Update":"16","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":620,"Name":"shuffle bytes written","Update":"56","Value":"112","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":621,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":622,"Name":"shuffle write time","Update":"279374","Value":"570959","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":623,"Name":"duration","Update":"126","Value":"252","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":624,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":627,"Name":"time in aggregation build","Update":"126","Value":"251","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":630,"Name":"number of output rows","Update":"37813","Value":"76629","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":631,"Name":"peak memory","Update":"35651568","Value":"71303136","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":633,"Name":"time in aggregation build","Update":"103","Value":"206","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":634,"Name":"avg hash probes per key","Update":"16","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":639,"Name":"internal.metrics.executorDeserializeTime","Update":56,"Value":112,"Internal":true,"Count Failed Values":true},{"ID":640,"Name":"internal.metrics.executorDeserializeCpuTime","Update":22057411,"Value":46495370,"Internal":true,"Count Failed Values":true},{"ID":641,"Name":"internal.metrics.executorRunTime","Update":147,"Value":294,"Internal":true,"Count Failed Values":true},{"ID":642,"Name":"internal.metrics.executorCpuTime","Update":128879039,"Value":267498828,"Internal":true,"Count Failed Values":true},{"ID":643,"Name":"internal.metrics.resultSize","Update":5852,"Value":11704,"Internal":true,"Count Failed Values":true},{"ID":648,"Name":"internal.metrics.peakExecutionMemory","Update":35651568,"Value":71303136,"Internal":true,"Count Failed Values":true},{"ID":650,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":651,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":652,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":653,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":654,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1004411,"Value":2035668,"Internal":true,"Count Failed Values":true},{"ID":655,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":656,"Name":"internal.metrics.shuffle.read.recordsRead","Update":37813,"Value":76629,"Internal":true,"Count Failed Values":true},{"ID":657,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":658,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":659,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":660,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":661,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":662,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":663,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":664,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":665,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":666,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":667,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":112,"Internal":true,"Count Failed Values":true},{"ID":668,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":669,"Name":"internal.metrics.shuffle.write.writeTime","Update":279374,"Value":570959,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":56,"Executor Deserialize CPU Time":22057411,"Executor Run Time":147,"Executor CPU Time":128879039,"Peak Execution Memory":35651568,"Result Size":5852,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1004411,"Total Records Read":37813,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":279374,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":11,"Stage Attempt ID":0,"Task Info":{"Task ID":27,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114382861,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":11,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":26,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114382830,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114382862,"Failed":false,"Killed":false,"Accumulables":[{"ID":531,"Name":"local blocks read","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":534,"Name":"local bytes read","Update":"1006861","Value":"3042529","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":535,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":536,"Name":"records read","Update":"37914","Value":"114543","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":601,"Name":"data size","Update":"16","Value":"48","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":620,"Name":"shuffle bytes written","Update":"56","Value":"168","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":621,"Name":"shuffle records written","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":622,"Name":"shuffle write time","Update":"215415","Value":"786374","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":623,"Name":"duration","Update":"19","Value":"271","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":624,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":627,"Name":"time in aggregation build","Update":"19","Value":"270","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":630,"Name":"number of output rows","Update":"37914","Value":"114543","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":631,"Name":"peak memory","Update":"35651568","Value":"106954704","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":633,"Name":"time in aggregation build","Update":"14","Value":"220","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":634,"Name":"avg hash probes per key","Update":"15","Value":"47","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":639,"Name":"internal.metrics.executorDeserializeTime","Update":4,"Value":116,"Internal":true,"Count Failed Values":true},{"ID":640,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4207251,"Value":50702621,"Internal":true,"Count Failed Values":true},{"ID":641,"Name":"internal.metrics.executorRunTime","Update":22,"Value":316,"Internal":true,"Count Failed Values":true},{"ID":642,"Name":"internal.metrics.executorCpuTime","Update":22078001,"Value":289576829,"Internal":true,"Count Failed Values":true},{"ID":643,"Name":"internal.metrics.resultSize","Update":5852,"Value":17556,"Internal":true,"Count Failed Values":true},{"ID":648,"Name":"internal.metrics.peakExecutionMemory","Update":35651568,"Value":106954704,"Internal":true,"Count Failed Values":true},{"ID":650,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":651,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":652,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":653,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":654,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1006861,"Value":3042529,"Internal":true,"Count Failed Values":true},{"ID":655,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":656,"Name":"internal.metrics.shuffle.read.recordsRead","Update":37914,"Value":114543,"Internal":true,"Count Failed Values":true},{"ID":657,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":658,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":659,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":660,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":661,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":662,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":663,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":664,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":665,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":666,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":667,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":168,"Internal":true,"Count Failed Values":true},{"ID":668,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":669,"Name":"internal.metrics.shuffle.write.writeTime","Update":215415,"Value":786374,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":4,"Executor Deserialize CPU Time":4207251,"Executor Run Time":22,"Executor CPU Time":22078001,"Peak Execution Memory":35651568,"Result Size":5852,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1006861,"Total Records Read":37914,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":215415,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":11,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":25,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114382829,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114382863,"Failed":false,"Killed":false,"Accumulables":[{"ID":531,"Name":"local blocks read","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":534,"Name":"local bytes read","Update":"1001272","Value":"4043801","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":535,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":536,"Name":"records read","Update":"37708","Value":"152251","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":601,"Name":"data size","Update":"16","Value":"64","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":620,"Name":"shuffle bytes written","Update":"56","Value":"224","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":621,"Name":"shuffle records written","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":622,"Name":"shuffle write time","Update":"219584","Value":"1005958","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":623,"Name":"duration","Update":"17","Value":"288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":624,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":627,"Name":"time in aggregation build","Update":"17","Value":"287","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":630,"Name":"number of output rows","Update":"37708","Value":"152251","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":631,"Name":"peak memory","Update":"35651568","Value":"142606272","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":633,"Name":"time in aggregation build","Update":"13","Value":"233","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":634,"Name":"avg hash probes per key","Update":"16","Value":"63","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":639,"Name":"internal.metrics.executorDeserializeTime","Update":6,"Value":122,"Internal":true,"Count Failed Values":true},{"ID":640,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4542749,"Value":55245370,"Internal":true,"Count Failed Values":true},{"ID":641,"Name":"internal.metrics.executorRunTime","Update":22,"Value":338,"Internal":true,"Count Failed Values":true},{"ID":642,"Name":"internal.metrics.executorCpuTime","Update":19876040,"Value":309452869,"Internal":true,"Count Failed Values":true},{"ID":643,"Name":"internal.metrics.resultSize","Update":5852,"Value":23408,"Internal":true,"Count Failed Values":true},{"ID":648,"Name":"internal.metrics.peakExecutionMemory","Update":35651568,"Value":142606272,"Internal":true,"Count Failed Values":true},{"ID":650,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":651,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":652,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":653,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":654,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1001272,"Value":4043801,"Internal":true,"Count Failed Values":true},{"ID":655,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":656,"Name":"internal.metrics.shuffle.read.recordsRead","Update":37708,"Value":152251,"Internal":true,"Count Failed Values":true},{"ID":657,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":658,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":659,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":660,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":661,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":662,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":663,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":664,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":665,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":666,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":667,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":224,"Internal":true,"Count Failed Values":true},{"ID":668,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":669,"Name":"internal.metrics.shuffle.write.writeTime","Update":219584,"Value":1005958,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":6,"Executor Deserialize CPU Time":4542749,"Executor Run Time":22,"Executor CPU Time":19876040,"Peak Execution Memory":35651568,"Result Size":5852,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1001272,"Total Records Read":37708,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":219584,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":11,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":27,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114382861,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114382886,"Failed":false,"Killed":false,"Accumulables":[{"ID":531,"Name":"local blocks read","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":534,"Name":"local bytes read","Update":"1872382","Value":"5916183","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":535,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":536,"Name":"records read","Update":"70519","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":601,"Name":"data size","Update":"16","Value":"80","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":620,"Name":"shuffle bytes written","Update":"56","Value":"280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":621,"Name":"shuffle records written","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":622,"Name":"shuffle write time","Update":"267125","Value":"1273083","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":623,"Name":"duration","Update":"16","Value":"304","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":624,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":627,"Name":"time in aggregation build","Update":"15","Value":"302","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":630,"Name":"number of output rows","Update":"70519","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":631,"Name":"peak memory","Update":"37748720","Value":"180354992","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":633,"Name":"time in aggregation build","Update":"11","Value":"244","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":634,"Name":"avg hash probes per key","Update":"16","Value":"79","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":639,"Name":"internal.metrics.executorDeserializeTime","Update":2,"Value":124,"Internal":true,"Count Failed Values":true},{"ID":640,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2228583,"Value":57473953,"Internal":true,"Count Failed Values":true},{"ID":641,"Name":"internal.metrics.executorRunTime","Update":18,"Value":356,"Internal":true,"Count Failed Values":true},{"ID":642,"Name":"internal.metrics.executorCpuTime","Update":17683708,"Value":327136577,"Internal":true,"Count Failed Values":true},{"ID":643,"Name":"internal.metrics.resultSize","Update":5852,"Value":29260,"Internal":true,"Count Failed Values":true},{"ID":648,"Name":"internal.metrics.peakExecutionMemory","Update":37748720,"Value":180354992,"Internal":true,"Count Failed Values":true},{"ID":650,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":651,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":652,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":653,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":654,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1872382,"Value":5916183,"Internal":true,"Count Failed Values":true},{"ID":655,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":656,"Name":"internal.metrics.shuffle.read.recordsRead","Update":70519,"Value":222770,"Internal":true,"Count Failed Values":true},{"ID":657,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":658,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":659,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":660,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":661,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":662,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":663,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":664,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":665,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":666,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":667,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":56,"Value":280,"Internal":true,"Count Failed Values":true},{"ID":668,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":669,"Name":"internal.metrics.shuffle.write.writeTime","Update":267125,"Value":1273083,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":2,"Executor Deserialize CPU Time":2228583,"Executor Run Time":18,"Executor CPU Time":17683708,"Peak Execution Memory":37748720,"Result Size":5852,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1872382,"Total Records Read":70519,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":56,"Shuffle Write Time":267125,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":5,"RDD Info":[{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"64\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"69\",\"name\":\"AQEShuffleRead\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"65\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[10],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720114382615,"Completion Time":1720114382887,"Accumulables":[{"ID":531,"Name":"local blocks read","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":534,"Name":"local bytes read","Value":"5916183","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":535,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":536,"Name":"records read","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":601,"Name":"data size","Value":"80","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":620,"Name":"shuffle bytes written","Value":"280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":621,"Name":"shuffle records written","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":622,"Name":"shuffle write time","Value":"1273083","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":623,"Name":"duration","Value":"304","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":624,"Name":"number of output rows","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":627,"Name":"time in aggregation build","Value":"302","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":630,"Name":"number of output rows","Value":"222770","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":631,"Name":"peak memory","Value":"180354992","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":633,"Name":"time in aggregation build","Value":"244","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":634,"Name":"avg hash probes per key","Value":"79","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":639,"Name":"internal.metrics.executorDeserializeTime","Value":124,"Internal":true,"Count Failed Values":true},{"ID":640,"Name":"internal.metrics.executorDeserializeCpuTime","Value":57473953,"Internal":true,"Count Failed Values":true},{"ID":641,"Name":"internal.metrics.executorRunTime","Value":356,"Internal":true,"Count Failed Values":true},{"ID":642,"Name":"internal.metrics.executorCpuTime","Value":327136577,"Internal":true,"Count Failed Values":true},{"ID":643,"Name":"internal.metrics.resultSize","Value":29260,"Internal":true,"Count Failed Values":true},{"ID":648,"Name":"internal.metrics.peakExecutionMemory","Value":180354992,"Internal":true,"Count Failed Values":true},{"ID":650,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":651,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":5,"Internal":true,"Count Failed Values":true},{"ID":652,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":653,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":654,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":5916183,"Internal":true,"Count Failed Values":true},{"ID":655,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":656,"Name":"internal.metrics.shuffle.read.recordsRead","Value":222770,"Internal":true,"Count Failed Values":true},{"ID":657,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":658,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":659,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":660,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":661,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":662,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":663,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":664,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":665,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":666,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":667,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":280,"Internal":true,"Count Failed Values":true},{"ID":668,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":5,"Internal":true,"Count Failed Values":true},{"ID":669,"Name":"internal.metrics.shuffle.write.writeTime","Value":1273083,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":8,"Completion Time":1720114382887,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":2,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (20)\n+- == Final Plan ==\n   * HashAggregate (12)\n   +- ShuffleQueryStage (11), Statistics(sizeInBytes=80.0 B, rowCount=5)\n      +- Exchange (10)\n         +- * HashAggregate (9)\n            +- * HashAggregate (8)\n               +- AQEShuffleRead (7)\n                  +- ShuffleQueryStage (6), Statistics(sizeInBytes=10.2 MiB, rowCount=2.23E+5)\n                     +- Exchange (5)\n                        +- * HashAggregate (4)\n                           +- * Filter (3)\n                              +- * ColumnarToRow (2)\n                                 +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (19)\n   +- Exchange (18)\n      +- HashAggregate (17)\n         +- HashAggregate (16)\n            +- Exchange (15)\n               +- HashAggregate (14)\n                  +- Filter (13)\n                     +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [1]: [business_id#0]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nPushedFilters: [IsNotNull(business_id)]\nReadSchema: struct<business_id:string>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [1]: [business_id#0]\n\n(3) Filter [codegen id : 1]\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(4) HashAggregate [codegen id : 1]\nInput [1]: [business_id#0]\nKeys [1]: [business_id#0]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#132L]\nResults [2]: [business_id#0, count#133L]\n\n(5) Exchange\nInput [2]: [business_id#0, count#133L]\nArguments: hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=141]\n\n(6) ShuffleQueryStage\nOutput [2]: [business_id#0, count#133L]\nArguments: 0\n\n(7) AQEShuffleRead\nInput [2]: [business_id#0, count#133L]\nArguments: coalesced\n\n(8) HashAggregate [codegen id : 2]\nInput [2]: [business_id#0, count#133L]\nKeys [1]: [business_id#0]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#109L]\nResults [1]: [count(1)#109L AS com_amazon_deequ_dq_metrics_count#110L]\n\n(9) HashAggregate [codegen id : 2]\nInput [1]: [com_amazon_deequ_dq_metrics_count#110L]\nKeys: []\nFunctions [1]: [partial_sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))]\nAggregate Attributes [1]: [sum#130]\nResults [1]: [sum#131]\n\n(10) Exchange\nInput [1]: [sum#131]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=177]\n\n(11) ShuffleQueryStage\nOutput [1]: [sum#131]\nArguments: 1\n\n(12) HashAggregate [codegen id : 3]\nInput [1]: [sum#131]\nKeys: []\nFunctions [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))]\nAggregate Attributes [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))#124]\nResults [1]: [(sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))#124 / 586579.0) AS (sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#128]\n\n(13) Filter\nInput [1]: [business_id#0]\nCondition : isnotnull(business_id#0)\n\n(14) HashAggregate\nInput [1]: [business_id#0]\nKeys [1]: [business_id#0]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#132L]\nResults [2]: [business_id#0, count#133L]\n\n(15) Exchange\nInput [2]: [business_id#0, count#133L]\nArguments: hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=114]\n\n(16) HashAggregate\nInput [2]: [business_id#0, count#133L]\nKeys [1]: [business_id#0]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#109L]\nResults [1]: [count(1)#109L AS com_amazon_deequ_dq_metrics_count#110L]\n\n(17) HashAggregate\nInput [1]: [com_amazon_deequ_dq_metrics_count#110L]\nKeys: []\nFunctions [1]: [partial_sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))]\nAggregate Attributes [1]: [sum#130]\nResults [1]: [sum#131]\n\n(18) Exchange\nInput [1]: [sum#131]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=118]\n\n(19) HashAggregate\nInput [1]: [sum#131]\nKeys: []\nFunctions [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))]\nAggregate Attributes [1]: [sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))#124]\nResults [1]: [(sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))#124 / 586579.0) AS (sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#128]\n\n(20) AdaptiveSparkPlan\nOutput [1]: [(sum(CAST((com_amazon_deequ_dq_metrics_count = 1) AS DOUBLE)) / 586579)#128]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (3)","simpleString":"WholeStageCodegen (3)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 1","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=177]","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast((com_amazon_deequ_dq_metrics_count#110L = 1) as double))])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(business_id#0, 200), ENSURE_REQUIREMENTS, [plan_id=141]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[business_id#0], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(business_id#0)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0] Batched: true, DataFilters: [isnotnull(business_id#0)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [IsNotNull(business_id)], ReadSchema: struct<business_id:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[IsNotNull(business_id)]","DataFilters":"[isnotnull(business_id#0)]"},"metrics":[{"name":"number of files read","accumulatorId":485,"metricType":"sum"},{"name":"scan time","accumulatorId":484,"metricType":"timing"},{"name":"metadata time","accumulatorId":486,"metricType":"timing"},{"name":"size of files read","accumulatorId":487,"metricType":"size"},{"name":"number of output rows","accumulatorId":483,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":558,"metricType":"sum"},{"name":"number of input batches","accumulatorId":559,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":557,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":553,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":554,"metricType":"timing"},{"name":"peak memory","accumulatorId":552,"metricType":"size"},{"name":"number of output rows","accumulatorId":551,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":556,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":555,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":550,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":548,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":542,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":549,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":543,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":540,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":537,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":546,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":539,"metricType":"sum"},{"name":"records read","accumulatorId":536,"metricType":"sum"},{"name":"local bytes read","accumulatorId":534,"metricType":"size"},{"name":"fetch wait time","accumulatorId":535,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":532,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":538,"metricType":"sum"},{"name":"local blocks read","accumulatorId":531,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":541,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":530,"metricType":"sum"},{"name":"data size","accumulatorId":528,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":544,"metricType":"size"},{"name":"number of partitions","accumulatorId":529,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":545,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":533,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":547,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":636,"metricType":"sum"},{"name":"partition data size","accumulatorId":637,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":638,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":632,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":633,"metricType":"timing"},{"name":"peak memory","accumulatorId":631,"metricType":"size"},{"name":"number of output rows","accumulatorId":630,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":635,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":634,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":626,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":627,"metricType":"timing"},{"name":"peak memory","accumulatorId":625,"metricType":"size"},{"name":"number of output rows","accumulatorId":624,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":629,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":628,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":623,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":621,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":615,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":622,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":616,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":613,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":610,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":619,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":612,"metricType":"sum"},{"name":"records read","accumulatorId":609,"metricType":"sum"},{"name":"local bytes read","accumulatorId":607,"metricType":"size"},{"name":"fetch wait time","accumulatorId":608,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":605,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":611,"metricType":"sum"},{"name":"local blocks read","accumulatorId":604,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":614,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":603,"metricType":"sum"},{"name":"data size","accumulatorId":601,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":617,"metricType":"size"},{"name":"number of partitions","accumulatorId":602,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":618,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":606,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":620,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":677,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":678,"metricType":"timing"},{"name":"peak memory","accumulatorId":676,"metricType":"size"},{"name":"number of output rows","accumulatorId":675,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":680,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":679,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":674,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":9,"Submission Time":1720114382907,"Stage Infos":[{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":6,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"57\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"FileScanRDD","Scope":"{\"id\":\"63\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"58\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":5,"RDD Info":[{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"64\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"69\",\"name\":\"AQEShuffleRead\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"65\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":5,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[12],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":1,"RDD Info":[{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"74\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[13],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[12,13,14],"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"76\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"2","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"2","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":1,"RDD Info":[{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"74\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[13],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720114382908,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"76\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"2","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"2","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":14,"Stage Attempt ID":0,"Task Info":{"Task ID":28,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114382910,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":14,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":28,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114382910,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114382944,"Failed":false,"Killed":false,"Accumulables":[{"ID":604,"Name":"local blocks read","Update":"5","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":607,"Name":"local bytes read","Update":"280","Value":"280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":608,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":609,"Name":"records read","Update":"5","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":674,"Name":"duration","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":675,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":678,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":681,"Name":"internal.metrics.executorDeserializeTime","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":682,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4146627,"Value":4146627,"Internal":true,"Count Failed Values":true},{"ID":683,"Name":"internal.metrics.executorRunTime","Update":22,"Value":22,"Internal":true,"Count Failed Values":true},{"ID":684,"Name":"internal.metrics.executorCpuTime","Update":10949292,"Value":10949292,"Internal":true,"Count Failed Values":true},{"ID":685,"Name":"internal.metrics.resultSize","Update":3995,"Value":3995,"Internal":true,"Count Failed Values":true},{"ID":692,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":693,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":694,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":695,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":696,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":280,"Value":280,"Internal":true,"Count Failed Values":true},{"ID":697,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":698,"Name":"internal.metrics.shuffle.read.recordsRead","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":699,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":704,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":705,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":706,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":707,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":708,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":7,"Executor Deserialize CPU Time":4146627,"Executor Run Time":22,"Executor CPU Time":10949292,"Peak Execution Memory":0,"Result Size":3995,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":5,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":280,"Total Records Read":5,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:524","Number of Tasks":1,"RDD Info":[{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"74\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:524","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[13],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runAnalyzersForParticularGrouping(AnalysisRunner.scala:524)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runGroupingAnalyzers(AnalysisRunner.scala:299)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10(AnalysisRunner.scala:188)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.$anonfun$doAnalysisRun$10$adapted(AnalysisRunner.scala:183)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:193)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:183)\ncom.amazon.deequ.VerificationSuite.doVerificationRun(VerificationSuite.scala:121)\ncom.amazon.deequ.VerificationRunBuilder.run(VerificationRunBuilder.scala:172)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)","Submission Time":1720114382908,"Completion Time":1720114382944,"Accumulables":[{"ID":604,"Name":"local blocks read","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":607,"Name":"local bytes read","Value":"280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":608,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":609,"Name":"records read","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":674,"Name":"duration","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":675,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":678,"Name":"time in aggregation build","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":681,"Name":"internal.metrics.executorDeserializeTime","Value":7,"Internal":true,"Count Failed Values":true},{"ID":682,"Name":"internal.metrics.executorDeserializeCpuTime","Value":4146627,"Internal":true,"Count Failed Values":true},{"ID":683,"Name":"internal.metrics.executorRunTime","Value":22,"Internal":true,"Count Failed Values":true},{"ID":684,"Name":"internal.metrics.executorCpuTime","Value":10949292,"Internal":true,"Count Failed Values":true},{"ID":685,"Name":"internal.metrics.resultSize","Value":3995,"Internal":true,"Count Failed Values":true},{"ID":692,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":693,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":5,"Internal":true,"Count Failed Values":true},{"ID":694,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":695,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":696,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":280,"Internal":true,"Count Failed Values":true},{"ID":697,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":698,"Name":"internal.metrics.shuffle.read.recordsRead","Value":5,"Internal":true,"Count Failed Values":true},{"ID":699,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":700,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":701,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":702,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":703,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":704,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":705,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":706,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":707,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":708,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":9,"Completion Time":1720114382944,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":2,"time":1720114382954,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":3,"rootExecutionId":3,"description":"showString at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [6]: [toprettystring(check)#176, toprettystring(check_level)#177, toprettystring(check_status)#178, toprettystring(constraint)#179, toprettystring(constraint_status)#180, toprettystring(constraint_message)#181]\nArguments: [toprettystring(check)#176, toprettystring(check_level)#177, toprettystring(check_status)#178, toprettystring(constraint)#179, toprettystring(constraint_status)#180, toprettystring(constraint_message)#181]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [toprettystring(check)#176, toprettystring(check_level)#177, toprettystring(check_status)#178, toprettystring(constraint)#179, toprettystring(constraint_status)#180, toprettystring(constraint_message)#181]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":716,"metricType":"sum"}]},"time":1720114383073,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[716,4]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":3,"time":1720114383090,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":4,"rootExecutionId":4,"description":"collect at AnalysisRunner.scala:327","details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (5)\n+- HashAggregate (4)\n   +- Exchange (3)\n      +- HashAggregate (2)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [2]: [business_id#0, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,stars:double>\n\n(2) HashAggregate\nInput [2]: [business_id#0, stars#7]\nKeys: []\nFunctions [5]: [partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)]\nAggregate Attributes [56]: [count#751L, sum#752L, MS[0]#537L, MS[1]#538L, MS[2]#539L, MS[3]#540L, MS[4]#541L, MS[5]#542L, MS[6]#543L, MS[7]#544L, MS[8]#545L, MS[9]#546L, MS[10]#547L, MS[11]#548L, MS[12]#549L, MS[13]#550L, MS[14]#551L, MS[15]#552L, MS[16]#553L, MS[17]#554L, MS[18]#555L, MS[19]#556L, MS[20]#557L, MS[21]#558L, MS[22]#559L, MS[23]#560L, MS[24]#561L, MS[25]#562L, MS[26]#563L, MS[27]#564L, MS[28]#565L, MS[29]#566L, MS[30]#567L, MS[31]#568L, MS[32]#569L, MS[33]#570L, MS[34]#571L, MS[35]#572L, MS[36]#573L, MS[37]#574L, MS[38]#575L, MS[39]#576L, MS[40]#577L, MS[41]#578L, MS[42]#579L, MS[43]#580L, MS[44]#581L, MS[45]#582L, MS[46]#583L, MS[47]#584L, MS[48]#585L, MS[49]#586L, MS[50]#587L, MS[51]#588L, sum#753, count#754L]\nResults [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\n\n(3) Exchange\nInput [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=206]\n\n(4) HashAggregate\nInput [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\nKeys: []\nFunctions [5]: [count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)]\nAggregate Attributes [5]: [count(1)#195L, sum(cast(isnotnull(business_id#0) as int))#197L, stateful_approx_count_distinct(business_id#0, 0, 0)#304, sum(stars#7)#305, count(stars#7)#306L]\nResults [6]: [count(1)#195L AS count(1)#427L, sum(cast(isnotnull(business_id#0) as int))#197L AS sum(CAST((business_id IS NOT NULL) AS INT))#428L, count(1)#195L AS count(1)#429L, stateful_approx_count_distinct(business_id#0, 0, 0)#304 AS stateful_approx_count_distinct(business_id)#534, sum(stars#7)#305 AS CAST(sum(stars) AS DOUBLE)#535, count(stars#7)#306L AS CAST(count(stars) AS BIGINT)#536L]\n\n(5) AdaptiveSparkPlan\nOutput [6]: [count(1)#427L, sum(CAST((business_id IS NOT NULL) AS INT))#428L, count(1)#429L, stateful_approx_count_distinct(business_id)#534, CAST(sum(stars) AS DOUBLE)#535, CAST(count(stars) AS BIGINT)#536L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=206]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)])","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":753,"metricType":"sum"},{"name":"scan time","accumulatorId":752,"metricType":"timing"},{"name":"metadata time","accumulatorId":754,"metricType":"timing"},{"name":"size of files read","accumulatorId":755,"metricType":"size"},{"name":"number of output rows","accumulatorId":751,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":747,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":748,"metricType":"timing"},{"name":"peak memory","accumulatorId":746,"metricType":"size"},{"name":"number of output rows","accumulatorId":745,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":750,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":749,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":743,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":737,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":744,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":738,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":735,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":732,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":741,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":734,"metricType":"sum"},{"name":"records read","accumulatorId":731,"metricType":"sum"},{"name":"local bytes read","accumulatorId":729,"metricType":"size"},{"name":"fetch wait time","accumulatorId":730,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":727,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":733,"metricType":"sum"},{"name":"local blocks read","accumulatorId":726,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":736,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":725,"metricType":"sum"},{"name":"data size","accumulatorId":723,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":739,"metricType":"size"},{"name":"number of partitions","accumulatorId":724,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":740,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":728,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":742,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":719,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":720,"metricType":"timing"},{"name":"peak memory","accumulatorId":718,"metricType":"size"},{"name":"number of output rows","accumulatorId":717,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":722,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":721,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1720114383127,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":4,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Current Plan ==\n   HashAggregate (6)\n   +- ShuffleQueryStage (5)\n      +- Exchange (4)\n         +- HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [2]: [business_id#0, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [2]: [business_id#0, stars#7]\n\n(3) HashAggregate\nInput [2]: [business_id#0, stars#7]\nKeys: []\nFunctions [5]: [partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)]\nAggregate Attributes [56]: [count#751L, sum#752L, MS[0]#537L, MS[1]#538L, MS[2]#539L, MS[3]#540L, MS[4]#541L, MS[5]#542L, MS[6]#543L, MS[7]#544L, MS[8]#545L, MS[9]#546L, MS[10]#547L, MS[11]#548L, MS[12]#549L, MS[13]#550L, MS[14]#551L, MS[15]#552L, MS[16]#553L, MS[17]#554L, MS[18]#555L, MS[19]#556L, MS[20]#557L, MS[21]#558L, MS[22]#559L, MS[23]#560L, MS[24]#561L, MS[25]#562L, MS[26]#563L, MS[27]#564L, MS[28]#565L, MS[29]#566L, MS[30]#567L, MS[31]#568L, MS[32]#569L, MS[33]#570L, MS[34]#571L, MS[35]#572L, MS[36]#573L, MS[37]#574L, MS[38]#575L, MS[39]#576L, MS[40]#577L, MS[41]#578L, MS[42]#579L, MS[43]#580L, MS[44]#581L, MS[45]#582L, MS[46]#583L, MS[47]#584L, MS[48]#585L, MS[49]#586L, MS[50]#587L, MS[51]#588L, sum#753, count#754L]\nResults [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\n\n(4) Exchange\nInput [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=219]\n\n(5) ShuffleQueryStage\nOutput [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\nArguments: 0\n\n(6) HashAggregate\nInput [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\nKeys: []\nFunctions [5]: [count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)]\nAggregate Attributes [5]: [count(1)#195L, sum(cast(isnotnull(business_id#0) as int))#197L, stateful_approx_count_distinct(business_id#0, 0, 0)#304, sum(stars#7)#305, count(stars#7)#306L]\nResults [6]: [count(1)#195L AS count(1)#427L, sum(cast(isnotnull(business_id#0) as int))#197L AS sum(CAST((business_id IS NOT NULL) AS INT))#428L, count(1)#195L AS count(1)#429L, stateful_approx_count_distinct(business_id#0, 0, 0)#304 AS stateful_approx_count_distinct(business_id)#534, sum(stars#7)#305 AS CAST(sum(stars) AS DOUBLE)#535, count(stars#7)#306L AS CAST(count(stars) AS BIGINT)#536L]\n\n(7) HashAggregate\nInput [2]: [business_id#0, stars#7]\nKeys: []\nFunctions [5]: [partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)]\nAggregate Attributes [56]: [count#751L, sum#752L, MS[0]#537L, MS[1]#538L, MS[2]#539L, MS[3]#540L, MS[4]#541L, MS[5]#542L, MS[6]#543L, MS[7]#544L, MS[8]#545L, MS[9]#546L, MS[10]#547L, MS[11]#548L, MS[12]#549L, MS[13]#550L, MS[14]#551L, MS[15]#552L, MS[16]#553L, MS[17]#554L, MS[18]#555L, MS[19]#556L, MS[20]#557L, MS[21]#558L, MS[22]#559L, MS[23]#560L, MS[24]#561L, MS[25]#562L, MS[26]#563L, MS[27]#564L, MS[28]#565L, MS[29]#566L, MS[30]#567L, MS[31]#568L, MS[32]#569L, MS[33]#570L, MS[34]#571L, MS[35]#572L, MS[36]#573L, MS[37]#574L, MS[38]#575L, MS[39]#576L, MS[40]#577L, MS[41]#578L, MS[42]#579L, MS[43]#580L, MS[44]#581L, MS[45]#582L, MS[46]#583L, MS[47]#584L, MS[48]#585L, MS[49]#586L, MS[50]#587L, MS[51]#588L, sum#753, count#754L]\nResults [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\n\n(8) Exchange\nInput [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=206]\n\n(9) HashAggregate\nInput [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\nKeys: []\nFunctions [5]: [count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)]\nAggregate Attributes [5]: [count(1)#195L, sum(cast(isnotnull(business_id#0) as int))#197L, stateful_approx_count_distinct(business_id#0, 0, 0)#304, sum(stars#7)#305, count(stars#7)#306L]\nResults [6]: [count(1)#195L AS count(1)#427L, sum(cast(isnotnull(business_id#0) as int))#197L AS sum(CAST((business_id IS NOT NULL) AS INT))#428L, count(1)#195L AS count(1)#429L, stateful_approx_count_distinct(business_id#0, 0, 0)#304 AS stateful_approx_count_distinct(business_id)#534, sum(stars#7)#305 AS CAST(sum(stars) AS DOUBLE)#535, count(stars#7)#306L AS CAST(count(stars) AS BIGINT)#536L]\n\n(10) AdaptiveSparkPlan\nOutput [6]: [count(1)#427L, sum(CAST((business_id IS NOT NULL) AS INT))#428L, count(1)#429L, stateful_approx_count_distinct(business_id)#534, CAST(sum(stars) AS DOUBLE)#535, CAST(count(stars) AS BIGINT)#536L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=219]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)])","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":753,"metricType":"sum"},{"name":"scan time","accumulatorId":752,"metricType":"timing"},{"name":"metadata time","accumulatorId":754,"metricType":"timing"},{"name":"size of files read","accumulatorId":755,"metricType":"size"},{"name":"number of output rows","accumulatorId":751,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":791,"metricType":"sum"},{"name":"number of input batches","accumulatorId":792,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":790,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":786,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":787,"metricType":"timing"},{"name":"peak memory","accumulatorId":785,"metricType":"size"},{"name":"number of output rows","accumulatorId":784,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":789,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":788,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":782,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":776,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":783,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":777,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":774,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":771,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":780,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":773,"metricType":"sum"},{"name":"records read","accumulatorId":770,"metricType":"sum"},{"name":"local bytes read","accumulatorId":768,"metricType":"size"},{"name":"fetch wait time","accumulatorId":769,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":766,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":772,"metricType":"sum"},{"name":"local blocks read","accumulatorId":765,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":775,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":764,"metricType":"sum"},{"name":"data size","accumulatorId":762,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":778,"metricType":"size"},{"name":"number of partitions","accumulatorId":763,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":779,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":767,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":781,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":758,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":759,"metricType":"timing"},{"name":"peak memory","accumulatorId":757,"metricType":"size"},{"name":"number of output rows","accumulatorId":756,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":761,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":760,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":4,"accumUpdates":[[753,1],[754,0],[755,37975350]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":4,"accumUpdates":[[763,1]]}
{"Event":"SparkListenerJobStart","Job ID":10,"Submission Time":1720114383160,"Stage Infos":[{"Stage ID":15,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"87\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[15],"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"87\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"4","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":15,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"87\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114383161,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"87\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"4","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":29,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114383167,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":30,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114383171,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":31,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114383171,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":32,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114383171,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":33,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114383171,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":15,"Stage Attempt ID":0,"Task Info":{"Task ID":34,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114383171,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":32,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114383171,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114384500,"Failed":false,"Killed":false,"Accumulables":[{"ID":752,"Name":"scan time","Update":"934","Value":"934","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":762,"Name":"data size","Update":"456","Value":"456","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":781,"Name":"shuffle bytes written","Update":"66","Value":"66","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":782,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":783,"Name":"shuffle write time","Update":"238127","Value":"238127","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":784,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":785,"Name":"peak memory","Update":"33816560","Value":"33816560","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":786,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":787,"Name":"time in aggregation build","Update":"1270","Value":"1270","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":788,"Name":"avg hash probes per key","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":790,"Name":"duration","Update":"2204","Value":"2204","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":793,"Name":"internal.metrics.executorDeserializeTime","Update":28,"Value":28,"Internal":true,"Count Failed Values":true},{"ID":794,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9892669,"Value":9892669,"Internal":true,"Count Failed Values":true},{"ID":795,"Name":"internal.metrics.executorRunTime","Update":1280,"Value":1280,"Internal":true,"Count Failed Values":true},{"ID":796,"Name":"internal.metrics.executorCpuTime","Update":324725910,"Value":324725910,"Internal":true,"Count Failed Values":true},{"ID":797,"Name":"internal.metrics.resultSize","Update":2678,"Value":2678,"Internal":true,"Count Failed Values":true},{"ID":802,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":33816560,"Internal":true,"Count Failed Values":true},{"ID":821,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":66,"Value":66,"Internal":true,"Count Failed Values":true},{"ID":822,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":823,"Name":"internal.metrics.shuffle.write.writeTime","Update":238127,"Value":238127,"Internal":true,"Count Failed Values":true},{"ID":824,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":1799,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":28,"Executor Deserialize CPU Time":9892669,"Executor Run Time":1280,"Executor CPU Time":324725910,"Peak Execution Memory":33816560,"Result Size":2678,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":66,"Shuffle Write Time":238127,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":34,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114383171,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114384510,"Failed":false,"Killed":false,"Accumulables":[{"ID":752,"Name":"scan time","Update":"933","Value":"1867","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":762,"Name":"data size","Update":"456","Value":"912","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":781,"Name":"shuffle bytes written","Update":"66","Value":"132","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":782,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":783,"Name":"shuffle write time","Update":"504374","Value":"742501","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":784,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":785,"Name":"peak memory","Update":"33816560","Value":"67633120","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":786,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":787,"Name":"time in aggregation build","Update":"1270","Value":"2540","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":788,"Name":"avg hash probes per key","Update":"10","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":790,"Name":"duration","Update":"2203","Value":"4407","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":793,"Name":"internal.metrics.executorDeserializeTime","Update":29,"Value":57,"Internal":true,"Count Failed Values":true},{"ID":794,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9117584,"Value":19010253,"Internal":true,"Count Failed Values":true},{"ID":795,"Name":"internal.metrics.executorRunTime","Update":1298,"Value":2578,"Internal":true,"Count Failed Values":true},{"ID":796,"Name":"internal.metrics.executorCpuTime","Update":355033129,"Value":679759039,"Internal":true,"Count Failed Values":true},{"ID":797,"Name":"internal.metrics.resultSize","Update":2678,"Value":5356,"Internal":true,"Count Failed Values":true},{"ID":802,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":67633120,"Internal":true,"Count Failed Values":true},{"ID":821,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":66,"Value":132,"Internal":true,"Count Failed Values":true},{"ID":822,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":823,"Name":"internal.metrics.shuffle.write.writeTime","Update":504374,"Value":742501,"Internal":true,"Count Failed Values":true},{"ID":824,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":3598,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":29,"Executor Deserialize CPU Time":9117584,"Executor Run Time":1298,"Executor CPU Time":355033129,"Peak Execution Memory":33816560,"Result Size":2678,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":66,"Shuffle Write Time":504374,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":29,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114383167,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114384510,"Failed":false,"Killed":false,"Accumulables":[{"ID":752,"Name":"scan time","Update":"1071","Value":"2938","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":762,"Name":"data size","Update":"456","Value":"1368","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":781,"Name":"shuffle bytes written","Update":"66","Value":"198","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":782,"Name":"shuffle records written","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":783,"Name":"shuffle write time","Update":"261375","Value":"1003876","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":784,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":785,"Name":"peak memory","Update":"33816560","Value":"101449680","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":786,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":787,"Name":"time in aggregation build","Update":"1276","Value":"3816","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":788,"Name":"avg hash probes per key","Update":"10","Value":"30","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":790,"Name":"duration","Update":"2347","Value":"6754","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":793,"Name":"internal.metrics.executorDeserializeTime","Update":35,"Value":92,"Internal":true,"Count Failed Values":true},{"ID":794,"Name":"internal.metrics.executorDeserializeCpuTime","Update":11487123,"Value":30497376,"Internal":true,"Count Failed Values":true},{"ID":795,"Name":"internal.metrics.executorRunTime","Update":1290,"Value":3868,"Internal":true,"Count Failed Values":true},{"ID":796,"Name":"internal.metrics.executorCpuTime","Update":111845250,"Value":791604289,"Internal":true,"Count Failed Values":true},{"ID":797,"Name":"internal.metrics.resultSize","Update":2678,"Value":8034,"Internal":true,"Count Failed Values":true},{"ID":802,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":101449680,"Internal":true,"Count Failed Values":true},{"ID":821,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":66,"Value":198,"Internal":true,"Count Failed Values":true},{"ID":822,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":823,"Name":"internal.metrics.shuffle.write.writeTime","Update":261375,"Value":1003876,"Internal":true,"Count Failed Values":true},{"ID":824,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":5397,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":35,"Executor Deserialize CPU Time":11487123,"Executor Run Time":1290,"Executor CPU Time":111845250,"Peak Execution Memory":33816560,"Result Size":2678,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":66,"Shuffle Write Time":261375,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":30,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114383171,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114384588,"Failed":false,"Killed":false,"Accumulables":[{"ID":752,"Name":"scan time","Update":"999","Value":"3937","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":762,"Name":"data size","Update":"456","Value":"1824","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":781,"Name":"shuffle bytes written","Update":"66","Value":"264","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":782,"Name":"shuffle records written","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":783,"Name":"shuffle write time","Update":"471708","Value":"1475584","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":784,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":785,"Name":"peak memory","Update":"33816560","Value":"135266240","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":786,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":787,"Name":"time in aggregation build","Update":"1329","Value":"5145","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":788,"Name":"avg hash probes per key","Update":"10","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":790,"Name":"duration","Update":"2328","Value":"9082","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":793,"Name":"internal.metrics.executorDeserializeTime","Update":60,"Value":152,"Internal":true,"Count Failed Values":true},{"ID":794,"Name":"internal.metrics.executorDeserializeCpuTime","Update":22284208,"Value":52781584,"Internal":true,"Count Failed Values":true},{"ID":795,"Name":"internal.metrics.executorRunTime","Update":1346,"Value":5214,"Internal":true,"Count Failed Values":true},{"ID":796,"Name":"internal.metrics.executorCpuTime","Update":170110337,"Value":961714626,"Internal":true,"Count Failed Values":true},{"ID":797,"Name":"internal.metrics.resultSize","Update":2764,"Value":10798,"Internal":true,"Count Failed Values":true},{"ID":798,"Name":"internal.metrics.jvmGCTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":799,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":802,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":135266240,"Internal":true,"Count Failed Values":true},{"ID":821,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":66,"Value":264,"Internal":true,"Count Failed Values":true},{"ID":822,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":823,"Name":"internal.metrics.shuffle.write.writeTime","Update":471708,"Value":1475584,"Internal":true,"Count Failed Values":true},{"ID":824,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":7196,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":60,"Executor Deserialize CPU Time":22284208,"Executor Run Time":1346,"Executor CPU Time":170110337,"Peak Execution Memory":33816560,"Result Size":2764,"JVM GC Time":4,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":66,"Shuffle Write Time":471708,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":33,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114383171,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114384588,"Failed":false,"Killed":false,"Accumulables":[{"ID":752,"Name":"scan time","Update":"1037","Value":"4974","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":762,"Name":"data size","Update":"456","Value":"2280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":781,"Name":"shuffle bytes written","Update":"66","Value":"330","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":782,"Name":"shuffle records written","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":783,"Name":"shuffle write time","Update":"307251","Value":"1782835","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":784,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":785,"Name":"peak memory","Update":"33816560","Value":"169082800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":786,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":787,"Name":"time in aggregation build","Update":"1330","Value":"6475","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":788,"Name":"avg hash probes per key","Update":"10","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":790,"Name":"duration","Update":"2367","Value":"11449","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":793,"Name":"internal.metrics.executorDeserializeTime","Update":60,"Value":212,"Internal":true,"Count Failed Values":true},{"ID":794,"Name":"internal.metrics.executorDeserializeCpuTime","Update":24673166,"Value":77454750,"Internal":true,"Count Failed Values":true},{"ID":795,"Name":"internal.metrics.executorRunTime","Update":1346,"Value":6560,"Internal":true,"Count Failed Values":true},{"ID":796,"Name":"internal.metrics.executorCpuTime","Update":261175004,"Value":1222889630,"Internal":true,"Count Failed Values":true},{"ID":797,"Name":"internal.metrics.resultSize","Update":2764,"Value":13562,"Internal":true,"Count Failed Values":true},{"ID":798,"Name":"internal.metrics.jvmGCTime","Update":4,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":799,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":802,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":169082800,"Internal":true,"Count Failed Values":true},{"ID":821,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":66,"Value":330,"Internal":true,"Count Failed Values":true},{"ID":822,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":823,"Name":"internal.metrics.shuffle.write.writeTime","Update":307251,"Value":1782835,"Internal":true,"Count Failed Values":true},{"ID":824,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":8995,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":60,"Executor Deserialize CPU Time":24673166,"Executor Run Time":1346,"Executor CPU Time":261175004,"Peak Execution Memory":33816560,"Result Size":2764,"JVM GC Time":4,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":66,"Shuffle Write Time":307251,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":15,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":31,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114383171,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114387483,"Failed":false,"Killed":false,"Accumulables":[{"ID":751,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":752,"Name":"scan time","Update":"4104","Value":"9078","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":762,"Name":"data size","Update":"456","Value":"2736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":781,"Name":"shuffle bytes written","Update":"490","Value":"820","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":782,"Name":"shuffle records written","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":783,"Name":"shuffle write time","Update":"435707","Value":"2218542","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":784,"Name":"number of output rows","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":785,"Name":"peak memory","Update":"33816560","Value":"202899360","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":786,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":787,"Name":"time in aggregation build","Update":"4245","Value":"10720","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":788,"Name":"avg hash probes per key","Update":"10","Value":"60","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":790,"Name":"duration","Update":"4245","Value":"15694","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":791,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":792,"Name":"number of input batches","Update":"144","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":793,"Name":"internal.metrics.executorDeserializeTime","Update":33,"Value":245,"Internal":true,"Count Failed Values":true},{"ID":794,"Name":"internal.metrics.executorDeserializeCpuTime","Update":19810997,"Value":97265747,"Internal":true,"Count Failed Values":true},{"ID":795,"Name":"internal.metrics.executorRunTime","Update":4272,"Value":10832,"Internal":true,"Count Failed Values":true},{"ID":796,"Name":"internal.metrics.executorCpuTime","Update":334058464,"Value":1556948094,"Internal":true,"Count Failed Values":true},{"ID":797,"Name":"internal.metrics.resultSize","Update":2764,"Value":16326,"Internal":true,"Count Failed Values":true},{"ID":798,"Name":"internal.metrics.jvmGCTime","Update":14,"Value":22,"Internal":true,"Count Failed Values":true},{"ID":802,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":202899360,"Internal":true,"Count Failed Values":true},{"ID":821,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":490,"Value":820,"Internal":true,"Count Failed Values":true},{"ID":822,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":823,"Name":"internal.metrics.shuffle.write.writeTime","Update":435707,"Value":2218542,"Internal":true,"Count Failed Values":true},{"ID":824,"Name":"internal.metrics.input.bytesRead","Update":14218434,"Value":14227429,"Internal":true,"Count Failed Values":true},{"ID":825,"Name":"internal.metrics.input.recordsRead","Update":586579,"Value":586579,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":33,"Executor Deserialize CPU Time":19810997,"Executor Run Time":4272,"Executor CPU Time":334058464,"Peak Execution Memory":33816560,"Result Size":2764,"JVM GC Time":14,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":490,"Shuffle Write Time":435707,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":14218434,"Records Read":586579},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":15,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"87\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114383161,"Completion Time":1720114387483,"Accumulables":[{"ID":751,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":752,"Name":"scan time","Value":"9078","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":762,"Name":"data size","Value":"2736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":781,"Name":"shuffle bytes written","Value":"820","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":782,"Name":"shuffle records written","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":783,"Name":"shuffle write time","Value":"2218542","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":784,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":785,"Name":"peak memory","Value":"202899360","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":786,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":787,"Name":"time in aggregation build","Value":"10720","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":788,"Name":"avg hash probes per key","Value":"60","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":790,"Name":"duration","Value":"15694","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":791,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":792,"Name":"number of input batches","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":793,"Name":"internal.metrics.executorDeserializeTime","Value":245,"Internal":true,"Count Failed Values":true},{"ID":794,"Name":"internal.metrics.executorDeserializeCpuTime","Value":97265747,"Internal":true,"Count Failed Values":true},{"ID":795,"Name":"internal.metrics.executorRunTime","Value":10832,"Internal":true,"Count Failed Values":true},{"ID":796,"Name":"internal.metrics.executorCpuTime","Value":1556948094,"Internal":true,"Count Failed Values":true},{"ID":797,"Name":"internal.metrics.resultSize","Value":16326,"Internal":true,"Count Failed Values":true},{"ID":798,"Name":"internal.metrics.jvmGCTime","Value":22,"Internal":true,"Count Failed Values":true},{"ID":799,"Name":"internal.metrics.resultSerializationTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":802,"Name":"internal.metrics.peakExecutionMemory","Value":202899360,"Internal":true,"Count Failed Values":true},{"ID":821,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":820,"Internal":true,"Count Failed Values":true},{"ID":822,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":6,"Internal":true,"Count Failed Values":true},{"ID":823,"Name":"internal.metrics.shuffle.write.writeTime","Value":2218542,"Internal":true,"Count Failed Values":true},{"ID":824,"Name":"internal.metrics.input.bytesRead","Value":14227429,"Internal":true,"Count Failed Values":true},{"ID":825,"Name":"internal.metrics.input.recordsRead","Value":586579,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":10,"Completion Time":1720114387484,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":4,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Final Plan ==\n   HashAggregate (6)\n   +- ShuffleQueryStage (5), Statistics(sizeInBytes=2.7 KiB, rowCount=6)\n      +- Exchange (4)\n         +- HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [2]: [business_id#0, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [2]: [business_id#0, stars#7]\n\n(3) HashAggregate\nInput [2]: [business_id#0, stars#7]\nKeys: []\nFunctions [5]: [partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)]\nAggregate Attributes [56]: [count#751L, sum#752L, MS[0]#537L, MS[1]#538L, MS[2]#539L, MS[3]#540L, MS[4]#541L, MS[5]#542L, MS[6]#543L, MS[7]#544L, MS[8]#545L, MS[9]#546L, MS[10]#547L, MS[11]#548L, MS[12]#549L, MS[13]#550L, MS[14]#551L, MS[15]#552L, MS[16]#553L, MS[17]#554L, MS[18]#555L, MS[19]#556L, MS[20]#557L, MS[21]#558L, MS[22]#559L, MS[23]#560L, MS[24]#561L, MS[25]#562L, MS[26]#563L, MS[27]#564L, MS[28]#565L, MS[29]#566L, MS[30]#567L, MS[31]#568L, MS[32]#569L, MS[33]#570L, MS[34]#571L, MS[35]#572L, MS[36]#573L, MS[37]#574L, MS[38]#575L, MS[39]#576L, MS[40]#577L, MS[41]#578L, MS[42]#579L, MS[43]#580L, MS[44]#581L, MS[45]#582L, MS[46]#583L, MS[47]#584L, MS[48]#585L, MS[49]#586L, MS[50]#587L, MS[51]#588L, sum#753, count#754L]\nResults [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\n\n(4) Exchange\nInput [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=219]\n\n(5) ShuffleQueryStage\nOutput [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\nArguments: 0\n\n(6) HashAggregate\nInput [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\nKeys: []\nFunctions [5]: [count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)]\nAggregate Attributes [5]: [count(1)#195L, sum(cast(isnotnull(business_id#0) as int))#197L, stateful_approx_count_distinct(business_id#0, 0, 0)#304, sum(stars#7)#305, count(stars#7)#306L]\nResults [6]: [count(1)#195L AS count(1)#427L, sum(cast(isnotnull(business_id#0) as int))#197L AS sum(CAST((business_id IS NOT NULL) AS INT))#428L, count(1)#195L AS count(1)#429L, stateful_approx_count_distinct(business_id#0, 0, 0)#304 AS stateful_approx_count_distinct(business_id)#534, sum(stars#7)#305 AS CAST(sum(stars) AS DOUBLE)#535, count(stars#7)#306L AS CAST(count(stars) AS BIGINT)#536L]\n\n(7) HashAggregate\nInput [2]: [business_id#0, stars#7]\nKeys: []\nFunctions [5]: [partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)]\nAggregate Attributes [56]: [count#751L, sum#752L, MS[0]#537L, MS[1]#538L, MS[2]#539L, MS[3]#540L, MS[4]#541L, MS[5]#542L, MS[6]#543L, MS[7]#544L, MS[8]#545L, MS[9]#546L, MS[10]#547L, MS[11]#548L, MS[12]#549L, MS[13]#550L, MS[14]#551L, MS[15]#552L, MS[16]#553L, MS[17]#554L, MS[18]#555L, MS[19]#556L, MS[20]#557L, MS[21]#558L, MS[22]#559L, MS[23]#560L, MS[24]#561L, MS[25]#562L, MS[26]#563L, MS[27]#564L, MS[28]#565L, MS[29]#566L, MS[30]#567L, MS[31]#568L, MS[32]#569L, MS[33]#570L, MS[34]#571L, MS[35]#572L, MS[36]#573L, MS[37]#574L, MS[38]#575L, MS[39]#576L, MS[40]#577L, MS[41]#578L, MS[42]#579L, MS[43]#580L, MS[44]#581L, MS[45]#582L, MS[46]#583L, MS[47]#584L, MS[48]#585L, MS[49]#586L, MS[50]#587L, MS[51]#588L, sum#753, count#754L]\nResults [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\n\n(8) Exchange\nInput [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=206]\n\n(9) HashAggregate\nInput [56]: [count#755L, sum#756L, MS[0]#589L, MS[1]#590L, MS[2]#591L, MS[3]#592L, MS[4]#593L, MS[5]#594L, MS[6]#595L, MS[7]#596L, MS[8]#597L, MS[9]#598L, MS[10]#599L, MS[11]#600L, MS[12]#601L, MS[13]#602L, MS[14]#603L, MS[15]#604L, MS[16]#605L, MS[17]#606L, MS[18]#607L, MS[19]#608L, MS[20]#609L, MS[21]#610L, MS[22]#611L, MS[23]#612L, MS[24]#613L, MS[25]#614L, MS[26]#615L, MS[27]#616L, MS[28]#617L, MS[29]#618L, MS[30]#619L, MS[31]#620L, MS[32]#621L, MS[33]#622L, MS[34]#623L, MS[35]#624L, MS[36]#625L, MS[37]#626L, MS[38]#627L, MS[39]#628L, MS[40]#629L, MS[41]#630L, MS[42]#631L, MS[43]#632L, MS[44]#633L, MS[45]#634L, MS[46]#635L, MS[47]#636L, MS[48]#637L, MS[49]#638L, MS[50]#639L, MS[51]#640L, sum#757, count#758L]\nKeys: []\nFunctions [5]: [count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)]\nAggregate Attributes [5]: [count(1)#195L, sum(cast(isnotnull(business_id#0) as int))#197L, stateful_approx_count_distinct(business_id#0, 0, 0)#304, sum(stars#7)#305, count(stars#7)#306L]\nResults [6]: [count(1)#195L AS count(1)#427L, sum(cast(isnotnull(business_id#0) as int))#197L AS sum(CAST((business_id IS NOT NULL) AS INT))#428L, count(1)#195L AS count(1)#429L, stateful_approx_count_distinct(business_id#0, 0, 0)#304 AS stateful_approx_count_distinct(business_id)#534, sum(stars#7)#305 AS CAST(sum(stars) AS DOUBLE)#535, count(stars#7)#306L AS CAST(count(stars) AS BIGINT)#536L]\n\n(10) AdaptiveSparkPlan\nOutput [6]: [count(1)#427L, sum(CAST((business_id IS NOT NULL) AS INT))#428L, count(1)#429L, stateful_approx_count_distinct(business_id)#534, CAST(sum(stars) AS DOUBLE)#535, CAST(count(stars) AS BIGINT)#536L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1), sum(cast(isnotnull(business_id#0) as int)), stateful_approx_count_distinct(business_id#0, 0, 0), sum(stars#7), count(stars#7)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=219]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1), partial_sum(cast(isnotnull(business_id#0) as int)), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_sum(stars#7), partial_count(stars#7)])","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":753,"metricType":"sum"},{"name":"scan time","accumulatorId":752,"metricType":"timing"},{"name":"metadata time","accumulatorId":754,"metricType":"timing"},{"name":"size of files read","accumulatorId":755,"metricType":"size"},{"name":"number of output rows","accumulatorId":751,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":791,"metricType":"sum"},{"name":"number of input batches","accumulatorId":792,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":790,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":786,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":787,"metricType":"timing"},{"name":"peak memory","accumulatorId":785,"metricType":"size"},{"name":"number of output rows","accumulatorId":784,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":789,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":788,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":782,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":776,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":783,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":777,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":774,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":771,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":780,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":773,"metricType":"sum"},{"name":"records read","accumulatorId":770,"metricType":"sum"},{"name":"local bytes read","accumulatorId":768,"metricType":"size"},{"name":"fetch wait time","accumulatorId":769,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":766,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":772,"metricType":"sum"},{"name":"local blocks read","accumulatorId":765,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":775,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":764,"metricType":"sum"},{"name":"data size","accumulatorId":762,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":778,"metricType":"size"},{"name":"number of partitions","accumulatorId":763,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":779,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":767,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":781,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":758,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":759,"metricType":"timing"},{"name":"peak memory","accumulatorId":757,"metricType":"size"},{"name":"number of output rows","accumulatorId":756,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":761,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":760,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":11,"Submission Time":1720114387496,"Stage Infos":[{"Stage ID":16,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"87\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"89\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"FileScanRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"92\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"88\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":17,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"96\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"95\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"93\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[16],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[16,17],"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"97\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"4","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":17,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"96\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"95\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"93\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[16],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114387497,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"97\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"4","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"4","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":17,"Stage Attempt ID":0,"Task Info":{"Task ID":35,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114387502,"Executor ID":"1","Host":"172.29.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":17,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":35,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114387502,"Executor ID":"1","Host":"172.29.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114387571,"Failed":false,"Killed":false,"Accumulables":[{"ID":756,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":757,"Name":"peak memory","Update":"33816560","Value":"33816560","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":758,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":759,"Name":"time in aggregation build","Update":"40","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":760,"Name":"avg hash probes per key","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":764,"Name":"remote blocks read","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":765,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":766,"Name":"remote bytes read","Update":"264","Value":"264","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":768,"Name":"local bytes read","Update":"556","Value":"556","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":769,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":770,"Name":"records read","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":779,"Name":"remote reqs duration","Update":"3","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":828,"Name":"internal.metrics.executorDeserializeTime","Update":15,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":829,"Name":"internal.metrics.executorDeserializeCpuTime","Update":10044293,"Value":10044293,"Internal":true,"Count Failed Values":true},{"ID":830,"Name":"internal.metrics.executorRunTime","Update":48,"Value":48,"Internal":true,"Count Failed Values":true},{"ID":831,"Name":"internal.metrics.executorCpuTime","Update":44117788,"Value":44117788,"Internal":true,"Count Failed Values":true},{"ID":832,"Name":"internal.metrics.resultSize","Update":5721,"Value":5721,"Internal":true,"Count Failed Values":true},{"ID":837,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":33816560,"Internal":true,"Count Failed Values":true},{"ID":839,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":840,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":841,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":264,"Value":264,"Internal":true,"Count Failed Values":true},{"ID":842,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":843,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":556,"Value":556,"Internal":true,"Count Failed Values":true},{"ID":844,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":845,"Name":"internal.metrics.shuffle.read.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":846,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":847,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":848,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":849,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":850,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":851,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":852,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":853,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":854,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":855,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":15,"Executor Deserialize CPU Time":10044293,"Executor Run Time":48,"Executor CPU Time":44117788,"Peak Execution Memory":33816560,"Result Size":5721,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":4,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":264,"Remote Bytes Read To Disk":0,"Local Bytes Read":556,"Total Records Read":6,"Remote Requests Duration":3,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":17,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"96\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"95\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[34],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"93\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[16],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114387497,"Completion Time":1720114387572,"Accumulables":[{"ID":756,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":757,"Name":"peak memory","Value":"33816560","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":758,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":759,"Name":"time in aggregation build","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":760,"Name":"avg hash probes per key","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":764,"Name":"remote blocks read","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":765,"Name":"local blocks read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":766,"Name":"remote bytes read","Value":"264","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":768,"Name":"local bytes read","Value":"556","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":769,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":770,"Name":"records read","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":779,"Name":"remote reqs duration","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":828,"Name":"internal.metrics.executorDeserializeTime","Value":15,"Internal":true,"Count Failed Values":true},{"ID":829,"Name":"internal.metrics.executorDeserializeCpuTime","Value":10044293,"Internal":true,"Count Failed Values":true},{"ID":830,"Name":"internal.metrics.executorRunTime","Value":48,"Internal":true,"Count Failed Values":true},{"ID":831,"Name":"internal.metrics.executorCpuTime","Value":44117788,"Internal":true,"Count Failed Values":true},{"ID":832,"Name":"internal.metrics.resultSize","Value":5721,"Internal":true,"Count Failed Values":true},{"ID":837,"Name":"internal.metrics.peakExecutionMemory","Value":33816560,"Internal":true,"Count Failed Values":true},{"ID":839,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":4,"Internal":true,"Count Failed Values":true},{"ID":840,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":2,"Internal":true,"Count Failed Values":true},{"ID":841,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":264,"Internal":true,"Count Failed Values":true},{"ID":842,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":843,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":556,"Internal":true,"Count Failed Values":true},{"ID":844,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":845,"Name":"internal.metrics.shuffle.read.recordsRead","Value":6,"Internal":true,"Count Failed Values":true},{"ID":846,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":847,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":848,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":849,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":850,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":851,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":852,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":853,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":854,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":3,"Internal":true,"Count Failed Values":true},{"ID":855,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":11,"Completion Time":1720114387572,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":4,"time":1720114387580,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":5,"rootExecutionId":5,"description":"showString at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [4]: [toprettystring(entity)#796, toprettystring(instance)#797, toprettystring(name)#798, toprettystring(value)#799]\nArguments: [toprettystring(entity)#796, toprettystring(instance)#797, toprettystring(name)#798, toprettystring(value)#799]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [toprettystring(entity)#796, toprettystring(instance)#797, toprettystring(name)#798, toprettystring(value)#799]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":863,"metricType":"sum"}]},"time":1720114387641,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[863,4]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":5,"time":1720114387655,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":6,"rootExecutionId":6,"description":"collect at AnalysisRunner.scala:327","details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (5)\n+- HashAggregate (4)\n   +- Exchange (3)\n      +- HashAggregate (2)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:string,review_count:bigint,stars:double>\n\n(2) HashAggregate\nInput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nKeys: []\nFunctions [35]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(subcategories#5) as int)), partial_stateful_approx_count_distinct(subcategories#5, 0, 0), partial_statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@59d29a4b, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(review_count#6L) as int)), partial_stateful_approx_count_distinct(review_count#6L, 0, 0), partial_sum(cast(isnotnull(stars#7) as int)), partial_stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [467]: [sum#5563L, count#5564L, MS[0]#3736L, MS[1]#3737L, MS[2]#3738L, MS[3]#3739L, MS[4]#3740L, MS[5]#3741L, MS[6]#3742L, MS[7]#3743L, MS[8]#3744L, MS[9]#3745L, MS[10]#3746L, MS[11]#3747L, MS[12]#3748L, MS[13]#3749L, MS[14]#3750L, MS[15]#3751L, MS[16]#3752L, MS[17]#3753L, MS[18]#3754L, MS[19]#3755L, MS[20]#3756L, MS[21]#3757L, MS[22]#3758L, MS[23]#3759L, MS[24]#3760L, MS[25]#3761L, MS[26]#3762L, MS[27]#3763L, MS[28]#3764L, MS[29]#3765L, MS[30]#3766L, MS[31]#3767L, MS[32]#3768L, MS[33]#3769L, MS[34]#3770L, MS[35]#3771L, MS[36]#3772L, MS[37]#3773L, MS[38]#3774L, MS[39]#3775L, MS[40]#3776L, MS[41]#3777L, MS[42]#3778L, MS[43]#3779L, MS[44]#3780L, MS[45]#3781L, MS[46]#3782L, MS[47]#3783L, MS[48]#3784L, MS[49]#3785L, MS[50]#3786L, MS[51]#3787L, null#3840L, fractional#3841L, integral#3842L, boolean#3843L, string#3844L, min#5565, max#5566, sum#5567L, MS[0]#3850L, MS[1]#3851L, MS[2]#3852L, MS[3]#3853L, MS[4]#3854L, MS[5]#3855L, MS[6]#3856L, MS[7]#3857L, MS[8]#3858L, MS[9]#3859L, MS[10]#3860L, MS[11]#3861L, MS[12]#3862L, MS[13]#3863L, MS[14]#3864L, MS[15]#3865L, MS[16]#3866L, MS[17]#3867L, MS[18]#3868L, MS[19]#3869L, MS[20]#3870L, MS[21]#3871L, MS[22]#3872L, MS[23]#3873L, MS[24]#3874L, MS[25]#3875L, MS[26]#3876L, MS[27]#3877L, MS[28]#3878L, MS[29]#3879L, MS[30]#3880L, MS[31]#3881L, MS[32]#3882L, MS[33]#3883L, MS[34]#3884L, MS[35]#3885L, MS[36]#3886L, MS[37]#3887L, MS[38]#3888L, MS[39]#3889L, MS[40]#3890L, MS[41]#3891L, MS[42]#3892L, MS[43]#3893L, MS[44]#3894L, MS[45]#3895L, MS[46]#3896L, MS[47]#3897L, MS[48]#3898L, MS[49]#3899L, MS[50]#3900L, MS[51]#3901L, null#3954L, fractional#3955L, integral#3956L, boolean#3957L, string#3958L, min#5568, max#5569, sum#5570L, MS[0]#3964L, MS[1]#3965L, MS[2]#3966L, MS[3]#3967L, MS[4]#3968L, MS[5]#3969L, MS[6]#3970L, MS[7]#3971L, MS[8]#3972L, MS[9]#3973L, MS[10]#3974L, MS[11]#3975L, MS[12]#3976L, MS[13]#3977L, MS[14]#3978L, MS[15]#3979L, MS[16]#3980L, MS[17]#3981L, MS[18]#3982L, MS[19]#3983L, MS[20]#3984L, MS[21]#3985L, MS[22]#3986L, MS[23]#3987L, MS[24]#3988L, MS[25]#3989L, MS[26]#3990L, MS[27]#3991L, MS[28]#3992L, MS[29]#3993L, MS[30]#3994L, MS[31]#3995L, MS[32]#3996L, MS[33]#3997L, MS[34]#3998L, MS[35]#3999L, MS[36]#4000L, MS[37]#4001L, MS[38]#4002L, MS[39]#4003L, MS[40]#4004L, MS[41]#4005L, MS[42]#4006L, MS[43]#4007L, MS[44]#4008L, MS[45]#4009L, MS[46]#4010L, MS[47]#4011L, MS[48]#4012L, MS[49]#4013L, MS[50]#4014L, MS[51]#4015L, null#4068L, fractional#4069L, integral#4070L, boolean#4071L, string#4072L, min#5571, max#5572, sum#5573L, MS[0]#4078L, MS[1]#4079L, MS[2]#4080L, MS[3]#4081L, MS[4]#4082L, MS[5]#4083L, MS[6]#4084L, MS[7]#4085L, MS[8]#4086L, MS[9]#4087L, MS[10]#4088L, MS[11]#4089L, MS[12]#4090L, MS[13]#4091L, MS[14]#4092L, MS[15]#4093L, MS[16]#4094L, MS[17]#4095L, MS[18]#4096L, MS[19]#4097L, MS[20]#4098L, MS[21]#4099L, MS[22]#4100L, MS[23]#4101L, MS[24]#4102L, MS[25]#4103L, MS[26]#4104L, MS[27]#4105L, MS[28]#4106L, MS[29]#4107L, MS[30]#4108L, MS[31]#4109L, MS[32]#4110L, MS[33]#4111L, MS[34]#4112L, MS[35]#4113L, MS[36]#4114L, MS[37]#4115L, MS[38]#4116L, MS[39]#4117L, MS[40]#4118L, MS[41]#4119L, MS[42]#4120L, MS[43]#4121L, MS[44]#4122L, MS[45]#4123L, MS[46]#4124L, MS[47]#4125L, MS[48]#4126L, MS[49]#4127L, MS[50]#4128L, MS[51]#4129L, null#4182L, fractional#4183L, integral#4184L, boolean#4185L, string#4186L, min#5574, max#5575, sum#5576L, MS[0]#4192L, MS[1]#4193L, MS[2]#4194L, MS[3]#4195L, MS[4]#4196L, MS[5]#4197L, MS[6]#4198L, MS[7]#4199L, MS[8]#4200L, MS[9]#4201L, MS[10]#4202L, MS[11]#4203L, MS[12]#4204L, MS[13]#4205L, MS[14]#4206L, MS[15]#4207L, MS[16]#4208L, MS[17]#4209L, MS[18]#4210L, MS[19]#4211L, MS[20]#4212L, MS[21]#4213L, MS[22]#4214L, MS[23]#4215L, MS[24]#4216L, MS[25]#4217L, MS[26]#4218L, MS[27]#4219L, MS[28]#4220L, MS[29]#4221L, MS[30]#4222L, MS[31]#4223L, MS[32]#4224L, MS[33]#4225L, MS[34]#4226L, MS[35]#4227L, MS[36]#4228L, MS[37]#4229L, MS[38]#4230L, MS[39]#4231L, MS[40]#4232L, MS[41]#4233L, MS[42]#4234L, MS[43]#4235L, MS[44]#4236L, MS[45]#4237L, MS[46]#4238L, MS[47]#4239L, MS[48]#4240L, MS[49]#4241L, MS[50]#4242L, MS[51]#4243L, null#4296L, fractional#4297L, integral#4298L, boolean#4299L, string#4300L, min#5577, max#5578, sum#5579L, MS[0]#4306L, MS[1]#4307L, MS[2]#4308L, MS[3]#4309L, MS[4]#4310L, MS[5]#4311L, MS[6]#4312L, MS[7]#4313L, MS[8]#4314L, MS[9]#4315L, MS[10]#4316L, MS[11]#4317L, MS[12]#4318L, MS[13]#4319L, MS[14]#4320L, MS[15]#4321L, MS[16]#4322L, MS[17]#4323L, MS[18]#4324L, MS[19]#4325L, MS[20]#4326L, MS[21]#4327L, MS[22]#4328L, MS[23]#4329L, MS[24]#4330L, MS[25]#4331L, MS[26]#4332L, MS[27]#4333L, MS[28]#4334L, MS[29]#4335L, MS[30]#4336L, MS[31]#4337L, MS[32]#4338L, MS[33]#4339L, MS[34]#4340L, MS[35]#4341L, MS[36]#4342L, MS[37]#4343L, MS[38]#4344L, MS[39]#4345L, MS[40]#4346L, MS[41]#4347L, MS[42]#4348L, MS[43]#4349L, MS[44]#4350L, MS[45]#4351L, MS[46]#4352L, MS[47]#4353L, MS[48]#4354L, MS[49]#4355L, MS[50]#4356L, MS[51]#4357L, null#4410L, fractional#4411L, integral#4412L, boolean#4413L, string#4414L, min#5580, max#5581, sum#5582L, MS[0]#4420L, MS[1]#4421L, MS[2]#4422L, MS[3]#4423L, MS[4]#4424L, MS[5]#4425L, MS[6]#4426L, MS[7]#4427L, MS[8]#4428L, MS[9]#4429L, MS[10]#4430L, MS[11]#4431L, MS[12]#4432L, MS[13]#4433L, MS[14]#4434L, MS[15]#4435L, MS[16]#4436L, MS[17]#4437L, MS[18]#4438L, MS[19]#4439L, MS[20]#4440L, MS[21]#4441L, MS[22]#4442L, MS[23]#4443L, MS[24]#4444L, MS[25]#4445L, MS[26]#4446L, MS[27]#4447L, MS[28]#4448L, MS[29]#4449L, MS[30]#4450L, MS[31]#4451L, MS[32]#4452L, MS[33]#4453L, MS[34]#4454L, MS[35]#4455L, MS[36]#4456L, MS[37]#4457L, MS[38]#4458L, MS[39]#4459L, MS[40]#4460L, MS[41]#4461L, MS[42]#4462L, MS[43]#4463L, MS[44]#4464L, MS[45]#4465L, MS[46]#4466L, MS[47]#4467L, MS[48]#4468L, MS[49]#4469L, MS[50]#4470L, MS[51]#4471L, sum#5583L, MS[0]#4524L, MS[1]#4525L, MS[2]#4526L, MS[3]#4527L, MS[4]#4528L, MS[5]#4529L, MS[6]#4530L, MS[7]#4531L, MS[8]#4532L, MS[9]#4533L, MS[10]#4534L, MS[11]#4535L, MS[12]#4536L, MS[13]#4537L, MS[14]#4538L, MS[15]#4539L, MS[16]#4540L, MS[17]#4541L, MS[18]#4542L, MS[19]#4543L, MS[20]#4544L, MS[21]#4545L, MS[22]#4546L, MS[23]#4547L, MS[24]#4548L, MS[25]#4549L, MS[26]#4550L, MS[27]#4551L, MS[28]#4552L, MS[29]#4553L, MS[30]#4554L, MS[31]#4555L, MS[32]#4556L, MS[33]#4557L, MS[34]#4558L, MS[35]#4559L, MS[36]#4560L, MS[37]#4561L, MS[38]#4562L, MS[39]#4563L, MS[40]#4564L, MS[41]#4565L, MS[42]#4566L, MS[43]#4567L, MS[44]#4568L, MS[45]#4569L, MS[46]#4570L, MS[47]#4571L, MS[48]#4572L, MS[49]#4573L, MS[50]#4574L, MS[51]#4575L]\nResults [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\n\n(3) Exchange\nInput [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=243]\n\n(4) HashAggregate\nInput [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\nKeys: []\nFunctions [35]: [sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(subcategories#5) as int)), stateful_approx_count_distinct(subcategories#5, 0, 0), statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@59d29a4b, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(review_count#6L) as int)), stateful_approx_count_distinct(review_count#6L, 0, 0), sum(cast(isnotnull(stars#7) as int)), stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [35]: [sum(cast(isnotnull(business_id#0) as int))#809L, count(1)#810L, stateful_approx_count_distinct(business_id#0, 0, 0)#916, StatefulDataType(business_id#0)#927, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#932, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#937, sum(cast(isnotnull(name#1) as int))#938L, stateful_approx_count_distinct(name#1, 0, 0)#1045, StatefulDataType(name#1)#1056, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1061, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1066, sum(cast(isnotnull(city#2) as int))#1067L, stateful_approx_count_distinct(city#2, 0, 0)#1174, StatefulDataType(city#2)#1185, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1190, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1195, sum(cast(isnotnull(state#3) as int))#1196L, stateful_approx_count_distinct(state#3, 0, 0)#1303, StatefulDataType(state#3)#1314, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1319, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1324, sum(cast(isnotnull(category#4) as int))#1325L, stateful_approx_count_distinct(category#4, 0, 0)#1432, StatefulDataType(category#4)#1443, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1448, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1453, sum(cast(isnotnull(subcategories#5) as int))#1454L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1561, StatefulDataType(subcategories#5)#1572, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1577, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1582, sum(cast(isnotnull(review_count#6L) as int))#1583L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1690, sum(cast(isnotnull(stars#7) as int))#1691L, stateful_approx_count_distinct(stars#7, 0, 0)#1798]\nResults [43]: [sum(cast(isnotnull(business_id#0) as int))#809L AS sum(CAST((business_id IS NOT NULL) AS INT))#2801L, count(1)#810L AS count(1)#2802L, stateful_approx_count_distinct(business_id#0, 0, 0)#916 AS stateful_approx_count_distinct(business_id)#2907, StatefulDataType(business_id#0)#927 AS statefuldatatype(business_id)#2918, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#932 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2919, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#937 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2920, sum(cast(isnotnull(name#1) as int))#938L AS sum(CAST((name IS NOT NULL) AS INT))#2921L, count(1)#810L AS count(1)#2922L, stateful_approx_count_distinct(name#1, 0, 0)#1045 AS stateful_approx_count_distinct(name)#3027, StatefulDataType(name#1)#1056 AS statefuldatatype(name)#3038, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1061 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3039, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1066 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3040, sum(cast(isnotnull(city#2) as int))#1067L AS sum(CAST((city IS NOT NULL) AS INT))#3041L, count(1)#810L AS count(1)#3042L, stateful_approx_count_distinct(city#2, 0, 0)#1174 AS stateful_approx_count_distinct(city)#3147, StatefulDataType(city#2)#1185 AS statefuldatatype(city)#3158, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1190 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3159, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1195 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3160, sum(cast(isnotnull(state#3) as int))#1196L AS sum(CAST((state IS NOT NULL) AS INT))#3161L, count(1)#810L AS count(1)#3162L, stateful_approx_count_distinct(state#3, 0, 0)#1303 AS stateful_approx_count_distinct(state)#3267, StatefulDataType(state#3)#1314 AS statefuldatatype(state)#3278, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1319 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3279, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1324 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3280, sum(cast(isnotnull(category#4) as int))#1325L AS sum(CAST((category IS NOT NULL) AS INT))#3281L, count(1)#810L AS count(1)#3282L, stateful_approx_count_distinct(category#4, 0, 0)#1432 AS stateful_approx_count_distinct(category)#3387, StatefulDataType(category#4)#1443 AS statefuldatatype(category)#3398, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1448 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3399, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1453 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3400, sum(cast(isnotnull(subcategories#5) as int))#1454L AS sum(CAST((subcategories IS NOT NULL) AS INT))#3401L, count(1)#810L AS count(1)#3402L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1561 AS stateful_approx_count_distinct(subcategories)#3507, StatefulDataType(subcategories#5)#1572 AS statefuldatatype(subcategories)#3518, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1577 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3519, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1582 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3520, sum(cast(isnotnull(review_count#6L) as int))#1583L AS sum(CAST((review_count IS NOT NULL) AS INT))#3521L, count(1)#810L AS count(1)#3522L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1690 AS stateful_approx_count_distinct(review_count)#3627, sum(cast(isnotnull(stars#7) as int))#1691L AS sum(CAST((stars IS NOT NULL) AS INT))#3628L, count(1)#810L AS count(1)#3629L, stateful_approx_count_distinct(stars#7, 0, 0)#1798 AS stateful_approx_count_distinct(stars)#3734, count(1)#810L AS count(1)#3735L]\n\n(5) AdaptiveSparkPlan\nOutput [43]: [sum(CAST((business_id IS NOT NULL) AS INT))#2801L, count(1)#2802L, stateful_approx_count_distinct(business_id)#2907, statefuldatatype(business_id)#2918, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2919, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2920, sum(CAST((name IS NOT NULL) AS INT))#2921L, count(1)#2922L, stateful_approx_count_distinct(name)#3027, statefuldatatype(name)#3038, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3039, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3040, sum(CAST((city IS NOT NULL) AS INT))#3041L, count(1)#3042L, stateful_approx_count_distinct(city)#3147, statefuldatatype(city)#3158, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3159, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3160, sum(CAST((state IS NOT NULL) AS INT))#3161L, count(1)#3162L, stateful_approx_count_distinct(state)#3267, statefuldatatype(state)#3278, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3279, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3280, sum(CAST((category IS NOT NULL) AS INT))#3281L, count(1)#3282L, stateful_approx_count_distinct(category)#3387, statefuldatatype(category)#3398, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3399, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3400, sum(CAST((subcategories IS NOT NULL) AS INT))#3401L, count(1)#3402L, stateful_approx_count_distinct(subcategories)#3507, statefuldatatype(subcategories)#3518, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3519, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3520, sum(CAST((review_count IS NOT NULL) AS INT))#3521L, count(1)#3522L, stateful_approx_count_distinct(review_count)#3627, sum(CAST((stars IS NOT NULL) AS INT))#3628L, count(1)#3629L, stateful_approx_count_distinct(stars)#3734, count(1)#3735L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), ... 11 more fields])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=243]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), ... 11 more fields])","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,name#1,city#2,state#3,category#4,subcategories#5,review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:stri...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:string,review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":900,"metricType":"sum"},{"name":"scan time","accumulatorId":899,"metricType":"timing"},{"name":"metadata time","accumulatorId":901,"metricType":"timing"},{"name":"size of files read","accumulatorId":902,"metricType":"size"},{"name":"number of output rows","accumulatorId":898,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":894,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":895,"metricType":"timing"},{"name":"peak memory","accumulatorId":893,"metricType":"size"},{"name":"number of output rows","accumulatorId":892,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":897,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":896,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":890,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":884,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":891,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":885,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":882,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":879,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":888,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":881,"metricType":"sum"},{"name":"records read","accumulatorId":878,"metricType":"sum"},{"name":"local bytes read","accumulatorId":876,"metricType":"size"},{"name":"fetch wait time","accumulatorId":877,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":874,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":880,"metricType":"sum"},{"name":"local blocks read","accumulatorId":873,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":883,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":872,"metricType":"sum"},{"name":"data size","accumulatorId":870,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":886,"metricType":"size"},{"name":"number of partitions","accumulatorId":871,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":887,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":875,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":889,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":866,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":867,"metricType":"timing"},{"name":"peak memory","accumulatorId":865,"metricType":"size"},{"name":"number of output rows","accumulatorId":864,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":869,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":868,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1720114387779,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":6,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Current Plan ==\n   HashAggregate (6)\n   +- ShuffleQueryStage (5)\n      +- Exchange (4)\n         +- HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:string,review_count:bigint,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\n\n(3) HashAggregate\nInput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nKeys: []\nFunctions [35]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(subcategories#5) as int)), partial_stateful_approx_count_distinct(subcategories#5, 0, 0), partial_statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@59d29a4b, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(review_count#6L) as int)), partial_stateful_approx_count_distinct(review_count#6L, 0, 0), partial_sum(cast(isnotnull(stars#7) as int)), partial_stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [467]: [sum#5563L, count#5564L, MS[0]#3736L, MS[1]#3737L, MS[2]#3738L, MS[3]#3739L, MS[4]#3740L, MS[5]#3741L, MS[6]#3742L, MS[7]#3743L, MS[8]#3744L, MS[9]#3745L, MS[10]#3746L, MS[11]#3747L, MS[12]#3748L, MS[13]#3749L, MS[14]#3750L, MS[15]#3751L, MS[16]#3752L, MS[17]#3753L, MS[18]#3754L, MS[19]#3755L, MS[20]#3756L, MS[21]#3757L, MS[22]#3758L, MS[23]#3759L, MS[24]#3760L, MS[25]#3761L, MS[26]#3762L, MS[27]#3763L, MS[28]#3764L, MS[29]#3765L, MS[30]#3766L, MS[31]#3767L, MS[32]#3768L, MS[33]#3769L, MS[34]#3770L, MS[35]#3771L, MS[36]#3772L, MS[37]#3773L, MS[38]#3774L, MS[39]#3775L, MS[40]#3776L, MS[41]#3777L, MS[42]#3778L, MS[43]#3779L, MS[44]#3780L, MS[45]#3781L, MS[46]#3782L, MS[47]#3783L, MS[48]#3784L, MS[49]#3785L, MS[50]#3786L, MS[51]#3787L, null#3840L, fractional#3841L, integral#3842L, boolean#3843L, string#3844L, min#5565, max#5566, sum#5567L, MS[0]#3850L, MS[1]#3851L, MS[2]#3852L, MS[3]#3853L, MS[4]#3854L, MS[5]#3855L, MS[6]#3856L, MS[7]#3857L, MS[8]#3858L, MS[9]#3859L, MS[10]#3860L, MS[11]#3861L, MS[12]#3862L, MS[13]#3863L, MS[14]#3864L, MS[15]#3865L, MS[16]#3866L, MS[17]#3867L, MS[18]#3868L, MS[19]#3869L, MS[20]#3870L, MS[21]#3871L, MS[22]#3872L, MS[23]#3873L, MS[24]#3874L, MS[25]#3875L, MS[26]#3876L, MS[27]#3877L, MS[28]#3878L, MS[29]#3879L, MS[30]#3880L, MS[31]#3881L, MS[32]#3882L, MS[33]#3883L, MS[34]#3884L, MS[35]#3885L, MS[36]#3886L, MS[37]#3887L, MS[38]#3888L, MS[39]#3889L, MS[40]#3890L, MS[41]#3891L, MS[42]#3892L, MS[43]#3893L, MS[44]#3894L, MS[45]#3895L, MS[46]#3896L, MS[47]#3897L, MS[48]#3898L, MS[49]#3899L, MS[50]#3900L, MS[51]#3901L, null#3954L, fractional#3955L, integral#3956L, boolean#3957L, string#3958L, min#5568, max#5569, sum#5570L, MS[0]#3964L, MS[1]#3965L, MS[2]#3966L, MS[3]#3967L, MS[4]#3968L, MS[5]#3969L, MS[6]#3970L, MS[7]#3971L, MS[8]#3972L, MS[9]#3973L, MS[10]#3974L, MS[11]#3975L, MS[12]#3976L, MS[13]#3977L, MS[14]#3978L, MS[15]#3979L, MS[16]#3980L, MS[17]#3981L, MS[18]#3982L, MS[19]#3983L, MS[20]#3984L, MS[21]#3985L, MS[22]#3986L, MS[23]#3987L, MS[24]#3988L, MS[25]#3989L, MS[26]#3990L, MS[27]#3991L, MS[28]#3992L, MS[29]#3993L, MS[30]#3994L, MS[31]#3995L, MS[32]#3996L, MS[33]#3997L, MS[34]#3998L, MS[35]#3999L, MS[36]#4000L, MS[37]#4001L, MS[38]#4002L, MS[39]#4003L, MS[40]#4004L, MS[41]#4005L, MS[42]#4006L, MS[43]#4007L, MS[44]#4008L, MS[45]#4009L, MS[46]#4010L, MS[47]#4011L, MS[48]#4012L, MS[49]#4013L, MS[50]#4014L, MS[51]#4015L, null#4068L, fractional#4069L, integral#4070L, boolean#4071L, string#4072L, min#5571, max#5572, sum#5573L, MS[0]#4078L, MS[1]#4079L, MS[2]#4080L, MS[3]#4081L, MS[4]#4082L, MS[5]#4083L, MS[6]#4084L, MS[7]#4085L, MS[8]#4086L, MS[9]#4087L, MS[10]#4088L, MS[11]#4089L, MS[12]#4090L, MS[13]#4091L, MS[14]#4092L, MS[15]#4093L, MS[16]#4094L, MS[17]#4095L, MS[18]#4096L, MS[19]#4097L, MS[20]#4098L, MS[21]#4099L, MS[22]#4100L, MS[23]#4101L, MS[24]#4102L, MS[25]#4103L, MS[26]#4104L, MS[27]#4105L, MS[28]#4106L, MS[29]#4107L, MS[30]#4108L, MS[31]#4109L, MS[32]#4110L, MS[33]#4111L, MS[34]#4112L, MS[35]#4113L, MS[36]#4114L, MS[37]#4115L, MS[38]#4116L, MS[39]#4117L, MS[40]#4118L, MS[41]#4119L, MS[42]#4120L, MS[43]#4121L, MS[44]#4122L, MS[45]#4123L, MS[46]#4124L, MS[47]#4125L, MS[48]#4126L, MS[49]#4127L, MS[50]#4128L, MS[51]#4129L, null#4182L, fractional#4183L, integral#4184L, boolean#4185L, string#4186L, min#5574, max#5575, sum#5576L, MS[0]#4192L, MS[1]#4193L, MS[2]#4194L, MS[3]#4195L, MS[4]#4196L, MS[5]#4197L, MS[6]#4198L, MS[7]#4199L, MS[8]#4200L, MS[9]#4201L, MS[10]#4202L, MS[11]#4203L, MS[12]#4204L, MS[13]#4205L, MS[14]#4206L, MS[15]#4207L, MS[16]#4208L, MS[17]#4209L, MS[18]#4210L, MS[19]#4211L, MS[20]#4212L, MS[21]#4213L, MS[22]#4214L, MS[23]#4215L, MS[24]#4216L, MS[25]#4217L, MS[26]#4218L, MS[27]#4219L, MS[28]#4220L, MS[29]#4221L, MS[30]#4222L, MS[31]#4223L, MS[32]#4224L, MS[33]#4225L, MS[34]#4226L, MS[35]#4227L, MS[36]#4228L, MS[37]#4229L, MS[38]#4230L, MS[39]#4231L, MS[40]#4232L, MS[41]#4233L, MS[42]#4234L, MS[43]#4235L, MS[44]#4236L, MS[45]#4237L, MS[46]#4238L, MS[47]#4239L, MS[48]#4240L, MS[49]#4241L, MS[50]#4242L, MS[51]#4243L, null#4296L, fractional#4297L, integral#4298L, boolean#4299L, string#4300L, min#5577, max#5578, sum#5579L, MS[0]#4306L, MS[1]#4307L, MS[2]#4308L, MS[3]#4309L, MS[4]#4310L, MS[5]#4311L, MS[6]#4312L, MS[7]#4313L, MS[8]#4314L, MS[9]#4315L, MS[10]#4316L, MS[11]#4317L, MS[12]#4318L, MS[13]#4319L, MS[14]#4320L, MS[15]#4321L, MS[16]#4322L, MS[17]#4323L, MS[18]#4324L, MS[19]#4325L, MS[20]#4326L, MS[21]#4327L, MS[22]#4328L, MS[23]#4329L, MS[24]#4330L, MS[25]#4331L, MS[26]#4332L, MS[27]#4333L, MS[28]#4334L, MS[29]#4335L, MS[30]#4336L, MS[31]#4337L, MS[32]#4338L, MS[33]#4339L, MS[34]#4340L, MS[35]#4341L, MS[36]#4342L, MS[37]#4343L, MS[38]#4344L, MS[39]#4345L, MS[40]#4346L, MS[41]#4347L, MS[42]#4348L, MS[43]#4349L, MS[44]#4350L, MS[45]#4351L, MS[46]#4352L, MS[47]#4353L, MS[48]#4354L, MS[49]#4355L, MS[50]#4356L, MS[51]#4357L, null#4410L, fractional#4411L, integral#4412L, boolean#4413L, string#4414L, min#5580, max#5581, sum#5582L, MS[0]#4420L, MS[1]#4421L, MS[2]#4422L, MS[3]#4423L, MS[4]#4424L, MS[5]#4425L, MS[6]#4426L, MS[7]#4427L, MS[8]#4428L, MS[9]#4429L, MS[10]#4430L, MS[11]#4431L, MS[12]#4432L, MS[13]#4433L, MS[14]#4434L, MS[15]#4435L, MS[16]#4436L, MS[17]#4437L, MS[18]#4438L, MS[19]#4439L, MS[20]#4440L, MS[21]#4441L, MS[22]#4442L, MS[23]#4443L, MS[24]#4444L, MS[25]#4445L, MS[26]#4446L, MS[27]#4447L, MS[28]#4448L, MS[29]#4449L, MS[30]#4450L, MS[31]#4451L, MS[32]#4452L, MS[33]#4453L, MS[34]#4454L, MS[35]#4455L, MS[36]#4456L, MS[37]#4457L, MS[38]#4458L, MS[39]#4459L, MS[40]#4460L, MS[41]#4461L, MS[42]#4462L, MS[43]#4463L, MS[44]#4464L, MS[45]#4465L, MS[46]#4466L, MS[47]#4467L, MS[48]#4468L, MS[49]#4469L, MS[50]#4470L, MS[51]#4471L, sum#5583L, MS[0]#4524L, MS[1]#4525L, MS[2]#4526L, MS[3]#4527L, MS[4]#4528L, MS[5]#4529L, MS[6]#4530L, MS[7]#4531L, MS[8]#4532L, MS[9]#4533L, MS[10]#4534L, MS[11]#4535L, MS[12]#4536L, MS[13]#4537L, MS[14]#4538L, MS[15]#4539L, MS[16]#4540L, MS[17]#4541L, MS[18]#4542L, MS[19]#4543L, MS[20]#4544L, MS[21]#4545L, MS[22]#4546L, MS[23]#4547L, MS[24]#4548L, MS[25]#4549L, MS[26]#4550L, MS[27]#4551L, MS[28]#4552L, MS[29]#4553L, MS[30]#4554L, MS[31]#4555L, MS[32]#4556L, MS[33]#4557L, MS[34]#4558L, MS[35]#4559L, MS[36]#4560L, MS[37]#4561L, MS[38]#4562L, MS[39]#4563L, MS[40]#4564L, MS[41]#4565L, MS[42]#4566L, MS[43]#4567L, MS[44]#4568L, MS[45]#4569L, MS[46]#4570L, MS[47]#4571L, MS[48]#4572L, MS[49]#4573L, MS[50]#4574L, MS[51]#4575L]\nResults [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\n\n(4) Exchange\nInput [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=256]\n\n(5) ShuffleQueryStage\nOutput [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\nArguments: 0\n\n(6) HashAggregate\nInput [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\nKeys: []\nFunctions [35]: [sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(subcategories#5) as int)), stateful_approx_count_distinct(subcategories#5, 0, 0), statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@59d29a4b, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(review_count#6L) as int)), stateful_approx_count_distinct(review_count#6L, 0, 0), sum(cast(isnotnull(stars#7) as int)), stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [35]: [sum(cast(isnotnull(business_id#0) as int))#809L, count(1)#810L, stateful_approx_count_distinct(business_id#0, 0, 0)#916, StatefulDataType(business_id#0)#927, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#932, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#937, sum(cast(isnotnull(name#1) as int))#938L, stateful_approx_count_distinct(name#1, 0, 0)#1045, StatefulDataType(name#1)#1056, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1061, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1066, sum(cast(isnotnull(city#2) as int))#1067L, stateful_approx_count_distinct(city#2, 0, 0)#1174, StatefulDataType(city#2)#1185, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1190, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1195, sum(cast(isnotnull(state#3) as int))#1196L, stateful_approx_count_distinct(state#3, 0, 0)#1303, StatefulDataType(state#3)#1314, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1319, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1324, sum(cast(isnotnull(category#4) as int))#1325L, stateful_approx_count_distinct(category#4, 0, 0)#1432, StatefulDataType(category#4)#1443, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1448, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1453, sum(cast(isnotnull(subcategories#5) as int))#1454L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1561, StatefulDataType(subcategories#5)#1572, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1577, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1582, sum(cast(isnotnull(review_count#6L) as int))#1583L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1690, sum(cast(isnotnull(stars#7) as int))#1691L, stateful_approx_count_distinct(stars#7, 0, 0)#1798]\nResults [43]: [sum(cast(isnotnull(business_id#0) as int))#809L AS sum(CAST((business_id IS NOT NULL) AS INT))#2801L, count(1)#810L AS count(1)#2802L, stateful_approx_count_distinct(business_id#0, 0, 0)#916 AS stateful_approx_count_distinct(business_id)#2907, StatefulDataType(business_id#0)#927 AS statefuldatatype(business_id)#2918, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#932 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2919, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#937 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2920, sum(cast(isnotnull(name#1) as int))#938L AS sum(CAST((name IS NOT NULL) AS INT))#2921L, count(1)#810L AS count(1)#2922L, stateful_approx_count_distinct(name#1, 0, 0)#1045 AS stateful_approx_count_distinct(name)#3027, StatefulDataType(name#1)#1056 AS statefuldatatype(name)#3038, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1061 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3039, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1066 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3040, sum(cast(isnotnull(city#2) as int))#1067L AS sum(CAST((city IS NOT NULL) AS INT))#3041L, count(1)#810L AS count(1)#3042L, stateful_approx_count_distinct(city#2, 0, 0)#1174 AS stateful_approx_count_distinct(city)#3147, StatefulDataType(city#2)#1185 AS statefuldatatype(city)#3158, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1190 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3159, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1195 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3160, sum(cast(isnotnull(state#3) as int))#1196L AS sum(CAST((state IS NOT NULL) AS INT))#3161L, count(1)#810L AS count(1)#3162L, stateful_approx_count_distinct(state#3, 0, 0)#1303 AS stateful_approx_count_distinct(state)#3267, StatefulDataType(state#3)#1314 AS statefuldatatype(state)#3278, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1319 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3279, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1324 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3280, sum(cast(isnotnull(category#4) as int))#1325L AS sum(CAST((category IS NOT NULL) AS INT))#3281L, count(1)#810L AS count(1)#3282L, stateful_approx_count_distinct(category#4, 0, 0)#1432 AS stateful_approx_count_distinct(category)#3387, StatefulDataType(category#4)#1443 AS statefuldatatype(category)#3398, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1448 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3399, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1453 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3400, sum(cast(isnotnull(subcategories#5) as int))#1454L AS sum(CAST((subcategories IS NOT NULL) AS INT))#3401L, count(1)#810L AS count(1)#3402L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1561 AS stateful_approx_count_distinct(subcategories)#3507, StatefulDataType(subcategories#5)#1572 AS statefuldatatype(subcategories)#3518, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1577 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3519, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1582 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3520, sum(cast(isnotnull(review_count#6L) as int))#1583L AS sum(CAST((review_count IS NOT NULL) AS INT))#3521L, count(1)#810L AS count(1)#3522L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1690 AS stateful_approx_count_distinct(review_count)#3627, sum(cast(isnotnull(stars#7) as int))#1691L AS sum(CAST((stars IS NOT NULL) AS INT))#3628L, count(1)#810L AS count(1)#3629L, stateful_approx_count_distinct(stars#7, 0, 0)#1798 AS stateful_approx_count_distinct(stars)#3734, count(1)#810L AS count(1)#3735L]\n\n(7) HashAggregate\nInput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nKeys: []\nFunctions [35]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(subcategories#5) as int)), partial_stateful_approx_count_distinct(subcategories#5, 0, 0), partial_statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@59d29a4b, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(review_count#6L) as int)), partial_stateful_approx_count_distinct(review_count#6L, 0, 0), partial_sum(cast(isnotnull(stars#7) as int)), partial_stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [467]: [sum#5563L, count#5564L, MS[0]#3736L, MS[1]#3737L, MS[2]#3738L, MS[3]#3739L, MS[4]#3740L, MS[5]#3741L, MS[6]#3742L, MS[7]#3743L, MS[8]#3744L, MS[9]#3745L, MS[10]#3746L, MS[11]#3747L, MS[12]#3748L, MS[13]#3749L, MS[14]#3750L, MS[15]#3751L, MS[16]#3752L, MS[17]#3753L, MS[18]#3754L, MS[19]#3755L, MS[20]#3756L, MS[21]#3757L, MS[22]#3758L, MS[23]#3759L, MS[24]#3760L, MS[25]#3761L, MS[26]#3762L, MS[27]#3763L, MS[28]#3764L, MS[29]#3765L, MS[30]#3766L, MS[31]#3767L, MS[32]#3768L, MS[33]#3769L, MS[34]#3770L, MS[35]#3771L, MS[36]#3772L, MS[37]#3773L, MS[38]#3774L, MS[39]#3775L, MS[40]#3776L, MS[41]#3777L, MS[42]#3778L, MS[43]#3779L, MS[44]#3780L, MS[45]#3781L, MS[46]#3782L, MS[47]#3783L, MS[48]#3784L, MS[49]#3785L, MS[50]#3786L, MS[51]#3787L, null#3840L, fractional#3841L, integral#3842L, boolean#3843L, string#3844L, min#5565, max#5566, sum#5567L, MS[0]#3850L, MS[1]#3851L, MS[2]#3852L, MS[3]#3853L, MS[4]#3854L, MS[5]#3855L, MS[6]#3856L, MS[7]#3857L, MS[8]#3858L, MS[9]#3859L, MS[10]#3860L, MS[11]#3861L, MS[12]#3862L, MS[13]#3863L, MS[14]#3864L, MS[15]#3865L, MS[16]#3866L, MS[17]#3867L, MS[18]#3868L, MS[19]#3869L, MS[20]#3870L, MS[21]#3871L, MS[22]#3872L, MS[23]#3873L, MS[24]#3874L, MS[25]#3875L, MS[26]#3876L, MS[27]#3877L, MS[28]#3878L, MS[29]#3879L, MS[30]#3880L, MS[31]#3881L, MS[32]#3882L, MS[33]#3883L, MS[34]#3884L, MS[35]#3885L, MS[36]#3886L, MS[37]#3887L, MS[38]#3888L, MS[39]#3889L, MS[40]#3890L, MS[41]#3891L, MS[42]#3892L, MS[43]#3893L, MS[44]#3894L, MS[45]#3895L, MS[46]#3896L, MS[47]#3897L, MS[48]#3898L, MS[49]#3899L, MS[50]#3900L, MS[51]#3901L, null#3954L, fractional#3955L, integral#3956L, boolean#3957L, string#3958L, min#5568, max#5569, sum#5570L, MS[0]#3964L, MS[1]#3965L, MS[2]#3966L, MS[3]#3967L, MS[4]#3968L, MS[5]#3969L, MS[6]#3970L, MS[7]#3971L, MS[8]#3972L, MS[9]#3973L, MS[10]#3974L, MS[11]#3975L, MS[12]#3976L, MS[13]#3977L, MS[14]#3978L, MS[15]#3979L, MS[16]#3980L, MS[17]#3981L, MS[18]#3982L, MS[19]#3983L, MS[20]#3984L, MS[21]#3985L, MS[22]#3986L, MS[23]#3987L, MS[24]#3988L, MS[25]#3989L, MS[26]#3990L, MS[27]#3991L, MS[28]#3992L, MS[29]#3993L, MS[30]#3994L, MS[31]#3995L, MS[32]#3996L, MS[33]#3997L, MS[34]#3998L, MS[35]#3999L, MS[36]#4000L, MS[37]#4001L, MS[38]#4002L, MS[39]#4003L, MS[40]#4004L, MS[41]#4005L, MS[42]#4006L, MS[43]#4007L, MS[44]#4008L, MS[45]#4009L, MS[46]#4010L, MS[47]#4011L, MS[48]#4012L, MS[49]#4013L, MS[50]#4014L, MS[51]#4015L, null#4068L, fractional#4069L, integral#4070L, boolean#4071L, string#4072L, min#5571, max#5572, sum#5573L, MS[0]#4078L, MS[1]#4079L, MS[2]#4080L, MS[3]#4081L, MS[4]#4082L, MS[5]#4083L, MS[6]#4084L, MS[7]#4085L, MS[8]#4086L, MS[9]#4087L, MS[10]#4088L, MS[11]#4089L, MS[12]#4090L, MS[13]#4091L, MS[14]#4092L, MS[15]#4093L, MS[16]#4094L, MS[17]#4095L, MS[18]#4096L, MS[19]#4097L, MS[20]#4098L, MS[21]#4099L, MS[22]#4100L, MS[23]#4101L, MS[24]#4102L, MS[25]#4103L, MS[26]#4104L, MS[27]#4105L, MS[28]#4106L, MS[29]#4107L, MS[30]#4108L, MS[31]#4109L, MS[32]#4110L, MS[33]#4111L, MS[34]#4112L, MS[35]#4113L, MS[36]#4114L, MS[37]#4115L, MS[38]#4116L, MS[39]#4117L, MS[40]#4118L, MS[41]#4119L, MS[42]#4120L, MS[43]#4121L, MS[44]#4122L, MS[45]#4123L, MS[46]#4124L, MS[47]#4125L, MS[48]#4126L, MS[49]#4127L, MS[50]#4128L, MS[51]#4129L, null#4182L, fractional#4183L, integral#4184L, boolean#4185L, string#4186L, min#5574, max#5575, sum#5576L, MS[0]#4192L, MS[1]#4193L, MS[2]#4194L, MS[3]#4195L, MS[4]#4196L, MS[5]#4197L, MS[6]#4198L, MS[7]#4199L, MS[8]#4200L, MS[9]#4201L, MS[10]#4202L, MS[11]#4203L, MS[12]#4204L, MS[13]#4205L, MS[14]#4206L, MS[15]#4207L, MS[16]#4208L, MS[17]#4209L, MS[18]#4210L, MS[19]#4211L, MS[20]#4212L, MS[21]#4213L, MS[22]#4214L, MS[23]#4215L, MS[24]#4216L, MS[25]#4217L, MS[26]#4218L, MS[27]#4219L, MS[28]#4220L, MS[29]#4221L, MS[30]#4222L, MS[31]#4223L, MS[32]#4224L, MS[33]#4225L, MS[34]#4226L, MS[35]#4227L, MS[36]#4228L, MS[37]#4229L, MS[38]#4230L, MS[39]#4231L, MS[40]#4232L, MS[41]#4233L, MS[42]#4234L, MS[43]#4235L, MS[44]#4236L, MS[45]#4237L, MS[46]#4238L, MS[47]#4239L, MS[48]#4240L, MS[49]#4241L, MS[50]#4242L, MS[51]#4243L, null#4296L, fractional#4297L, integral#4298L, boolean#4299L, string#4300L, min#5577, max#5578, sum#5579L, MS[0]#4306L, MS[1]#4307L, MS[2]#4308L, MS[3]#4309L, MS[4]#4310L, MS[5]#4311L, MS[6]#4312L, MS[7]#4313L, MS[8]#4314L, MS[9]#4315L, MS[10]#4316L, MS[11]#4317L, MS[12]#4318L, MS[13]#4319L, MS[14]#4320L, MS[15]#4321L, MS[16]#4322L, MS[17]#4323L, MS[18]#4324L, MS[19]#4325L, MS[20]#4326L, MS[21]#4327L, MS[22]#4328L, MS[23]#4329L, MS[24]#4330L, MS[25]#4331L, MS[26]#4332L, MS[27]#4333L, MS[28]#4334L, MS[29]#4335L, MS[30]#4336L, MS[31]#4337L, MS[32]#4338L, MS[33]#4339L, MS[34]#4340L, MS[35]#4341L, MS[36]#4342L, MS[37]#4343L, MS[38]#4344L, MS[39]#4345L, MS[40]#4346L, MS[41]#4347L, MS[42]#4348L, MS[43]#4349L, MS[44]#4350L, MS[45]#4351L, MS[46]#4352L, MS[47]#4353L, MS[48]#4354L, MS[49]#4355L, MS[50]#4356L, MS[51]#4357L, null#4410L, fractional#4411L, integral#4412L, boolean#4413L, string#4414L, min#5580, max#5581, sum#5582L, MS[0]#4420L, MS[1]#4421L, MS[2]#4422L, MS[3]#4423L, MS[4]#4424L, MS[5]#4425L, MS[6]#4426L, MS[7]#4427L, MS[8]#4428L, MS[9]#4429L, MS[10]#4430L, MS[11]#4431L, MS[12]#4432L, MS[13]#4433L, MS[14]#4434L, MS[15]#4435L, MS[16]#4436L, MS[17]#4437L, MS[18]#4438L, MS[19]#4439L, MS[20]#4440L, MS[21]#4441L, MS[22]#4442L, MS[23]#4443L, MS[24]#4444L, MS[25]#4445L, MS[26]#4446L, MS[27]#4447L, MS[28]#4448L, MS[29]#4449L, MS[30]#4450L, MS[31]#4451L, MS[32]#4452L, MS[33]#4453L, MS[34]#4454L, MS[35]#4455L, MS[36]#4456L, MS[37]#4457L, MS[38]#4458L, MS[39]#4459L, MS[40]#4460L, MS[41]#4461L, MS[42]#4462L, MS[43]#4463L, MS[44]#4464L, MS[45]#4465L, MS[46]#4466L, MS[47]#4467L, MS[48]#4468L, MS[49]#4469L, MS[50]#4470L, MS[51]#4471L, sum#5583L, MS[0]#4524L, MS[1]#4525L, MS[2]#4526L, MS[3]#4527L, MS[4]#4528L, MS[5]#4529L, MS[6]#4530L, MS[7]#4531L, MS[8]#4532L, MS[9]#4533L, MS[10]#4534L, MS[11]#4535L, MS[12]#4536L, MS[13]#4537L, MS[14]#4538L, MS[15]#4539L, MS[16]#4540L, MS[17]#4541L, MS[18]#4542L, MS[19]#4543L, MS[20]#4544L, MS[21]#4545L, MS[22]#4546L, MS[23]#4547L, MS[24]#4548L, MS[25]#4549L, MS[26]#4550L, MS[27]#4551L, MS[28]#4552L, MS[29]#4553L, MS[30]#4554L, MS[31]#4555L, MS[32]#4556L, MS[33]#4557L, MS[34]#4558L, MS[35]#4559L, MS[36]#4560L, MS[37]#4561L, MS[38]#4562L, MS[39]#4563L, MS[40]#4564L, MS[41]#4565L, MS[42]#4566L, MS[43]#4567L, MS[44]#4568L, MS[45]#4569L, MS[46]#4570L, MS[47]#4571L, MS[48]#4572L, MS[49]#4573L, MS[50]#4574L, MS[51]#4575L]\nResults [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\n\n(8) Exchange\nInput [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=243]\n\n(9) HashAggregate\nInput [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\nKeys: []\nFunctions [35]: [sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(subcategories#5) as int)), stateful_approx_count_distinct(subcategories#5, 0, 0), statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@59d29a4b, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(review_count#6L) as int)), stateful_approx_count_distinct(review_count#6L, 0, 0), sum(cast(isnotnull(stars#7) as int)), stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [35]: [sum(cast(isnotnull(business_id#0) as int))#809L, count(1)#810L, stateful_approx_count_distinct(business_id#0, 0, 0)#916, StatefulDataType(business_id#0)#927, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#932, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#937, sum(cast(isnotnull(name#1) as int))#938L, stateful_approx_count_distinct(name#1, 0, 0)#1045, StatefulDataType(name#1)#1056, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1061, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1066, sum(cast(isnotnull(city#2) as int))#1067L, stateful_approx_count_distinct(city#2, 0, 0)#1174, StatefulDataType(city#2)#1185, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1190, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1195, sum(cast(isnotnull(state#3) as int))#1196L, stateful_approx_count_distinct(state#3, 0, 0)#1303, StatefulDataType(state#3)#1314, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1319, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1324, sum(cast(isnotnull(category#4) as int))#1325L, stateful_approx_count_distinct(category#4, 0, 0)#1432, StatefulDataType(category#4)#1443, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1448, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1453, sum(cast(isnotnull(subcategories#5) as int))#1454L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1561, StatefulDataType(subcategories#5)#1572, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1577, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1582, sum(cast(isnotnull(review_count#6L) as int))#1583L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1690, sum(cast(isnotnull(stars#7) as int))#1691L, stateful_approx_count_distinct(stars#7, 0, 0)#1798]\nResults [43]: [sum(cast(isnotnull(business_id#0) as int))#809L AS sum(CAST((business_id IS NOT NULL) AS INT))#2801L, count(1)#810L AS count(1)#2802L, stateful_approx_count_distinct(business_id#0, 0, 0)#916 AS stateful_approx_count_distinct(business_id)#2907, StatefulDataType(business_id#0)#927 AS statefuldatatype(business_id)#2918, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#932 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2919, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#937 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2920, sum(cast(isnotnull(name#1) as int))#938L AS sum(CAST((name IS NOT NULL) AS INT))#2921L, count(1)#810L AS count(1)#2922L, stateful_approx_count_distinct(name#1, 0, 0)#1045 AS stateful_approx_count_distinct(name)#3027, StatefulDataType(name#1)#1056 AS statefuldatatype(name)#3038, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1061 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3039, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1066 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3040, sum(cast(isnotnull(city#2) as int))#1067L AS sum(CAST((city IS NOT NULL) AS INT))#3041L, count(1)#810L AS count(1)#3042L, stateful_approx_count_distinct(city#2, 0, 0)#1174 AS stateful_approx_count_distinct(city)#3147, StatefulDataType(city#2)#1185 AS statefuldatatype(city)#3158, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1190 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3159, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1195 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3160, sum(cast(isnotnull(state#3) as int))#1196L AS sum(CAST((state IS NOT NULL) AS INT))#3161L, count(1)#810L AS count(1)#3162L, stateful_approx_count_distinct(state#3, 0, 0)#1303 AS stateful_approx_count_distinct(state)#3267, StatefulDataType(state#3)#1314 AS statefuldatatype(state)#3278, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1319 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3279, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1324 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3280, sum(cast(isnotnull(category#4) as int))#1325L AS sum(CAST((category IS NOT NULL) AS INT))#3281L, count(1)#810L AS count(1)#3282L, stateful_approx_count_distinct(category#4, 0, 0)#1432 AS stateful_approx_count_distinct(category)#3387, StatefulDataType(category#4)#1443 AS statefuldatatype(category)#3398, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1448 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3399, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1453 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3400, sum(cast(isnotnull(subcategories#5) as int))#1454L AS sum(CAST((subcategories IS NOT NULL) AS INT))#3401L, count(1)#810L AS count(1)#3402L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1561 AS stateful_approx_count_distinct(subcategories)#3507, StatefulDataType(subcategories#5)#1572 AS statefuldatatype(subcategories)#3518, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1577 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3519, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1582 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3520, sum(cast(isnotnull(review_count#6L) as int))#1583L AS sum(CAST((review_count IS NOT NULL) AS INT))#3521L, count(1)#810L AS count(1)#3522L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1690 AS stateful_approx_count_distinct(review_count)#3627, sum(cast(isnotnull(stars#7) as int))#1691L AS sum(CAST((stars IS NOT NULL) AS INT))#3628L, count(1)#810L AS count(1)#3629L, stateful_approx_count_distinct(stars#7, 0, 0)#1798 AS stateful_approx_count_distinct(stars)#3734, count(1)#810L AS count(1)#3735L]\n\n(10) AdaptiveSparkPlan\nOutput [43]: [sum(CAST((business_id IS NOT NULL) AS INT))#2801L, count(1)#2802L, stateful_approx_count_distinct(business_id)#2907, statefuldatatype(business_id)#2918, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2919, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2920, sum(CAST((name IS NOT NULL) AS INT))#2921L, count(1)#2922L, stateful_approx_count_distinct(name)#3027, statefuldatatype(name)#3038, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3039, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3040, sum(CAST((city IS NOT NULL) AS INT))#3041L, count(1)#3042L, stateful_approx_count_distinct(city)#3147, statefuldatatype(city)#3158, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3159, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3160, sum(CAST((state IS NOT NULL) AS INT))#3161L, count(1)#3162L, stateful_approx_count_distinct(state)#3267, statefuldatatype(state)#3278, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3279, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3280, sum(CAST((category IS NOT NULL) AS INT))#3281L, count(1)#3282L, stateful_approx_count_distinct(category)#3387, statefuldatatype(category)#3398, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3399, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3400, sum(CAST((subcategories IS NOT NULL) AS INT))#3401L, count(1)#3402L, stateful_approx_count_distinct(subcategories)#3507, statefuldatatype(subcategories)#3518, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3519, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3520, sum(CAST((review_count IS NOT NULL) AS INT))#3521L, count(1)#3522L, stateful_approx_count_distinct(review_count)#3627, sum(CAST((stars IS NOT NULL) AS INT))#3628L, count(1)#3629L, stateful_approx_count_distinct(stars)#3734, count(1)#3735L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), ... 11 more fields])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=256]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), ... 11 more fields])","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,name#1,city#2,state#3,category#4,subcategories#5,review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:stri...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:string,review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":900,"metricType":"sum"},{"name":"scan time","accumulatorId":899,"metricType":"timing"},{"name":"metadata time","accumulatorId":901,"metricType":"timing"},{"name":"size of files read","accumulatorId":902,"metricType":"size"},{"name":"number of output rows","accumulatorId":898,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":938,"metricType":"sum"},{"name":"number of input batches","accumulatorId":939,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":937,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":933,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":934,"metricType":"timing"},{"name":"peak memory","accumulatorId":932,"metricType":"size"},{"name":"number of output rows","accumulatorId":931,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":936,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":935,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":929,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":923,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":930,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":924,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":921,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":918,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":927,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":920,"metricType":"sum"},{"name":"records read","accumulatorId":917,"metricType":"sum"},{"name":"local bytes read","accumulatorId":915,"metricType":"size"},{"name":"fetch wait time","accumulatorId":916,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":913,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":919,"metricType":"sum"},{"name":"local blocks read","accumulatorId":912,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":922,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":911,"metricType":"sum"},{"name":"data size","accumulatorId":909,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":925,"metricType":"size"},{"name":"number of partitions","accumulatorId":910,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":926,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":914,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":928,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":905,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":906,"metricType":"timing"},{"name":"peak memory","accumulatorId":904,"metricType":"size"},{"name":"number of output rows","accumulatorId":903,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":908,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":907,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":6,"accumUpdates":[[900,1],[901,0],[902,37975350]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":6,"accumUpdates":[[910,1]]}
{"Event":"SparkListenerJobStart","Job ID":12,"Submission Time":1720114387829,"Stage Infos":[{"Stage ID":18,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"106\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"111\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"108\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"107\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"FileScanRDD","Scope":"{\"id\":\"111\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[18],"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"106\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"6","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":18,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"106\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"111\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"108\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"107\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"FileScanRDD","Scope":"{\"id\":\"111\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114387830,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"106\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"6","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":18,"Stage Attempt ID":0,"Task Info":{"Task ID":36,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114387836,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":18,"Stage Attempt ID":0,"Task Info":{"Task ID":37,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114387836,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":18,"Stage Attempt ID":0,"Task Info":{"Task ID":38,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114387836,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":18,"Stage Attempt ID":0,"Task Info":{"Task ID":39,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114387837,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":18,"Stage Attempt ID":0,"Task Info":{"Task ID":40,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114387837,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":18,"Stage Attempt ID":0,"Task Info":{"Task ID":41,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114387837,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":18,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":37,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114387836,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114389168,"Failed":false,"Killed":false,"Accumulables":[{"ID":899,"Name":"scan time","Update":"936","Value":"936","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":909,"Name":"data size","Update":"3800","Value":"3800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":928,"Name":"shuffle bytes written","Update":"93","Value":"93","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":929,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":930,"Name":"shuffle write time","Update":"294459","Value":"294459","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":931,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":932,"Name":"peak memory","Update":"33816560","Value":"33816560","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":933,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":934,"Name":"time in aggregation build","Update":"1284","Value":"1284","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":935,"Name":"avg hash probes per key","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":937,"Name":"duration","Update":"2220","Value":"2220","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":940,"Name":"internal.metrics.executorDeserializeTime","Update":30,"Value":30,"Internal":true,"Count Failed Values":true},{"ID":941,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14628625,"Value":14628625,"Internal":true,"Count Failed Values":true},{"ID":942,"Name":"internal.metrics.executorRunTime","Update":1294,"Value":1294,"Internal":true,"Count Failed Values":true},{"ID":943,"Name":"internal.metrics.executorCpuTime","Update":317119070,"Value":317119070,"Internal":true,"Count Failed Values":true},{"ID":944,"Name":"internal.metrics.resultSize","Update":2678,"Value":2678,"Internal":true,"Count Failed Values":true},{"ID":949,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":33816560,"Internal":true,"Count Failed Values":true},{"ID":968,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":93,"Value":93,"Internal":true,"Count Failed Values":true},{"ID":969,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":970,"Name":"internal.metrics.shuffle.write.writeTime","Update":294459,"Value":294459,"Internal":true,"Count Failed Values":true},{"ID":971,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":1799,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":30,"Executor Deserialize CPU Time":14628625,"Executor Run Time":1294,"Executor CPU Time":317119070,"Peak Execution Memory":33816560,"Result Size":2678,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":93,"Shuffle Write Time":294459,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":18,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":40,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114387837,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114389189,"Failed":false,"Killed":false,"Accumulables":[{"ID":899,"Name":"scan time","Update":"1155","Value":"2091","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":909,"Name":"data size","Update":"3800","Value":"7600","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":928,"Name":"shuffle bytes written","Update":"93","Value":"186","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":929,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":930,"Name":"shuffle write time","Update":"371623","Value":"666082","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":931,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":932,"Name":"peak memory","Update":"33816560","Value":"67633120","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":933,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":934,"Name":"time in aggregation build","Update":"1302","Value":"2586","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":935,"Name":"avg hash probes per key","Update":"10","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":937,"Name":"duration","Update":"2457","Value":"4677","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":940,"Name":"internal.metrics.executorDeserializeTime","Update":32,"Value":62,"Internal":true,"Count Failed Values":true},{"ID":941,"Name":"internal.metrics.executorDeserializeCpuTime","Update":20893125,"Value":35521750,"Internal":true,"Count Failed Values":true},{"ID":942,"Name":"internal.metrics.executorRunTime","Update":1311,"Value":2605,"Internal":true,"Count Failed Values":true},{"ID":943,"Name":"internal.metrics.executorCpuTime","Update":131441248,"Value":448560318,"Internal":true,"Count Failed Values":true},{"ID":944,"Name":"internal.metrics.resultSize","Update":2678,"Value":5356,"Internal":true,"Count Failed Values":true},{"ID":949,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":67633120,"Internal":true,"Count Failed Values":true},{"ID":968,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":93,"Value":186,"Internal":true,"Count Failed Values":true},{"ID":969,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":970,"Name":"internal.metrics.shuffle.write.writeTime","Update":371623,"Value":666082,"Internal":true,"Count Failed Values":true},{"ID":971,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":3598,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":32,"Executor Deserialize CPU Time":20893125,"Executor Run Time":1311,"Executor CPU Time":131441248,"Peak Execution Memory":33816560,"Result Size":2678,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":93,"Shuffle Write Time":371623,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":18,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":41,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114387837,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114389255,"Failed":false,"Killed":false,"Accumulables":[{"ID":899,"Name":"scan time","Update":"943","Value":"3034","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":909,"Name":"data size","Update":"3800","Value":"11400","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":928,"Name":"shuffle bytes written","Update":"93","Value":"279","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":929,"Name":"shuffle records written","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":930,"Name":"shuffle write time","Update":"338793","Value":"1004875","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":931,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":932,"Name":"peak memory","Update":"33816560","Value":"101449680","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":933,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":934,"Name":"time in aggregation build","Update":"1338","Value":"3924","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":935,"Name":"avg hash probes per key","Update":"10","Value":"30","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":937,"Name":"duration","Update":"2281","Value":"6958","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":940,"Name":"internal.metrics.executorDeserializeTime","Update":48,"Value":110,"Internal":true,"Count Failed Values":true},{"ID":941,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14529040,"Value":50050790,"Internal":true,"Count Failed Values":true},{"ID":942,"Name":"internal.metrics.executorRunTime","Update":1349,"Value":3954,"Internal":true,"Count Failed Values":true},{"ID":943,"Name":"internal.metrics.executorCpuTime","Update":286981414,"Value":735541732,"Internal":true,"Count Failed Values":true},{"ID":944,"Name":"internal.metrics.resultSize","Update":2764,"Value":8120,"Internal":true,"Count Failed Values":true},{"ID":945,"Name":"internal.metrics.jvmGCTime","Update":25,"Value":25,"Internal":true,"Count Failed Values":true},{"ID":946,"Name":"internal.metrics.resultSerializationTime","Update":8,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":949,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":101449680,"Internal":true,"Count Failed Values":true},{"ID":968,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":93,"Value":279,"Internal":true,"Count Failed Values":true},{"ID":969,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":970,"Name":"internal.metrics.shuffle.write.writeTime","Update":338793,"Value":1004875,"Internal":true,"Count Failed Values":true},{"ID":971,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":5397,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":48,"Executor Deserialize CPU Time":14529040,"Executor Run Time":1349,"Executor CPU Time":286981414,"Peak Execution Memory":33816560,"Result Size":2764,"JVM GC Time":25,"Result Serialization Time":8,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":93,"Shuffle Write Time":338793,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":18,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":36,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114387836,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114389291,"Failed":false,"Killed":false,"Accumulables":[{"ID":899,"Name":"scan time","Update":"938","Value":"3972","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":909,"Name":"data size","Update":"3800","Value":"15200","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":928,"Name":"shuffle bytes written","Update":"93","Value":"372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":929,"Name":"shuffle records written","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":930,"Name":"shuffle write time","Update":"290126","Value":"1295001","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":931,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":932,"Name":"peak memory","Update":"33816560","Value":"135266240","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":933,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":934,"Name":"time in aggregation build","Update":"1385","Value":"5309","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":935,"Name":"avg hash probes per key","Update":"10","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":937,"Name":"duration","Update":"2323","Value":"9281","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":940,"Name":"internal.metrics.executorDeserializeTime","Update":37,"Value":147,"Internal":true,"Count Failed Values":true},{"ID":941,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8994499,"Value":59045289,"Internal":true,"Count Failed Values":true},{"ID":942,"Name":"internal.metrics.executorRunTime","Update":1406,"Value":5360,"Internal":true,"Count Failed Values":true},{"ID":943,"Name":"internal.metrics.executorCpuTime","Update":282974876,"Value":1018516608,"Internal":true,"Count Failed Values":true},{"ID":944,"Name":"internal.metrics.resultSize","Update":2721,"Value":10841,"Internal":true,"Count Failed Values":true},{"ID":945,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":37,"Internal":true,"Count Failed Values":true},{"ID":949,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":135266240,"Internal":true,"Count Failed Values":true},{"ID":968,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":93,"Value":372,"Internal":true,"Count Failed Values":true},{"ID":969,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":970,"Name":"internal.metrics.shuffle.write.writeTime","Update":290126,"Value":1295001,"Internal":true,"Count Failed Values":true},{"ID":971,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":7196,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":483437056,"JVMOffHeapMemory":124777904,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":688373,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":688373,"OffHeapUnifiedMemory":0,"DirectPoolMemory":27490183,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":18,"MinorGCTime":91,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":91},"Task Metrics":{"Executor Deserialize Time":37,"Executor Deserialize CPU Time":8994499,"Executor Run Time":1406,"Executor CPU Time":282974876,"Peak Execution Memory":33816560,"Result Size":2721,"JVM GC Time":12,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":93,"Shuffle Write Time":290126,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":18,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":39,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114387837,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114389291,"Failed":false,"Killed":false,"Accumulables":[{"ID":899,"Name":"scan time","Update":"944","Value":"4916","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":909,"Name":"data size","Update":"3800","Value":"19000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":928,"Name":"shuffle bytes written","Update":"93","Value":"465","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":929,"Name":"shuffle records written","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":930,"Name":"shuffle write time","Update":"301875","Value":"1596876","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":931,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":932,"Name":"peak memory","Update":"33816560","Value":"169082800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":933,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":934,"Name":"time in aggregation build","Update":"1386","Value":"6695","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":935,"Name":"avg hash probes per key","Update":"10","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":937,"Name":"duration","Update":"2330","Value":"11611","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":940,"Name":"internal.metrics.executorDeserializeTime","Update":33,"Value":180,"Internal":true,"Count Failed Values":true},{"ID":941,"Name":"internal.metrics.executorDeserializeCpuTime","Update":17031541,"Value":76076830,"Internal":true,"Count Failed Values":true},{"ID":942,"Name":"internal.metrics.executorRunTime","Update":1412,"Value":6772,"Internal":true,"Count Failed Values":true},{"ID":943,"Name":"internal.metrics.executorCpuTime","Update":281783333,"Value":1300299941,"Internal":true,"Count Failed Values":true},{"ID":944,"Name":"internal.metrics.resultSize","Update":2721,"Value":13562,"Internal":true,"Count Failed Values":true},{"ID":945,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":49,"Internal":true,"Count Failed Values":true},{"ID":949,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":169082800,"Internal":true,"Count Failed Values":true},{"ID":968,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":93,"Value":465,"Internal":true,"Count Failed Values":true},{"ID":969,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":970,"Name":"internal.metrics.shuffle.write.writeTime","Update":301875,"Value":1596876,"Internal":true,"Count Failed Values":true},{"ID":971,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":8995,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":483437056,"JVMOffHeapMemory":124777904,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":688373,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":688373,"OffHeapUnifiedMemory":0,"DirectPoolMemory":27490183,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":18,"MinorGCTime":91,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":91},"Task Metrics":{"Executor Deserialize Time":33,"Executor Deserialize CPU Time":17031541,"Executor Run Time":1412,"Executor CPU Time":281783333,"Peak Execution Memory":33816560,"Result Size":2721,"JVM GC Time":12,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":93,"Shuffle Write Time":301875,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":18,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":38,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114387836,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114396019,"Failed":false,"Killed":false,"Accumulables":[{"ID":898,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":899,"Name":"scan time","Update":"6341","Value":"11257","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":909,"Name":"data size","Update":"3800","Value":"22800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":928,"Name":"shuffle bytes written","Update":"2938","Value":"3403","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":929,"Name":"shuffle records written","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":930,"Name":"shuffle write time","Update":"484957","Value":"2081833","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":931,"Name":"number of output rows","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":932,"Name":"peak memory","Update":"33816560","Value":"202899360","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":933,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":934,"Name":"time in aggregation build","Update":"8116","Value":"14811","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":935,"Name":"avg hash probes per key","Update":"10","Value":"60","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":937,"Name":"duration","Update":"8116","Value":"19727","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":938,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":939,"Name":"number of input batches","Update":"144","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":940,"Name":"internal.metrics.executorDeserializeTime","Update":45,"Value":225,"Internal":true,"Count Failed Values":true},{"ID":941,"Name":"internal.metrics.executorDeserializeCpuTime","Update":13003081,"Value":89079911,"Internal":true,"Count Failed Values":true},{"ID":942,"Name":"internal.metrics.executorRunTime","Update":8131,"Value":14903,"Internal":true,"Count Failed Values":true},{"ID":943,"Name":"internal.metrics.executorCpuTime","Update":2206038703,"Value":3506338644,"Internal":true,"Count Failed Values":true},{"ID":944,"Name":"internal.metrics.resultSize","Update":2764,"Value":16326,"Internal":true,"Count Failed Values":true},{"ID":945,"Name":"internal.metrics.jvmGCTime","Update":47,"Value":96,"Internal":true,"Count Failed Values":true},{"ID":949,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":202899360,"Internal":true,"Count Failed Values":true},{"ID":968,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":2938,"Value":3403,"Internal":true,"Count Failed Values":true},{"ID":969,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":970,"Name":"internal.metrics.shuffle.write.writeTime","Update":484957,"Value":2081833,"Internal":true,"Count Failed Values":true},{"ID":971,"Name":"internal.metrics.input.bytesRead","Update":37977145,"Value":37986140,"Internal":true,"Count Failed Values":true},{"ID":972,"Name":"internal.metrics.input.recordsRead","Update":586579,"Value":586579,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":193010176,"JVMOffHeapMemory":118868888,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":688373,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":688373,"OffHeapUnifiedMemory":0,"DirectPoolMemory":25318144,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":16,"MinorGCTime":87,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":87},"Task Metrics":{"Executor Deserialize Time":45,"Executor Deserialize CPU Time":13003081,"Executor Run Time":8131,"Executor CPU Time":2206038703,"Peak Execution Memory":33816560,"Result Size":2764,"JVM GC Time":47,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":2938,"Shuffle Write Time":484957,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":37977145,"Records Read":586579},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":18,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"106\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"111\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"108\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"107\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"FileScanRDD","Scope":"{\"id\":\"111\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114387830,"Completion Time":1720114396020,"Accumulables":[{"ID":898,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":899,"Name":"scan time","Value":"11257","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":909,"Name":"data size","Value":"22800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":928,"Name":"shuffle bytes written","Value":"3403","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":929,"Name":"shuffle records written","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":930,"Name":"shuffle write time","Value":"2081833","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":931,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":932,"Name":"peak memory","Value":"202899360","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":933,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":934,"Name":"time in aggregation build","Value":"14811","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":935,"Name":"avg hash probes per key","Value":"60","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":937,"Name":"duration","Value":"19727","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":938,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":939,"Name":"number of input batches","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":940,"Name":"internal.metrics.executorDeserializeTime","Value":225,"Internal":true,"Count Failed Values":true},{"ID":941,"Name":"internal.metrics.executorDeserializeCpuTime","Value":89079911,"Internal":true,"Count Failed Values":true},{"ID":942,"Name":"internal.metrics.executorRunTime","Value":14903,"Internal":true,"Count Failed Values":true},{"ID":943,"Name":"internal.metrics.executorCpuTime","Value":3506338644,"Internal":true,"Count Failed Values":true},{"ID":944,"Name":"internal.metrics.resultSize","Value":16326,"Internal":true,"Count Failed Values":true},{"ID":945,"Name":"internal.metrics.jvmGCTime","Value":96,"Internal":true,"Count Failed Values":true},{"ID":946,"Name":"internal.metrics.resultSerializationTime","Value":8,"Internal":true,"Count Failed Values":true},{"ID":949,"Name":"internal.metrics.peakExecutionMemory","Value":202899360,"Internal":true,"Count Failed Values":true},{"ID":968,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":3403,"Internal":true,"Count Failed Values":true},{"ID":969,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":6,"Internal":true,"Count Failed Values":true},{"ID":970,"Name":"internal.metrics.shuffle.write.writeTime","Value":2081833,"Internal":true,"Count Failed Values":true},{"ID":971,"Name":"internal.metrics.input.bytesRead","Value":37986140,"Internal":true,"Count Failed Values":true},{"ID":972,"Name":"internal.metrics.input.recordsRead","Value":586579,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":12,"Completion Time":1720114396020,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":6,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Final Plan ==\n   HashAggregate (6)\n   +- ShuffleQueryStage (5), Statistics(sizeInBytes=22.3 KiB, rowCount=6)\n      +- Exchange (4)\n         +- HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:string,review_count:bigint,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\n\n(3) HashAggregate\nInput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nKeys: []\nFunctions [35]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(subcategories#5) as int)), partial_stateful_approx_count_distinct(subcategories#5, 0, 0), partial_statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@59d29a4b, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(review_count#6L) as int)), partial_stateful_approx_count_distinct(review_count#6L, 0, 0), partial_sum(cast(isnotnull(stars#7) as int)), partial_stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [467]: [sum#5563L, count#5564L, MS[0]#3736L, MS[1]#3737L, MS[2]#3738L, MS[3]#3739L, MS[4]#3740L, MS[5]#3741L, MS[6]#3742L, MS[7]#3743L, MS[8]#3744L, MS[9]#3745L, MS[10]#3746L, MS[11]#3747L, MS[12]#3748L, MS[13]#3749L, MS[14]#3750L, MS[15]#3751L, MS[16]#3752L, MS[17]#3753L, MS[18]#3754L, MS[19]#3755L, MS[20]#3756L, MS[21]#3757L, MS[22]#3758L, MS[23]#3759L, MS[24]#3760L, MS[25]#3761L, MS[26]#3762L, MS[27]#3763L, MS[28]#3764L, MS[29]#3765L, MS[30]#3766L, MS[31]#3767L, MS[32]#3768L, MS[33]#3769L, MS[34]#3770L, MS[35]#3771L, MS[36]#3772L, MS[37]#3773L, MS[38]#3774L, MS[39]#3775L, MS[40]#3776L, MS[41]#3777L, MS[42]#3778L, MS[43]#3779L, MS[44]#3780L, MS[45]#3781L, MS[46]#3782L, MS[47]#3783L, MS[48]#3784L, MS[49]#3785L, MS[50]#3786L, MS[51]#3787L, null#3840L, fractional#3841L, integral#3842L, boolean#3843L, string#3844L, min#5565, max#5566, sum#5567L, MS[0]#3850L, MS[1]#3851L, MS[2]#3852L, MS[3]#3853L, MS[4]#3854L, MS[5]#3855L, MS[6]#3856L, MS[7]#3857L, MS[8]#3858L, MS[9]#3859L, MS[10]#3860L, MS[11]#3861L, MS[12]#3862L, MS[13]#3863L, MS[14]#3864L, MS[15]#3865L, MS[16]#3866L, MS[17]#3867L, MS[18]#3868L, MS[19]#3869L, MS[20]#3870L, MS[21]#3871L, MS[22]#3872L, MS[23]#3873L, MS[24]#3874L, MS[25]#3875L, MS[26]#3876L, MS[27]#3877L, MS[28]#3878L, MS[29]#3879L, MS[30]#3880L, MS[31]#3881L, MS[32]#3882L, MS[33]#3883L, MS[34]#3884L, MS[35]#3885L, MS[36]#3886L, MS[37]#3887L, MS[38]#3888L, MS[39]#3889L, MS[40]#3890L, MS[41]#3891L, MS[42]#3892L, MS[43]#3893L, MS[44]#3894L, MS[45]#3895L, MS[46]#3896L, MS[47]#3897L, MS[48]#3898L, MS[49]#3899L, MS[50]#3900L, MS[51]#3901L, null#3954L, fractional#3955L, integral#3956L, boolean#3957L, string#3958L, min#5568, max#5569, sum#5570L, MS[0]#3964L, MS[1]#3965L, MS[2]#3966L, MS[3]#3967L, MS[4]#3968L, MS[5]#3969L, MS[6]#3970L, MS[7]#3971L, MS[8]#3972L, MS[9]#3973L, MS[10]#3974L, MS[11]#3975L, MS[12]#3976L, MS[13]#3977L, MS[14]#3978L, MS[15]#3979L, MS[16]#3980L, MS[17]#3981L, MS[18]#3982L, MS[19]#3983L, MS[20]#3984L, MS[21]#3985L, MS[22]#3986L, MS[23]#3987L, MS[24]#3988L, MS[25]#3989L, MS[26]#3990L, MS[27]#3991L, MS[28]#3992L, MS[29]#3993L, MS[30]#3994L, MS[31]#3995L, MS[32]#3996L, MS[33]#3997L, MS[34]#3998L, MS[35]#3999L, MS[36]#4000L, MS[37]#4001L, MS[38]#4002L, MS[39]#4003L, MS[40]#4004L, MS[41]#4005L, MS[42]#4006L, MS[43]#4007L, MS[44]#4008L, MS[45]#4009L, MS[46]#4010L, MS[47]#4011L, MS[48]#4012L, MS[49]#4013L, MS[50]#4014L, MS[51]#4015L, null#4068L, fractional#4069L, integral#4070L, boolean#4071L, string#4072L, min#5571, max#5572, sum#5573L, MS[0]#4078L, MS[1]#4079L, MS[2]#4080L, MS[3]#4081L, MS[4]#4082L, MS[5]#4083L, MS[6]#4084L, MS[7]#4085L, MS[8]#4086L, MS[9]#4087L, MS[10]#4088L, MS[11]#4089L, MS[12]#4090L, MS[13]#4091L, MS[14]#4092L, MS[15]#4093L, MS[16]#4094L, MS[17]#4095L, MS[18]#4096L, MS[19]#4097L, MS[20]#4098L, MS[21]#4099L, MS[22]#4100L, MS[23]#4101L, MS[24]#4102L, MS[25]#4103L, MS[26]#4104L, MS[27]#4105L, MS[28]#4106L, MS[29]#4107L, MS[30]#4108L, MS[31]#4109L, MS[32]#4110L, MS[33]#4111L, MS[34]#4112L, MS[35]#4113L, MS[36]#4114L, MS[37]#4115L, MS[38]#4116L, MS[39]#4117L, MS[40]#4118L, MS[41]#4119L, MS[42]#4120L, MS[43]#4121L, MS[44]#4122L, MS[45]#4123L, MS[46]#4124L, MS[47]#4125L, MS[48]#4126L, MS[49]#4127L, MS[50]#4128L, MS[51]#4129L, null#4182L, fractional#4183L, integral#4184L, boolean#4185L, string#4186L, min#5574, max#5575, sum#5576L, MS[0]#4192L, MS[1]#4193L, MS[2]#4194L, MS[3]#4195L, MS[4]#4196L, MS[5]#4197L, MS[6]#4198L, MS[7]#4199L, MS[8]#4200L, MS[9]#4201L, MS[10]#4202L, MS[11]#4203L, MS[12]#4204L, MS[13]#4205L, MS[14]#4206L, MS[15]#4207L, MS[16]#4208L, MS[17]#4209L, MS[18]#4210L, MS[19]#4211L, MS[20]#4212L, MS[21]#4213L, MS[22]#4214L, MS[23]#4215L, MS[24]#4216L, MS[25]#4217L, MS[26]#4218L, MS[27]#4219L, MS[28]#4220L, MS[29]#4221L, MS[30]#4222L, MS[31]#4223L, MS[32]#4224L, MS[33]#4225L, MS[34]#4226L, MS[35]#4227L, MS[36]#4228L, MS[37]#4229L, MS[38]#4230L, MS[39]#4231L, MS[40]#4232L, MS[41]#4233L, MS[42]#4234L, MS[43]#4235L, MS[44]#4236L, MS[45]#4237L, MS[46]#4238L, MS[47]#4239L, MS[48]#4240L, MS[49]#4241L, MS[50]#4242L, MS[51]#4243L, null#4296L, fractional#4297L, integral#4298L, boolean#4299L, string#4300L, min#5577, max#5578, sum#5579L, MS[0]#4306L, MS[1]#4307L, MS[2]#4308L, MS[3]#4309L, MS[4]#4310L, MS[5]#4311L, MS[6]#4312L, MS[7]#4313L, MS[8]#4314L, MS[9]#4315L, MS[10]#4316L, MS[11]#4317L, MS[12]#4318L, MS[13]#4319L, MS[14]#4320L, MS[15]#4321L, MS[16]#4322L, MS[17]#4323L, MS[18]#4324L, MS[19]#4325L, MS[20]#4326L, MS[21]#4327L, MS[22]#4328L, MS[23]#4329L, MS[24]#4330L, MS[25]#4331L, MS[26]#4332L, MS[27]#4333L, MS[28]#4334L, MS[29]#4335L, MS[30]#4336L, MS[31]#4337L, MS[32]#4338L, MS[33]#4339L, MS[34]#4340L, MS[35]#4341L, MS[36]#4342L, MS[37]#4343L, MS[38]#4344L, MS[39]#4345L, MS[40]#4346L, MS[41]#4347L, MS[42]#4348L, MS[43]#4349L, MS[44]#4350L, MS[45]#4351L, MS[46]#4352L, MS[47]#4353L, MS[48]#4354L, MS[49]#4355L, MS[50]#4356L, MS[51]#4357L, null#4410L, fractional#4411L, integral#4412L, boolean#4413L, string#4414L, min#5580, max#5581, sum#5582L, MS[0]#4420L, MS[1]#4421L, MS[2]#4422L, MS[3]#4423L, MS[4]#4424L, MS[5]#4425L, MS[6]#4426L, MS[7]#4427L, MS[8]#4428L, MS[9]#4429L, MS[10]#4430L, MS[11]#4431L, MS[12]#4432L, MS[13]#4433L, MS[14]#4434L, MS[15]#4435L, MS[16]#4436L, MS[17]#4437L, MS[18]#4438L, MS[19]#4439L, MS[20]#4440L, MS[21]#4441L, MS[22]#4442L, MS[23]#4443L, MS[24]#4444L, MS[25]#4445L, MS[26]#4446L, MS[27]#4447L, MS[28]#4448L, MS[29]#4449L, MS[30]#4450L, MS[31]#4451L, MS[32]#4452L, MS[33]#4453L, MS[34]#4454L, MS[35]#4455L, MS[36]#4456L, MS[37]#4457L, MS[38]#4458L, MS[39]#4459L, MS[40]#4460L, MS[41]#4461L, MS[42]#4462L, MS[43]#4463L, MS[44]#4464L, MS[45]#4465L, MS[46]#4466L, MS[47]#4467L, MS[48]#4468L, MS[49]#4469L, MS[50]#4470L, MS[51]#4471L, sum#5583L, MS[0]#4524L, MS[1]#4525L, MS[2]#4526L, MS[3]#4527L, MS[4]#4528L, MS[5]#4529L, MS[6]#4530L, MS[7]#4531L, MS[8]#4532L, MS[9]#4533L, MS[10]#4534L, MS[11]#4535L, MS[12]#4536L, MS[13]#4537L, MS[14]#4538L, MS[15]#4539L, MS[16]#4540L, MS[17]#4541L, MS[18]#4542L, MS[19]#4543L, MS[20]#4544L, MS[21]#4545L, MS[22]#4546L, MS[23]#4547L, MS[24]#4548L, MS[25]#4549L, MS[26]#4550L, MS[27]#4551L, MS[28]#4552L, MS[29]#4553L, MS[30]#4554L, MS[31]#4555L, MS[32]#4556L, MS[33]#4557L, MS[34]#4558L, MS[35]#4559L, MS[36]#4560L, MS[37]#4561L, MS[38]#4562L, MS[39]#4563L, MS[40]#4564L, MS[41]#4565L, MS[42]#4566L, MS[43]#4567L, MS[44]#4568L, MS[45]#4569L, MS[46]#4570L, MS[47]#4571L, MS[48]#4572L, MS[49]#4573L, MS[50]#4574L, MS[51]#4575L]\nResults [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\n\n(4) Exchange\nInput [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=256]\n\n(5) ShuffleQueryStage\nOutput [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\nArguments: 0\n\n(6) HashAggregate\nInput [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\nKeys: []\nFunctions [35]: [sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(subcategories#5) as int)), stateful_approx_count_distinct(subcategories#5, 0, 0), statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@59d29a4b, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(review_count#6L) as int)), stateful_approx_count_distinct(review_count#6L, 0, 0), sum(cast(isnotnull(stars#7) as int)), stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [35]: [sum(cast(isnotnull(business_id#0) as int))#809L, count(1)#810L, stateful_approx_count_distinct(business_id#0, 0, 0)#916, StatefulDataType(business_id#0)#927, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#932, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#937, sum(cast(isnotnull(name#1) as int))#938L, stateful_approx_count_distinct(name#1, 0, 0)#1045, StatefulDataType(name#1)#1056, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1061, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1066, sum(cast(isnotnull(city#2) as int))#1067L, stateful_approx_count_distinct(city#2, 0, 0)#1174, StatefulDataType(city#2)#1185, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1190, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1195, sum(cast(isnotnull(state#3) as int))#1196L, stateful_approx_count_distinct(state#3, 0, 0)#1303, StatefulDataType(state#3)#1314, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1319, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1324, sum(cast(isnotnull(category#4) as int))#1325L, stateful_approx_count_distinct(category#4, 0, 0)#1432, StatefulDataType(category#4)#1443, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1448, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1453, sum(cast(isnotnull(subcategories#5) as int))#1454L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1561, StatefulDataType(subcategories#5)#1572, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1577, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1582, sum(cast(isnotnull(review_count#6L) as int))#1583L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1690, sum(cast(isnotnull(stars#7) as int))#1691L, stateful_approx_count_distinct(stars#7, 0, 0)#1798]\nResults [43]: [sum(cast(isnotnull(business_id#0) as int))#809L AS sum(CAST((business_id IS NOT NULL) AS INT))#2801L, count(1)#810L AS count(1)#2802L, stateful_approx_count_distinct(business_id#0, 0, 0)#916 AS stateful_approx_count_distinct(business_id)#2907, StatefulDataType(business_id#0)#927 AS statefuldatatype(business_id)#2918, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#932 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2919, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#937 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2920, sum(cast(isnotnull(name#1) as int))#938L AS sum(CAST((name IS NOT NULL) AS INT))#2921L, count(1)#810L AS count(1)#2922L, stateful_approx_count_distinct(name#1, 0, 0)#1045 AS stateful_approx_count_distinct(name)#3027, StatefulDataType(name#1)#1056 AS statefuldatatype(name)#3038, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1061 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3039, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1066 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3040, sum(cast(isnotnull(city#2) as int))#1067L AS sum(CAST((city IS NOT NULL) AS INT))#3041L, count(1)#810L AS count(1)#3042L, stateful_approx_count_distinct(city#2, 0, 0)#1174 AS stateful_approx_count_distinct(city)#3147, StatefulDataType(city#2)#1185 AS statefuldatatype(city)#3158, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1190 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3159, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1195 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3160, sum(cast(isnotnull(state#3) as int))#1196L AS sum(CAST((state IS NOT NULL) AS INT))#3161L, count(1)#810L AS count(1)#3162L, stateful_approx_count_distinct(state#3, 0, 0)#1303 AS stateful_approx_count_distinct(state)#3267, StatefulDataType(state#3)#1314 AS statefuldatatype(state)#3278, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1319 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3279, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1324 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3280, sum(cast(isnotnull(category#4) as int))#1325L AS sum(CAST((category IS NOT NULL) AS INT))#3281L, count(1)#810L AS count(1)#3282L, stateful_approx_count_distinct(category#4, 0, 0)#1432 AS stateful_approx_count_distinct(category)#3387, StatefulDataType(category#4)#1443 AS statefuldatatype(category)#3398, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1448 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3399, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1453 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3400, sum(cast(isnotnull(subcategories#5) as int))#1454L AS sum(CAST((subcategories IS NOT NULL) AS INT))#3401L, count(1)#810L AS count(1)#3402L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1561 AS stateful_approx_count_distinct(subcategories)#3507, StatefulDataType(subcategories#5)#1572 AS statefuldatatype(subcategories)#3518, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1577 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3519, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1582 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3520, sum(cast(isnotnull(review_count#6L) as int))#1583L AS sum(CAST((review_count IS NOT NULL) AS INT))#3521L, count(1)#810L AS count(1)#3522L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1690 AS stateful_approx_count_distinct(review_count)#3627, sum(cast(isnotnull(stars#7) as int))#1691L AS sum(CAST((stars IS NOT NULL) AS INT))#3628L, count(1)#810L AS count(1)#3629L, stateful_approx_count_distinct(stars#7, 0, 0)#1798 AS stateful_approx_count_distinct(stars)#3734, count(1)#810L AS count(1)#3735L]\n\n(7) HashAggregate\nInput [8]: [business_id#0, name#1, city#2, state#3, category#4, subcategories#5, review_count#6L, stars#7]\nKeys: []\nFunctions [35]: [partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(subcategories#5) as int)), partial_stateful_approx_count_distinct(subcategories#5, 0, 0), partial_statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@59d29a4b, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(review_count#6L) as int)), partial_stateful_approx_count_distinct(review_count#6L, 0, 0), partial_sum(cast(isnotnull(stars#7) as int)), partial_stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [467]: [sum#5563L, count#5564L, MS[0]#3736L, MS[1]#3737L, MS[2]#3738L, MS[3]#3739L, MS[4]#3740L, MS[5]#3741L, MS[6]#3742L, MS[7]#3743L, MS[8]#3744L, MS[9]#3745L, MS[10]#3746L, MS[11]#3747L, MS[12]#3748L, MS[13]#3749L, MS[14]#3750L, MS[15]#3751L, MS[16]#3752L, MS[17]#3753L, MS[18]#3754L, MS[19]#3755L, MS[20]#3756L, MS[21]#3757L, MS[22]#3758L, MS[23]#3759L, MS[24]#3760L, MS[25]#3761L, MS[26]#3762L, MS[27]#3763L, MS[28]#3764L, MS[29]#3765L, MS[30]#3766L, MS[31]#3767L, MS[32]#3768L, MS[33]#3769L, MS[34]#3770L, MS[35]#3771L, MS[36]#3772L, MS[37]#3773L, MS[38]#3774L, MS[39]#3775L, MS[40]#3776L, MS[41]#3777L, MS[42]#3778L, MS[43]#3779L, MS[44]#3780L, MS[45]#3781L, MS[46]#3782L, MS[47]#3783L, MS[48]#3784L, MS[49]#3785L, MS[50]#3786L, MS[51]#3787L, null#3840L, fractional#3841L, integral#3842L, boolean#3843L, string#3844L, min#5565, max#5566, sum#5567L, MS[0]#3850L, MS[1]#3851L, MS[2]#3852L, MS[3]#3853L, MS[4]#3854L, MS[5]#3855L, MS[6]#3856L, MS[7]#3857L, MS[8]#3858L, MS[9]#3859L, MS[10]#3860L, MS[11]#3861L, MS[12]#3862L, MS[13]#3863L, MS[14]#3864L, MS[15]#3865L, MS[16]#3866L, MS[17]#3867L, MS[18]#3868L, MS[19]#3869L, MS[20]#3870L, MS[21]#3871L, MS[22]#3872L, MS[23]#3873L, MS[24]#3874L, MS[25]#3875L, MS[26]#3876L, MS[27]#3877L, MS[28]#3878L, MS[29]#3879L, MS[30]#3880L, MS[31]#3881L, MS[32]#3882L, MS[33]#3883L, MS[34]#3884L, MS[35]#3885L, MS[36]#3886L, MS[37]#3887L, MS[38]#3888L, MS[39]#3889L, MS[40]#3890L, MS[41]#3891L, MS[42]#3892L, MS[43]#3893L, MS[44]#3894L, MS[45]#3895L, MS[46]#3896L, MS[47]#3897L, MS[48]#3898L, MS[49]#3899L, MS[50]#3900L, MS[51]#3901L, null#3954L, fractional#3955L, integral#3956L, boolean#3957L, string#3958L, min#5568, max#5569, sum#5570L, MS[0]#3964L, MS[1]#3965L, MS[2]#3966L, MS[3]#3967L, MS[4]#3968L, MS[5]#3969L, MS[6]#3970L, MS[7]#3971L, MS[8]#3972L, MS[9]#3973L, MS[10]#3974L, MS[11]#3975L, MS[12]#3976L, MS[13]#3977L, MS[14]#3978L, MS[15]#3979L, MS[16]#3980L, MS[17]#3981L, MS[18]#3982L, MS[19]#3983L, MS[20]#3984L, MS[21]#3985L, MS[22]#3986L, MS[23]#3987L, MS[24]#3988L, MS[25]#3989L, MS[26]#3990L, MS[27]#3991L, MS[28]#3992L, MS[29]#3993L, MS[30]#3994L, MS[31]#3995L, MS[32]#3996L, MS[33]#3997L, MS[34]#3998L, MS[35]#3999L, MS[36]#4000L, MS[37]#4001L, MS[38]#4002L, MS[39]#4003L, MS[40]#4004L, MS[41]#4005L, MS[42]#4006L, MS[43]#4007L, MS[44]#4008L, MS[45]#4009L, MS[46]#4010L, MS[47]#4011L, MS[48]#4012L, MS[49]#4013L, MS[50]#4014L, MS[51]#4015L, null#4068L, fractional#4069L, integral#4070L, boolean#4071L, string#4072L, min#5571, max#5572, sum#5573L, MS[0]#4078L, MS[1]#4079L, MS[2]#4080L, MS[3]#4081L, MS[4]#4082L, MS[5]#4083L, MS[6]#4084L, MS[7]#4085L, MS[8]#4086L, MS[9]#4087L, MS[10]#4088L, MS[11]#4089L, MS[12]#4090L, MS[13]#4091L, MS[14]#4092L, MS[15]#4093L, MS[16]#4094L, MS[17]#4095L, MS[18]#4096L, MS[19]#4097L, MS[20]#4098L, MS[21]#4099L, MS[22]#4100L, MS[23]#4101L, MS[24]#4102L, MS[25]#4103L, MS[26]#4104L, MS[27]#4105L, MS[28]#4106L, MS[29]#4107L, MS[30]#4108L, MS[31]#4109L, MS[32]#4110L, MS[33]#4111L, MS[34]#4112L, MS[35]#4113L, MS[36]#4114L, MS[37]#4115L, MS[38]#4116L, MS[39]#4117L, MS[40]#4118L, MS[41]#4119L, MS[42]#4120L, MS[43]#4121L, MS[44]#4122L, MS[45]#4123L, MS[46]#4124L, MS[47]#4125L, MS[48]#4126L, MS[49]#4127L, MS[50]#4128L, MS[51]#4129L, null#4182L, fractional#4183L, integral#4184L, boolean#4185L, string#4186L, min#5574, max#5575, sum#5576L, MS[0]#4192L, MS[1]#4193L, MS[2]#4194L, MS[3]#4195L, MS[4]#4196L, MS[5]#4197L, MS[6]#4198L, MS[7]#4199L, MS[8]#4200L, MS[9]#4201L, MS[10]#4202L, MS[11]#4203L, MS[12]#4204L, MS[13]#4205L, MS[14]#4206L, MS[15]#4207L, MS[16]#4208L, MS[17]#4209L, MS[18]#4210L, MS[19]#4211L, MS[20]#4212L, MS[21]#4213L, MS[22]#4214L, MS[23]#4215L, MS[24]#4216L, MS[25]#4217L, MS[26]#4218L, MS[27]#4219L, MS[28]#4220L, MS[29]#4221L, MS[30]#4222L, MS[31]#4223L, MS[32]#4224L, MS[33]#4225L, MS[34]#4226L, MS[35]#4227L, MS[36]#4228L, MS[37]#4229L, MS[38]#4230L, MS[39]#4231L, MS[40]#4232L, MS[41]#4233L, MS[42]#4234L, MS[43]#4235L, MS[44]#4236L, MS[45]#4237L, MS[46]#4238L, MS[47]#4239L, MS[48]#4240L, MS[49]#4241L, MS[50]#4242L, MS[51]#4243L, null#4296L, fractional#4297L, integral#4298L, boolean#4299L, string#4300L, min#5577, max#5578, sum#5579L, MS[0]#4306L, MS[1]#4307L, MS[2]#4308L, MS[3]#4309L, MS[4]#4310L, MS[5]#4311L, MS[6]#4312L, MS[7]#4313L, MS[8]#4314L, MS[9]#4315L, MS[10]#4316L, MS[11]#4317L, MS[12]#4318L, MS[13]#4319L, MS[14]#4320L, MS[15]#4321L, MS[16]#4322L, MS[17]#4323L, MS[18]#4324L, MS[19]#4325L, MS[20]#4326L, MS[21]#4327L, MS[22]#4328L, MS[23]#4329L, MS[24]#4330L, MS[25]#4331L, MS[26]#4332L, MS[27]#4333L, MS[28]#4334L, MS[29]#4335L, MS[30]#4336L, MS[31]#4337L, MS[32]#4338L, MS[33]#4339L, MS[34]#4340L, MS[35]#4341L, MS[36]#4342L, MS[37]#4343L, MS[38]#4344L, MS[39]#4345L, MS[40]#4346L, MS[41]#4347L, MS[42]#4348L, MS[43]#4349L, MS[44]#4350L, MS[45]#4351L, MS[46]#4352L, MS[47]#4353L, MS[48]#4354L, MS[49]#4355L, MS[50]#4356L, MS[51]#4357L, null#4410L, fractional#4411L, integral#4412L, boolean#4413L, string#4414L, min#5580, max#5581, sum#5582L, MS[0]#4420L, MS[1]#4421L, MS[2]#4422L, MS[3]#4423L, MS[4]#4424L, MS[5]#4425L, MS[6]#4426L, MS[7]#4427L, MS[8]#4428L, MS[9]#4429L, MS[10]#4430L, MS[11]#4431L, MS[12]#4432L, MS[13]#4433L, MS[14]#4434L, MS[15]#4435L, MS[16]#4436L, MS[17]#4437L, MS[18]#4438L, MS[19]#4439L, MS[20]#4440L, MS[21]#4441L, MS[22]#4442L, MS[23]#4443L, MS[24]#4444L, MS[25]#4445L, MS[26]#4446L, MS[27]#4447L, MS[28]#4448L, MS[29]#4449L, MS[30]#4450L, MS[31]#4451L, MS[32]#4452L, MS[33]#4453L, MS[34]#4454L, MS[35]#4455L, MS[36]#4456L, MS[37]#4457L, MS[38]#4458L, MS[39]#4459L, MS[40]#4460L, MS[41]#4461L, MS[42]#4462L, MS[43]#4463L, MS[44]#4464L, MS[45]#4465L, MS[46]#4466L, MS[47]#4467L, MS[48]#4468L, MS[49]#4469L, MS[50]#4470L, MS[51]#4471L, sum#5583L, MS[0]#4524L, MS[1]#4525L, MS[2]#4526L, MS[3]#4527L, MS[4]#4528L, MS[5]#4529L, MS[6]#4530L, MS[7]#4531L, MS[8]#4532L, MS[9]#4533L, MS[10]#4534L, MS[11]#4535L, MS[12]#4536L, MS[13]#4537L, MS[14]#4538L, MS[15]#4539L, MS[16]#4540L, MS[17]#4541L, MS[18]#4542L, MS[19]#4543L, MS[20]#4544L, MS[21]#4545L, MS[22]#4546L, MS[23]#4547L, MS[24]#4548L, MS[25]#4549L, MS[26]#4550L, MS[27]#4551L, MS[28]#4552L, MS[29]#4553L, MS[30]#4554L, MS[31]#4555L, MS[32]#4556L, MS[33]#4557L, MS[34]#4558L, MS[35]#4559L, MS[36]#4560L, MS[37]#4561L, MS[38]#4562L, MS[39]#4563L, MS[40]#4564L, MS[41]#4565L, MS[42]#4566L, MS[43]#4567L, MS[44]#4568L, MS[45]#4569L, MS[46]#4570L, MS[47]#4571L, MS[48]#4572L, MS[49]#4573L, MS[50]#4574L, MS[51]#4575L]\nResults [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\n\n(8) Exchange\nInput [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=243]\n\n(9) HashAggregate\nInput [467]: [sum#5584L, count#5585L, MS[0]#3788L, MS[1]#3789L, MS[2]#3790L, MS[3]#3791L, MS[4]#3792L, MS[5]#3793L, MS[6]#3794L, MS[7]#3795L, MS[8]#3796L, MS[9]#3797L, MS[10]#3798L, MS[11]#3799L, MS[12]#3800L, MS[13]#3801L, MS[14]#3802L, MS[15]#3803L, MS[16]#3804L, MS[17]#3805L, MS[18]#3806L, MS[19]#3807L, MS[20]#3808L, MS[21]#3809L, MS[22]#3810L, MS[23]#3811L, MS[24]#3812L, MS[25]#3813L, MS[26]#3814L, MS[27]#3815L, MS[28]#3816L, MS[29]#3817L, MS[30]#3818L, MS[31]#3819L, MS[32]#3820L, MS[33]#3821L, MS[34]#3822L, MS[35]#3823L, MS[36]#3824L, MS[37]#3825L, MS[38]#3826L, MS[39]#3827L, MS[40]#3828L, MS[41]#3829L, MS[42]#3830L, MS[43]#3831L, MS[44]#3832L, MS[45]#3833L, MS[46]#3834L, MS[47]#3835L, MS[48]#3836L, MS[49]#3837L, MS[50]#3838L, MS[51]#3839L, null#3845L, fractional#3846L, integral#3847L, boolean#3848L, string#3849L, min#5586, max#5587, sum#5588L, MS[0]#3902L, MS[1]#3903L, MS[2]#3904L, MS[3]#3905L, MS[4]#3906L, MS[5]#3907L, MS[6]#3908L, MS[7]#3909L, MS[8]#3910L, MS[9]#3911L, MS[10]#3912L, MS[11]#3913L, MS[12]#3914L, MS[13]#3915L, MS[14]#3916L, MS[15]#3917L, MS[16]#3918L, MS[17]#3919L, MS[18]#3920L, MS[19]#3921L, MS[20]#3922L, MS[21]#3923L, MS[22]#3924L, MS[23]#3925L, MS[24]#3926L, MS[25]#3927L, MS[26]#3928L, MS[27]#3929L, MS[28]#3930L, MS[29]#3931L, MS[30]#3932L, MS[31]#3933L, MS[32]#3934L, MS[33]#3935L, MS[34]#3936L, MS[35]#3937L, MS[36]#3938L, MS[37]#3939L, MS[38]#3940L, MS[39]#3941L, MS[40]#3942L, MS[41]#3943L, MS[42]#3944L, MS[43]#3945L, MS[44]#3946L, MS[45]#3947L, MS[46]#3948L, MS[47]#3949L, MS[48]#3950L, MS[49]#3951L, MS[50]#3952L, MS[51]#3953L, null#3959L, fractional#3960L, integral#3961L, boolean#3962L, string#3963L, min#5589, max#5590, sum#5591L, MS[0]#4016L, MS[1]#4017L, MS[2]#4018L, MS[3]#4019L, MS[4]#4020L, MS[5]#4021L, MS[6]#4022L, MS[7]#4023L, MS[8]#4024L, MS[9]#4025L, MS[10]#4026L, MS[11]#4027L, MS[12]#4028L, MS[13]#4029L, MS[14]#4030L, MS[15]#4031L, MS[16]#4032L, MS[17]#4033L, MS[18]#4034L, MS[19]#4035L, MS[20]#4036L, MS[21]#4037L, MS[22]#4038L, MS[23]#4039L, MS[24]#4040L, MS[25]#4041L, MS[26]#4042L, MS[27]#4043L, MS[28]#4044L, MS[29]#4045L, MS[30]#4046L, MS[31]#4047L, MS[32]#4048L, MS[33]#4049L, MS[34]#4050L, MS[35]#4051L, MS[36]#4052L, MS[37]#4053L, MS[38]#4054L, MS[39]#4055L, MS[40]#4056L, MS[41]#4057L, MS[42]#4058L, MS[43]#4059L, MS[44]#4060L, MS[45]#4061L, MS[46]#4062L, MS[47]#4063L, MS[48]#4064L, MS[49]#4065L, MS[50]#4066L, MS[51]#4067L, null#4073L, fractional#4074L, integral#4075L, boolean#4076L, string#4077L, min#5592, max#5593, sum#5594L, MS[0]#4130L, MS[1]#4131L, MS[2]#4132L, MS[3]#4133L, MS[4]#4134L, MS[5]#4135L, MS[6]#4136L, MS[7]#4137L, MS[8]#4138L, MS[9]#4139L, MS[10]#4140L, MS[11]#4141L, MS[12]#4142L, MS[13]#4143L, MS[14]#4144L, MS[15]#4145L, MS[16]#4146L, MS[17]#4147L, MS[18]#4148L, MS[19]#4149L, MS[20]#4150L, MS[21]#4151L, MS[22]#4152L, MS[23]#4153L, MS[24]#4154L, MS[25]#4155L, MS[26]#4156L, MS[27]#4157L, MS[28]#4158L, MS[29]#4159L, MS[30]#4160L, MS[31]#4161L, MS[32]#4162L, MS[33]#4163L, MS[34]#4164L, MS[35]#4165L, MS[36]#4166L, MS[37]#4167L, MS[38]#4168L, MS[39]#4169L, MS[40]#4170L, MS[41]#4171L, MS[42]#4172L, MS[43]#4173L, MS[44]#4174L, MS[45]#4175L, MS[46]#4176L, MS[47]#4177L, MS[48]#4178L, MS[49]#4179L, MS[50]#4180L, MS[51]#4181L, null#4187L, fractional#4188L, integral#4189L, boolean#4190L, string#4191L, min#5595, max#5596, sum#5597L, MS[0]#4244L, MS[1]#4245L, MS[2]#4246L, MS[3]#4247L, MS[4]#4248L, MS[5]#4249L, MS[6]#4250L, MS[7]#4251L, MS[8]#4252L, MS[9]#4253L, MS[10]#4254L, MS[11]#4255L, MS[12]#4256L, MS[13]#4257L, MS[14]#4258L, MS[15]#4259L, MS[16]#4260L, MS[17]#4261L, MS[18]#4262L, MS[19]#4263L, MS[20]#4264L, MS[21]#4265L, MS[22]#4266L, MS[23]#4267L, MS[24]#4268L, MS[25]#4269L, MS[26]#4270L, MS[27]#4271L, MS[28]#4272L, MS[29]#4273L, MS[30]#4274L, MS[31]#4275L, MS[32]#4276L, MS[33]#4277L, MS[34]#4278L, MS[35]#4279L, MS[36]#4280L, MS[37]#4281L, MS[38]#4282L, MS[39]#4283L, MS[40]#4284L, MS[41]#4285L, MS[42]#4286L, MS[43]#4287L, MS[44]#4288L, MS[45]#4289L, MS[46]#4290L, MS[47]#4291L, MS[48]#4292L, MS[49]#4293L, MS[50]#4294L, MS[51]#4295L, null#4301L, fractional#4302L, integral#4303L, boolean#4304L, string#4305L, min#5598, max#5599, sum#5600L, MS[0]#4358L, MS[1]#4359L, MS[2]#4360L, MS[3]#4361L, MS[4]#4362L, MS[5]#4363L, MS[6]#4364L, MS[7]#4365L, MS[8]#4366L, MS[9]#4367L, MS[10]#4368L, MS[11]#4369L, MS[12]#4370L, MS[13]#4371L, MS[14]#4372L, MS[15]#4373L, MS[16]#4374L, MS[17]#4375L, MS[18]#4376L, MS[19]#4377L, MS[20]#4378L, MS[21]#4379L, MS[22]#4380L, MS[23]#4381L, MS[24]#4382L, MS[25]#4383L, MS[26]#4384L, MS[27]#4385L, MS[28]#4386L, MS[29]#4387L, MS[30]#4388L, MS[31]#4389L, MS[32]#4390L, MS[33]#4391L, MS[34]#4392L, MS[35]#4393L, MS[36]#4394L, MS[37]#4395L, MS[38]#4396L, MS[39]#4397L, MS[40]#4398L, MS[41]#4399L, MS[42]#4400L, MS[43]#4401L, MS[44]#4402L, MS[45]#4403L, MS[46]#4404L, MS[47]#4405L, MS[48]#4406L, MS[49]#4407L, MS[50]#4408L, MS[51]#4409L, null#4415L, fractional#4416L, integral#4417L, boolean#4418L, string#4419L, min#5601, max#5602, sum#5603L, MS[0]#4472L, MS[1]#4473L, MS[2]#4474L, MS[3]#4475L, MS[4]#4476L, MS[5]#4477L, MS[6]#4478L, MS[7]#4479L, MS[8]#4480L, MS[9]#4481L, MS[10]#4482L, MS[11]#4483L, MS[12]#4484L, MS[13]#4485L, MS[14]#4486L, MS[15]#4487L, MS[16]#4488L, MS[17]#4489L, MS[18]#4490L, MS[19]#4491L, MS[20]#4492L, MS[21]#4493L, MS[22]#4494L, MS[23]#4495L, MS[24]#4496L, MS[25]#4497L, MS[26]#4498L, MS[27]#4499L, MS[28]#4500L, MS[29]#4501L, MS[30]#4502L, MS[31]#4503L, MS[32]#4504L, MS[33]#4505L, MS[34]#4506L, MS[35]#4507L, MS[36]#4508L, MS[37]#4509L, MS[38]#4510L, MS[39]#4511L, MS[40]#4512L, MS[41]#4513L, MS[42]#4514L, MS[43]#4515L, MS[44]#4516L, MS[45]#4517L, MS[46]#4518L, MS[47]#4519L, MS[48]#4520L, MS[49]#4521L, MS[50]#4522L, MS[51]#4523L, sum#5604L, MS[0]#4576L, MS[1]#4577L, MS[2]#4578L, MS[3]#4579L, MS[4]#4580L, MS[5]#4581L, MS[6]#4582L, MS[7]#4583L, MS[8]#4584L, MS[9]#4585L, MS[10]#4586L, MS[11]#4587L, MS[12]#4588L, MS[13]#4589L, MS[14]#4590L, MS[15]#4591L, MS[16]#4592L, MS[17]#4593L, MS[18]#4594L, MS[19]#4595L, MS[20]#4596L, MS[21]#4597L, MS[22]#4598L, MS[23]#4599L, MS[24]#4600L, MS[25]#4601L, MS[26]#4602L, MS[27]#4603L, MS[28]#4604L, MS[29]#4605L, MS[30]#4606L, MS[31]#4607L, MS[32]#4608L, MS[33]#4609L, MS[34]#4610L, MS[35]#4611L, MS[36]#4612L, MS[37]#4613L, MS[38]#4614L, MS[39]#4615L, MS[40]#4616L, MS[41]#4617L, MS[42]#4618L, MS[43]#4619L, MS[44]#4620L, MS[45]#4621L, MS[46]#4622L, MS[47]#4623L, MS[48]#4624L, MS[49]#4625L, MS[50]#4626L, MS[51]#4627L]\nKeys: []\nFunctions [35]: [sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(subcategories#5) as int)), stateful_approx_count_distinct(subcategories#5, 0, 0), statefuldatatype(subcategories#5, org.apache.spark.sql.StatefulDataType@59d29a4b, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(review_count#6L) as int)), stateful_approx_count_distinct(review_count#6L, 0, 0), sum(cast(isnotnull(stars#7) as int)), stateful_approx_count_distinct(stars#7, 0, 0)]\nAggregate Attributes [35]: [sum(cast(isnotnull(business_id#0) as int))#809L, count(1)#810L, stateful_approx_count_distinct(business_id#0, 0, 0)#916, StatefulDataType(business_id#0)#927, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#932, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#937, sum(cast(isnotnull(name#1) as int))#938L, stateful_approx_count_distinct(name#1, 0, 0)#1045, StatefulDataType(name#1)#1056, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1061, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1066, sum(cast(isnotnull(city#2) as int))#1067L, stateful_approx_count_distinct(city#2, 0, 0)#1174, StatefulDataType(city#2)#1185, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1190, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1195, sum(cast(isnotnull(state#3) as int))#1196L, stateful_approx_count_distinct(state#3, 0, 0)#1303, StatefulDataType(state#3)#1314, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1319, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1324, sum(cast(isnotnull(category#4) as int))#1325L, stateful_approx_count_distinct(category#4, 0, 0)#1432, StatefulDataType(category#4)#1443, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1448, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1453, sum(cast(isnotnull(subcategories#5) as int))#1454L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1561, StatefulDataType(subcategories#5)#1572, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1577, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1582, sum(cast(isnotnull(review_count#6L) as int))#1583L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1690, sum(cast(isnotnull(stars#7) as int))#1691L, stateful_approx_count_distinct(stars#7, 0, 0)#1798]\nResults [43]: [sum(cast(isnotnull(business_id#0) as int))#809L AS sum(CAST((business_id IS NOT NULL) AS INT))#2801L, count(1)#810L AS count(1)#2802L, stateful_approx_count_distinct(business_id#0, 0, 0)#916 AS stateful_approx_count_distinct(business_id)#2907, StatefulDataType(business_id#0)#927 AS statefuldatatype(business_id)#2918, min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#932 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2919, max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double))#937 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2920, sum(cast(isnotnull(name#1) as int))#938L AS sum(CAST((name IS NOT NULL) AS INT))#2921L, count(1)#810L AS count(1)#2922L, stateful_approx_count_distinct(name#1, 0, 0)#1045 AS stateful_approx_count_distinct(name)#3027, StatefulDataType(name#1)#1056 AS statefuldatatype(name)#3038, min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1061 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3039, max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double))#1066 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3040, sum(cast(isnotnull(city#2) as int))#1067L AS sum(CAST((city IS NOT NULL) AS INT))#3041L, count(1)#810L AS count(1)#3042L, stateful_approx_count_distinct(city#2, 0, 0)#1174 AS stateful_approx_count_distinct(city)#3147, StatefulDataType(city#2)#1185 AS statefuldatatype(city)#3158, min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1190 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3159, max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double))#1195 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3160, sum(cast(isnotnull(state#3) as int))#1196L AS sum(CAST((state IS NOT NULL) AS INT))#3161L, count(1)#810L AS count(1)#3162L, stateful_approx_count_distinct(state#3, 0, 0)#1303 AS stateful_approx_count_distinct(state)#3267, StatefulDataType(state#3)#1314 AS statefuldatatype(state)#3278, min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1319 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3279, max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double))#1324 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3280, sum(cast(isnotnull(category#4) as int))#1325L AS sum(CAST((category IS NOT NULL) AS INT))#3281L, count(1)#810L AS count(1)#3282L, stateful_approx_count_distinct(category#4, 0, 0)#1432 AS stateful_approx_count_distinct(category)#3387, StatefulDataType(category#4)#1443 AS statefuldatatype(category)#3398, min(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1448 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3399, max(cast(element_at(array(InScopeData, CASE WHEN isnull(category#4) THEN 0.0 ELSE cast(cast(length(category#4) as double) as string) END), 2, None, false) as double))#1453 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3400, sum(cast(isnotnull(subcategories#5) as int))#1454L AS sum(CAST((subcategories IS NOT NULL) AS INT))#3401L, count(1)#810L AS count(1)#3402L, stateful_approx_count_distinct(subcategories#5, 0, 0)#1561 AS stateful_approx_count_distinct(subcategories)#3507, StatefulDataType(subcategories#5)#1572 AS statefuldatatype(subcategories)#3518, min(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1577 AS min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3519, max(cast(element_at(array(InScopeData, CASE WHEN isnull(subcategories#5) THEN 0.0 ELSE cast(cast(length(subcategories#5) as double) as string) END), 2, None, false) as double))#1582 AS max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3520, sum(cast(isnotnull(review_count#6L) as int))#1583L AS sum(CAST((review_count IS NOT NULL) AS INT))#3521L, count(1)#810L AS count(1)#3522L, stateful_approx_count_distinct(review_count#6L, 0, 0)#1690 AS stateful_approx_count_distinct(review_count)#3627, sum(cast(isnotnull(stars#7) as int))#1691L AS sum(CAST((stars IS NOT NULL) AS INT))#3628L, count(1)#810L AS count(1)#3629L, stateful_approx_count_distinct(stars#7, 0, 0)#1798 AS stateful_approx_count_distinct(stars)#3734, count(1)#810L AS count(1)#3735L]\n\n(10) AdaptiveSparkPlan\nOutput [43]: [sum(CAST((business_id IS NOT NULL) AS INT))#2801L, count(1)#2802L, stateful_approx_count_distinct(business_id)#2907, statefuldatatype(business_id)#2918, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2919, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (business_id IS NULL) THEN 0.0 ELSE CAST(length(business_id) AS DOUBLE) END AS selection), 2) AS DOUBLE))#2920, sum(CAST((name IS NOT NULL) AS INT))#2921L, count(1)#2922L, stateful_approx_count_distinct(name)#3027, statefuldatatype(name)#3038, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3039, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (name IS NULL) THEN 0.0 ELSE CAST(length(name) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3040, sum(CAST((city IS NOT NULL) AS INT))#3041L, count(1)#3042L, stateful_approx_count_distinct(city)#3147, statefuldatatype(city)#3158, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3159, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (city IS NULL) THEN 0.0 ELSE CAST(length(city) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3160, sum(CAST((state IS NOT NULL) AS INT))#3161L, count(1)#3162L, stateful_approx_count_distinct(state)#3267, statefuldatatype(state)#3278, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3279, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (state IS NULL) THEN 0.0 ELSE CAST(length(state) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3280, sum(CAST((category IS NOT NULL) AS INT))#3281L, count(1)#3282L, stateful_approx_count_distinct(category)#3387, statefuldatatype(category)#3398, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3399, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (category IS NULL) THEN 0.0 ELSE CAST(length(category) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3400, sum(CAST((subcategories IS NOT NULL) AS INT))#3401L, count(1)#3402L, stateful_approx_count_distinct(subcategories)#3507, statefuldatatype(subcategories)#3518, min(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3519, max(CAST(element_at(array(InScopeData AS source, CASE WHEN (subcategories IS NULL) THEN 0.0 ELSE CAST(length(subcategories) AS DOUBLE) END AS selection), 2) AS DOUBLE))#3520, sum(CAST((review_count IS NOT NULL) AS INT))#3521L, count(1)#3522L, stateful_approx_count_distinct(review_count)#3627, sum(CAST((stars IS NOT NULL) AS INT))#3628L, count(1)#3629L, stateful_approx_count_distinct(stars)#3734, count(1)#3735L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum(cast(isnotnull(business_id#0) as int)), count(1), stateful_approx_count_distinct(business_id#0, 0, 0), statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(name#1) as int)), stateful_approx_count_distinct(name#1, 0, 0), statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(city#2) as int)), stateful_approx_count_distinct(city#2, 0, 0), statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(state#3) as int)), stateful_approx_count_distinct(state#3, 0, 0), statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), sum(cast(isnotnull(category#4) as int)), stateful_approx_count_distinct(category#4, 0, 0), statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), ... 11 more fields])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=256]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum(cast(isnotnull(business_id#0) as int)), partial_count(1), partial_stateful_approx_count_distinct(business_id#0, 0, 0), partial_statefuldatatype(business_id#0, org.apache.spark.sql.StatefulDataType@10c523de, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(business_id#0) THEN 0.0 ELSE cast(cast(length(business_id#0) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(name#1) as int)), partial_stateful_approx_count_distinct(name#1, 0, 0), partial_statefuldatatype(name#1, org.apache.spark.sql.StatefulDataType@71fc8a2b, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(name#1) THEN 0.0 ELSE cast(cast(length(name#1) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(city#2) as int)), partial_stateful_approx_count_distinct(city#2, 0, 0), partial_statefuldatatype(city#2, org.apache.spark.sql.StatefulDataType@3c16ddfd, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(city#2) THEN 0.0 ELSE cast(cast(length(city#2) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(state#3) as int)), partial_stateful_approx_count_distinct(state#3, 0, 0), partial_statefuldatatype(state#3, org.apache.spark.sql.StatefulDataType@7588ea83, 0, 0, None), partial_min(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, CASE WHEN isnull(state#3) THEN 0.0 ELSE cast(cast(length(state#3) as double) as string) END), 2, None, false) as double)), partial_sum(cast(isnotnull(category#4) as int)), partial_stateful_approx_count_distinct(category#4, 0, 0), partial_statefuldatatype(category#4, org.apache.spark.sql.StatefulDataType@4c6afc3f, 0, 0, None), ... 11 more fields])","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [business_id#0,name#1,city#2,state#3,category#4,subcategories#5,review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:stri...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<business_id:string,name:string,city:string,state:string,category:string,subcategories:string,review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":900,"metricType":"sum"},{"name":"scan time","accumulatorId":899,"metricType":"timing"},{"name":"metadata time","accumulatorId":901,"metricType":"timing"},{"name":"size of files read","accumulatorId":902,"metricType":"size"},{"name":"number of output rows","accumulatorId":898,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":938,"metricType":"sum"},{"name":"number of input batches","accumulatorId":939,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":937,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":933,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":934,"metricType":"timing"},{"name":"peak memory","accumulatorId":932,"metricType":"size"},{"name":"number of output rows","accumulatorId":931,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":936,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":935,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":929,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":923,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":930,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":924,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":921,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":918,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":927,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":920,"metricType":"sum"},{"name":"records read","accumulatorId":917,"metricType":"sum"},{"name":"local bytes read","accumulatorId":915,"metricType":"size"},{"name":"fetch wait time","accumulatorId":916,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":913,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":919,"metricType":"sum"},{"name":"local blocks read","accumulatorId":912,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":922,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":911,"metricType":"sum"},{"name":"data size","accumulatorId":909,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":925,"metricType":"size"},{"name":"number of partitions","accumulatorId":910,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":926,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":914,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":928,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":905,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":906,"metricType":"timing"},{"name":"peak memory","accumulatorId":904,"metricType":"size"},{"name":"number of output rows","accumulatorId":903,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":908,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":907,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":13,"Submission Time":1720114396044,"Stage Infos":[{"Stage ID":19,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"106\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"111\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[38],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"108\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"107\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[40],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":38,"Name":"FileScanRDD","Scope":"{\"id\":\"111\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":20,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"115\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"114\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"112\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[19],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[19,20],"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"116\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"6","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":20,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"115\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"114\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"112\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[19],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114396045,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"116\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"6","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":20,"Stage Attempt ID":0,"Task Info":{"Task ID":42,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114396053,"Executor ID":"2","Host":"172.29.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":20,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":42,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114396053,"Executor ID":"2","Host":"172.29.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114396195,"Failed":false,"Killed":false,"Accumulables":[{"ID":903,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":904,"Name":"peak memory","Update":"33816560","Value":"33816560","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":905,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":906,"Name":"time in aggregation build","Update":"82","Value":"82","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":907,"Name":"avg hash probes per key","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":911,"Name":"remote blocks read","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":912,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":913,"Name":"remote bytes read","Update":"372","Value":"372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":915,"Name":"local bytes read","Update":"3031","Value":"3031","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":916,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":917,"Name":"records read","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":926,"Name":"remote reqs duration","Update":"7","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":975,"Name":"internal.metrics.executorDeserializeTime","Update":20,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":976,"Name":"internal.metrics.executorDeserializeCpuTime","Update":15843456,"Value":15843456,"Internal":true,"Count Failed Values":true},{"ID":977,"Name":"internal.metrics.executorRunTime","Update":117,"Value":117,"Internal":true,"Count Failed Values":true},{"ID":978,"Name":"internal.metrics.executorCpuTime","Update":110166582,"Value":110166582,"Internal":true,"Count Failed Values":true},{"ID":979,"Name":"internal.metrics.resultSize","Update":8368,"Value":8368,"Internal":true,"Count Failed Values":true},{"ID":984,"Name":"internal.metrics.peakExecutionMemory","Update":33816560,"Value":33816560,"Internal":true,"Count Failed Values":true},{"ID":986,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":987,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":988,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":372,"Value":372,"Internal":true,"Count Failed Values":true},{"ID":989,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":990,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":3031,"Value":3031,"Internal":true,"Count Failed Values":true},{"ID":991,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":992,"Name":"internal.metrics.shuffle.read.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":993,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":994,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":995,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":996,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":997,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":998,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":999,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1000,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1001,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":1002,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":20,"Executor Deserialize CPU Time":15843456,"Executor Run Time":117,"Executor CPU Time":110166582,"Peak Execution Memory":33816560,"Result Size":8368,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":4,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":372,"Remote Bytes Read To Disk":0,"Local Bytes Read":3031,"Total Records Read":6,"Remote Requests Duration":7,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":20,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"115\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":43,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"114\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"112\",\"name\":\"HashAggregate\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[43],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[19],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:161)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114396045,"Completion Time":1720114396195,"Accumulables":[{"ID":903,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":904,"Name":"peak memory","Value":"33816560","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":905,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":906,"Name":"time in aggregation build","Value":"82","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":907,"Name":"avg hash probes per key","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":911,"Name":"remote blocks read","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":912,"Name":"local blocks read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":913,"Name":"remote bytes read","Value":"372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":915,"Name":"local bytes read","Value":"3031","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":916,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":917,"Name":"records read","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":926,"Name":"remote reqs duration","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":975,"Name":"internal.metrics.executorDeserializeTime","Value":20,"Internal":true,"Count Failed Values":true},{"ID":976,"Name":"internal.metrics.executorDeserializeCpuTime","Value":15843456,"Internal":true,"Count Failed Values":true},{"ID":977,"Name":"internal.metrics.executorRunTime","Value":117,"Internal":true,"Count Failed Values":true},{"ID":978,"Name":"internal.metrics.executorCpuTime","Value":110166582,"Internal":true,"Count Failed Values":true},{"ID":979,"Name":"internal.metrics.resultSize","Value":8368,"Internal":true,"Count Failed Values":true},{"ID":984,"Name":"internal.metrics.peakExecutionMemory","Value":33816560,"Internal":true,"Count Failed Values":true},{"ID":986,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":4,"Internal":true,"Count Failed Values":true},{"ID":987,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":2,"Internal":true,"Count Failed Values":true},{"ID":988,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":372,"Internal":true,"Count Failed Values":true},{"ID":989,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":990,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":3031,"Internal":true,"Count Failed Values":true},{"ID":991,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":992,"Name":"internal.metrics.shuffle.read.recordsRead","Value":6,"Internal":true,"Count Failed Values":true},{"ID":993,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":994,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":995,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":996,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":997,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":998,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":999,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1000,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1001,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":7,"Internal":true,"Count Failed Values":true},{"ID":1002,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":13,"Completion Time":1720114396196,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":6,"time":1720114396212,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":7,"rootExecutionId":7,"description":"collect at AnalysisRunner.scala:327","details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (5)\n+- HashAggregate (4)\n   +- Exchange (3)\n      +- HashAggregate (2)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [2]: [review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<review_count:bigint,stars:double>\n\n(2) HashAggregate\nInput [2]: [review_count#6L, stars#7]\nKeys: []\nFunctions [10]: [partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)]\nAggregate Attributes [14]: [min#5971, max#5972, sum#5973L, count#5974L, n#5939, avg#5940, m2#5941, min#5975, max#5976, sum#5977, count#5978L, n#5947, avg#5948, m2#5949]\nResults [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\n\n(3) Exchange\nInput [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=277]\n\n(4) HashAggregate\nInput [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\nKeys: []\nFunctions [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)]\nAggregate Attributes [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5775, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5780, sum(review_count#6L)#5781L, count(review_count#6L)#5782L, stateful_stddev_pop(cast(review_count#6L as double))#5791, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5797, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5802, sum(stars#7)#5803, count(stars#7)#5804L, stateful_stddev_pop(stars#7)#5813]\nResults [12]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5775 AS min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5867, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5780 AS max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5868, cast(sum(review_count#6L)#5781L as double) AS CAST(sum(review_count) AS DOUBLE)#5869, count(review_count#6L)#5782L AS CAST(count(review_count) AS BIGINT)#5870L, stateful_stddev_pop(cast(review_count#6L as double))#5791 AS stateful_stddev_pop(review_count)#5879, cast(sum(review_count#6L)#5781L as double) AS CAST(sum(review_count) AS DOUBLE)#5880, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5797 AS min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5881, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5802 AS max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5882, sum(stars#7)#5803 AS CAST(sum(stars) AS DOUBLE)#5883, count(stars#7)#5804L AS CAST(count(stars) AS BIGINT)#5884L, stateful_stddev_pop(stars#7)#5813 AS stateful_stddev_pop(stars)#5893, sum(stars#7)#5803 AS CAST(sum(stars) AS DOUBLE)#5894]\n\n(5) AdaptiveSparkPlan\nOutput [12]: [min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5867, max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5868, CAST(sum(review_count) AS DOUBLE)#5869, CAST(count(review_count) AS BIGINT)#5870L, stateful_stddev_pop(review_count)#5879, CAST(sum(review_count) AS DOUBLE)#5880, min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5881, max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5882, CAST(sum(stars) AS DOUBLE)#5883, CAST(count(stars) AS BIGINT)#5884L, stateful_stddev_pop(stars)#5893, CAST(sum(stars) AS DOUBLE)#5894]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=277]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)])","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<review_count:bigint,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":1046,"metricType":"sum"},{"name":"scan time","accumulatorId":1045,"metricType":"timing"},{"name":"metadata time","accumulatorId":1047,"metricType":"timing"},{"name":"size of files read","accumulatorId":1048,"metricType":"size"},{"name":"number of output rows","accumulatorId":1044,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1040,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1041,"metricType":"timing"},{"name":"peak memory","accumulatorId":1039,"metricType":"size"},{"name":"number of output rows","accumulatorId":1038,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1043,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1042,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1036,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1030,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1037,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1031,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1028,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1025,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1034,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1027,"metricType":"sum"},{"name":"records read","accumulatorId":1024,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1022,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1023,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1020,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1026,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1019,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1029,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1018,"metricType":"sum"},{"name":"data size","accumulatorId":1016,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1032,"metricType":"size"},{"name":"number of partitions","accumulatorId":1017,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1033,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1021,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1035,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1012,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1013,"metricType":"timing"},{"name":"peak memory","accumulatorId":1011,"metricType":"size"},{"name":"number of output rows","accumulatorId":1010,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1015,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1014,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1720114396299,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":7,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Current Plan ==\n   HashAggregate (6)\n   +- ShuffleQueryStage (5)\n      +- Exchange (4)\n         +- * HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [2]: [review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<review_count:bigint,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [2]: [review_count#6L, stars#7]\n\n(3) HashAggregate [codegen id : 1]\nInput [2]: [review_count#6L, stars#7]\nKeys: []\nFunctions [10]: [partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)]\nAggregate Attributes [14]: [min#5971, max#5972, sum#5973L, count#5974L, n#5939, avg#5940, m2#5941, min#5975, max#5976, sum#5977, count#5978L, n#5947, avg#5948, m2#5949]\nResults [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\n\n(4) Exchange\nInput [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=290]\n\n(5) ShuffleQueryStage\nOutput [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\nArguments: 0\n\n(6) HashAggregate\nInput [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\nKeys: []\nFunctions [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)]\nAggregate Attributes [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5775, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5780, sum(review_count#6L)#5781L, count(review_count#6L)#5782L, stateful_stddev_pop(cast(review_count#6L as double))#5791, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5797, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5802, sum(stars#7)#5803, count(stars#7)#5804L, stateful_stddev_pop(stars#7)#5813]\nResults [12]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5775 AS min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5867, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5780 AS max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5868, cast(sum(review_count#6L)#5781L as double) AS CAST(sum(review_count) AS DOUBLE)#5869, count(review_count#6L)#5782L AS CAST(count(review_count) AS BIGINT)#5870L, stateful_stddev_pop(cast(review_count#6L as double))#5791 AS stateful_stddev_pop(review_count)#5879, cast(sum(review_count#6L)#5781L as double) AS CAST(sum(review_count) AS DOUBLE)#5880, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5797 AS min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5881, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5802 AS max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5882, sum(stars#7)#5803 AS CAST(sum(stars) AS DOUBLE)#5883, count(stars#7)#5804L AS CAST(count(stars) AS BIGINT)#5884L, stateful_stddev_pop(stars#7)#5813 AS stateful_stddev_pop(stars)#5893, sum(stars#7)#5803 AS CAST(sum(stars) AS DOUBLE)#5894]\n\n(7) HashAggregate\nInput [2]: [review_count#6L, stars#7]\nKeys: []\nFunctions [10]: [partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)]\nAggregate Attributes [14]: [min#5971, max#5972, sum#5973L, count#5974L, n#5939, avg#5940, m2#5941, min#5975, max#5976, sum#5977, count#5978L, n#5947, avg#5948, m2#5949]\nResults [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\n\n(8) Exchange\nInput [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=277]\n\n(9) HashAggregate\nInput [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\nKeys: []\nFunctions [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)]\nAggregate Attributes [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5775, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5780, sum(review_count#6L)#5781L, count(review_count#6L)#5782L, stateful_stddev_pop(cast(review_count#6L as double))#5791, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5797, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5802, sum(stars#7)#5803, count(stars#7)#5804L, stateful_stddev_pop(stars#7)#5813]\nResults [12]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5775 AS min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5867, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5780 AS max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5868, cast(sum(review_count#6L)#5781L as double) AS CAST(sum(review_count) AS DOUBLE)#5869, count(review_count#6L)#5782L AS CAST(count(review_count) AS BIGINT)#5870L, stateful_stddev_pop(cast(review_count#6L as double))#5791 AS stateful_stddev_pop(review_count)#5879, cast(sum(review_count#6L)#5781L as double) AS CAST(sum(review_count) AS DOUBLE)#5880, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5797 AS min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5881, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5802 AS max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5882, sum(stars#7)#5803 AS CAST(sum(stars) AS DOUBLE)#5883, count(stars#7)#5804L AS CAST(count(stars) AS BIGINT)#5884L, stateful_stddev_pop(stars#7)#5813 AS stateful_stddev_pop(stars)#5893, sum(stars#7)#5803 AS CAST(sum(stars) AS DOUBLE)#5894]\n\n(10) AdaptiveSparkPlan\nOutput [12]: [min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5867, max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5868, CAST(sum(review_count) AS DOUBLE)#5869, CAST(count(review_count) AS BIGINT)#5870L, stateful_stddev_pop(review_count)#5879, CAST(sum(review_count) AS DOUBLE)#5880, min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5881, max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5882, CAST(sum(stars) AS DOUBLE)#5883, CAST(count(stars) AS BIGINT)#5884L, stateful_stddev_pop(stars)#5893, CAST(sum(stars) AS DOUBLE)#5894]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=290]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)])","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<review_count:bigint,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":1046,"metricType":"sum"},{"name":"scan time","accumulatorId":1045,"metricType":"timing"},{"name":"metadata time","accumulatorId":1047,"metricType":"timing"},{"name":"size of files read","accumulatorId":1048,"metricType":"size"},{"name":"number of output rows","accumulatorId":1044,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1084,"metricType":"sum"},{"name":"number of input batches","accumulatorId":1085,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1080,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1081,"metricType":"timing"},{"name":"peak memory","accumulatorId":1079,"metricType":"size"},{"name":"number of output rows","accumulatorId":1078,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1083,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1082,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1077,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1075,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1069,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1076,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1070,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1067,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1064,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1073,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1066,"metricType":"sum"},{"name":"records read","accumulatorId":1063,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1061,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1062,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1059,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1065,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1058,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1068,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1057,"metricType":"sum"},{"name":"data size","accumulatorId":1055,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1071,"metricType":"size"},{"name":"number of partitions","accumulatorId":1056,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1072,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1060,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1074,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1051,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1052,"metricType":"timing"},{"name":"peak memory","accumulatorId":1050,"metricType":"size"},{"name":"number of output rows","accumulatorId":1049,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1054,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1053,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":7,"accumUpdates":[[1046,1],[1047,0],[1048,37975350]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":7,"accumUpdates":[[1056,1]]}
{"Event":"SparkListenerJobStart","Job ID":14,"Submission Time":1720114396349,"Stage Infos":[{"Stage ID":21,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":49,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"125\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"126\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"130\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"FileScanRDD","Scope":"{\"id\":\"130\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[21],"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"125\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"7","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"7","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":21,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":49,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"125\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"126\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"130\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"FileScanRDD","Scope":"{\"id\":\"130\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114396350,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"125\",\"name\":\"Exchange\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"7","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"7","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":21,"Stage Attempt ID":0,"Task Info":{"Task ID":43,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114396355,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":21,"Stage Attempt ID":0,"Task Info":{"Task ID":44,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114396355,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":21,"Stage Attempt ID":0,"Task Info":{"Task ID":45,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114396355,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":21,"Stage Attempt ID":0,"Task Info":{"Task ID":46,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114396355,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":21,"Stage Attempt ID":0,"Task Info":{"Task ID":47,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114396355,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":21,"Stage Attempt ID":0,"Task Info":{"Task ID":48,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114396355,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":21,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":44,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114396355,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114397327,"Failed":false,"Killed":false,"Accumulables":[{"ID":1045,"Name":"scan time","Update":"921","Value":"921","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1055,"Name":"data size","Update":"120","Value":"120","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1074,"Name":"shuffle bytes written","Update":"59","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1075,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1076,"Name":"shuffle write time","Update":"1213917","Value":"1213917","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1077,"Name":"duration","Update":"922","Value":"922","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1078,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1081,"Name":"time in aggregation build","Update":"921","Value":"921","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1086,"Name":"internal.metrics.executorDeserializeTime","Update":16,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":1087,"Name":"internal.metrics.executorDeserializeCpuTime","Update":1542960,"Value":1542960,"Internal":true,"Count Failed Values":true},{"ID":1088,"Name":"internal.metrics.executorRunTime","Update":942,"Value":942,"Internal":true,"Count Failed Values":true},{"ID":1089,"Name":"internal.metrics.executorCpuTime","Update":32207788,"Value":32207788,"Internal":true,"Count Failed Values":true},{"ID":1090,"Name":"internal.metrics.resultSize","Update":2086,"Value":2086,"Internal":true,"Count Failed Values":true},{"ID":1114,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":59,"Internal":true,"Count Failed Values":true},{"ID":1115,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":1116,"Name":"internal.metrics.shuffle.write.writeTime","Update":1213917,"Value":1213917,"Internal":true,"Count Failed Values":true},{"ID":1117,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":1799,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":16,"Executor Deserialize CPU Time":1542960,"Executor Run Time":942,"Executor CPU Time":32207788,"Peak Execution Memory":0,"Result Size":2086,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":1213917,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":21,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":47,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114396355,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114397327,"Failed":false,"Killed":false,"Accumulables":[{"ID":1045,"Name":"scan time","Update":"924","Value":"1845","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1055,"Name":"data size","Update":"120","Value":"240","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1074,"Name":"shuffle bytes written","Update":"59","Value":"118","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1075,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1076,"Name":"shuffle write time","Update":"1053250","Value":"2267167","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1077,"Name":"duration","Update":"925","Value":"1847","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1078,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1081,"Name":"time in aggregation build","Update":"924","Value":"1845","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1086,"Name":"internal.metrics.executorDeserializeTime","Update":16,"Value":32,"Internal":true,"Count Failed Values":true},{"ID":1087,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4434537,"Value":5977497,"Internal":true,"Count Failed Values":true},{"ID":1088,"Name":"internal.metrics.executorRunTime","Update":942,"Value":1884,"Internal":true,"Count Failed Values":true},{"ID":1089,"Name":"internal.metrics.executorCpuTime","Update":53639832,"Value":85847620,"Internal":true,"Count Failed Values":true},{"ID":1090,"Name":"internal.metrics.resultSize","Update":2086,"Value":4172,"Internal":true,"Count Failed Values":true},{"ID":1114,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":118,"Internal":true,"Count Failed Values":true},{"ID":1115,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":1116,"Name":"internal.metrics.shuffle.write.writeTime","Update":1053250,"Value":2267167,"Internal":true,"Count Failed Values":true},{"ID":1117,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":3598,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":16,"Executor Deserialize CPU Time":4434537,"Executor Run Time":942,"Executor CPU Time":53639832,"Peak Execution Memory":0,"Result Size":2086,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":1053250,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":21,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":48,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114396355,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114397328,"Failed":false,"Killed":false,"Accumulables":[{"ID":1045,"Name":"scan time","Update":"926","Value":"2771","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1055,"Name":"data size","Update":"120","Value":"360","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1074,"Name":"shuffle bytes written","Update":"59","Value":"177","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1075,"Name":"shuffle records written","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1076,"Name":"shuffle write time","Update":"522543","Value":"2789710","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1077,"Name":"duration","Update":"927","Value":"2774","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1078,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1081,"Name":"time in aggregation build","Update":"926","Value":"2771","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1086,"Name":"internal.metrics.executorDeserializeTime","Update":7,"Value":39,"Internal":true,"Count Failed Values":true},{"ID":1087,"Name":"internal.metrics.executorDeserializeCpuTime","Update":2457333,"Value":8434830,"Internal":true,"Count Failed Values":true},{"ID":1088,"Name":"internal.metrics.executorRunTime","Update":950,"Value":2834,"Internal":true,"Count Failed Values":true},{"ID":1089,"Name":"internal.metrics.executorCpuTime","Update":40853039,"Value":126700659,"Internal":true,"Count Failed Values":true},{"ID":1090,"Name":"internal.metrics.resultSize","Update":2086,"Value":6258,"Internal":true,"Count Failed Values":true},{"ID":1114,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":177,"Internal":true,"Count Failed Values":true},{"ID":1115,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":1116,"Name":"internal.metrics.shuffle.write.writeTime","Update":522543,"Value":2789710,"Internal":true,"Count Failed Values":true},{"ID":1117,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":5397,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":7,"Executor Deserialize CPU Time":2457333,"Executor Run Time":950,"Executor CPU Time":40853039,"Peak Execution Memory":0,"Result Size":2086,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":522543,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":21,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":43,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114396355,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114397337,"Failed":false,"Killed":false,"Accumulables":[{"ID":1045,"Name":"scan time","Update":"912","Value":"3683","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1055,"Name":"data size","Update":"120","Value":"480","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1074,"Name":"shuffle bytes written","Update":"59","Value":"236","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1075,"Name":"shuffle records written","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1076,"Name":"shuffle write time","Update":"474915","Value":"3264625","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1077,"Name":"duration","Update":"912","Value":"3686","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1078,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1081,"Name":"time in aggregation build","Update":"912","Value":"3683","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1086,"Name":"internal.metrics.executorDeserializeTime","Update":17,"Value":56,"Internal":true,"Count Failed Values":true},{"ID":1087,"Name":"internal.metrics.executorDeserializeCpuTime","Update":1375083,"Value":9809913,"Internal":true,"Count Failed Values":true},{"ID":1088,"Name":"internal.metrics.executorRunTime","Update":948,"Value":3782,"Internal":true,"Count Failed Values":true},{"ID":1089,"Name":"internal.metrics.executorCpuTime","Update":25675915,"Value":152376574,"Internal":true,"Count Failed Values":true},{"ID":1090,"Name":"internal.metrics.resultSize","Update":2086,"Value":8344,"Internal":true,"Count Failed Values":true},{"ID":1114,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":236,"Internal":true,"Count Failed Values":true},{"ID":1115,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":1116,"Name":"internal.metrics.shuffle.write.writeTime","Update":474915,"Value":3264625,"Internal":true,"Count Failed Values":true},{"ID":1117,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":7196,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":17,"Executor Deserialize CPU Time":1375083,"Executor Run Time":948,"Executor CPU Time":25675915,"Peak Execution Memory":0,"Result Size":2086,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":474915,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":21,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":46,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114396355,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114397410,"Failed":false,"Killed":false,"Accumulables":[{"ID":1045,"Name":"scan time","Update":"987","Value":"4670","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1055,"Name":"data size","Update":"120","Value":"600","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1074,"Name":"shuffle bytes written","Update":"59","Value":"295","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1075,"Name":"shuffle records written","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1076,"Name":"shuffle write time","Update":"1352709","Value":"4617334","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1077,"Name":"duration","Update":"988","Value":"4674","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1078,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1081,"Name":"time in aggregation build","Update":"987","Value":"4670","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1086,"Name":"internal.metrics.executorDeserializeTime","Update":14,"Value":70,"Internal":true,"Count Failed Values":true},{"ID":1087,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5529043,"Value":15338956,"Internal":true,"Count Failed Values":true},{"ID":1088,"Name":"internal.metrics.executorRunTime","Update":1028,"Value":4810,"Internal":true,"Count Failed Values":true},{"ID":1089,"Name":"internal.metrics.executorCpuTime","Update":53951417,"Value":206327991,"Internal":true,"Count Failed Values":true},{"ID":1090,"Name":"internal.metrics.resultSize","Update":2086,"Value":10430,"Internal":true,"Count Failed Values":true},{"ID":1114,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":295,"Internal":true,"Count Failed Values":true},{"ID":1115,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":1116,"Name":"internal.metrics.shuffle.write.writeTime","Update":1352709,"Value":4617334,"Internal":true,"Count Failed Values":true},{"ID":1117,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":8995,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":14,"Executor Deserialize CPU Time":5529043,"Executor Run Time":1028,"Executor CPU Time":53951417,"Peak Execution Memory":0,"Result Size":2086,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":1352709,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":21,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":45,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114396355,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114397762,"Failed":false,"Killed":false,"Accumulables":[{"ID":1044,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1045,"Name":"scan time","Update":"1223","Value":"5893","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1055,"Name":"data size","Update":"120","Value":"720","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1074,"Name":"shuffle bytes written","Update":"134","Value":"429","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1075,"Name":"shuffle records written","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1076,"Name":"shuffle write time","Update":"312917","Value":"4930251","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1077,"Name":"duration","Update":"1362","Value":"6036","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1078,"Name":"number of output rows","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1081,"Name":"time in aggregation build","Update":"1362","Value":"6032","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1084,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1085,"Name":"number of input batches","Update":"144","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1086,"Name":"internal.metrics.executorDeserializeTime","Update":12,"Value":82,"Internal":true,"Count Failed Values":true},{"ID":1087,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5626707,"Value":20965663,"Internal":true,"Count Failed Values":true},{"ID":1088,"Name":"internal.metrics.executorRunTime","Update":1386,"Value":6196,"Internal":true,"Count Failed Values":true},{"ID":1089,"Name":"internal.metrics.executorCpuTime","Update":192663124,"Value":398991115,"Internal":true,"Count Failed Values":true},{"ID":1090,"Name":"internal.metrics.resultSize","Update":2172,"Value":12602,"Internal":true,"Count Failed Values":true},{"ID":1091,"Name":"internal.metrics.jvmGCTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":1114,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":134,"Value":429,"Internal":true,"Count Failed Values":true},{"ID":1115,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":1116,"Name":"internal.metrics.shuffle.write.writeTime","Update":312917,"Value":4930251,"Internal":true,"Count Failed Values":true},{"ID":1117,"Name":"internal.metrics.input.bytesRead","Update":1111183,"Value":1120178,"Internal":true,"Count Failed Values":true},{"ID":1118,"Name":"internal.metrics.input.recordsRead","Update":586579,"Value":586579,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":12,"Executor Deserialize CPU Time":5626707,"Executor Run Time":1386,"Executor CPU Time":192663124,"Peak Execution Memory":0,"Result Size":2172,"JVM GC Time":4,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":134,"Shuffle Write Time":312917,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1111183,"Records Read":586579},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":21,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":49,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"125\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"126\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"130\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"FileScanRDD","Scope":"{\"id\":\"130\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114396350,"Completion Time":1720114397762,"Accumulables":[{"ID":1044,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1045,"Name":"scan time","Value":"5893","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1055,"Name":"data size","Value":"720","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1074,"Name":"shuffle bytes written","Value":"429","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1075,"Name":"shuffle records written","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1076,"Name":"shuffle write time","Value":"4930251","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1077,"Name":"duration","Value":"6036","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1078,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1081,"Name":"time in aggregation build","Value":"6032","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1084,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1085,"Name":"number of input batches","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1086,"Name":"internal.metrics.executorDeserializeTime","Value":82,"Internal":true,"Count Failed Values":true},{"ID":1087,"Name":"internal.metrics.executorDeserializeCpuTime","Value":20965663,"Internal":true,"Count Failed Values":true},{"ID":1088,"Name":"internal.metrics.executorRunTime","Value":6196,"Internal":true,"Count Failed Values":true},{"ID":1089,"Name":"internal.metrics.executorCpuTime","Value":398991115,"Internal":true,"Count Failed Values":true},{"ID":1090,"Name":"internal.metrics.resultSize","Value":12602,"Internal":true,"Count Failed Values":true},{"ID":1091,"Name":"internal.metrics.jvmGCTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":1114,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":429,"Internal":true,"Count Failed Values":true},{"ID":1115,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":6,"Internal":true,"Count Failed Values":true},{"ID":1116,"Name":"internal.metrics.shuffle.write.writeTime","Value":4930251,"Internal":true,"Count Failed Values":true},{"ID":1117,"Name":"internal.metrics.input.bytesRead","Value":1120178,"Internal":true,"Count Failed Values":true},{"ID":1118,"Name":"internal.metrics.input.recordsRead","Value":586579,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":14,"Completion Time":1720114397763,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":7,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (10)\n+- == Final Plan ==\n   * HashAggregate (6)\n   +- ShuffleQueryStage (5), Statistics(sizeInBytes=720.0 B, rowCount=6)\n      +- Exchange (4)\n         +- * HashAggregate (3)\n            +- * ColumnarToRow (2)\n               +- Scan parquet  (1)\n+- == Initial Plan ==\n   HashAggregate (9)\n   +- Exchange (8)\n      +- HashAggregate (7)\n         +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [2]: [review_count#6L, stars#7]\nBatched: true\nLocation: InMemoryFileIndex [s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]\nReadSchema: struct<review_count:bigint,stars:double>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [2]: [review_count#6L, stars#7]\n\n(3) HashAggregate [codegen id : 1]\nInput [2]: [review_count#6L, stars#7]\nKeys: []\nFunctions [10]: [partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)]\nAggregate Attributes [14]: [min#5971, max#5972, sum#5973L, count#5974L, n#5939, avg#5940, m2#5941, min#5975, max#5976, sum#5977, count#5978L, n#5947, avg#5948, m2#5949]\nResults [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\n\n(4) Exchange\nInput [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=290]\n\n(5) ShuffleQueryStage\nOutput [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\nArguments: 0\n\n(6) HashAggregate [codegen id : 2]\nInput [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\nKeys: []\nFunctions [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)]\nAggregate Attributes [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5775, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5780, sum(review_count#6L)#5781L, count(review_count#6L)#5782L, stateful_stddev_pop(cast(review_count#6L as double))#5791, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5797, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5802, sum(stars#7)#5803, count(stars#7)#5804L, stateful_stddev_pop(stars#7)#5813]\nResults [12]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5775 AS min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5867, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5780 AS max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5868, cast(sum(review_count#6L)#5781L as double) AS CAST(sum(review_count) AS DOUBLE)#5869, count(review_count#6L)#5782L AS CAST(count(review_count) AS BIGINT)#5870L, stateful_stddev_pop(cast(review_count#6L as double))#5791 AS stateful_stddev_pop(review_count)#5879, cast(sum(review_count#6L)#5781L as double) AS CAST(sum(review_count) AS DOUBLE)#5880, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5797 AS min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5881, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5802 AS max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5882, sum(stars#7)#5803 AS CAST(sum(stars) AS DOUBLE)#5883, count(stars#7)#5804L AS CAST(count(stars) AS BIGINT)#5884L, stateful_stddev_pop(stars#7)#5813 AS stateful_stddev_pop(stars)#5893, sum(stars#7)#5803 AS CAST(sum(stars) AS DOUBLE)#5894]\n\n(7) HashAggregate\nInput [2]: [review_count#6L, stars#7]\nKeys: []\nFunctions [10]: [partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)]\nAggregate Attributes [14]: [min#5971, max#5972, sum#5973L, count#5974L, n#5939, avg#5940, m2#5941, min#5975, max#5976, sum#5977, count#5978L, n#5947, avg#5948, m2#5949]\nResults [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\n\n(8) Exchange\nInput [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=277]\n\n(9) HashAggregate\nInput [14]: [min#5979, max#5980, sum#5981L, count#5982L, n#5944, avg#5945, m2#5946, min#5983, max#5984, sum#5985, count#5986L, n#5952, avg#5953, m2#5954]\nKeys: []\nFunctions [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)]\nAggregate Attributes [10]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5775, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5780, sum(review_count#6L)#5781L, count(review_count#6L)#5782L, stateful_stddev_pop(cast(review_count#6L as double))#5791, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5797, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5802, sum(stars#7)#5803, count(stars#7)#5804L, stateful_stddev_pop(stars#7)#5813]\nResults [12]: [min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5775 AS min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5867, max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double))#5780 AS max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5868, cast(sum(review_count#6L)#5781L as double) AS CAST(sum(review_count) AS DOUBLE)#5869, count(review_count#6L)#5782L AS CAST(count(review_count) AS BIGINT)#5870L, stateful_stddev_pop(cast(review_count#6L as double))#5791 AS stateful_stddev_pop(review_count)#5879, cast(sum(review_count#6L)#5781L as double) AS CAST(sum(review_count) AS DOUBLE)#5880, min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5797 AS min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5881, max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double))#5802 AS max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5882, sum(stars#7)#5803 AS CAST(sum(stars) AS DOUBLE)#5883, count(stars#7)#5804L AS CAST(count(stars) AS BIGINT)#5884L, stateful_stddev_pop(stars#7)#5813 AS stateful_stddev_pop(stars)#5893, sum(stars#7)#5803 AS CAST(sum(stars) AS DOUBLE)#5894]\n\n(10) AdaptiveSparkPlan\nOutput [12]: [min(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5867, max(CAST(element_at(array(InScopeData AS source, review_count AS selection), 2) AS DOUBLE))#5868, CAST(sum(review_count) AS DOUBLE)#5869, CAST(count(review_count) AS BIGINT)#5870L, stateful_stddev_pop(review_count)#5879, CAST(sum(review_count) AS DOUBLE)#5880, min(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5881, max(CAST(element_at(array(InScopeData AS source, stars AS selection), 2) AS DOUBLE))#5882, CAST(sum(stars) AS DOUBLE)#5883, CAST(count(stars) AS BIGINT)#5884L, stateful_stddev_pop(stars)#5893, CAST(sum(stars) AS DOUBLE)#5894]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), sum(review_count#6L), count(review_count#6L), stateful_stddev_pop(cast(review_count#6L as double)), min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), sum(stars#7), count(stars#7), stateful_stddev_pop(stars#7)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=290]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_min(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(review_count#6L as string)), 2, None, false) as double)), partial_sum(review_count#6L), partial_count(review_count#6L), partial_stateful_stddev_pop(cast(review_count#6L as double)), partial_min(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_max(cast(element_at(array(InScopeData, cast(stars#7 as string)), 2, None, false) as double)), partial_sum(stars#7), partial_count(stars#7), partial_stateful_stddev_pop(stars#7)])","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [review_count#6L,stars#7] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<review_count:bigint,stars:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://owshq/yelp/business/part-00000-tid-6358303181395316437-dfec8652-f8ed-47b9-b505-7573dc15f299-1189-1-c000.snappy.parquet]","ReadSchema":"struct<review_count:bigint,stars:double>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":1046,"metricType":"sum"},{"name":"scan time","accumulatorId":1045,"metricType":"timing"},{"name":"metadata time","accumulatorId":1047,"metricType":"timing"},{"name":"size of files read","accumulatorId":1048,"metricType":"size"},{"name":"number of output rows","accumulatorId":1044,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1084,"metricType":"sum"},{"name":"number of input batches","accumulatorId":1085,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1080,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1081,"metricType":"timing"},{"name":"peak memory","accumulatorId":1079,"metricType":"size"},{"name":"number of output rows","accumulatorId":1078,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1083,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1082,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1077,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1075,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1069,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1076,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1070,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1067,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1064,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1073,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1066,"metricType":"sum"},{"name":"records read","accumulatorId":1063,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1061,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1062,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1059,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1065,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1058,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1068,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1057,"metricType":"sum"},{"name":"data size","accumulatorId":1055,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1071,"metricType":"size"},{"name":"number of partitions","accumulatorId":1056,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1072,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1060,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1074,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1124,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1125,"metricType":"timing"},{"name":"peak memory","accumulatorId":1123,"metricType":"size"},{"name":"number of output rows","accumulatorId":1122,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1127,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1126,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1121,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":15,"Submission Time":1720114397794,"Stage Infos":[{"Stage ID":22,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":6,"RDD Info":[{"RDD ID":49,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"125\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"126\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"130\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"FileScanRDD","Scope":"{\"id\":\"130\",\"name\":\"Scan parquet \"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":23,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"136\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"131\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"135\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[22],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[22,23],"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"137\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"7","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"7","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":23,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"136\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"131\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"135\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[22],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114397794,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"35733","spark.submit.pyFiles":"","spark.app.startTime":"1720114346012","spark.delta.logStore.class":"org.apache.spark.sql.delta.storage.S3SingleDriverLogStore","spark.rdd.scope":"{\"id\":\"137\",\"name\":\"collect\"}","spark.hadoop.fs.s3a.endpoint":"http://138.197.224.4","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.rdd.compress":"True","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1720114345467","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.hadoop.fs.s3a.fast.upload":"true","spark.eventLog.dir":"file:/opt/bitnami/spark/logs/events","spark.hadoop.fs.s3a.aws.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","spark.sql.execution.id":"7","spark.history.fs.logDirectory":"file:/opt/bitnami/spark/logs/events","spark.sql.warehouse.dir":"file:/opt/bitnami/spark/spark-warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"3g","spark.master":"spark://spark-master:7077","spark.hadoop.fs.s3a.secret.key":"*********(redacted)","spark.executor.id":"driver","spark.app.name":"yelp-dataset-deequ","spark.hadoop.fs.s3a.multipart.size":"104857600","spark.hadoop.fs.s3a.access.key":"*********(redacted)","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"c05db890fad2","spark.app.id":"app-20240704173226-0008","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.sql.execution.root.id":"7","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false --add-exports java.base/sun.nio.ch=ALL-UNNAMED"}}
{"Event":"SparkListenerTaskStart","Stage ID":23,"Stage Attempt ID":0,"Task Info":{"Task ID":49,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114397800,"Executor ID":"2","Host":"172.29.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":23,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":49,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114397800,"Executor ID":"2","Host":"172.29.0.4","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114397828,"Failed":false,"Killed":false,"Accumulables":[{"ID":1057,"Name":"remote blocks read","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1058,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1059,"Name":"remote bytes read","Update":"236","Value":"236","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1061,"Name":"local bytes read","Update":"193","Value":"193","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1062,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1063,"Name":"records read","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1072,"Name":"remote reqs duration","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1121,"Name":"duration","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1122,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1125,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1128,"Name":"internal.metrics.executorDeserializeTime","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":1129,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3973709,"Value":3973709,"Internal":true,"Count Failed Values":true},{"ID":1130,"Name":"internal.metrics.executorRunTime","Update":17,"Value":17,"Internal":true,"Count Failed Values":true},{"ID":1131,"Name":"internal.metrics.executorCpuTime","Update":12686708,"Value":12686708,"Internal":true,"Count Failed Values":true},{"ID":1132,"Name":"internal.metrics.resultSize","Update":4100,"Value":4100,"Internal":true,"Count Failed Values":true},{"ID":1139,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":1140,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":1141,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":236,"Value":236,"Internal":true,"Count Failed Values":true},{"ID":1142,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1143,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":193,"Value":193,"Internal":true,"Count Failed Values":true},{"ID":1144,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1145,"Name":"internal.metrics.shuffle.read.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":1146,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1147,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1148,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1149,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1150,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1151,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1152,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1153,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1154,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":1155,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":6,"Executor Deserialize CPU Time":3973709,"Executor Run Time":17,"Executor CPU Time":12686708,"Peak Execution Memory":0,"Result Size":4100,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":4,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":236,"Remote Bytes Read To Disk":0,"Local Bytes Read":193,"Total Records Read":6,"Remote Requests Duration":4,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":23,"Stage Attempt ID":0,"Stage Name":"collect at AnalysisRunner.scala:327","Number of Tasks":1,"RDD Info":[{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"136\",\"name\":\"mapPartitionsInternal\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"131\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[50],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":50,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"135\",\"name\":\"Exchange\"}","Callsite":"collect at AnalysisRunner.scala:327","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[22],"Details":"org.apache.spark.sql.Dataset.collect(Dataset.scala:3573)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.liftedTree1$1(AnalysisRunner.scala:327)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.runScanningAnalyzers(AnalysisRunner.scala:320)\ncom.amazon.deequ.analyzers.runners.AnalysisRunner$.doAnalysisRun(AnalysisRunner.scala:169)\ncom.amazon.deequ.analyzers.runners.AnalysisRunBuilder.run(AnalysisRunBuilder.scala:110)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:195)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114397794,"Completion Time":1720114397829,"Accumulables":[{"ID":1057,"Name":"remote blocks read","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1058,"Name":"local blocks read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1059,"Name":"remote bytes read","Value":"236","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1061,"Name":"local bytes read","Value":"193","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1062,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1063,"Name":"records read","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1072,"Name":"remote reqs duration","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1121,"Name":"duration","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1122,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1125,"Name":"time in aggregation build","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1128,"Name":"internal.metrics.executorDeserializeTime","Value":6,"Internal":true,"Count Failed Values":true},{"ID":1129,"Name":"internal.metrics.executorDeserializeCpuTime","Value":3973709,"Internal":true,"Count Failed Values":true},{"ID":1130,"Name":"internal.metrics.executorRunTime","Value":17,"Internal":true,"Count Failed Values":true},{"ID":1131,"Name":"internal.metrics.executorCpuTime","Value":12686708,"Internal":true,"Count Failed Values":true},{"ID":1132,"Name":"internal.metrics.resultSize","Value":4100,"Internal":true,"Count Failed Values":true},{"ID":1139,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":4,"Internal":true,"Count Failed Values":true},{"ID":1140,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":2,"Internal":true,"Count Failed Values":true},{"ID":1141,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":236,"Internal":true,"Count Failed Values":true},{"ID":1142,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1143,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":193,"Internal":true,"Count Failed Values":true},{"ID":1144,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1145,"Name":"internal.metrics.shuffle.read.recordsRead","Value":6,"Internal":true,"Count Failed Values":true},{"ID":1146,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1147,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1148,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1149,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1150,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1151,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1152,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1153,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1154,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":4,"Internal":true,"Count Failed Values":true},{"ID":1155,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":15,"Completion Time":1720114397829,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":7,"time":1720114397844,"errorMessage":""}
{"Event":"SparkListenerJobStart","Job ID":16,"Submission Time":1720114397898,"Stage Infos":[{"Stage ID":24,"Stage Attempt ID":0,"Stage Name":"countByKey at ColumnProfiler.scala:631","Number of Tasks":6,"RDD Info":[{"RDD ID":60,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"152\",\"name\":\"countByKey\"}","Callsite":"countByKey at ColumnProfiler.scala:631","Parent IDs":[59],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"149\",\"name\":\"Scan parquet \"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":57,"Name":"SQLExecutionRDD","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[56],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":55,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"146\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":56,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"145\",\"name\":\"DeserializeToObject\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[55],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"FileScanRDD","Scope":"{\"id\":\"149\",\"name\":\"Scan parquet \"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":59,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"151\",\"name\":\"flatMap\"}","Callsite":"flatMap at ColumnProfiler.scala:631","Parent IDs":[58],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":58,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"150\",\"name\":\"mapPartitions\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[57],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.rdd.PairRDDFunctions.countByKey(PairRDDFunctions.scala:367)\ncom.amazon.deequ.profiles.ColumnProfiler$.computeHistograms(ColumnProfiler.scala:631)\ncom.amazon.deequ.profiles.ColumnProfiler$.getHistogramsForThirdPass(ColumnProfiler.scala:684)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:227)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":25,"Stage Attempt ID":0,"Stage Name":"countByKey at ColumnProfiler.scala:631","Number of Tasks":6,"RDD Info":[{"RDD ID":61,"Name":"ShuffledRDD","Scope":"{\"id\":\"152\",\"name\":\"countByKey\"}","Callsite":"countByKey at ColumnProfiler.scala:631","Parent IDs":[60],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[24],"Details":"org.apache.spark.rdd.PairRDDFunctions.countByKey(PairRDDFunctions.scala:367)\ncom.amazon.deequ.profiles.ColumnProfiler$.computeHistograms(ColumnProfiler.scala:631)\ncom.amazon.deequ.profiles.ColumnProfiler$.getHistogramsForThirdPass(ColumnProfiler.scala:684)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:227)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[24,25],"Properties":{"spark.rdd.scope":"{\"id\":\"152\",\"name\":\"countByKey\"}","__fetch_continuous_blocks_in_batch_enabled":"true","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":24,"Stage Attempt ID":0,"Stage Name":"countByKey at ColumnProfiler.scala:631","Number of Tasks":6,"RDD Info":[{"RDD ID":60,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"152\",\"name\":\"countByKey\"}","Callsite":"countByKey at ColumnProfiler.scala:631","Parent IDs":[59],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"149\",\"name\":\"Scan parquet \"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":57,"Name":"SQLExecutionRDD","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[56],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":55,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"146\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":56,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"145\",\"name\":\"DeserializeToObject\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[55],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"FileScanRDD","Scope":"{\"id\":\"149\",\"name\":\"Scan parquet \"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":59,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"151\",\"name\":\"flatMap\"}","Callsite":"flatMap at ColumnProfiler.scala:631","Parent IDs":[58],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":58,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"150\",\"name\":\"mapPartitions\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[57],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.rdd.PairRDDFunctions.countByKey(PairRDDFunctions.scala:367)\ncom.amazon.deequ.profiles.ColumnProfiler$.computeHistograms(ColumnProfiler.scala:631)\ncom.amazon.deequ.profiles.ColumnProfiler$.getHistogramsForThirdPass(ColumnProfiler.scala:684)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:227)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114397899,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.rdd.scope":"{\"id\":\"152\",\"name\":\"countByKey\"}","__fetch_continuous_blocks_in_batch_enabled":"true","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":24,"Stage Attempt ID":0,"Task Info":{"Task ID":50,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114397906,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":24,"Stage Attempt ID":0,"Task Info":{"Task ID":51,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114397906,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":24,"Stage Attempt ID":0,"Task Info":{"Task ID":52,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114397906,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":24,"Stage Attempt ID":0,"Task Info":{"Task ID":53,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114397906,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":24,"Stage Attempt ID":0,"Task Info":{"Task ID":54,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114397906,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":24,"Stage Attempt ID":0,"Task Info":{"Task ID":55,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114397906,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":24,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":51,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114397906,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114399468,"Failed":false,"Killed":false,"Accumulables":[{"ID":1165,"Name":"duration","Update":"1442","Value":"1442","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1167,"Name":"scan time","Update":"932","Value":"932","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1171,"Name":"internal.metrics.executorDeserializeTime","Update":86,"Value":86,"Internal":true,"Count Failed Values":true},{"ID":1172,"Name":"internal.metrics.executorDeserializeCpuTime","Update":52418128,"Value":52418128,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.executorRunTime","Update":1458,"Value":1458,"Internal":true,"Count Failed Values":true},{"ID":1174,"Name":"internal.metrics.executorCpuTime","Update":59601710,"Value":59601710,"Internal":true,"Count Failed Values":true},{"ID":1175,"Name":"internal.metrics.resultSize","Update":1907,"Value":1907,"Internal":true,"Count Failed Values":true},{"ID":1178,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1179,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1180,"Name":"internal.metrics.peakExecutionMemory","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1201,"Name":"internal.metrics.shuffle.write.writeTime","Update":1509666,"Value":1509666,"Internal":true,"Count Failed Values":true},{"ID":1202,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":1799,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":86,"Executor Deserialize CPU Time":52418128,"Executor Run Time":1458,"Executor CPU Time":59601710,"Peak Execution Memory":0,"Result Size":1907,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":1509666,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":24,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":54,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114397906,"Executor ID":"2","Host":"172.29.0.4","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114399468,"Failed":false,"Killed":false,"Accumulables":[{"ID":1165,"Name":"duration","Update":"1443","Value":"2885","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1167,"Name":"scan time","Update":"934","Value":"1866","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1171,"Name":"internal.metrics.executorDeserializeTime","Update":87,"Value":173,"Internal":true,"Count Failed Values":true},{"ID":1172,"Name":"internal.metrics.executorDeserializeCpuTime","Update":27975163,"Value":80393291,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.executorRunTime","Update":1467,"Value":2925,"Internal":true,"Count Failed Values":true},{"ID":1174,"Name":"internal.metrics.executorCpuTime","Update":520473584,"Value":580075294,"Internal":true,"Count Failed Values":true},{"ID":1175,"Name":"internal.metrics.resultSize","Update":1907,"Value":3814,"Internal":true,"Count Failed Values":true},{"ID":1178,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1179,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1180,"Name":"internal.metrics.peakExecutionMemory","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1201,"Name":"internal.metrics.shuffle.write.writeTime","Update":47875,"Value":1557541,"Internal":true,"Count Failed Values":true},{"ID":1202,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":3598,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":87,"Executor Deserialize CPU Time":27975163,"Executor Run Time":1467,"Executor CPU Time":520473584,"Peak Execution Memory":0,"Result Size":1907,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":47875,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":24,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":55,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114397906,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114399472,"Failed":false,"Killed":false,"Accumulables":[{"ID":1165,"Name":"duration","Update":"1459","Value":"4344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1167,"Name":"scan time","Update":"938","Value":"2804","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1171,"Name":"internal.metrics.executorDeserializeTime","Update":88,"Value":261,"Internal":true,"Count Failed Values":true},{"ID":1172,"Name":"internal.metrics.executorDeserializeCpuTime","Update":62352001,"Value":142745292,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.executorRunTime","Update":1471,"Value":4396,"Internal":true,"Count Failed Values":true},{"ID":1174,"Name":"internal.metrics.executorCpuTime","Update":58868171,"Value":638943465,"Internal":true,"Count Failed Values":true},{"ID":1175,"Name":"internal.metrics.resultSize","Update":1907,"Value":5721,"Internal":true,"Count Failed Values":true},{"ID":1178,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1179,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1180,"Name":"internal.metrics.peakExecutionMemory","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1201,"Name":"internal.metrics.shuffle.write.writeTime","Update":970375,"Value":2527916,"Internal":true,"Count Failed Values":true},{"ID":1202,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":5397,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":400798768,"JVMOffHeapMemory":147415216,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":908519,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":908519,"OffHeapUnifiedMemory":0,"DirectPoolMemory":27490183,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":19,"MinorGCTime":103,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":103},"Task Metrics":{"Executor Deserialize Time":88,"Executor Deserialize CPU Time":62352001,"Executor Run Time":1471,"Executor CPU Time":58868171,"Peak Execution Memory":0,"Result Size":1907,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":970375,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":24,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":53,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114397906,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114399499,"Failed":false,"Killed":false,"Accumulables":[{"ID":1165,"Name":"duration","Update":"1493","Value":"5837","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1167,"Name":"scan time","Update":"944","Value":"3748","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1171,"Name":"internal.metrics.executorDeserializeTime","Update":84,"Value":345,"Internal":true,"Count Failed Values":true},{"ID":1172,"Name":"internal.metrics.executorDeserializeCpuTime","Update":29980492,"Value":172725784,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.executorRunTime","Update":1501,"Value":5897,"Internal":true,"Count Failed Values":true},{"ID":1174,"Name":"internal.metrics.executorCpuTime","Update":536785544,"Value":1175729009,"Internal":true,"Count Failed Values":true},{"ID":1175,"Name":"internal.metrics.resultSize","Update":1950,"Value":7671,"Internal":true,"Count Failed Values":true},{"ID":1176,"Name":"internal.metrics.jvmGCTime","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":1178,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1179,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1180,"Name":"internal.metrics.peakExecutionMemory","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1201,"Name":"internal.metrics.shuffle.write.writeTime","Update":507167,"Value":3035083,"Internal":true,"Count Failed Values":true},{"ID":1202,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":7196,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":84,"Executor Deserialize CPU Time":29980492,"Executor Run Time":1501,"Executor CPU Time":536785544,"Peak Execution Memory":0,"Result Size":1950,"JVM GC Time":5,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":507167,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":24,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":50,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114397906,"Executor ID":"1","Host":"172.29.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114399540,"Failed":false,"Killed":false,"Accumulables":[{"ID":1165,"Name":"duration","Update":"1539","Value":"7376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1167,"Name":"scan time","Update":"989","Value":"4737","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1171,"Name":"internal.metrics.executorDeserializeTime","Update":84,"Value":429,"Internal":true,"Count Failed Values":true},{"ID":1172,"Name":"internal.metrics.executorDeserializeCpuTime","Update":70156456,"Value":242882240,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.executorRunTime","Update":1543,"Value":7440,"Internal":true,"Count Failed Values":true},{"ID":1174,"Name":"internal.metrics.executorCpuTime","Update":41890493,"Value":1217619502,"Internal":true,"Count Failed Values":true},{"ID":1175,"Name":"internal.metrics.resultSize","Update":1950,"Value":9621,"Internal":true,"Count Failed Values":true},{"ID":1176,"Name":"internal.metrics.jvmGCTime","Update":5,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":1178,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1179,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1180,"Name":"internal.metrics.peakExecutionMemory","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1201,"Name":"internal.metrics.shuffle.write.writeTime","Update":22792,"Value":3057875,"Internal":true,"Count Failed Values":true},{"ID":1202,"Name":"internal.metrics.input.bytesRead","Update":1799,"Value":8995,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":84,"Executor Deserialize CPU Time":70156456,"Executor Run Time":1543,"Executor CPU Time":41890493,"Peak Execution Memory":0,"Result Size":1950,"JVM GC Time":5,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":22792,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1799,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":24,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":52,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114397906,"Executor ID":"0","Host":"172.29.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114404708,"Failed":false,"Killed":false,"Accumulables":[{"ID":1163,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1164,"Name":"number of input batches","Update":"144","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1165,"Name":"duration","Update":"6702","Value":"14078","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1166,"Name":"number of output rows","Update":"586579","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1167,"Name":"scan time","Update":"5685","Value":"10422","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1171,"Name":"internal.metrics.executorDeserializeTime","Update":88,"Value":517,"Internal":true,"Count Failed Values":true},{"ID":1172,"Name":"internal.metrics.executorDeserializeCpuTime","Update":28797456,"Value":271679696,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.executorRunTime","Update":6709,"Value":14149,"Internal":true,"Count Failed Values":true},{"ID":1174,"Name":"internal.metrics.executorCpuTime","Update":1261180985,"Value":2478800487,"Internal":true,"Count Failed Values":true},{"ID":1175,"Name":"internal.metrics.resultSize","Update":2079,"Value":11700,"Internal":true,"Count Failed Values":true},{"ID":1176,"Name":"internal.metrics.jvmGCTime","Update":17,"Value":27,"Internal":true,"Count Failed Values":true},{"ID":1178,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1179,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1180,"Name":"internal.metrics.peakExecutionMemory","Update":12360,"Value":12360,"Internal":true,"Count Failed Values":true},{"ID":1199,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":2379,"Value":2379,"Internal":true,"Count Failed Values":true},{"ID":1200,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":90,"Value":90,"Internal":true,"Count Failed Values":true},{"ID":1201,"Name":"internal.metrics.shuffle.write.writeTime","Update":35954,"Value":3093829,"Internal":true,"Count Failed Values":true},{"ID":1202,"Name":"internal.metrics.input.bytesRead","Update":37977145,"Value":37986140,"Internal":true,"Count Failed Values":true},{"ID":1203,"Name":"internal.metrics.input.recordsRead","Update":586579,"Value":586579,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":400798768,"JVMOffHeapMemory":147415216,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":908519,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":908519,"OffHeapUnifiedMemory":0,"DirectPoolMemory":27490183,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":19,"MinorGCTime":103,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":103},"Task Metrics":{"Executor Deserialize Time":88,"Executor Deserialize CPU Time":28797456,"Executor Run Time":6709,"Executor CPU Time":1261180985,"Peak Execution Memory":12360,"Result Size":2079,"JVM GC Time":17,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":2379,"Shuffle Write Time":35954,"Shuffle Records Written":90},"Input Metrics":{"Bytes Read":37977145,"Records Read":586579},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":24,"Stage Attempt ID":0,"Stage Name":"countByKey at ColumnProfiler.scala:631","Number of Tasks":6,"RDD Info":[{"RDD ID":60,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"152\",\"name\":\"countByKey\"}","Callsite":"countByKey at ColumnProfiler.scala:631","Parent IDs":[59],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"149\",\"name\":\"Scan parquet \"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":57,"Name":"SQLExecutionRDD","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[56],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":55,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"146\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":56,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"145\",\"name\":\"DeserializeToObject\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[55],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"FileScanRDD","Scope":"{\"id\":\"149\",\"name\":\"Scan parquet \"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":59,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"151\",\"name\":\"flatMap\"}","Callsite":"flatMap at ColumnProfiler.scala:631","Parent IDs":[58],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":58,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"150\",\"name\":\"mapPartitions\"}","Callsite":"rdd at ColumnProfiler.scala:630","Parent IDs":[57],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.rdd.PairRDDFunctions.countByKey(PairRDDFunctions.scala:367)\ncom.amazon.deequ.profiles.ColumnProfiler$.computeHistograms(ColumnProfiler.scala:631)\ncom.amazon.deequ.profiles.ColumnProfiler$.getHistogramsForThirdPass(ColumnProfiler.scala:684)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:227)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114397899,"Completion Time":1720114404709,"Accumulables":[{"ID":1163,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1164,"Name":"number of input batches","Value":"144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1165,"Name":"duration","Value":"14078","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1166,"Name":"number of output rows","Value":"586579","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1167,"Name":"scan time","Value":"10422","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1171,"Name":"internal.metrics.executorDeserializeTime","Value":517,"Internal":true,"Count Failed Values":true},{"ID":1172,"Name":"internal.metrics.executorDeserializeCpuTime","Value":271679696,"Internal":true,"Count Failed Values":true},{"ID":1173,"Name":"internal.metrics.executorRunTime","Value":14149,"Internal":true,"Count Failed Values":true},{"ID":1174,"Name":"internal.metrics.executorCpuTime","Value":2478800487,"Internal":true,"Count Failed Values":true},{"ID":1175,"Name":"internal.metrics.resultSize","Value":11700,"Internal":true,"Count Failed Values":true},{"ID":1176,"Name":"internal.metrics.jvmGCTime","Value":27,"Internal":true,"Count Failed Values":true},{"ID":1178,"Name":"internal.metrics.memoryBytesSpilled","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1179,"Name":"internal.metrics.diskBytesSpilled","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1180,"Name":"internal.metrics.peakExecutionMemory","Value":12360,"Internal":true,"Count Failed Values":true},{"ID":1199,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":2379,"Internal":true,"Count Failed Values":true},{"ID":1200,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":90,"Internal":true,"Count Failed Values":true},{"ID":1201,"Name":"internal.metrics.shuffle.write.writeTime","Value":3093829,"Internal":true,"Count Failed Values":true},{"ID":1202,"Name":"internal.metrics.input.bytesRead","Value":37986140,"Internal":true,"Count Failed Values":true},{"ID":1203,"Name":"internal.metrics.input.recordsRead","Value":586579,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":25,"Stage Attempt ID":0,"Stage Name":"countByKey at ColumnProfiler.scala:631","Number of Tasks":6,"RDD Info":[{"RDD ID":61,"Name":"ShuffledRDD","Scope":"{\"id\":\"152\",\"name\":\"countByKey\"}","Callsite":"countByKey at ColumnProfiler.scala:631","Parent IDs":[60],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[24],"Details":"org.apache.spark.rdd.PairRDDFunctions.countByKey(PairRDDFunctions.scala:367)\ncom.amazon.deequ.profiles.ColumnProfiler$.computeHistograms(ColumnProfiler.scala:631)\ncom.amazon.deequ.profiles.ColumnProfiler$.getHistogramsForThirdPass(ColumnProfiler.scala:684)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:227)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114404710,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.rdd.scope":"{\"id\":\"152\",\"name\":\"countByKey\"}","__fetch_continuous_blocks_in_batch_enabled":"true","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":25,"Stage Attempt ID":0,"Task Info":{"Task ID":56,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114404713,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":25,"Stage Attempt ID":0,"Task Info":{"Task ID":57,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114404713,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":25,"Stage Attempt ID":0,"Task Info":{"Task ID":58,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114404736,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":25,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":57,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1720114404713,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114404736,"Failed":false,"Killed":false,"Accumulables":[{"ID":1206,"Name":"internal.metrics.executorDeserializeTime","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":1207,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4577208,"Value":4577208,"Internal":true,"Count Failed Values":true},{"ID":1208,"Name":"internal.metrics.executorRunTime","Update":11,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":1209,"Name":"internal.metrics.executorCpuTime","Update":5444084,"Value":5444084,"Internal":true,"Count Failed Values":true},{"ID":1210,"Name":"internal.metrics.resultSize","Update":2509,"Value":2509,"Internal":true,"Count Failed Values":true},{"ID":1213,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1214,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1215,"Name":"internal.metrics.peakExecutionMemory","Update":2628,"Value":2628,"Internal":true,"Count Failed Values":true},{"ID":1217,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1218,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":1219,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1220,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1221,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":466,"Value":466,"Internal":true,"Count Failed Values":true},{"ID":1222,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1223,"Name":"internal.metrics.shuffle.read.recordsRead","Update":20,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":1224,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1225,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1226,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1227,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1228,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1229,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1230,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1231,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1232,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1233,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":6,"Executor Deserialize CPU Time":4577208,"Executor Run Time":11,"Executor CPU Time":5444084,"Peak Execution Memory":2628,"Result Size":2509,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":466,"Total Records Read":20,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":25,"Stage Attempt ID":0,"Task Info":{"Task ID":59,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114404737,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":25,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":56,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1720114404713,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114404737,"Failed":false,"Killed":false,"Accumulables":[{"ID":1206,"Name":"internal.metrics.executorDeserializeTime","Update":7,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":1207,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3037165,"Value":7614373,"Internal":true,"Count Failed Values":true},{"ID":1208,"Name":"internal.metrics.executorRunTime","Update":11,"Value":22,"Internal":true,"Count Failed Values":true},{"ID":1209,"Name":"internal.metrics.executorCpuTime","Update":6106295,"Value":11550379,"Internal":true,"Count Failed Values":true},{"ID":1210,"Name":"internal.metrics.resultSize","Update":2352,"Value":4861,"Internal":true,"Count Failed Values":true},{"ID":1213,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1214,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1215,"Name":"internal.metrics.peakExecutionMemory","Update":2232,"Value":4860,"Internal":true,"Count Failed Values":true},{"ID":1217,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1218,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":1219,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1220,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1221,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":409,"Value":875,"Internal":true,"Count Failed Values":true},{"ID":1222,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1223,"Name":"internal.metrics.shuffle.read.recordsRead","Update":15,"Value":35,"Internal":true,"Count Failed Values":true},{"ID":1224,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1225,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1226,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1227,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1228,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1229,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1230,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1231,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1232,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1233,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":7,"Executor Deserialize CPU Time":3037165,"Executor Run Time":11,"Executor CPU Time":6106295,"Peak Execution Memory":2232,"Result Size":2352,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":409,"Total Records Read":15,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":25,"Stage Attempt ID":0,"Task Info":{"Task ID":60,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114404747,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":25,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":59,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1720114404737,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114404747,"Failed":false,"Killed":false,"Accumulables":[{"ID":1206,"Name":"internal.metrics.executorDeserializeTime","Update":1,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":1207,"Name":"internal.metrics.executorDeserializeCpuTime","Update":1024875,"Value":8639248,"Internal":true,"Count Failed Values":true},{"ID":1208,"Name":"internal.metrics.executorRunTime","Update":2,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":1209,"Name":"internal.metrics.executorCpuTime","Update":2042999,"Value":13593378,"Internal":true,"Count Failed Values":true},{"ID":1210,"Name":"internal.metrics.resultSize","Update":2136,"Value":6997,"Internal":true,"Count Failed Values":true},{"ID":1213,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1214,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1215,"Name":"internal.metrics.peakExecutionMemory","Update":1680,"Value":6540,"Internal":true,"Count Failed Values":true},{"ID":1217,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1218,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":1219,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1220,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1221,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":321,"Value":1196,"Internal":true,"Count Failed Values":true},{"ID":1222,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1223,"Name":"internal.metrics.shuffle.read.recordsRead","Update":9,"Value":44,"Internal":true,"Count Failed Values":true},{"ID":1224,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1225,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1226,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1227,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1228,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1229,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1230,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1231,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1232,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1233,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":1,"Executor Deserialize CPU Time":1024875,"Executor Run Time":2,"Executor CPU Time":2042999,"Peak Execution Memory":1680,"Result Size":2136,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":321,"Total Records Read":9,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":25,"Stage Attempt ID":0,"Task Info":{"Task ID":61,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114404747,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":25,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":58,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1720114404736,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114404747,"Failed":false,"Killed":false,"Accumulables":[{"ID":1206,"Name":"internal.metrics.executorDeserializeTime","Update":1,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":1207,"Name":"internal.metrics.executorDeserializeCpuTime","Update":1088417,"Value":9727665,"Internal":true,"Count Failed Values":true},{"ID":1208,"Name":"internal.metrics.executorRunTime","Update":2,"Value":26,"Internal":true,"Count Failed Values":true},{"ID":1209,"Name":"internal.metrics.executorCpuTime","Update":2095956,"Value":15689334,"Internal":true,"Count Failed Values":true},{"ID":1210,"Name":"internal.metrics.resultSize","Update":2405,"Value":9402,"Internal":true,"Count Failed Values":true},{"ID":1213,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1214,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1215,"Name":"internal.metrics.peakExecutionMemory","Update":2376,"Value":8916,"Internal":true,"Count Failed Values":true},{"ID":1217,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1218,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":1219,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1220,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1221,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":415,"Value":1611,"Internal":true,"Count Failed Values":true},{"ID":1222,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1223,"Name":"internal.metrics.shuffle.read.recordsRead","Update":17,"Value":61,"Internal":true,"Count Failed Values":true},{"ID":1224,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1225,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1226,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1227,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1228,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1229,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1230,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1231,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1232,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1233,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":1,"Executor Deserialize CPU Time":1088417,"Executor Run Time":2,"Executor CPU Time":2095956,"Peak Execution Memory":2376,"Result Size":2405,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":415,"Total Records Read":17,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":25,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":60,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1720114404747,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114404753,"Failed":false,"Killed":false,"Accumulables":[{"ID":1206,"Name":"internal.metrics.executorDeserializeTime","Update":1,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":1207,"Name":"internal.metrics.executorDeserializeCpuTime","Update":984791,"Value":10712456,"Internal":true,"Count Failed Values":true},{"ID":1208,"Name":"internal.metrics.executorRunTime","Update":1,"Value":27,"Internal":true,"Count Failed Values":true},{"ID":1209,"Name":"internal.metrics.executorCpuTime","Update":1671749,"Value":17361083,"Internal":true,"Count Failed Values":true},{"ID":1210,"Name":"internal.metrics.resultSize","Update":2315,"Value":11717,"Internal":true,"Count Failed Values":true},{"ID":1213,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1214,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1215,"Name":"internal.metrics.peakExecutionMemory","Update":2160,"Value":11076,"Internal":true,"Count Failed Values":true},{"ID":1217,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1218,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":1219,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1220,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1221,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":387,"Value":1998,"Internal":true,"Count Failed Values":true},{"ID":1222,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1223,"Name":"internal.metrics.shuffle.read.recordsRead","Update":15,"Value":76,"Internal":true,"Count Failed Values":true},{"ID":1224,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1225,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1226,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1227,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1228,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1229,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1230,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1231,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1232,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1233,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":1,"Executor Deserialize CPU Time":984791,"Executor Run Time":1,"Executor CPU Time":1671749,"Peak Execution Memory":2160,"Result Size":2315,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":387,"Total Records Read":15,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":25,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":61,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1720114404747,"Executor ID":"0","Host":"172.29.0.3","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1720114404754,"Failed":false,"Killed":false,"Accumulables":[{"ID":1206,"Name":"internal.metrics.executorDeserializeTime","Update":2,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":1207,"Name":"internal.metrics.executorDeserializeCpuTime","Update":1235584,"Value":11948040,"Internal":true,"Count Failed Values":true},{"ID":1208,"Name":"internal.metrics.executorRunTime","Update":1,"Value":28,"Internal":true,"Count Failed Values":true},{"ID":1209,"Name":"internal.metrics.executorCpuTime","Update":1210667,"Value":18571750,"Internal":true,"Count Failed Values":true},{"ID":1210,"Name":"internal.metrics.resultSize","Update":2296,"Value":14013,"Internal":true,"Count Failed Values":true},{"ID":1213,"Name":"internal.metrics.memoryBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1214,"Name":"internal.metrics.diskBytesSpilled","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1215,"Name":"internal.metrics.peakExecutionMemory","Update":2040,"Value":13116,"Internal":true,"Count Failed Values":true},{"ID":1217,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1218,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":1219,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1220,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1221,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":381,"Value":2379,"Internal":true,"Count Failed Values":true},{"ID":1222,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1223,"Name":"internal.metrics.shuffle.read.recordsRead","Update":14,"Value":90,"Internal":true,"Count Failed Values":true},{"ID":1224,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1225,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1226,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1227,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1228,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1229,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1230,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1231,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1232,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1233,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":2,"Executor Deserialize CPU Time":1235584,"Executor Run Time":1,"Executor CPU Time":1210667,"Peak Execution Memory":2040,"Result Size":2296,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":381,"Total Records Read":14,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":25,"Stage Attempt ID":0,"Stage Name":"countByKey at ColumnProfiler.scala:631","Number of Tasks":6,"RDD Info":[{"RDD ID":61,"Name":"ShuffledRDD","Scope":"{\"id\":\"152\",\"name\":\"countByKey\"}","Callsite":"countByKey at ColumnProfiler.scala:631","Parent IDs":[60],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":6,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[24],"Details":"org.apache.spark.rdd.PairRDDFunctions.countByKey(PairRDDFunctions.scala:367)\ncom.amazon.deequ.profiles.ColumnProfiler$.computeHistograms(ColumnProfiler.scala:631)\ncom.amazon.deequ.profiles.ColumnProfiler$.getHistogramsForThirdPass(ColumnProfiler.scala:684)\ncom.amazon.deequ.profiles.ColumnProfiler$.profile(ColumnProfiler.scala:227)\ncom.amazon.deequ.profiles.ColumnProfilerRunner.run(ColumnProfilerRunner.scala:72)\ncom.amazon.deequ.profiles.ColumnProfilerRunBuilder.run(ColumnProfilerRunBuilder.scala:185)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:568)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1720114404710,"Completion Time":1720114404754,"Accumulables":[{"ID":1206,"Name":"internal.metrics.executorDeserializeTime","Value":18,"Internal":true,"Count Failed Values":true},{"ID":1207,"Name":"internal.metrics.executorDeserializeCpuTime","Value":11948040,"Internal":true,"Count Failed Values":true},{"ID":1208,"Name":"internal.metrics.executorRunTime","Value":28,"Internal":true,"Count Failed Values":true},{"ID":1209,"Name":"internal.metrics.executorCpuTime","Value":18571750,"Internal":true,"Count Failed Values":true},{"ID":1210,"Name":"internal.metrics.resultSize","Value":14013,"Internal":true,"Count Failed Values":true},{"ID":1213,"Name":"internal.metrics.memoryBytesSpilled","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1214,"Name":"internal.metrics.diskBytesSpilled","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1215,"Name":"internal.metrics.peakExecutionMemory","Value":13116,"Internal":true,"Count Failed Values":true},{"ID":1217,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1218,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":6,"Internal":true,"Count Failed Values":true},{"ID":1219,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1220,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1221,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":2379,"Internal":true,"Count Failed Values":true},{"ID":1222,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1223,"Name":"internal.metrics.shuffle.read.recordsRead","Value":90,"Internal":true,"Count Failed Values":true},{"ID":1224,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1225,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1226,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1227,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1228,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1229,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1230,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1231,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1232,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1233,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":16,"Completion Time":1720114404755,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"SparkListenerApplicationEnd","Timestamp":1720114436226}
