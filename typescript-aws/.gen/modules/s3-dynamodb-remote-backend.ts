// generated by cdktf get
// my-devops-way/s3-dynamodb-remote-backend/aws
import { TerraformModule, TerraformModuleUserConfig } from 'cdktf';
import { Construct } from 'constructs';
export interface S3DynamodbRemoteBackendConfig extends TerraformModuleUserConfig {
  /**
  * (Optional, Forces new resource) The name of the bucket. If omitted, Terraform will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length.
  */
  readonly bucket?: string;
  /**
  * (Optional, Forces new resource) Creates a unique bucket name beginning with the specified prefix. Conflicts with bucket. Must be lowercase and less than or equal to 37 characters in length.
  */
  readonly bucketPrefix?: string;
  /**
  * (Required) The name of the table, this needs to be unique within a region.
  */
  readonly dynamodbTable: string;
  /**
  * (Optional) The AWS KMS master key ID used for the SSE-KMS encryption.
  */
  readonly kmsMasterKeyId?: string;
}
/**
* Defines an S3DynamodbRemoteBackend based on a Terraform module
*
* Docs at Terraform Registry: {@link https://registry.terraform.io/modules/my-devops-way/s3-dynamodb-remote-backend/aws/latest my-devops-way/s3-dynamodb-remote-backend/aws}
*/
export class S3DynamodbRemoteBackend extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, config: S3DynamodbRemoteBackendConfig) {
    super(scope, id, {
      ...config,
      source: 'my-devops-way/s3-dynamodb-remote-backend/aws',
    });
    this.bucket = config.bucket;
    this.bucketPrefix = config.bucketPrefix;
    this.dynamodbTable = config.dynamodbTable;
    this.kmsMasterKeyId = config.kmsMasterKeyId;
  }
  public get bucket(): string | undefined {
    return this.inputs['bucket'] as string | undefined;
  }
  public set bucket(value: string | undefined) {
    this.inputs['bucket'] = value;
  }
  public get bucketPrefix(): string | undefined {
    return this.inputs['bucket_prefix'] as string | undefined;
  }
  public set bucketPrefix(value: string | undefined) {
    this.inputs['bucket_prefix'] = value;
  }
  public get dynamodbTable(): string {
    return this.inputs['dynamodb_table'] as string;
  }
  public set dynamodbTable(value: string) {
    this.inputs['dynamodb_table'] = value;
  }
  public get kmsMasterKeyId(): string | undefined {
    return this.inputs['kms_master_key_id'] as string | undefined;
  }
  public set kmsMasterKeyId(value: string | undefined) {
    this.inputs['kms_master_key_id'] = value;
  }
  public get dynamodbTableNameOutput() {
    return this.getString('dynamodb_table_name')
  }
  public get s3BucketIdOutput() {
    return this.getString('s3_bucket_id')
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
  protected synthesizeHclAttributes(): { [name: string]: any } {
    return Object.fromEntries(
      Object.entries(this.inputs)
        .filter(([, val]) => val !== undefined)
        .map(([key, val]) => {
          return [
            key,
            {
              value: val,
              type: "any",
            },
          ];
        })
    );
  }
}
